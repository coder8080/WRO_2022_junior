DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERSED_MOTOR 252
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_MOTORS 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_LINE_SENSOR
DATAF VGV_ULTRASONIC
DATAF VGV_RIGHT_FORWARD
DATAF VGV_LEFT_FORWARD
DATAF VGV_A
DATAF VGV_P
DATAF VGV_D
DATAF VGV_LASTERROR
DATAF VGV_NOWERROR
DATAF VGV_DIF
DATAF VGV_INTEGRAL
DATAF VGV_DERIVATIVE
DATAF VGV_UP
DATAF VGV_P_U
DATAF VGV_D_U
DATAF VGV_DEG
DATAS VGV_IS_CHEM_ON_RIGHT 252
DATAS VGV_IS_CHEM_ON_LEFT 252
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_CHEM 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_CUBES_COUNT
DATAF VGV_WATER_STATE
DATAS VGV_OBJECT 252
DATAF VGV_B
DATAF VGV_W
DATAS VGV_START_FROM_RIGHT 252
DATAF VGV_C
DATAF VGV_G
DATAF VGV_R_C
DATAF VGV_L_C
DATAF VGV_DIFF
DATAF VGV_R_P
DATAF VGV_L_P
DATAF VGV_I
DATAS VGV_TAKE_RED_RIGHT 252
DATAS VGV_TAKE_RED_LEFT 252
DATAF VGV_CHEM_BACK
DATAF VGV_NO_BACK
DATAF VGV_ULTRA
DATAF VGV_T
DATAF VGV_MINS
DATAF VGV_SECS
DATAS VGV_STR 252
DATAF VGV_N
DATAS VGV_FILENAME 252

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VGV_I
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_T
    MOVEF_F 0.0 VGV_MINS
    MOVEF_F 0.0 VGV_SECS
    STRINGS DUPLICATE '' VGV_STR
    MOVEF_F 0.0 VGV_N
    STRINGS DUPLICATE '' VGV_FILENAME
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VGV_I
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_T
    MOVEF_F 0.0 VGV_MINS
    MOVEF_F 0.0 VGV_SECS
    STRINGS DUPLICATE '' VGV_STR
    MOVEF_F 0.0 VGV_N
    STRINGS DUPLICATE '' VGV_FILENAME
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 1.0 VGV_LINE_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 1.0 VGV_P
    MOVEF_F 6.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 1.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 2.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE_SENSOR no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_RIGHT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_LEFT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 1.0 'Low battery'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB10:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB11 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB11:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB12:
ENDTHREAD:
    RETURN
SUB_F_LINE_0:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF 20.0 F.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf17
    DATA8 flag17
    DIVF F.0 10.0 tmpf17
    CP_EQF 0.0 10.0 flag17
    SELECTF flag17 0.0 tmpf17 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_LINE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_0:
SUB_F_ULTRASONIC_SLOW_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf30
    DATA8 flag30
    DIVF F.0 10.0 tmpf30
    CP_EQF 0.0 10.0 flag30
    SELECTF flag30 0.0 tmpf30 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 20.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 20.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SLOW_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SLOW_0:
SUB_F_ULTRASONIC_FAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf45
    DATA8 flag45
    DIVF F.0 10.0 tmpf45
    CP_EQF 0.0 10.0 flag45
    SELECTF flag45 0.0 tmpf45 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 35.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 35.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_FAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_FAST_0:
SUB_F_STOP_0:
    CALL MOTOR.STOP VGV_MOTORS 'True'
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_STOP_RIGHT_0:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
RETSUB_F_STOP_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_RIGHT_0:
SUB_F_DELAY_0:
    DATA32 milliseconds58
	MOVEF_32 500.0 milliseconds58
	DATA32 timer58
	TIMER_WAIT milliseconds58 timer58
	TIMER_READY timer58
RETSUB_F_DELAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_0:
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_LEFT_0:
    MOVEF_F 280.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB60:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB61:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for63:
    JR_GTF VGV_I 20.0 endfor63
  forbody63:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds67
	MOVEF_32 10.0 milliseconds67
	DATA32 timer67
	TIMER_WAIT milliseconds67 timer67
	TIMER_READY timer67
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody63
  endfor63:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 360.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer73
	DATA8 nos73
	DATA8 busy73
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer73 nos73
	JR_EQ8 0 nos73 motornotbusy73
  motorwaiting73:
	OUTPUT_TEST layer73 nos73 busy73
	JR_EQ8 busy73 0 motornotbusy73
	SLEEP
	JR motorwaiting73
  motornotbusy73:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer74
	DATA8 nos74
	DATA8 busy74
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer74 nos74
	JR_EQ8 0 nos74 motornotbusy74
  motorwaiting74:
	OUTPUT_TEST layer74 nos74 busy74
	JR_EQ8 busy74 0 motornotbusy74
	SLEEP
	JR motorwaiting74
  motornotbusy74:
    MOVEF_F 70.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB75:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer76
	DATA8 nos76
	DATA8 busy76
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer76 nos76
	JR_EQ8 0 nos76 motornotbusy76
  motorwaiting76:
	OUTPUT_TEST layer76 nos76 busy76
	JR_EQ8 busy76 0 motornotbusy76
	SLEEP
	JR motorwaiting76
  motornotbusy76:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB77:
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB78:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for80:
    JR_GTF VGV_I 20.0 endfor80
  forbody80:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds83
	MOVEF_32 10.0 milliseconds83
	DATA32 timer83
	TIMER_WAIT milliseconds83 timer83
	TIMER_READY timer83
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody80
  endfor80:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 350.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer89
	DATA8 nos89
	DATA8 busy89
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer89 nos89
	JR_EQ8 0 nos89 motornotbusy89
  motorwaiting89:
	OUTPUT_TEST layer89 nos89 busy89
	JR_EQ8 busy89 0 motornotbusy89
	SLEEP
	JR motorwaiting89
  motornotbusy89:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB90:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB91:
    MOVEF_F 280.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB92:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB93:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB94:
RETSUB_F_TAKE_CHEM_ON_LEFT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_0:
SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for96:
    JR_GTF VGV_I 20.0 endfor96
  forbody96:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds102
	MOVEF_32 30.0 milliseconds102
	DATA32 timer102
	TIMER_WAIT milliseconds102 timer102
	TIMER_READY timer102
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody96
  endfor96:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 170.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer108
	DATA8 nos108
	DATA8 busy108
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer108 nos108
	JR_EQ8 0 nos108 motornotbusy108
  motorwaiting108:
	OUTPUT_TEST layer108 nos108 busy108
	JR_EQ8 busy108 0 motornotbusy108
	SLEEP
	JR motorwaiting108
  motornotbusy108:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB109:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer110
	DATA8 nos110
	DATA8 busy110
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer110 nos110
	JR_EQ8 0 nos110 motornotbusy110
  motorwaiting110:
	OUTPUT_TEST layer110 nos110 busy110
	JR_EQ8 busy110 0 motornotbusy110
	SLEEP
	JR motorwaiting110
  motornotbusy110:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for112:
    JR_GTF VGV_I 20.0 endfor112
  forbody112:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds115
	MOVEF_32 10.0 milliseconds115
	DATA32 timer115
	TIMER_WAIT milliseconds115 timer115
	TIMER_READY timer115
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody112
  endfor112:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer121
	DATA8 nos121
	DATA8 busy121
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer121 nos121
	JR_EQ8 0 nos121 motornotbusy121
  motorwaiting121:
	OUTPUT_TEST layer121 nos121 busy121
	JR_EQ8 busy121 0 motornotbusy121
	SLEEP
	JR motorwaiting121
  motornotbusy121:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB122:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer123
	DATA8 nos123
	DATA8 busy123
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer123 nos123
	JR_EQ8 0 nos123 motornotbusy123
  motorwaiting123:
	OUTPUT_TEST layer123 nos123 busy123
	JR_EQ8 busy123 0 motornotbusy123
	SLEEP
	JR motorwaiting123
  motornotbusy123:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB124:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB125:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for127:
    JR_GTF VGV_I 20.0 endfor127
  forbody127:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds131
	MOVEF_32 10.0 milliseconds131
	DATA32 timer131
	TIMER_WAIT milliseconds131 timer131
	TIMER_READY timer131
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody127
  endfor127:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer137
	DATA8 nos137
	DATA8 busy137
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer137 nos137
	JR_EQ8 0 nos137 motornotbusy137
  motorwaiting137:
	OUTPUT_TEST layer137 nos137 busy137
	JR_EQ8 busy137 0 motornotbusy137
	SLEEP
	JR motorwaiting137
  motornotbusy137:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB138:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB139:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for141:
    JR_GTF VGV_I 20.0 endfor141
  forbody141:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds145
	MOVEF_32 30.0 milliseconds145
	DATA32 timer145
	TIMER_WAIT milliseconds145 timer145
	TIMER_READY timer145
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody141
  endfor141:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 170.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer151
	DATA8 nos151
	DATA8 busy151
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer151 nos151
	JR_EQ8 0 nos151 motornotbusy151
  motorwaiting151:
	OUTPUT_TEST layer151 nos151 busy151
	JR_EQ8 busy151 0 motornotbusy151
	SLEEP
	JR motorwaiting151
  motornotbusy151:
RETSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for153:
    JR_GTF VGV_I 20.0 endfor153
  forbody153:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds159
	MOVEF_32 30.0 milliseconds159
	DATA32 timer159
	TIMER_WAIT milliseconds159 timer159
	TIMER_READY timer159
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody153
  endfor153:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer165
	DATA8 nos165
	DATA8 busy165
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer165 nos165
	JR_EQ8 0 nos165 motornotbusy165
  motorwaiting165:
	OUTPUT_TEST layer165 nos165 busy165
	JR_EQ8 busy165 0 motornotbusy165
	SLEEP
	JR motorwaiting165
  motornotbusy165:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB166:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer167
	DATA8 nos167
	DATA8 busy167
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer167 nos167
	JR_EQ8 0 nos167 motornotbusy167
  motorwaiting167:
	OUTPUT_TEST layer167 nos167 busy167
	JR_EQ8 busy167 0 motornotbusy167
	SLEEP
	JR motorwaiting167
  motornotbusy167:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for169:
    JR_GTF VGV_I 20.0 endfor169
  forbody169:
    MULF VGV_I VGV_LEFT_FORWARD F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds172
	MOVEF_32 10.0 milliseconds172
	DATA32 timer172
	TIMER_WAIT milliseconds172 timer172
	TIMER_READY timer172
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody169
  endfor169:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer178
	DATA8 nos178
	DATA8 busy178
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer178 nos178
	JR_EQ8 0 nos178 motornotbusy178
  motorwaiting178:
	OUTPUT_TEST layer178 nos178 busy178
	JR_EQ8 busy178 0 motornotbusy178
	SLEEP
	JR motorwaiting178
  motornotbusy178:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB179:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer180
	DATA8 nos180
	DATA8 busy180
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer180 nos180
	JR_EQ8 0 nos180 motornotbusy180
  motorwaiting180:
	OUTPUT_TEST layer180 nos180 busy180
	JR_EQ8 busy180 0 motornotbusy180
	SLEEP
	JR motorwaiting180
  motornotbusy180:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB181:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB182:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for184:
    JR_GTF VGV_I 20.0 endfor184
  forbody184:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds188
	MOVEF_32 10.0 milliseconds188
	DATA32 timer188
	TIMER_WAIT milliseconds188 timer188
	TIMER_READY timer188
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody184
  endfor184:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer194
	DATA8 nos194
	DATA8 busy194
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer194 nos194
	JR_EQ8 0 nos194 motornotbusy194
  motorwaiting194:
	OUTPUT_TEST layer194 nos194 busy194
	JR_EQ8 busy194 0 motornotbusy194
	SLEEP
	JR motorwaiting194
  motornotbusy194:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB195:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB196:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for198:
    JR_GTF VGV_I 20.0 endfor198
  forbody198:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds202
	MOVEF_32 30.0 milliseconds202
	DATA32 timer202
	TIMER_WAIT milliseconds202 timer202
	TIMER_READY timer202
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody198
  endfor198:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer208
	DATA8 nos208
	DATA8 busy208
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer208 nos208
	JR_EQ8 0 nos208 motornotbusy208
  motorwaiting208:
	OUTPUT_TEST layer208 nos208 busy208
	JR_EQ8 busy208 0 motornotbusy208
	SLEEP
	JR motorwaiting208
  motornotbusy208:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else209_1
    CALL MOTOR.START VGV_WATER_MOTOR -30.0
    DATA32 milliseconds211
	MOVEF_32 1500.0 milliseconds211
	DATA32 timer211
	TIMER_WAIT milliseconds211 timer211
	TIMER_READY timer211
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif209
  else209_1:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds214
	MOVEF_32 1500.0 milliseconds214
	DATA32 timer214
	TIMER_WAIT milliseconds214 timer214
	TIMER_READY timer214
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
  else209_2:
  endif209:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_UPDATE_DISPLAY_0:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_OBJECT
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.1
    CALL TEXT.APPEND 'Red: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.1
    CALL TEXT.APPEND 'White: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 75.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_UPDATE_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UPDATE_DISPLAY_0:
SUB_F_RESET_VALUES_0:
    STRINGS DUPLICATE 'None' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
RETSUB_F_RESET_VALUES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_VALUES_0:
SUB_F_CLOSE_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -10.0 0.0 70.0 0.0 'True' 

	DATA8 layer226
	DATA8 nos226
	DATA8 busy226
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer226 nos226
	JR_EQ8 0 nos226 motornotbusy226
  motorwaiting226:
	OUTPUT_TEST layer226 nos226 busy226
	JR_EQ8 busy226 0 motornotbusy226
	SLEEP
	JR motorwaiting226
  motornotbusy226:
RETSUB_F_CLOSE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_0:
SUB_F_OPEN_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 10.0 0.0 70.0 0.0 'True' 

	DATA8 layer227
	DATA8 nos227
	DATA8 busy227
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer227 nos227
	JR_EQ8 0 nos227 motornotbusy227
  motorwaiting227:
	OUTPUT_TEST layer227 nos227 busy227
	JR_EQ8 busy227 0 motornotbusy227
	SLEEP
	JR motorwaiting227
  motornotbusy227:
RETSUB_F_OPEN_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_0:
SUB_F_TAKE_CUBES_0:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB228:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB229:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer232
	DATA8 nos232
	DATA8 busy232
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer232 nos232
	JR_EQ8 0 nos232 motornotbusy232
  motorwaiting232:
	OUTPUT_TEST layer232 nos232 busy232
	JR_EQ8 busy232 0 motornotbusy232
	SLEEP
	JR motorwaiting232
  motornotbusy232:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB233:
    MULF VGV_RIGHT_FORWARD -30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds236
	MOVEF_32 1500.0 milliseconds236
	DATA32 timer236
	TIMER_WAIT milliseconds236 timer236
	TIMER_READY timer236
    WRITE32 ENDSUB_F_STOP_0:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB237:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB238:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 227.0 VGV_A
  while240:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 930.0 endwhile240
  whilebody240:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB242:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 930.0 whilebody240
  endwhile240:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB244:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB245:
RETSUB_F_TAKE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_0:
SUB_F_TAKE_LONG_0:
    MULF VGV_RIGHT_FORWARD 15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer247
	DATA8 nos247
	DATA8 busy247
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer247 nos247
	JR_EQ8 0 nos247 motornotbusy247
  motorwaiting247:
	OUTPUT_TEST layer247 nos247 busy247
	JR_EQ8 busy247 0 motornotbusy247
	SLEEP
	JR motorwaiting247
  motornotbusy247:
    MULF VGV_LEFT_FORWARD 15.0 F.0
    MULF VGV_RIGHT_FORWARD 15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer250
	DATA8 nos250
	DATA8 busy250
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer250 nos250
	JR_EQ8 0 nos250 motornotbusy250
  motorwaiting250:
	OUTPUT_TEST layer250 nos250 busy250
	JR_EQ8 busy250 0 motornotbusy250
	SLEEP
	JR motorwaiting250
  motornotbusy250:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB251:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer254
	DATA8 nos254
	DATA8 busy254
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer254 nos254
	JR_EQ8 0 nos254 motornotbusy254
  motorwaiting254:
	OUTPUT_TEST layer254 nos254 busy254
	JR_EQ8 busy254 0 motornotbusy254
	SLEEP
	JR motorwaiting254
  motornotbusy254:
    JR_NEQF VGV_CUBES_COUNT 2.0 else255_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB256:
  else255_1:
  endif255:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 38.0 'True'

	DATA8 layer259
	DATA8 nos259
	DATA8 busy259
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer259 nos259
	JR_EQ8 0 nos259 motornotbusy259
  motorwaiting259:
	OUTPUT_TEST layer259 nos259 busy259
	JR_EQ8 busy259 0 motornotbusy259
	SLEEP
	JR motorwaiting259
  motornotbusy259:
    MULF VGV_RIGHT_FORWARD -15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer261
	DATA8 nos261
	DATA8 busy261
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer261 nos261
	JR_EQ8 0 nos261 motornotbusy261
  motorwaiting261:
	OUTPUT_TEST layer261 nos261 busy261
	JR_EQ8 busy261 0 motornotbusy261
	SLEEP
	JR motorwaiting261
  motornotbusy261:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_0:
SUB_F_TAKE_NEAR_0:
    MULF -15.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer263
	DATA8 nos263
	DATA8 busy263
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer263 nos263
	JR_EQ8 0 nos263 motornotbusy263
  motorwaiting263:
	OUTPUT_TEST layer263 nos263 busy263
	JR_EQ8 busy263 0 motornotbusy263
	SLEEP
	JR motorwaiting263
  motornotbusy263:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer265
	DATA8 nos265
	DATA8 busy265
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer265 nos265
	JR_EQ8 0 nos265 motornotbusy265
  motorwaiting265:
	OUTPUT_TEST layer265 nos265 busy265
	JR_EQ8 busy265 0 motornotbusy265
	SLEEP
	JR motorwaiting265
  motornotbusy265:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB266:
    MULF 15.0 VGV_LEFT_FORWARD F.0
    MULF 15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer269
	DATA8 nos269
	DATA8 busy269
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer269 nos269
	JR_EQ8 0 nos269 motornotbusy269
  motorwaiting269:
	OUTPUT_TEST layer269 nos269 busy269
	JR_EQ8 busy269 0 motornotbusy269
	SLEEP
	JR motorwaiting269
  motornotbusy269:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB270:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer273
	DATA8 nos273
	DATA8 busy273
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer273 nos273
	JR_EQ8 0 nos273 motornotbusy273
  motorwaiting273:
	OUTPUT_TEST layer273 nos273 busy273
	JR_EQ8 busy273 0 motornotbusy273
	SLEEP
	JR motorwaiting273
  motornotbusy273:
    JR_NEQF VGV_CUBES_COUNT 2.0 else274_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB275:
  else274_1:
  endif274:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer278
	DATA8 nos278
	DATA8 busy278
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer278 nos278
	JR_EQ8 0 nos278 motornotbusy278
  motorwaiting278:
	OUTPUT_TEST layer278 nos278 busy278
	JR_EQ8 busy278 0 motornotbusy278
	SLEEP
	JR motorwaiting278
  motornotbusy278:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer280
	DATA8 nos280
	DATA8 busy280
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer280 nos280
	JR_EQ8 0 nos280 motornotbusy280
  motorwaiting280:
	OUTPUT_TEST layer280 nos280 busy280
	JR_EQ8 busy280 0 motornotbusy280
	SLEEP
	JR motorwaiting280
  motornotbusy280:
    MULF VGV_RIGHT_FORWARD -15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer282
	DATA8 nos282
	DATA8 busy282
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer282 nos282
	JR_EQ8 0 nos282 motornotbusy282
  motorwaiting282:
	OUTPUT_TEST layer282 nos282 busy282
	JR_EQ8 busy282 0 motornotbusy282
	SLEEP
	JR motorwaiting282
  motornotbusy282:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB283:
    MULF VGV_LEFT_FORWARD 15.0 F.0
    MULF VGV_RIGHT_FORWARD 15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer286
	DATA8 nos286
	DATA8 busy286
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer286 nos286
	JR_EQ8 0 nos286 motornotbusy286
  motorwaiting286:
	OUTPUT_TEST layer286 nos286 busy286
	JR_EQ8 busy286 0 motornotbusy286
	SLEEP
	JR motorwaiting286
  motornotbusy286:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_0:
SUB_F_TAKE_BOTH_0:
    MULF VGV_RIGHT_FORWARD 15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer288
	DATA8 nos288
	DATA8 busy288
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer288 nos288
	JR_EQ8 0 nos288 motornotbusy288
  motorwaiting288:
	OUTPUT_TEST layer288 nos288 busy288
	JR_EQ8 busy288 0 motornotbusy288
	SLEEP
	JR motorwaiting288
  motornotbusy288:
    MULF VGV_LEFT_FORWARD 15.0 F.0
    MULF VGV_RIGHT_FORWARD 15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer291
	DATA8 nos291
	DATA8 busy291
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer291 nos291
	JR_EQ8 0 nos291 motornotbusy291
  motorwaiting291:
	OUTPUT_TEST layer291 nos291 busy291
	JR_EQ8 busy291 0 motornotbusy291
	SLEEP
	JR motorwaiting291
  motornotbusy291:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB292:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer295
	DATA8 nos295
	DATA8 busy295
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer295 nos295
	JR_EQ8 0 nos295 motornotbusy295
  motorwaiting295:
	OUTPUT_TEST layer295 nos295 busy295
	JR_EQ8 busy295 0 motornotbusy295
	SLEEP
	JR motorwaiting295
  motornotbusy295:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB296:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer299
	DATA8 nos299
	DATA8 busy299
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer299 nos299
	JR_EQ8 0 nos299 motornotbusy299
  motorwaiting299:
	OUTPUT_TEST layer299 nos299 busy299
	JR_EQ8 busy299 0 motornotbusy299
	SLEEP
	JR motorwaiting299
  motornotbusy299:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer301
	DATA8 nos301
	DATA8 busy301
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer301 nos301
	JR_EQ8 0 nos301 motornotbusy301
  motorwaiting301:
	OUTPUT_TEST layer301 nos301 busy301
	JR_EQ8 busy301 0 motornotbusy301
	SLEEP
	JR motorwaiting301
  motornotbusy301:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer304
	DATA8 nos304
	DATA8 busy304
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer304 nos304
	JR_EQ8 0 nos304 motornotbusy304
  motorwaiting304:
	OUTPUT_TEST layer304 nos304 busy304
	JR_EQ8 busy304 0 motornotbusy304
	SLEEP
	JR motorwaiting304
  motornotbusy304:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB305:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer308
	DATA8 nos308
	DATA8 busy308
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer308 nos308
	JR_EQ8 0 nos308 motornotbusy308
  motorwaiting308:
	OUTPUT_TEST layer308 nos308 busy308
	JR_EQ8 busy308 0 motornotbusy308
	SLEEP
	JR motorwaiting308
  motornotbusy308:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer310
	DATA8 nos310
	DATA8 busy310
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer310 nos310
	JR_EQ8 0 nos310 motornotbusy310
  motorwaiting310:
	OUTPUT_TEST layer310 nos310 busy310
	JR_EQ8 busy310 0 motornotbusy310
	SLEEP
	JR motorwaiting310
  motornotbusy310:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer312
	DATA8 nos312
	DATA8 busy312
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer312 nos312
	JR_EQ8 0 nos312 motornotbusy312
  motorwaiting312:
	OUTPUT_TEST layer312 nos312 busy312
	JR_EQ8 busy312 0 motornotbusy312
	SLEEP
	JR motorwaiting312
  motornotbusy312:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer315
	DATA8 nos315
	DATA8 busy315
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer315 nos315
	JR_EQ8 0 nos315 motornotbusy315
  motorwaiting315:
	OUTPUT_TEST layer315 nos315 busy315
	JR_EQ8 busy315 0 motornotbusy315
	SLEEP
	JR motorwaiting315
  motornotbusy315:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_0:
SUB_F_TAKE_NEAR_DOUBLE_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer317
	DATA8 nos317
	DATA8 busy317
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer317 nos317
	JR_EQ8 0 nos317 motornotbusy317
  motorwaiting317:
	OUTPUT_TEST layer317 nos317 busy317
	JR_EQ8 busy317 0 motornotbusy317
	SLEEP
	JR motorwaiting317
  motornotbusy317:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer319
	DATA8 nos319
	DATA8 busy319
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer319 nos319
	JR_EQ8 0 nos319 motornotbusy319
  motorwaiting319:
	OUTPUT_TEST layer319 nos319 busy319
	JR_EQ8 busy319 0 motornotbusy319
	SLEEP
	JR motorwaiting319
  motornotbusy319:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer322
	DATA8 nos322
	DATA8 busy322
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer322 nos322
	JR_EQ8 0 nos322 motornotbusy322
  motorwaiting322:
	OUTPUT_TEST layer322 nos322 busy322
	JR_EQ8 busy322 0 motornotbusy322
	SLEEP
	JR motorwaiting322
  motornotbusy322:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB323:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer326
	DATA8 nos326
	DATA8 busy326
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer326 nos326
	JR_EQ8 0 nos326 motornotbusy326
  motorwaiting326:
	OUTPUT_TEST layer326 nos326 busy326
	JR_EQ8 busy326 0 motornotbusy326
	SLEEP
	JR motorwaiting326
  motornotbusy326:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB327:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer330
	DATA8 nos330
	DATA8 busy330
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer330 nos330
	JR_EQ8 0 nos330 motornotbusy330
  motorwaiting330:
	OUTPUT_TEST layer330 nos330 busy330
	JR_EQ8 busy330 0 motornotbusy330
	SLEEP
	JR motorwaiting330
  motornotbusy330:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB331:
RETSUB_F_TAKE_NEAR_DOUBLE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer333
	DATA8 nos333
	DATA8 busy333
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer333 nos333
	JR_EQ8 0 nos333 motornotbusy333
  motorwaiting333:
	OUTPUT_TEST layer333 nos333 busy333
	JR_EQ8 busy333 0 motornotbusy333
	SLEEP
	JR motorwaiting333
  motornotbusy333:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer335
	DATA8 nos335
	DATA8 busy335
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer335 nos335
	JR_EQ8 0 nos335 motornotbusy335
  motorwaiting335:
	OUTPUT_TEST layer335 nos335 busy335
	JR_EQ8 busy335 0 motornotbusy335
	SLEEP
	JR motorwaiting335
  motornotbusy335:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer338
	DATA8 nos338
	DATA8 busy338
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer338 nos338
	JR_EQ8 0 nos338 motornotbusy338
  motorwaiting338:
	OUTPUT_TEST layer338 nos338 busy338
	JR_EQ8 busy338 0 motornotbusy338
	SLEEP
	JR motorwaiting338
  motornotbusy338:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB339:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer342
	DATA8 nos342
	DATA8 busy342
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer342 nos342
	JR_EQ8 0 nos342 motornotbusy342
  motorwaiting342:
	OUTPUT_TEST layer342 nos342 busy342
	JR_EQ8 busy342 0 motornotbusy342
	SLEEP
	JR motorwaiting342
  motornotbusy342:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB343:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer346
	DATA8 nos346
	DATA8 busy346
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer346 nos346
	JR_EQ8 0 nos346 motornotbusy346
  motorwaiting346:
	OUTPUT_TEST layer346 nos346 busy346
	JR_EQ8 busy346 0 motornotbusy346
	SLEEP
	JR motorwaiting346
  motornotbusy346:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB347:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
SUB_F_FINISH_AFTER_NEAR_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds351
	MOVEF_32 1500.0 milliseconds351
	DATA32 timer351
	TIMER_WAIT milliseconds351 timer351
	TIMER_READY timer351
    WRITE32 ENDSUB_F_STOP_0:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB352:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer354
	DATA8 nos354
	DATA8 busy354
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer354 nos354
	JR_EQ8 0 nos354 motornotbusy354
  motorwaiting354:
	OUTPUT_TEST layer354 nos354 busy354
	JR_EQ8 busy354 0 motornotbusy354
	SLEEP
	JR motorwaiting354
  motornotbusy354:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer356
	DATA8 nos356
	DATA8 busy356
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer356 nos356
	JR_EQ8 0 nos356 motornotbusy356
  motorwaiting356:
	OUTPUT_TEST layer356 nos356 busy356
	JR_EQ8 busy356 0 motornotbusy356
	SLEEP
	JR motorwaiting356
  motornotbusy356:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds360
	MOVEF_32 1000.0 milliseconds360
	DATA32 timer360
	TIMER_WAIT milliseconds360 timer360
	TIMER_READY timer360
    WRITE32 ENDSUB_F_STOP_0:CALLSUB361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB361:
RETSUB_F_FINISH_AFTER_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_0:
SUB_F_GO_FORWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_0:
SUB_F_GO_BACKWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF -20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF -20.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_BACKWARD_0:
SUB_F_MOVE_FORWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while388:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile388
  whilebody388:
    WRITE32 ENDSUB_F_GO_FORWARD_0:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_0
CALLSUB390:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody388
  endwhile388:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB392 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB392:
RETSUB_F_MOVE_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_0:
SUB_F_MOVE_BACKWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while395:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_LTEQF F.0 F.1 endwhile395
  whilebody395:
    WRITE32 ENDSUB_F_GO_BACKWARD_0:CALLSUB398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_0
CALLSUB398:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_GTF F.0 F.1 whilebody395
  endwhile395:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB401:
RETSUB_F_MOVE_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_0:
SUB_F_PLAY_MUSIC_0:
    MOVEF_F 1.0 VGV_N
  while402:
  whilebody402:
    STRINGS VALUE_FORMATTED VGV_N '%g' 99 S.0
    CALL TEXT.APPEND 'WRO_2022/files/bad_piggies_' S.0 VGV_FILENAME
    CALL SPEAKER.PLAY 100.0 VGV_FILENAME
  while406:
    CALL SPEAKER.ISBUSY S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 endwhile406
  whilebody406:
    CALL SPEAKER.ISBUSY S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 whilebody406
  endwhile406:
    ADDF VGV_N 1.0 VGV_N
    JR_NEQF VGV_N 23.0 else410_1
    MOVEF_F 1.0 VGV_N
    DATA32 milliseconds411
	MOVEF_32 1000.0 milliseconds411
	DATA32 timer411
	TIMER_WAIT milliseconds411 timer411
	TIMER_READY timer411
  else410_1:
  endif410:
    JR whilebody402
  endwhile402:
RETSUB_F_PLAY_MUSIC_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PLAY_MUSIC_0:
SUB_F_MAIN_0:
    TIMER_READ timeMC1
    STRINGS DUPLICATE 'False' VGV_START_FROM_RIGHT
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else413_1
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 53.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds418
	MOVEF_32 2000.0 milliseconds418
	DATA32 timer418
	TIMER_WAIT milliseconds418 timer418
	TIMER_READY timer418
    WRITE32 ENDSUB_F_STOP_0:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB419:
    MULF VGV_RIGHT_FORWARD -30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds422
	MOVEF_32 1000.0 milliseconds422
	DATA32 timer422
	TIMER_WAIT milliseconds422 timer422
	TIMER_READY timer422
    WRITE32 ENDSUB_F_STOP_0:CALLSUB423 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB423:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB424:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 200.0 0.0 'True' 

	DATA8 layer426
	DATA8 nos426
	DATA8 busy426
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer426 nos426
	JR_EQ8 0 nos426 motornotbusy426
  motorwaiting426:
	OUTPUT_TEST layer426 nos426 busy426
	JR_EQ8 busy426 0 motornotbusy426
	SLEEP
	JR motorwaiting426
  motornotbusy426:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB427:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer429
	DATA8 nos429
	DATA8 busy429
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer429 nos429
	JR_EQ8 0 nos429 motornotbusy429
  motorwaiting429:
	OUTPUT_TEST layer429 nos429 busy429
	JR_EQ8 busy429 0 motornotbusy429
	SLEEP
	JR motorwaiting429
  motornotbusy429:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB430:
  else413_1:
  endif413:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB431:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 80.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    MOVEF_F 1200.0 VGV_DEG
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else436_1
    MOVEF_F 1100.0 VGV_DEG
  else436_1:
  endif436:
  while438:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile438
  whilebody438:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody438
  endwhile438:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 55.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while444:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile444
  whilebody444:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody444
  endwhile444:
  while447:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile447
  whilebody447:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody447
  endwhile447:
    WRITE32 ENDSUB_F_STOP_RIGHT_0:CALLSUB450 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_RIGHT_0
CALLSUB450:
    MOVEF_F 105.0 VGV_A
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB451:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 290.0 0.0 'True' 

	DATA8 layer453
	DATA8 nos453
	DATA8 busy453
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer453 nos453
	JR_EQ8 0 nos453 motornotbusy453
  motorwaiting453:
	OUTPUT_TEST layer453 nos453 busy453
	JR_EQ8 busy453 0 motornotbusy453
	SLEEP
	JR motorwaiting453
  motornotbusy453:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB454:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 240.0 0.0 'True' 

	DATA8 layer456
	DATA8 nos456
	DATA8 busy456
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer456 nos456
	JR_EQ8 0 nos456 motornotbusy456
  motorwaiting456:
	OUTPUT_TEST layer456 nos456 busy456
	JR_EQ8 busy456 0 motornotbusy456
	SLEEP
	JR motorwaiting456
  motornotbusy456:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while458:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile458
  whilebody458:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB460 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB460:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody458
  endwhile458:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB462:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB463:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    MOVEF_F 500.0 VGV_C
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB465:
    JR_LTEQF VGV_B 80.0 else466_1
    DATA8 layer467
	DATA8 no467
	DATA8 mode8467
	
	MOVEF_8 VGV_RIGHT_SENSOR no467
	SUB8 no467 1 no467
	DIV8 no467 4 layer467
	MATH MOD8 no467 4 no467

	MOVEF_8 2.0 mode8467
	
	INPUT_DEVICE READY_RAW layer467 no467 0 mode8467 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer469
	DATA8 no469
	DATA8 mode8469
	
	MOVEF_8 VGV_RIGHT_SENSOR no469
	SUB8 no469 1 no469
	DIV8 no469 4 layer469
	MATH MOD8 no469 4 no469

	MOVEF_8 1.0 mode8469
	
	INPUT_DEVICE READY_RAW layer469 no469 0 mode8469 0
    JR_LTEQF VGV_G 100.0 else470_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB471:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif470
  else470_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB472:
    STRINGS DUPLICATE 'True' VGV_BROWN
    MOVEF_F 95.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB473:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB474:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB475:
  else470_2:
  endif470:
    JR endif466
  else466_1:
    JR_GTF VGV_B 5.0 or476
    JR_GTEQF VGV_B 16.0 else466_2
  or476:
    DATA8 layer477
	DATA8 no477
	DATA8 mode8477
	
	MOVEF_8 VGV_RIGHT_SENSOR no477
	SUB8 no477 1 no477
	DIV8 no477 4 layer477
	MATH MOD8 no477 4 no477

	MOVEF_8 4.0 mode8477
	
	INPUT_DEVICE READY_RAW layer477 no477 0 mode8477 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    DATA8 layer479
	DATA8 no479
	DATA8 mode8479
	
	MOVEF_8 VGV_RIGHT_SENSOR no479
	SUB8 no479 1 no479
	DIV8 no479 4 layer479
	MATH MOD8 no479 4 no479

	MOVEF_8 1.0 mode8479
	
	INPUT_DEVICE READY_RAW layer479 no479 0 mode8479 0
    STRINGS DUPLICATE 'None' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB480:
    JR_GTF VGV_W 30.0 or482
    JR_GTEQF VGV_W 15.0 else481_1
  or482:
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB483:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB484:
  else481_1:
  endif481:
  else466_2:
  endif466:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB485:
    DATA8 layer486
	DATA8 no486
	DATA8 mode8486
	
	MOVEF_8 VGV_LINE_SENSOR no486
	SUB8 no486 1 no486
	DIV8 no486 4 layer486
	MATH MOD8 no486 4 no486

	MOVEF_8 2.0 mode8486
	
	INPUT_DEVICE READY_RAW layer486 no486 0 mode8486 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    WRITE32 ENDSUB_F_STOP_0:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB488:
  while489:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C or490
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 5.0 endwhile489
  or490:
  whilebody489:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB493:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody489
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 5.0 whilebody489
  endwhile489:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB496:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB497:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB498:
    MOVEF_F 350.0 VGV_C
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else499_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB501:
    MOVEF_F 90.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB502:
    ADDF VGV_C 110.0 VGV_C
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB504:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB506:
    JR_LTEQF VGV_B 80.0 else507_1
    DATA8 layer508
	DATA8 no508
	DATA8 mode8508
	
	MOVEF_8 VGV_RIGHT_SENSOR no508
	SUB8 no508 1 no508
	DIV8 no508 4 layer508
	MATH MOD8 no508 4 no508

	MOVEF_8 2.0 mode8508
	
	INPUT_DEVICE READY_RAW layer508 no508 0 mode8508 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer510
	DATA8 no510
	DATA8 mode8510
	
	MOVEF_8 VGV_RIGHT_SENSOR no510
	SUB8 no510 1 no510
	DIV8 no510 4 layer510
	MATH MOD8 no510 4 no510

	MOVEF_8 1.0 mode8510
	
	INPUT_DEVICE READY_RAW layer510 no510 0 mode8510 0
    JR_LTEQF VGV_G 100.0 else511_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB512 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB512:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif511
  else511_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB513:
    STRINGS DUPLICATE 'True' VGV_BROWN
    MOVEF_F 40.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB514:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB515:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB516:
  else511_2:
  endif511:
    JR endif507
  else507_1:
    JR_GTF VGV_B 12.0 or517
    JR_GTEQF VGV_B 16.0 else507_2
  or517:
    DATA8 layer518
	DATA8 no518
	DATA8 mode8518
	
	MOVEF_8 VGV_RIGHT_SENSOR no518
	SUB8 no518 1 no518
	DIV8 no518 4 layer518
	MATH MOD8 no518 4 no518

	MOVEF_8 4.0 mode8518
	
	INPUT_DEVICE READY_RAW layer518 no518 0 mode8518 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB520:
    DATA8 layer521
	DATA8 no521
	DATA8 mode8521
	
	MOVEF_8 VGV_RIGHT_SENSOR no521
	SUB8 no521 1 no521
	DIV8 no521 4 layer521
	MATH MOD8 no521 4 no521

	MOVEF_8 1.0 mode8521
	
	INPUT_DEVICE READY_RAW layer521 no521 0 mode8521 0
    JR_GTF VGV_W 30.0 or523
    JR_GTEQF VGV_W 15.0 else522_1
  or523:
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB524:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB525:
  else522_1:
  endif522:
  else507_2:
  endif507:
  else499_1:
  endif499:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB526:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while528:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile528
  whilebody528:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB530:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody528
  endwhile528:
    MOVEF_F 1.0 VGV_P_U
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else532_1
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    JR endif532
  else532_1:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  else532_2:
  endif532:
    DATA32 milliseconds540
	MOVEF_32 1000.0 milliseconds540
	DATA32 timer540
	TIMER_WAIT milliseconds540 timer540
	TIMER_READY timer540
    WRITE32 ENDSUB_F_STOP_0:CALLSUB541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB541:
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_LEFT
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB542 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB542:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB544 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB544:
    JR_LTEQF VGV_B 85.0 else545_1
    DATA8 layer546
	DATA8 no546
	DATA8 mode8546
	
	MOVEF_8 VGV_RIGHT_SENSOR no546
	SUB8 no546 1 no546
	DIV8 no546 4 layer546
	MATH MOD8 no546 4 no546

	MOVEF_8 2.0 mode8546
	
	INPUT_DEVICE READY_RAW layer546 no546 0 mode8546 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB547:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer549
	DATA8 no549
	DATA8 mode8549
	
	MOVEF_8 VGV_RIGHT_SENSOR no549
	SUB8 no549 1 no549
	DIV8 no549 4 layer549
	MATH MOD8 no549 4 no549

	MOVEF_8 1.0 mode8549
	
	INPUT_DEVICE READY_RAW layer549 no549 0 mode8549 0
    JR_LTEQF VGV_G 100.0 else550_1
    STRINGS DUPLICATE 'R: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB551 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB551:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif550
  else550_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB552 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB552:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB553 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB553:
  else550_2:
  endif550:
    JR endif545
  else545_1:
    JR_LTEQF VGV_B 10.0 else545_2
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB554:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_RIGHT
  else545_2:
  endif545:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB555 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB555:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else556_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB558:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB560:
    JR_LTEQF VGV_B 120.0 else561_1
    DATA8 layer562
	DATA8 no562
	DATA8 mode8562
	
	MOVEF_8 VGV_LEFT_SENSOR no562
	SUB8 no562 1 no562
	DIV8 no562 4 layer562
	MATH MOD8 no562 4 no562

	MOVEF_8 2.0 mode8562
	
	INPUT_DEVICE READY_RAW layer562 no562 0 mode8562 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB563 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB563:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer565
	DATA8 no565
	DATA8 mode8565
	
	MOVEF_8 VGV_LEFT_SENSOR no565
	SUB8 no565 1 no565
	DIV8 no565 4 layer565
	MATH MOD8 no565 4 no565

	MOVEF_8 1.0 mode8565
	
	INPUT_DEVICE READY_RAW layer565 no565 0 mode8565 0
    JR_LTEQF VGV_G 100.0 else566_1
    STRINGS DUPLICATE 'L: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB567 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB567:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif566
  else566_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB568:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB569:
  else566_2:
  endif566:
    JR endif561
  else561_1:
    DATA8 layer570
	DATA8 no570
	DATA8 mode8570
	
	MOVEF_8 VGV_LEFT_SENSOR no570
	SUB8 no570 1 no570
	DIV8 no570 4 layer570
	MATH MOD8 no570 4 no570

	MOVEF_8 2.0 mode8570
	
	INPUT_DEVICE READY_RAW layer570 no570 0 mode8570 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer572
	DATA8 no572
	DATA8 mode8572
	
	MOVEF_8 VGV_LEFT_SENSOR no572
	SUB8 no572 1 no572
	DIV8 no572 4 layer572
	MATH MOD8 no572 4 no572

	MOVEF_8 1.0 mode8572
	
	INPUT_DEVICE READY_RAW layer572 no572 0 mode8572 0
    JR_GTF VGV_G 25.0 or574
    JR_GTEQF VGV_G 18.0 else573_1
  or574:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB575:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_LEFT
  else573_1:
  endif573:
  else561_2:
  endif561:
  else556_1:
  endif556:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB576:
    MOVEF_F 140.0 VGV_CHEM_BACK
    MOVEF_F 140.0 VGV_NO_BACK
    CALL EQ_STRING VGV_TAKE_RED_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else577_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for580:
    JR_GTF VGV_I 20.0 endfor580
  forbody580:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds586
	MOVEF_32 30.0 milliseconds586
	DATA32 timer586
	TIMER_WAIT milliseconds586 timer586
	TIMER_READY timer586
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody580
  endfor580:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer592
	DATA8 nos592
	DATA8 busy592
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer592 nos592
	JR_EQ8 0 nos592 motornotbusy592
  motorwaiting592:
	OUTPUT_TEST layer592 nos592 busy592
	JR_EQ8 busy592 0 motornotbusy592
	SLEEP
	JR motorwaiting592
  motornotbusy592:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB593:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer595
	DATA8 nos595
	DATA8 busy595
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer595 nos595
	JR_EQ8 0 nos595 motornotbusy595
  motorwaiting595:
	OUTPUT_TEST layer595 nos595 busy595
	JR_EQ8 busy595 0 motornotbusy595
	SLEEP
	JR motorwaiting595
  motornotbusy595:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB596:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer597
	DATA8 nos597
	DATA8 busy597
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer597 nos597
	JR_EQ8 0 nos597 motornotbusy597
  motorwaiting597:
	OUTPUT_TEST layer597 nos597 busy597
	JR_EQ8 busy597 0 motornotbusy597
	SLEEP
	JR motorwaiting597
  motornotbusy597:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for599:
    JR_GTF VGV_I 20.0 endfor599
  forbody599:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds603
	MOVEF_32 20.0 milliseconds603
	DATA32 timer603
	TIMER_WAIT milliseconds603 timer603
	TIMER_READY timer603
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody599
  endfor599:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer609
	DATA8 nos609
	DATA8 busy609
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer609 nos609
	JR_EQ8 0 nos609 motornotbusy609
  motorwaiting609:
	OUTPUT_TEST layer609 nos609 busy609
	JR_EQ8 busy609 0 motornotbusy609
	SLEEP
	JR motorwaiting609
  motornotbusy609:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB610:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer611
	DATA8 nos611
	DATA8 busy611
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer611 nos611
	JR_EQ8 0 nos611 motornotbusy611
  motorwaiting611:
	OUTPUT_TEST layer611 nos611 busy611
	JR_EQ8 busy611 0 motornotbusy611
	SLEEP
	JR motorwaiting611
  motornotbusy611:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB612:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for614:
    JR_GTF VGV_I 20.0 endfor614
  forbody614:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds620
	MOVEF_32 20.0 milliseconds620
	DATA32 timer620
	TIMER_WAIT milliseconds620 timer620
	TIMER_READY timer620
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody614
  endfor614:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer626
	DATA8 nos626
	DATA8 busy626
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer626 nos626
	JR_EQ8 0 nos626 motornotbusy626
  motorwaiting626:
	OUTPUT_TEST layer626 nos626 busy626
	JR_EQ8 busy626 0 motornotbusy626
	SLEEP
	JR motorwaiting626
  motornotbusy626:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB627:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB628:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer630
	DATA8 nos630
	DATA8 busy630
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer630 nos630
	JR_EQ8 0 nos630 motornotbusy630
  motorwaiting630:
	OUTPUT_TEST layer630 nos630 busy630
	JR_EQ8 busy630 0 motornotbusy630
	SLEEP
	JR motorwaiting630
  motornotbusy630:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB631 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB631:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds635
	MOVEF_32 1500.0 milliseconds635
	DATA32 timer635
	TIMER_WAIT milliseconds635 timer635
	TIMER_READY timer635
    WRITE32 ENDSUB_F_STOP_0:CALLSUB636 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB636:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB637 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB637:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for639:
    JR_GTF VGV_I 20.0 endfor639
  forbody639:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds645
	MOVEF_32 20.0 milliseconds645
	DATA32 timer645
	TIMER_WAIT milliseconds645 timer645
	TIMER_READY timer645
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody639
  endfor639:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer651
	DATA8 nos651
	DATA8 busy651
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer651 nos651
	JR_EQ8 0 nos651 motornotbusy651
  motorwaiting651:
	OUTPUT_TEST layer651 nos651 busy651
	JR_EQ8 busy651 0 motornotbusy651
	SLEEP
	JR motorwaiting651
  motornotbusy651:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB652:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB653:
    JR endif577
  else577_1:
    CALL EQ_STRING VGV_TAKE_RED_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else577_2
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for656:
    JR_GTF VGV_I 20.0 endfor656
  forbody656:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds662
	MOVEF_32 30.0 milliseconds662
	DATA32 timer662
	TIMER_WAIT milliseconds662 timer662
	TIMER_READY timer662
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody656
  endfor656:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer668
	DATA8 nos668
	DATA8 busy668
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer668 nos668
	JR_EQ8 0 nos668 motornotbusy668
  motorwaiting668:
	OUTPUT_TEST layer668 nos668 busy668
	JR_EQ8 busy668 0 motornotbusy668
	SLEEP
	JR motorwaiting668
  motornotbusy668:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB669:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer671
	DATA8 nos671
	DATA8 busy671
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer671 nos671
	JR_EQ8 0 nos671 motornotbusy671
  motorwaiting671:
	OUTPUT_TEST layer671 nos671 busy671
	JR_EQ8 busy671 0 motornotbusy671
	SLEEP
	JR motorwaiting671
  motornotbusy671:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB672:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer673
	DATA8 nos673
	DATA8 busy673
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer673 nos673
	JR_EQ8 0 nos673 motornotbusy673
  motorwaiting673:
	OUTPUT_TEST layer673 nos673 busy673
	JR_EQ8 busy673 0 motornotbusy673
	SLEEP
	JR motorwaiting673
  motornotbusy673:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for675:
    JR_GTF VGV_I 20.0 endfor675
  forbody675:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds679
	MOVEF_32 20.0 milliseconds679
	DATA32 timer679
	TIMER_WAIT milliseconds679 timer679
	TIMER_READY timer679
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody675
  endfor675:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer685
	DATA8 nos685
	DATA8 busy685
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer685 nos685
	JR_EQ8 0 nos685 motornotbusy685
  motorwaiting685:
	OUTPUT_TEST layer685 nos685 busy685
	JR_EQ8 busy685 0 motornotbusy685
	SLEEP
	JR motorwaiting685
  motornotbusy685:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB686:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer687
	DATA8 nos687
	DATA8 busy687
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer687 nos687
	JR_EQ8 0 nos687 motornotbusy687
  motorwaiting687:
	OUTPUT_TEST layer687 nos687 busy687
	JR_EQ8 busy687 0 motornotbusy687
	SLEEP
	JR motorwaiting687
  motornotbusy687:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB688:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for690:
    JR_GTF VGV_I 20.0 endfor690
  forbody690:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds696
	MOVEF_32 20.0 milliseconds696
	DATA32 timer696
	TIMER_WAIT milliseconds696 timer696
	TIMER_READY timer696
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody690
  endfor690:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer702
	DATA8 nos702
	DATA8 busy702
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer702 nos702
	JR_EQ8 0 nos702 motornotbusy702
  motorwaiting702:
	OUTPUT_TEST layer702 nos702 busy702
	JR_EQ8 busy702 0 motornotbusy702
	SLEEP
	JR motorwaiting702
  motornotbusy702:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB703:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB704:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer706
	DATA8 nos706
	DATA8 busy706
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer706 nos706
	JR_EQ8 0 nos706 motornotbusy706
  motorwaiting706:
	OUTPUT_TEST layer706 nos706 busy706
	JR_EQ8 busy706 0 motornotbusy706
	SLEEP
	JR motorwaiting706
  motornotbusy706:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB707:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds711
	MOVEF_32 1000.0 milliseconds711
	DATA32 timer711
	TIMER_WAIT milliseconds711 timer711
	TIMER_READY timer711
    WRITE32 ENDSUB_F_STOP_0:CALLSUB712 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB712:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB713:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for715:
    JR_GTF VGV_I 20.0 endfor715
  forbody715:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds721
	MOVEF_32 20.0 milliseconds721
	DATA32 timer721
	TIMER_WAIT milliseconds721 timer721
	TIMER_READY timer721
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody715
  endfor715:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer727
	DATA8 nos727
	DATA8 busy727
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer727 nos727
	JR_EQ8 0 nos727 motornotbusy727
  motorwaiting727:
	OUTPUT_TEST layer727 nos727 busy727
	JR_EQ8 busy727 0 motornotbusy727
	SLEEP
	JR motorwaiting727
  motornotbusy727:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB728:
    JR endif577
  else577_2:
    MOVEF_F VGV_NO_BACK VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB729:
  else577_3:
  endif577:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer732
	DATA8 nos732
	DATA8 busy732
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer732 nos732
	JR_EQ8 0 nos732 motornotbusy732
  motorwaiting732:
	OUTPUT_TEST layer732 nos732 busy732
	JR_EQ8 busy732 0 motornotbusy732
	SLEEP
	JR motorwaiting732
  motornotbusy732:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB733:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB734:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds738
	MOVEF_32 700.0 milliseconds738
	DATA32 timer738
	TIMER_WAIT milliseconds738 timer738
	TIMER_READY timer738
    WRITE32 ENDSUB_F_STOP_0:CALLSUB739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB739:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    ADDF F.0 5.0 VGV_A
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 430.0 'True'

	DATA8 layer744
	DATA8 nos744
	DATA8 busy744
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer744 nos744
	JR_EQ8 0 nos744 motornotbusy744
  motorwaiting744:
	OUTPUT_TEST layer744 nos744 busy744
	JR_EQ8 busy744 0 motornotbusy744
	SLEEP
	JR motorwaiting744
  motornotbusy744:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while746:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile746
  whilebody746:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB748:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody746
  endwhile746:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA8 layer754
	DATA8 no754
	DATA8 mode8754
	
	MOVEF_8 VGV_LINE_SENSOR no754
	SUB8 no754 1 no754
	DIV8 no754 4 layer754
	MATH MOD8 no754 4 no754

	MOVEF_8 0.0 mode8754
	
	INPUT_DEVICE READY_RAW layer754 no754 0 mode8754 0
  while755:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 or756
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 220.0 endwhile755
  or756:
  whilebody755:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 whilebody755
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 220.0 whilebody755
  endwhile755:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB761:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB762:
    MOVEF_F 95.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB763 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB763:
    DATA8 layer764
	DATA8 no764
	DATA8 mode8764
	
	MOVEF_8 VGV_LINE_SENSOR no764
	SUB8 no764 1 no764
	DIV8 no764 4 layer764
	MATH MOD8 no764 4 no764

	MOVEF_8 0.0 mode8764
	
	INPUT_DEVICE READY_RAW layer764 no764 0 mode8764 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB765 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB765:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB767 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB767:
    JR_LTEQF VGV_B 55.0 else768_1
    DATA8 layer769
	DATA8 no769
	DATA8 mode8769
	
	MOVEF_8 VGV_LEFT_SENSOR no769
	SUB8 no769 1 no769
	DIV8 no769 4 layer769
	MATH MOD8 no769 4 no769

	MOVEF_8 2.0 mode8769
	
	INPUT_DEVICE READY_RAW layer769 no769 0 mode8769 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB770 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB770:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer772
	DATA8 no772
	DATA8 mode8772
	
	MOVEF_8 VGV_LEFT_SENSOR no772
	SUB8 no772 1 no772
	DIV8 no772 4 layer772
	MATH MOD8 no772 4 no772

	MOVEF_8 1.0 mode8772
	
	INPUT_DEVICE READY_RAW layer772 no772 0 mode8772 0
    JR_LTEQF VGV_G 100.0 else773_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB774:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif773
  else773_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB775 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB775:
    MOVEF_F 100.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB776 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB776:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB777:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB778 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB778:
  else773_2:
  endif773:
    JR endif768
  else768_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else780_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB781 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB781:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB782 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB782:
  else780_1:
  endif780:
  else768_2:
  endif768:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB783:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB784 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB784:
    SUBF VGV_A 5.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while787:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 250.0 endwhile787
  whilebody787:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB789:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 250.0 whilebody787
  endwhile787:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds794
	MOVEF_32 2000.0 milliseconds794
	DATA32 timer794
	TIMER_WAIT milliseconds794 timer794
	TIMER_READY timer794
    WRITE32 ENDSUB_F_STOP_0:CALLSUB795 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB795:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB796:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB798 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB798:
    JR_LTEQF VGV_B 55.0 else799_1
    DATA8 layer800
	DATA8 no800
	DATA8 mode8800
	
	MOVEF_8 VGV_LEFT_SENSOR no800
	SUB8 no800 1 no800
	DIV8 no800 4 layer800
	MATH MOD8 no800 4 no800

	MOVEF_8 2.0 mode8800
	
	INPUT_DEVICE READY_RAW layer800 no800 0 mode8800 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB801:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer803
	DATA8 no803
	DATA8 mode8803
	
	MOVEF_8 VGV_LEFT_SENSOR no803
	SUB8 no803 1 no803
	DIV8 no803 4 layer803
	MATH MOD8 no803 4 no803

	MOVEF_8 1.0 mode8803
	
	INPUT_DEVICE READY_RAW layer803 no803 0 mode8803 0
    JR_LTEQF VGV_G 70.0 else804_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB805:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif804
  else804_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB806 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB806:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB807 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB807:
  else804_2:
  endif804:
    JR endif799
  else799_1:
    JR_LTEQF VGV_B 15.0 else799_2
    DATA8 layer808
	DATA8 no808
	DATA8 mode8808
	
	MOVEF_8 VGV_LEFT_SENSOR no808
	SUB8 no808 1 no808
	DIV8 no808 4 layer808
	MATH MOD8 no808 4 no808

	MOVEF_8 4.0 mode8808
	
	INPUT_DEVICE READY_RAW layer808 no808 0 mode8808 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB809 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB809:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_W
    DATA8 layer811
	DATA8 no811
	DATA8 mode8811
	
	MOVEF_8 VGV_LEFT_SENSOR no811
	SUB8 no811 1 no811
	DIV8 no811 4 layer811
	MATH MOD8 no811 4 no811

	MOVEF_8 1.0 mode8811
	
	INPUT_DEVICE READY_RAW layer811 no811 0 mode8811 0
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB812 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB812:
    JR_LTEQF VGV_W 60.0 else813_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB814 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB814:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB815 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB815:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for817:
    JR_GTF VGV_I 20.0 endfor817
  forbody817:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds821
	MOVEF_32 30.0 milliseconds821
	DATA32 timer821
	TIMER_WAIT milliseconds821 timer821
	TIMER_READY timer821
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody817
  endfor817:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer827
	DATA8 nos827
	DATA8 busy827
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer827 nos827
	JR_EQ8 0 nos827 motornotbusy827
  motorwaiting827:
	OUTPUT_TEST layer827 nos827 busy827
	JR_EQ8 busy827 0 motornotbusy827
	SLEEP
	JR motorwaiting827
  motornotbusy827:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB828 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB828:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer829
	DATA8 nos829
	DATA8 busy829
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer829 nos829
	JR_EQ8 0 nos829 motornotbusy829
  motorwaiting829:
	OUTPUT_TEST layer829 nos829 busy829
	JR_EQ8 busy829 0 motornotbusy829
	SLEEP
	JR motorwaiting829
  motornotbusy829:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer832
	DATA8 nos832
	DATA8 busy832
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer832 nos832
	JR_EQ8 0 nos832 motornotbusy832
  motorwaiting832:
	OUTPUT_TEST layer832 nos832 busy832
	JR_EQ8 busy832 0 motornotbusy832
	SLEEP
	JR motorwaiting832
  motornotbusy832:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB833 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB833:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer834
	DATA8 nos834
	DATA8 busy834
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer834 nos834
	JR_EQ8 0 nos834 motornotbusy834
  motorwaiting834:
	OUTPUT_TEST layer834 nos834 busy834
	JR_EQ8 busy834 0 motornotbusy834
	SLEEP
	JR motorwaiting834
  motornotbusy834:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB835:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer838
	DATA8 nos838
	DATA8 busy838
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer838 nos838
	JR_EQ8 0 nos838 motornotbusy838
  motorwaiting838:
	OUTPUT_TEST layer838 nos838 busy838
	JR_EQ8 busy838 0 motornotbusy838
	SLEEP
	JR motorwaiting838
  motornotbusy838:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB839 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB839:
    DATA32 milliseconds840
	MOVEF_32 1000.0 milliseconds840
	DATA32 timer840
	TIMER_WAIT milliseconds840 timer840
	TIMER_READY timer840
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for842:
    JR_GTF VGV_I 20.0 endfor842
  forbody842:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds845
	MOVEF_32 30.0 milliseconds845
	DATA32 timer845
	TIMER_WAIT milliseconds845 timer845
	TIMER_READY timer845
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody842
  endfor842:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer851
	DATA8 nos851
	DATA8 busy851
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer851 nos851
	JR_EQ8 0 nos851 motornotbusy851
  motorwaiting851:
	OUTPUT_TEST layer851 nos851 busy851
	JR_EQ8 busy851 0 motornotbusy851
	SLEEP
	JR motorwaiting851
  motornotbusy851:
    MULF 30.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds854
	MOVEF_32 1000.0 milliseconds854
	DATA32 timer854
	TIMER_WAIT milliseconds854 timer854
	TIMER_READY timer854
    WRITE32 ENDSUB_F_STOP_0:CALLSUB855 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB855:
  else813_1:
  endif813:
  else799_2:
  endif799:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB856 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB856:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer858
	DATA8 nos858
	DATA8 busy858
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer858 nos858
	JR_EQ8 0 nos858 motornotbusy858
  motorwaiting858:
	OUTPUT_TEST layer858 nos858 busy858
	JR_EQ8 busy858 0 motornotbusy858
	SLEEP
	JR motorwaiting858
  motornotbusy858:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 104.0 0.0 'True' 

	DATA8 layer860
	DATA8 nos860
	DATA8 busy860
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer860 nos860
	JR_EQ8 0 nos860 motornotbusy860
  motorwaiting860:
	OUTPUT_TEST layer860 nos860 busy860
	JR_EQ8 busy860 0 motornotbusy860
	SLEEP
	JR motorwaiting860
  motornotbusy860:
    DATA8 layer861
	DATA8 no861
	DATA8 mode8861
	
	MOVEF_8 VGV_LINE_SENSOR no861
	SUB8 no861 1 no861
	DIV8 no861 4 layer861
	MATH MOD8 no861 4 no861

	MOVEF_8 2.0 mode8861
	
	INPUT_DEVICE READY_RAW layer861 no861 0 mode8861 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 105.0 VGV_A
  while863:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 100.0 endwhile863
  whilebody863:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB865 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB865:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 100.0 whilebody863
  endwhile863:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while870:
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 2.0 endwhile870
  whilebody870:
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 2.0 whilebody870
  endwhile870:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB873 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB873:
    DATA8 layer874
	DATA8 no874
	DATA8 mode8874
	
	MOVEF_8 VGV_LINE_SENSOR no874
	SUB8 no874 1 no874
	DIV8 no874 4 layer874
	MATH MOD8 no874 4 no874

	MOVEF_8 0.0 mode8874
	
	INPUT_DEVICE READY_RAW layer874 no874 0 mode8874 0
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else875_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB877 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB877:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB878 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB878:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB879 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB879:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else881_1
    DATA8 layer882
	DATA8 no882
	DATA8 mode8882
	
	MOVEF_8 VGV_LEFT_SENSOR no882
	SUB8 no882 1 no882
	DIV8 no882 4 layer882
	MATH MOD8 no882 4 no882

	MOVEF_8 2.0 mode8882
	
	INPUT_DEVICE READY_RAW layer882 no882 0 mode8882 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB883 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB883:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer885
	DATA8 no885
	DATA8 mode8885
	
	MOVEF_8 VGV_LEFT_SENSOR no885
	SUB8 no885 1 no885
	DIV8 no885 4 layer885
	MATH MOD8 no885 4 no885

	MOVEF_8 1.0 mode8885
	
	INPUT_DEVICE READY_RAW layer885 no885 0 mode8885 0
    JR_LTEQF VGV_G 100.0 else886_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB887 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB887:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif886
  else886_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB888 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB888:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB889 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB889:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB890 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB890:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB891 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB891:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB892 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB892:
  else886_2:
  endif886:
    JR endif881
  else881_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else894_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB895 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB895:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB896 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB896:
  else894_1:
  endif894:
  else881_2:
  endif881:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB897 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB897:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB898 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB898:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB899 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB899:
    JR endif875
  else875_1:
    MOVEF_F 55.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB900 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB900:
  else875_2:
  endif875:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB901 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB901:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else903_1
    DATA8 layer904
	DATA8 no904
	DATA8 mode8904
	
	MOVEF_8 VGV_LEFT_SENSOR no904
	SUB8 no904 1 no904
	DIV8 no904 4 layer904
	MATH MOD8 no904 4 no904

	MOVEF_8 2.0 mode8904
	
	INPUT_DEVICE READY_RAW layer904 no904 0 mode8904 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB905 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB905:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer907
	DATA8 no907
	DATA8 mode8907
	
	MOVEF_8 VGV_LEFT_SENSOR no907
	SUB8 no907 1 no907
	DIV8 no907 4 layer907
	MATH MOD8 no907 4 no907

	MOVEF_8 1.0 mode8907
	
	INPUT_DEVICE READY_RAW layer907 no907 0 mode8907 0
    JR_LTEQF VGV_G 70.0 else908_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB909 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB909:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif908
  else908_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB910 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB910:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB911 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB911:
  else908_2:
  endif908:
    JR endif903
  else903_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else913_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB914 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB914:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB915 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB915:
  else913_1:
  endif913:
  else903_2:
  endif903:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB916 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB916:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer919
	DATA8 nos919
	DATA8 busy919
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer919 nos919
	JR_EQ8 0 nos919 motornotbusy919
  motorwaiting919:
	OUTPUT_TEST layer919 nos919 busy919
	JR_EQ8 busy919 0 motornotbusy919
	SLEEP
	JR motorwaiting919
  motornotbusy919:
    ADDF VGV_A 7.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while922:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 310.0 endwhile922
  whilebody922:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB924 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB924:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 310.0 whilebody922
  endwhile922:
    MOVEF_F 110.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB926 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB926:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else927_1
    DATA8 layer929
	DATA8 no929
	DATA8 mode8929
	
	MOVEF_8 VGV_LEFT_SENSOR no929
	SUB8 no929 1 no929
	DIV8 no929 4 layer929
	MATH MOD8 no929 4 no929

	MOVEF_8 1.0 mode8929
	
	INPUT_DEVICE READY_RAW layer929 no929 0 mode8929 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB930:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB932 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB932:
    JR_LTEQF VGV_B 55.0 else933_1
    DATA8 layer934
	DATA8 no934
	DATA8 mode8934
	
	MOVEF_8 VGV_LEFT_SENSOR no934
	SUB8 no934 1 no934
	DIV8 no934 4 layer934
	MATH MOD8 no934 4 no934

	MOVEF_8 2.0 mode8934
	
	INPUT_DEVICE READY_RAW layer934 no934 0 mode8934 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB935 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB935:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer937
	DATA8 no937
	DATA8 mode8937
	
	MOVEF_8 VGV_LEFT_SENSOR no937
	SUB8 no937 1 no937
	DIV8 no937 4 layer937
	MATH MOD8 no937 4 no937

	MOVEF_8 1.0 mode8937
	
	INPUT_DEVICE READY_RAW layer937 no937 0 mode8937 0
    JR_LTEQF VGV_G 70.0 else938_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB939 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB939:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif938
  else938_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB940 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB940:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB941 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB941:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB942 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB942:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB943 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB943:
  else938_2:
  endif938:
    JR endif933
  else933_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else945_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB946 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB946:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB947 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB947:
  else945_1:
  endif945:
  else933_2:
  endif933:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB948 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB948:
  else927_1:
  endif927:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB949 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB949:
    DATA8 layer950
	DATA8 no950
	DATA8 mode8950
	
	MOVEF_8 VGV_LINE_SENSOR no950
	SUB8 no950 1 no950
	DIV8 no950 4 layer950
	MATH MOD8 no950 4 no950

	MOVEF_8 0.0 mode8950
	
	INPUT_DEVICE READY_RAW layer950 no950 0 mode8950 0
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'False'

	DATA8 layer953
	DATA8 nos953
	DATA8 busy953
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer953 nos953
	JR_EQ8 0 nos953 motornotbusy953
  motorwaiting953:
	OUTPUT_TEST layer953 nos953 busy953
	JR_EQ8 busy953 0 motornotbusy953
	SLEEP
	JR motorwaiting953
  motornotbusy953:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while957:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile957
  whilebody957:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody957
  endwhile957:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB960 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB960:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 200.0 0.0 'False' 

	DATA8 layer962
	DATA8 nos962
	DATA8 busy962
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer962 nos962
	JR_EQ8 0 nos962 motornotbusy962
  motorwaiting962:
	OUTPUT_TEST layer962 nos962 busy962
	JR_EQ8 busy962 0 motornotbusy962
	SLEEP
	JR motorwaiting962
  motornotbusy962:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
  while965:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile965
  whilebody965:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody965
  endwhile965:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer969
	DATA8 nos969
	DATA8 busy969
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer969 nos969
	JR_EQ8 0 nos969 motornotbusy969
  motorwaiting969:
	OUTPUT_TEST layer969 nos969 busy969
	JR_EQ8 busy969 0 motornotbusy969
	SLEEP
	JR motorwaiting969
  motornotbusy969:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB970 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB970:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while972:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile972
  whilebody972:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB974 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB974:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody972
  endwhile972:
  while976:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 5.0 endwhile976
  whilebody976:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB978 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB978:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 5.0 whilebody976
  endwhile976:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB980 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB980:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer983
	DATA8 nos983
	DATA8 busy983
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer983 nos983
	JR_EQ8 0 nos983 motornotbusy983
  motorwaiting983:
	OUTPUT_TEST layer983 nos983 busy983
	JR_EQ8 busy983 0 motornotbusy983
	SLEEP
	JR motorwaiting983
  motornotbusy983:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB984:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB985 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB985:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer988
	DATA8 nos988
	DATA8 busy988
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer988 nos988
	JR_EQ8 0 nos988 motornotbusy988
  motorwaiting988:
	OUTPUT_TEST layer988 nos988 busy988
	JR_EQ8 busy988 0 motornotbusy988
	SLEEP
	JR motorwaiting988
  motornotbusy988:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB989 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB989:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB990 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB990:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 25.0 'False'

	DATA8 layer993
	DATA8 nos993
	DATA8 busy993
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer993 nos993
	JR_EQ8 0 nos993 motornotbusy993
  motorwaiting993:
	OUTPUT_TEST layer993 nos993 busy993
	JR_EQ8 busy993 0 motornotbusy993
	SLEEP
	JR motorwaiting993
  motornotbusy993:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while995:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile995
  whilebody995:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF F.0 17.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf1001
    DATA8 flag1001
    DIVF F.0 10.0 tmpf1001
    CP_EQF 0.0 10.0 flag1001
    SELECTF flag1001 0.0 tmpf1001 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody995
  endwhile995:
    MOVEF_F 135.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1011 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1011:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1012 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1012:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1013 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1013:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1015 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1015:
    JR_LTEQF VGV_B 140.0 else1016_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1017 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1017:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif1016
  else1016_1:
    JR_LTEQF VGV_B 80.0 else1016_2
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'FIre' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1018 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1018:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1019 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1019:
    JR endif1016
  else1016_2:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1021_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'True' VGV_CHEM
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1022 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1022:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1023 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1023:
  else1021_1:
  endif1021:
  else1016_3:
  endif1016:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1024 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1024:
    MOVEF_F 710.0 VGV_C
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or1026
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1025_1
  or1026:
    MOVEF_F 180.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1029 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1029:
    MOVEF_F 491.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1031:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 170.0 endwhile1031
  whilebody1031:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB1033 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB1033:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 170.0 whilebody1031
  endwhile1031:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1035 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1035:
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1036_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1038 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1038:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1040 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1040:
    JR_LTEQF VGV_B 50.0 else1041_1
    DATA8 layer1042
	DATA8 no1042
	DATA8 mode81042
	
	MOVEF_8 VGV_LEFT_SENSOR no1042
	SUB8 no1042 1 no1042
	DIV8 no1042 4 layer1042
	MATH MOD8 no1042 4 no1042

	MOVEF_8 2.0 mode81042
	
	INPUT_DEVICE READY_RAW layer1042 no1042 0 mode81042 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1043:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1045
	DATA8 no1045
	DATA8 mode81045
	
	MOVEF_8 VGV_LEFT_SENSOR no1045
	SUB8 no1045 1 no1045
	DIV8 no1045 4 layer1045
	MATH MOD8 no1045 4 no1045

	MOVEF_8 1.0 mode81045
	
	INPUT_DEVICE READY_RAW layer1045 no1045 0 mode81045 0
    JR_LTEQF VGV_G 100.0 else1046_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1047 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1047:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif1046
  else1046_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1048 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1048:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1049 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1049:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1050 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1050:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1051 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1051:
  else1046_2:
  endif1046:
    JR endif1041
  else1041_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1053_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1054 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1054:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer1057
	DATA8 nos1057
	DATA8 busy1057
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1057 nos1057
	JR_EQ8 0 nos1057 motornotbusy1057
  motorwaiting1057:
	OUTPUT_TEST layer1057 nos1057 busy1057
	JR_EQ8 busy1057 0 motornotbusy1057
	SLEEP
	JR motorwaiting1057
  motornotbusy1057:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1058 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1058:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer1059
	DATA8 nos1059
	DATA8 busy1059
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1059 nos1059
	JR_EQ8 0 nos1059 motornotbusy1059
  motorwaiting1059:
	OUTPUT_TEST layer1059 nos1059 busy1059
	JR_EQ8 busy1059 0 motornotbusy1059
	SLEEP
	JR motorwaiting1059
  motornotbusy1059:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1061:
    JR_GTF VGV_I 20.0 endfor1061
  forbody1061:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1064
	MOVEF_32 10.0 milliseconds1064
	DATA32 timer1064
	TIMER_WAIT milliseconds1064 timer1064
	TIMER_READY timer1064
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1061
  endfor1061:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1070
	DATA8 nos1070
	DATA8 busy1070
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1070 nos1070
	JR_EQ8 0 nos1070 motornotbusy1070
  motorwaiting1070:
	OUTPUT_TEST layer1070 nos1070 busy1070
	JR_EQ8 busy1070 0 motornotbusy1070
	SLEEP
	JR motorwaiting1070
  motornotbusy1070:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1071 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1071:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer1072
	DATA8 nos1072
	DATA8 busy1072
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1072 nos1072
	JR_EQ8 0 nos1072 motornotbusy1072
  motorwaiting1072:
	OUTPUT_TEST layer1072 nos1072 busy1072
	JR_EQ8 busy1072 0 motornotbusy1072
	SLEEP
	JR motorwaiting1072
  motornotbusy1072:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1073 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1073:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1074 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1074:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1076:
    JR_GTF VGV_I 20.0 endfor1076
  forbody1076:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1080
	MOVEF_32 10.0 milliseconds1080
	DATA32 timer1080
	TIMER_WAIT milliseconds1080 timer1080
	TIMER_READY timer1080
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1076
  endfor1076:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1086
	DATA8 nos1086
	DATA8 busy1086
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1086 nos1086
	JR_EQ8 0 nos1086 motornotbusy1086
  motorwaiting1086:
	OUTPUT_TEST layer1086 nos1086 busy1086
	JR_EQ8 busy1086 0 motornotbusy1086
	SLEEP
	JR motorwaiting1086
  motornotbusy1086:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1087 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1087:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1088 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1088:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer1091
	DATA8 nos1091
	DATA8 busy1091
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1091 nos1091
	JR_EQ8 0 nos1091 motornotbusy1091
  motorwaiting1091:
	OUTPUT_TEST layer1091 nos1091 busy1091
	JR_EQ8 busy1091 0 motornotbusy1091
	SLEEP
	JR motorwaiting1091
  motornotbusy1091:
  else1053_1:
  endif1053:
  else1041_2:
  endif1041:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1092 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1092:
  else1036_1:
  endif1036:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1093_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1095 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1095:
    MOVEF_F 160.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1096 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1096:
    DATA8 layer1097
	DATA8 no1097
	DATA8 mode81097
	
	MOVEF_8 VGV_LEFT_SENSOR no1097
	SUB8 no1097 1 no1097
	DIV8 no1097 4 layer1097
	MATH MOD8 no1097 4 no1097

	MOVEF_8 1.0 mode81097
	
	INPUT_DEVICE READY_RAW layer1097 no1097 0 mode81097 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1098 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1098:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1100:
    JR_LTEQF VGV_B 40.0 else1101_1
    DATA8 layer1102
	DATA8 no1102
	DATA8 mode81102
	
	MOVEF_8 VGV_LEFT_SENSOR no1102
	SUB8 no1102 1 no1102
	DIV8 no1102 4 layer1102
	MATH MOD8 no1102 4 no1102

	MOVEF_8 2.0 mode81102
	
	INPUT_DEVICE READY_RAW layer1102 no1102 0 mode81102 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1103:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1105
	DATA8 no1105
	DATA8 mode81105
	
	MOVEF_8 VGV_LEFT_SENSOR no1105
	SUB8 no1105 1 no1105
	DIV8 no1105 4 layer1105
	MATH MOD8 no1105 4 no1105

	MOVEF_8 1.0 mode81105
	
	INPUT_DEVICE READY_RAW layer1105 no1105 0 mode81105 0
    JR_LTEQF VGV_G 50.0 else1106_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1107:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif1106
  else1106_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1108:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1109:
  else1106_2:
  endif1106:
    JR endif1101
  else1101_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1111_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1112:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB1113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB1113:
  else1111_1:
  endif1111:
  else1101_2:
  endif1101:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1114:
    MOVEF_F 160.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1115:
  else1093_1:
  endif1093:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 165.0 'True'

	DATA8 layer1118
	DATA8 nos1118
	DATA8 busy1118
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1118 nos1118
	JR_EQ8 0 nos1118 motornotbusy1118
  motorwaiting1118:
	OUTPUT_TEST layer1118 nos1118 busy1118
	JR_EQ8 busy1118 0 motornotbusy1118
	SLEEP
	JR motorwaiting1118
  motornotbusy1118:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1119:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1120:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 380.0 'True'

	DATA8 layer1123
	DATA8 nos1123
	DATA8 busy1123
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1123 nos1123
	JR_EQ8 0 nos1123 motornotbusy1123
  motorwaiting1123:
	OUTPUT_TEST layer1123 nos1123 busy1123
	JR_EQ8 busy1123 0 motornotbusy1123
	SLEEP
	JR motorwaiting1123
  motornotbusy1123:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1124:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1125:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1128
	DATA8 nos1128
	DATA8 busy1128
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1128 nos1128
	JR_EQ8 0 nos1128 motornotbusy1128
  motorwaiting1128:
	OUTPUT_TEST layer1128 nos1128 busy1128
	JR_EQ8 busy1128 0 motornotbusy1128
	SLEEP
	JR motorwaiting1128
  motornotbusy1128:
    JR endif1025
  else1025_1:
    MOVEF_F 200.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1129:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 370.0 'True'

	DATA8 layer1132
	DATA8 nos1132
	DATA8 busy1132
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1132 nos1132
	JR_EQ8 0 nos1132 motornotbusy1132
  motorwaiting1132:
	OUTPUT_TEST layer1132 nos1132 busy1132
	JR_EQ8 busy1132 0 motornotbusy1132
	SLEEP
	JR motorwaiting1132
  motornotbusy1132:
    SUBF VGV_C 220.0 VGV_C
  else1025_2:
  endif1025:
    MOVEF_F 474.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1135:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile1135
  whilebody1135:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB1137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB1137:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody1135
  endwhile1135:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1139:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1140:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1141_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 115.0 0.0 'True' 

	DATA8 layer1143
	DATA8 nos1143
	DATA8 busy1143
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1143 nos1143
	JR_EQ8 0 nos1143 motornotbusy1143
  motorwaiting1143:
	OUTPUT_TEST layer1143 nos1143 busy1143
	JR_EQ8 busy1143 0 motornotbusy1143
	SLEEP
	JR motorwaiting1143
  motornotbusy1143:
  else1141_1:
  endif1141:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1144:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1147
	DATA8 nos1147
	DATA8 busy1147
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1147 nos1147
	JR_EQ8 0 nos1147 motornotbusy1147
  motorwaiting1147:
	OUTPUT_TEST layer1147 nos1147 busy1147
	JR_EQ8 busy1147 0 motornotbusy1147
	SLEEP
	JR motorwaiting1147
  motornotbusy1147:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1148:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1149_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer1151
	DATA8 nos1151
	DATA8 busy1151
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1151 nos1151
	JR_EQ8 0 nos1151 motornotbusy1151
  motorwaiting1151:
	OUTPUT_TEST layer1151 nos1151 busy1151
	JR_EQ8 busy1151 0 motornotbusy1151
	SLEEP
	JR motorwaiting1151
  motornotbusy1151:
  else1149_1:
  endif1149:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1154
	DATA8 nos1154
	DATA8 busy1154
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1154 nos1154
	JR_EQ8 0 nos1154 motornotbusy1154
  motorwaiting1154:
	OUTPUT_TEST layer1154 nos1154 busy1154
	JR_EQ8 busy1154 0 motornotbusy1154
	SLEEP
	JR motorwaiting1154
  motornotbusy1154:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 60.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1158
	MOVEF_32 1200.0 milliseconds1158
	DATA32 timer1158
	TIMER_WAIT milliseconds1158 timer1158
	TIMER_READY timer1158
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1159:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer1162
	DATA8 nos1162
	DATA8 busy1162
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1162 nos1162
	JR_EQ8 0 nos1162 motornotbusy1162
  motorwaiting1162:
	OUTPUT_TEST layer1162 nos1162 busy1162
	JR_EQ8 busy1162 0 motornotbusy1162
	SLEEP
	JR motorwaiting1162
  motornotbusy1162:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer1164
	DATA8 nos1164
	DATA8 busy1164
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1164 nos1164
	JR_EQ8 0 nos1164 motornotbusy1164
  motorwaiting1164:
	OUTPUT_TEST layer1164 nos1164 busy1164
	JR_EQ8 busy1164 0 motornotbusy1164
	SLEEP
	JR motorwaiting1164
  motornotbusy1164:
    MULF VGV_LEFT_FORWARD 90.0 F.0
    MULF VGV_RIGHT_FORWARD 95.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1168
	MOVEF_32 3500.0 milliseconds1168
	DATA32 timer1168
	TIMER_WAIT milliseconds1168 timer1168
	TIMER_READY timer1168
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1169:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer1170
	DATA8 nos1170
	DATA8 busy1170
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer1170 nos1170
	JR_EQ8 0 nos1170 motornotbusy1170
  motorwaiting1170:
	OUTPUT_TEST layer1170 nos1170 busy1170
	JR_EQ8 busy1170 0 motornotbusy1170
	SLEEP
	JR motorwaiting1170
  motornotbusy1170:
    WRITE32 ENDSUB_F_TAKE_CUBES_0:CALLSUB1171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_0
CALLSUB1171:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1174
	DATA8 nos1174
	DATA8 busy1174
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1174 nos1174
	JR_EQ8 0 nos1174 motornotbusy1174
  motorwaiting1174:
	OUTPUT_TEST layer1174 nos1174 busy1174
	JR_EQ8 busy1174 0 motornotbusy1174
	SLEEP
	JR motorwaiting1174
  motornotbusy1174:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1175_1
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1175_1
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB1178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB1178:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1179:
    JR endif1175
  else1175_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1175_2
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1175_2
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1184
	DATA8 nos1184
	DATA8 busy1184
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1184 nos1184
	JR_EQ8 0 nos1184 motornotbusy1184
  motorwaiting1184:
	OUTPUT_TEST layer1184 nos1184 busy1184
	JR_EQ8 busy1184 0 motornotbusy1184
	SLEEP
	JR motorwaiting1184
  motornotbusy1184:
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB1185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB1185:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1186:
    JR endif1175
  else1175_2:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1175_3
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1175_3
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:CALLSUB1189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_LONG_0
CALLSUB1189:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1190:
    JR endif1175
  else1175_3:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1191_1
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1191_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1194:
    JR endif1191
  else1191_1:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1191_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1196:
    JR endif1191
  else1191_2:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1191_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1198:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1201
	DATA8 nos1201
	DATA8 busy1201
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1201 nos1201
	JR_EQ8 0 nos1201 motornotbusy1201
  motorwaiting1201:
	OUTPUT_TEST layer1201 nos1201 busy1201
	JR_EQ8 busy1201 0 motornotbusy1201
	SLEEP
	JR motorwaiting1201
  motornotbusy1201:
    JR endif1191
  else1191_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1204
	DATA8 nos1204
	DATA8 busy1204
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1204 nos1204
	JR_EQ8 0 nos1204 motornotbusy1204
  motorwaiting1204:
	OUTPUT_TEST layer1204 nos1204 busy1204
	JR_EQ8 busy1204 0 motornotbusy1204
	SLEEP
	JR motorwaiting1204
  motornotbusy1204:
  else1191_4:
  endif1191:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1205_1
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1205_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1208:
    JR endif1205
  else1205_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1205_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1210:
    JR endif1205
  else1205_2:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1205_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1212:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1215
	DATA8 nos1215
	DATA8 busy1215
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1215 nos1215
	JR_EQ8 0 nos1215 motornotbusy1215
  motorwaiting1215:
	OUTPUT_TEST layer1215 nos1215 busy1215
	JR_EQ8 busy1215 0 motornotbusy1215
	SLEEP
	JR motorwaiting1215
  motornotbusy1215:
    JR endif1205
  else1205_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1218
	DATA8 nos1218
	DATA8 busy1218
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1218 nos1218
	JR_EQ8 0 nos1218 motornotbusy1218
  motorwaiting1218:
	OUTPUT_TEST layer1218 nos1218 busy1218
	JR_EQ8 busy1218 0 motornotbusy1218
	SLEEP
	JR motorwaiting1218
  motornotbusy1218:
  else1205_4:
  endif1205:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1219_1
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1219_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1222:
    JR endif1219
  else1219_1:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1219_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1224:
    JR endif1219
  else1219_2:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1219_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1226:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1229
	DATA8 nos1229
	DATA8 busy1229
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1229 nos1229
	JR_EQ8 0 nos1229 motornotbusy1229
  motorwaiting1229:
	OUTPUT_TEST layer1229 nos1229 busy1229
	JR_EQ8 busy1229 0 motornotbusy1229
	SLEEP
	JR motorwaiting1229
  motornotbusy1229:
    JR endif1219
  else1219_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1232
	DATA8 nos1232
	DATA8 busy1232
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1232 nos1232
	JR_EQ8 0 nos1232 motornotbusy1232
  motorwaiting1232:
	OUTPUT_TEST layer1232 nos1232 busy1232
	JR_EQ8 busy1232 0 motornotbusy1232
	SLEEP
	JR motorwaiting1232
  motornotbusy1232:
  else1219_4:
  endif1219:
    MULF -15.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1234
	DATA8 nos1234
	DATA8 busy1234
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1234 nos1234
	JR_EQ8 0 nos1234 motornotbusy1234
  motorwaiting1234:
	OUTPUT_TEST layer1234 nos1234 busy1234
	JR_EQ8 busy1234 0 motornotbusy1234
	SLEEP
	JR motorwaiting1234
  motornotbusy1234:
    MULF VGV_LEFT_FORWARD -25.0 F.0
    MULF VGV_RIGHT_FORWARD -25.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1238
	MOVEF_32 1500.0 milliseconds1238
	DATA32 timer1238
	TIMER_WAIT milliseconds1238 timer1238
	TIMER_READY timer1238
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1239:
  else1175_4:
  endif1175:
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1240_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 55.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1246:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 1200.0 endwhile1246
  whilebody1246:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 1200.0 whilebody1246
  endwhile1246:
  while1249:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 25.0 endwhile1249
  whilebody1249:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 25.0 whilebody1249
  endwhile1249:
  while1252:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile1252
  whilebody1252:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody1252
  endwhile1252:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1255:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1256:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 365.0 0.0 'True' 

	DATA8 layer1258
	DATA8 nos1258
	DATA8 busy1258
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1258 nos1258
	JR_EQ8 0 nos1258 motornotbusy1258
  motorwaiting1258:
	OUTPUT_TEST layer1258 nos1258 busy1258
	JR_EQ8 busy1258 0 motornotbusy1258
	SLEEP
	JR motorwaiting1258
  motornotbusy1258:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1262:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1265
	DATA8 nos1265
	DATA8 busy1265
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1265 nos1265
	JR_EQ8 0 nos1265 motornotbusy1265
  motorwaiting1265:
	OUTPUT_TEST layer1265 nos1265 busy1265
	JR_EQ8 busy1265 0 motornotbusy1265
	SLEEP
	JR motorwaiting1265
  motornotbusy1265:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 300.0 0.0 'True' 

	DATA8 layer1267
	DATA8 nos1267
	DATA8 busy1267
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1267 nos1267
	JR_EQ8 0 nos1267 motornotbusy1267
  motorwaiting1267:
	OUTPUT_TEST layer1267 nos1267 busy1267
	JR_EQ8 busy1267 0 motornotbusy1267
	SLEEP
	JR motorwaiting1267
  motornotbusy1267:
    MULF VGV_LEFT_FORWARD 55.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1271
	MOVEF_32 4000.0 milliseconds1271
	DATA32 timer1271
	TIMER_WAIT milliseconds1271 timer1271
	TIMER_READY timer1271
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1272:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 20.0 'True'

	DATA8 layer1275
	DATA8 nos1275
	DATA8 busy1275
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1275 nos1275
	JR_EQ8 0 nos1275 motornotbusy1275
  motorwaiting1275:
	OUTPUT_TEST layer1275 nos1275 busy1275
	JR_EQ8 busy1275 0 motornotbusy1275
	SLEEP
	JR motorwaiting1275
  motornotbusy1275:
  else1240_1:
  endif1240:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp VGV_T
    DATAF tmpf1277
    DATA8 flag1277
    DIVF VGV_T 60000.0 tmpf1277
    CP_EQF 0.0 60000.0 flag1277
    SELECTF flag1277 0.0 tmpf1277 F.0

    MATH FLOOR F.0 VGV_MINS
    MATH MOD VGV_T 60000.0 F.1
    DATAF tmpf1280
    DATA8 flag1280
    DIVF F.1 1000.0 tmpf1280
    CP_EQF 0.0 1000.0 flag1280
    SELECTF flag1280 0.0 tmpf1280 F.0

    MATH FLOOR F.0 VGV_SECS
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MINS '%g' 99 S.1
    CALL TEXT.APPEND S.1 ':' S.0
    STRINGS VALUE_FORMATTED VGV_SECS '%g' 99 S.1
    CALL TEXT.APPEND S.0 S.1 VGV_STR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_STR
    WRITE32 ENDSUB_F_PLAY_MUSIC_0:CALLSUB1288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PLAY_MUSIC_0
CALLSUB1288:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall SPEAKER.ISBUSY     // S
{
	OUT_S result 8
	
	DATA8 busy
	SOUND_TEST busy
	JR_EQ8 busy 0 notbusy
	STRINGS DUPLICATE 'True' result
	RETURN
notbusy:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
