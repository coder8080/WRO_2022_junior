DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERSED_MOTOR 252
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_MOTORS 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_LINE_SENSOR
DATAF VGV_ULTRASONIC
DATAF VGV_RIGHT_FORWARD
DATAF VGV_LEFT_FORWARD
DATAF VGV_A
DATAF VGV_P
DATAF VGV_D
DATAF VGV_LASTERROR
DATAF VGV_NOWERROR
DATAF VGV_DIF
DATAF VGV_INTEGRAL
DATAF VGV_DERIVATIVE
DATAF VGV_UP
DATAF VGV_P_U
DATAF VGV_D_U
DATAF VGV_DEG
DATAS VGV_IS_CHEM_ON_RIGHT 252
DATAS VGV_IS_CHEM_ON_LEFT 252
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_CHEM 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_CUBES_COUNT
DATAF VGV_WATER_STATE
DATAS VGV_OBJECT 252
DATAF VGV_B
DATAF VGV_W
DATAS VGV_START_FROM_RIGHT 252
DATAF VGV_C
DATAF VGV_G
DATAF VGV_R_C
DATAF VGV_L_C
DATAF VGV_DIFF
DATAF VGV_R_P
DATAF VGV_L_P
DATAF VGV_I
DATAS VGV_TAKE_RED_RIGHT 252
DATAS VGV_TAKE_RED_LEFT 252
DATAF VGV_CHEM_BACK
DATAF VGV_NO_BACK
DATAF VGV_ULTRA

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VGV_I
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VGV_I
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 1.0 VGV_LINE_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 1.0 VGV_P
    MOVEF_F 6.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 1.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 2.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE_SENSOR no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_RIGHT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_LEFT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 1.0 'Low battery'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB10:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB11 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB11:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB12:
ENDTHREAD:
    RETURN
SUB_F_LINE_0:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF 20.0 F.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf17
    DATA8 flag17
    DIVF F.0 10.0 tmpf17
    CP_EQF 0.0 10.0 flag17
    SELECTF flag17 0.0 tmpf17 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_LINE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_0:
SUB_F_ULTRASONIC_SLOW_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf30
    DATA8 flag30
    DIVF F.0 10.0 tmpf30
    CP_EQF 0.0 10.0 flag30
    SELECTF flag30 0.0 tmpf30 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 20.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 20.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SLOW_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SLOW_0:
SUB_F_ULTRASONIC_FAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf45
    DATA8 flag45
    DIVF F.0 10.0 tmpf45
    CP_EQF 0.0 10.0 flag45
    SELECTF flag45 0.0 tmpf45 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 35.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 35.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_FAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_FAST_0:
SUB_F_STOP_0:
    CALL MOTOR.STOP VGV_MOTORS 'True'
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_STOP_RIGHT_0:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
RETSUB_F_STOP_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_RIGHT_0:
SUB_F_DELAY_0:
    DATA32 milliseconds58
	MOVEF_32 500.0 milliseconds58
	DATA32 timer58
	TIMER_WAIT milliseconds58 timer58
	TIMER_READY timer58
RETSUB_F_DELAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_0:
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_LEFT_0:
    MOVEF_F 280.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB60:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB61:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for63:
    JR_GTF VGV_I 20.0 endfor63
  forbody63:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds67
	MOVEF_32 10.0 milliseconds67
	DATA32 timer67
	TIMER_WAIT milliseconds67 timer67
	TIMER_READY timer67
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody63
  endfor63:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 360.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer73
	DATA8 nos73
	DATA8 busy73
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer73 nos73
	JR_EQ8 0 nos73 motornotbusy73
  motorwaiting73:
	OUTPUT_TEST layer73 nos73 busy73
	JR_EQ8 busy73 0 motornotbusy73
	SLEEP
	JR motorwaiting73
  motornotbusy73:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer74
	DATA8 nos74
	DATA8 busy74
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer74 nos74
	JR_EQ8 0 nos74 motornotbusy74
  motorwaiting74:
	OUTPUT_TEST layer74 nos74 busy74
	JR_EQ8 busy74 0 motornotbusy74
	SLEEP
	JR motorwaiting74
  motornotbusy74:
    MOVEF_F 70.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB75:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer76
	DATA8 nos76
	DATA8 busy76
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer76 nos76
	JR_EQ8 0 nos76 motornotbusy76
  motorwaiting76:
	OUTPUT_TEST layer76 nos76 busy76
	JR_EQ8 busy76 0 motornotbusy76
	SLEEP
	JR motorwaiting76
  motornotbusy76:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB77:
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB78:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for80:
    JR_GTF VGV_I 20.0 endfor80
  forbody80:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds83
	MOVEF_32 10.0 milliseconds83
	DATA32 timer83
	TIMER_WAIT milliseconds83 timer83
	TIMER_READY timer83
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody80
  endfor80:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 350.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer89
	DATA8 nos89
	DATA8 busy89
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer89 nos89
	JR_EQ8 0 nos89 motornotbusy89
  motorwaiting89:
	OUTPUT_TEST layer89 nos89 busy89
	JR_EQ8 busy89 0 motornotbusy89
	SLEEP
	JR motorwaiting89
  motornotbusy89:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB90:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB91:
    MOVEF_F 280.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB92:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB93:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB94:
RETSUB_F_TAKE_CHEM_ON_LEFT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_0:
SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for96:
    JR_GTF VGV_I 20.0 endfor96
  forbody96:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds102
	MOVEF_32 30.0 milliseconds102
	DATA32 timer102
	TIMER_WAIT milliseconds102 timer102
	TIMER_READY timer102
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody96
  endfor96:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 170.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer108
	DATA8 nos108
	DATA8 busy108
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer108 nos108
	JR_EQ8 0 nos108 motornotbusy108
  motorwaiting108:
	OUTPUT_TEST layer108 nos108 busy108
	JR_EQ8 busy108 0 motornotbusy108
	SLEEP
	JR motorwaiting108
  motornotbusy108:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB109:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer110
	DATA8 nos110
	DATA8 busy110
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer110 nos110
	JR_EQ8 0 nos110 motornotbusy110
  motorwaiting110:
	OUTPUT_TEST layer110 nos110 busy110
	JR_EQ8 busy110 0 motornotbusy110
	SLEEP
	JR motorwaiting110
  motornotbusy110:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for112:
    JR_GTF VGV_I 20.0 endfor112
  forbody112:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds115
	MOVEF_32 10.0 milliseconds115
	DATA32 timer115
	TIMER_WAIT milliseconds115 timer115
	TIMER_READY timer115
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody112
  endfor112:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer121
	DATA8 nos121
	DATA8 busy121
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer121 nos121
	JR_EQ8 0 nos121 motornotbusy121
  motorwaiting121:
	OUTPUT_TEST layer121 nos121 busy121
	JR_EQ8 busy121 0 motornotbusy121
	SLEEP
	JR motorwaiting121
  motornotbusy121:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB122:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer123
	DATA8 nos123
	DATA8 busy123
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer123 nos123
	JR_EQ8 0 nos123 motornotbusy123
  motorwaiting123:
	OUTPUT_TEST layer123 nos123 busy123
	JR_EQ8 busy123 0 motornotbusy123
	SLEEP
	JR motorwaiting123
  motornotbusy123:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB124:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB125:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for127:
    JR_GTF VGV_I 20.0 endfor127
  forbody127:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds131
	MOVEF_32 10.0 milliseconds131
	DATA32 timer131
	TIMER_WAIT milliseconds131 timer131
	TIMER_READY timer131
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody127
  endfor127:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer137
	DATA8 nos137
	DATA8 busy137
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer137 nos137
	JR_EQ8 0 nos137 motornotbusy137
  motorwaiting137:
	OUTPUT_TEST layer137 nos137 busy137
	JR_EQ8 busy137 0 motornotbusy137
	SLEEP
	JR motorwaiting137
  motornotbusy137:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB138:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB139:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for141:
    JR_GTF VGV_I 20.0 endfor141
  forbody141:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds145
	MOVEF_32 30.0 milliseconds145
	DATA32 timer145
	TIMER_WAIT milliseconds145 timer145
	TIMER_READY timer145
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody141
  endfor141:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 170.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer151
	DATA8 nos151
	DATA8 busy151
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer151 nos151
	JR_EQ8 0 nos151 motornotbusy151
  motorwaiting151:
	OUTPUT_TEST layer151 nos151 busy151
	JR_EQ8 busy151 0 motornotbusy151
	SLEEP
	JR motorwaiting151
  motornotbusy151:
RETSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for153:
    JR_GTF VGV_I 20.0 endfor153
  forbody153:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds159
	MOVEF_32 30.0 milliseconds159
	DATA32 timer159
	TIMER_WAIT milliseconds159 timer159
	TIMER_READY timer159
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody153
  endfor153:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer165
	DATA8 nos165
	DATA8 busy165
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer165 nos165
	JR_EQ8 0 nos165 motornotbusy165
  motorwaiting165:
	OUTPUT_TEST layer165 nos165 busy165
	JR_EQ8 busy165 0 motornotbusy165
	SLEEP
	JR motorwaiting165
  motornotbusy165:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB166:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer167
	DATA8 nos167
	DATA8 busy167
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer167 nos167
	JR_EQ8 0 nos167 motornotbusy167
  motorwaiting167:
	OUTPUT_TEST layer167 nos167 busy167
	JR_EQ8 busy167 0 motornotbusy167
	SLEEP
	JR motorwaiting167
  motornotbusy167:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for169:
    JR_GTF VGV_I 20.0 endfor169
  forbody169:
    MULF VGV_I VGV_LEFT_FORWARD F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds172
	MOVEF_32 10.0 milliseconds172
	DATA32 timer172
	TIMER_WAIT milliseconds172 timer172
	TIMER_READY timer172
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody169
  endfor169:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer178
	DATA8 nos178
	DATA8 busy178
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer178 nos178
	JR_EQ8 0 nos178 motornotbusy178
  motorwaiting178:
	OUTPUT_TEST layer178 nos178 busy178
	JR_EQ8 busy178 0 motornotbusy178
	SLEEP
	JR motorwaiting178
  motornotbusy178:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB179:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer180
	DATA8 nos180
	DATA8 busy180
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer180 nos180
	JR_EQ8 0 nos180 motornotbusy180
  motorwaiting180:
	OUTPUT_TEST layer180 nos180 busy180
	JR_EQ8 busy180 0 motornotbusy180
	SLEEP
	JR motorwaiting180
  motornotbusy180:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB181:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB182:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for184:
    JR_GTF VGV_I 20.0 endfor184
  forbody184:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds188
	MOVEF_32 10.0 milliseconds188
	DATA32 timer188
	TIMER_WAIT milliseconds188 timer188
	TIMER_READY timer188
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody184
  endfor184:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer194
	DATA8 nos194
	DATA8 busy194
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer194 nos194
	JR_EQ8 0 nos194 motornotbusy194
  motorwaiting194:
	OUTPUT_TEST layer194 nos194 busy194
	JR_EQ8 busy194 0 motornotbusy194
	SLEEP
	JR motorwaiting194
  motornotbusy194:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB195:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB196:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for198:
    JR_GTF VGV_I 20.0 endfor198
  forbody198:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds202
	MOVEF_32 30.0 milliseconds202
	DATA32 timer202
	TIMER_WAIT milliseconds202 timer202
	TIMER_READY timer202
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody198
  endfor198:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer208
	DATA8 nos208
	DATA8 busy208
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer208 nos208
	JR_EQ8 0 nos208 motornotbusy208
  motorwaiting208:
	OUTPUT_TEST layer208 nos208 busy208
	JR_EQ8 busy208 0 motornotbusy208
	SLEEP
	JR motorwaiting208
  motornotbusy208:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else209_1
    CALL MOTOR.START VGV_WATER_MOTOR -30.0
    DATA32 milliseconds211
	MOVEF_32 1500.0 milliseconds211
	DATA32 timer211
	TIMER_WAIT milliseconds211 timer211
	TIMER_READY timer211
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif209
  else209_1:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds214
	MOVEF_32 1500.0 milliseconds214
	DATA32 timer214
	TIMER_WAIT milliseconds214 timer214
	TIMER_READY timer214
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
  else209_2:
  endif209:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_UPDATE_DISPLAY_0:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_OBJECT
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.1
    CALL TEXT.APPEND 'Red: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.1
    CALL TEXT.APPEND 'White: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 75.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_UPDATE_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UPDATE_DISPLAY_0:
SUB_F_RESET_VALUES_0:
    STRINGS DUPLICATE 'None' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
RETSUB_F_RESET_VALUES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_VALUES_0:
SUB_F_CLOSE_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -10.0 0.0 70.0 0.0 'True' 

	DATA8 layer226
	DATA8 nos226
	DATA8 busy226
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer226 nos226
	JR_EQ8 0 nos226 motornotbusy226
  motorwaiting226:
	OUTPUT_TEST layer226 nos226 busy226
	JR_EQ8 busy226 0 motornotbusy226
	SLEEP
	JR motorwaiting226
  motornotbusy226:
RETSUB_F_CLOSE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_0:
SUB_F_OPEN_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 10.0 0.0 70.0 0.0 'True' 

	DATA8 layer227
	DATA8 nos227
	DATA8 busy227
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer227 nos227
	JR_EQ8 0 nos227 motornotbusy227
  motorwaiting227:
	OUTPUT_TEST layer227 nos227 busy227
	JR_EQ8 busy227 0 motornotbusy227
	SLEEP
	JR motorwaiting227
  motornotbusy227:
RETSUB_F_OPEN_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_0:
SUB_F_TAKE_CUBES_0:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB228:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB229:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer232
	DATA8 nos232
	DATA8 busy232
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer232 nos232
	JR_EQ8 0 nos232 motornotbusy232
  motorwaiting232:
	OUTPUT_TEST layer232 nos232 busy232
	JR_EQ8 busy232 0 motornotbusy232
	SLEEP
	JR motorwaiting232
  motornotbusy232:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB233:
    MULF VGV_RIGHT_FORWARD -30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds236
	MOVEF_32 1500.0 milliseconds236
	DATA32 timer236
	TIMER_WAIT milliseconds236 timer236
	TIMER_READY timer236
    WRITE32 ENDSUB_F_STOP_0:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB237:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB238:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 227.0 VGV_A
  while240:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 930.0 endwhile240
  whilebody240:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB242:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 930.0 whilebody240
  endwhile240:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB244:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB245:
RETSUB_F_TAKE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_0:
SUB_F_TAKE_LONG_0:
    MULF VGV_RIGHT_FORWARD 15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer247
	DATA8 nos247
	DATA8 busy247
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer247 nos247
	JR_EQ8 0 nos247 motornotbusy247
  motorwaiting247:
	OUTPUT_TEST layer247 nos247 busy247
	JR_EQ8 busy247 0 motornotbusy247
	SLEEP
	JR motorwaiting247
  motornotbusy247:
    MULF VGV_LEFT_FORWARD 15.0 F.0
    MULF VGV_RIGHT_FORWARD 15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer250
	DATA8 nos250
	DATA8 busy250
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer250 nos250
	JR_EQ8 0 nos250 motornotbusy250
  motorwaiting250:
	OUTPUT_TEST layer250 nos250 busy250
	JR_EQ8 busy250 0 motornotbusy250
	SLEEP
	JR motorwaiting250
  motornotbusy250:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB251:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer254
	DATA8 nos254
	DATA8 busy254
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer254 nos254
	JR_EQ8 0 nos254 motornotbusy254
  motorwaiting254:
	OUTPUT_TEST layer254 nos254 busy254
	JR_EQ8 busy254 0 motornotbusy254
	SLEEP
	JR motorwaiting254
  motornotbusy254:
    JR_NEQF VGV_CUBES_COUNT 2.0 else255_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB256:
  else255_1:
  endif255:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 38.0 'True'

	DATA8 layer259
	DATA8 nos259
	DATA8 busy259
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer259 nos259
	JR_EQ8 0 nos259 motornotbusy259
  motorwaiting259:
	OUTPUT_TEST layer259 nos259 busy259
	JR_EQ8 busy259 0 motornotbusy259
	SLEEP
	JR motorwaiting259
  motornotbusy259:
    MULF VGV_RIGHT_FORWARD -15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer261
	DATA8 nos261
	DATA8 busy261
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer261 nos261
	JR_EQ8 0 nos261 motornotbusy261
  motorwaiting261:
	OUTPUT_TEST layer261 nos261 busy261
	JR_EQ8 busy261 0 motornotbusy261
	SLEEP
	JR motorwaiting261
  motornotbusy261:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_0:
SUB_F_TAKE_NEAR_0:
    MULF -15.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer263
	DATA8 nos263
	DATA8 busy263
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer263 nos263
	JR_EQ8 0 nos263 motornotbusy263
  motorwaiting263:
	OUTPUT_TEST layer263 nos263 busy263
	JR_EQ8 busy263 0 motornotbusy263
	SLEEP
	JR motorwaiting263
  motornotbusy263:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer265
	DATA8 nos265
	DATA8 busy265
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer265 nos265
	JR_EQ8 0 nos265 motornotbusy265
  motorwaiting265:
	OUTPUT_TEST layer265 nos265 busy265
	JR_EQ8 busy265 0 motornotbusy265
	SLEEP
	JR motorwaiting265
  motornotbusy265:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB266:
    MULF 15.0 VGV_LEFT_FORWARD F.0
    MULF 15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer269
	DATA8 nos269
	DATA8 busy269
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer269 nos269
	JR_EQ8 0 nos269 motornotbusy269
  motorwaiting269:
	OUTPUT_TEST layer269 nos269 busy269
	JR_EQ8 busy269 0 motornotbusy269
	SLEEP
	JR motorwaiting269
  motornotbusy269:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB270:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer273
	DATA8 nos273
	DATA8 busy273
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer273 nos273
	JR_EQ8 0 nos273 motornotbusy273
  motorwaiting273:
	OUTPUT_TEST layer273 nos273 busy273
	JR_EQ8 busy273 0 motornotbusy273
	SLEEP
	JR motorwaiting273
  motornotbusy273:
    JR_NEQF VGV_CUBES_COUNT 2.0 else274_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB275:
  else274_1:
  endif274:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer278
	DATA8 nos278
	DATA8 busy278
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer278 nos278
	JR_EQ8 0 nos278 motornotbusy278
  motorwaiting278:
	OUTPUT_TEST layer278 nos278 busy278
	JR_EQ8 busy278 0 motornotbusy278
	SLEEP
	JR motorwaiting278
  motornotbusy278:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer280
	DATA8 nos280
	DATA8 busy280
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer280 nos280
	JR_EQ8 0 nos280 motornotbusy280
  motorwaiting280:
	OUTPUT_TEST layer280 nos280 busy280
	JR_EQ8 busy280 0 motornotbusy280
	SLEEP
	JR motorwaiting280
  motornotbusy280:
    MULF VGV_RIGHT_FORWARD -15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer282
	DATA8 nos282
	DATA8 busy282
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer282 nos282
	JR_EQ8 0 nos282 motornotbusy282
  motorwaiting282:
	OUTPUT_TEST layer282 nos282 busy282
	JR_EQ8 busy282 0 motornotbusy282
	SLEEP
	JR motorwaiting282
  motornotbusy282:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB283:
    MULF VGV_LEFT_FORWARD 15.0 F.0
    MULF VGV_RIGHT_FORWARD 15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer286
	DATA8 nos286
	DATA8 busy286
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer286 nos286
	JR_EQ8 0 nos286 motornotbusy286
  motorwaiting286:
	OUTPUT_TEST layer286 nos286 busy286
	JR_EQ8 busy286 0 motornotbusy286
	SLEEP
	JR motorwaiting286
  motornotbusy286:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_0:
SUB_F_TAKE_BOTH_0:
    MULF VGV_RIGHT_FORWARD 15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer288
	DATA8 nos288
	DATA8 busy288
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer288 nos288
	JR_EQ8 0 nos288 motornotbusy288
  motorwaiting288:
	OUTPUT_TEST layer288 nos288 busy288
	JR_EQ8 busy288 0 motornotbusy288
	SLEEP
	JR motorwaiting288
  motornotbusy288:
    MULF VGV_LEFT_FORWARD 15.0 F.0
    MULF VGV_RIGHT_FORWARD 15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer291
	DATA8 nos291
	DATA8 busy291
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer291 nos291
	JR_EQ8 0 nos291 motornotbusy291
  motorwaiting291:
	OUTPUT_TEST layer291 nos291 busy291
	JR_EQ8 busy291 0 motornotbusy291
	SLEEP
	JR motorwaiting291
  motornotbusy291:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB292:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer295
	DATA8 nos295
	DATA8 busy295
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer295 nos295
	JR_EQ8 0 nos295 motornotbusy295
  motorwaiting295:
	OUTPUT_TEST layer295 nos295 busy295
	JR_EQ8 busy295 0 motornotbusy295
	SLEEP
	JR motorwaiting295
  motornotbusy295:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB296:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer299
	DATA8 nos299
	DATA8 busy299
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer299 nos299
	JR_EQ8 0 nos299 motornotbusy299
  motorwaiting299:
	OUTPUT_TEST layer299 nos299 busy299
	JR_EQ8 busy299 0 motornotbusy299
	SLEEP
	JR motorwaiting299
  motornotbusy299:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer301
	DATA8 nos301
	DATA8 busy301
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer301 nos301
	JR_EQ8 0 nos301 motornotbusy301
  motorwaiting301:
	OUTPUT_TEST layer301 nos301 busy301
	JR_EQ8 busy301 0 motornotbusy301
	SLEEP
	JR motorwaiting301
  motornotbusy301:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer304
	DATA8 nos304
	DATA8 busy304
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer304 nos304
	JR_EQ8 0 nos304 motornotbusy304
  motorwaiting304:
	OUTPUT_TEST layer304 nos304 busy304
	JR_EQ8 busy304 0 motornotbusy304
	SLEEP
	JR motorwaiting304
  motornotbusy304:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB305:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer308
	DATA8 nos308
	DATA8 busy308
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer308 nos308
	JR_EQ8 0 nos308 motornotbusy308
  motorwaiting308:
	OUTPUT_TEST layer308 nos308 busy308
	JR_EQ8 busy308 0 motornotbusy308
	SLEEP
	JR motorwaiting308
  motornotbusy308:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer310
	DATA8 nos310
	DATA8 busy310
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer310 nos310
	JR_EQ8 0 nos310 motornotbusy310
  motorwaiting310:
	OUTPUT_TEST layer310 nos310 busy310
	JR_EQ8 busy310 0 motornotbusy310
	SLEEP
	JR motorwaiting310
  motornotbusy310:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer312
	DATA8 nos312
	DATA8 busy312
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer312 nos312
	JR_EQ8 0 nos312 motornotbusy312
  motorwaiting312:
	OUTPUT_TEST layer312 nos312 busy312
	JR_EQ8 busy312 0 motornotbusy312
	SLEEP
	JR motorwaiting312
  motornotbusy312:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer315
	DATA8 nos315
	DATA8 busy315
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer315 nos315
	JR_EQ8 0 nos315 motornotbusy315
  motorwaiting315:
	OUTPUT_TEST layer315 nos315 busy315
	JR_EQ8 busy315 0 motornotbusy315
	SLEEP
	JR motorwaiting315
  motornotbusy315:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_0:
SUB_F_TAKE_NEAR_DOUBLE_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer317
	DATA8 nos317
	DATA8 busy317
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer317 nos317
	JR_EQ8 0 nos317 motornotbusy317
  motorwaiting317:
	OUTPUT_TEST layer317 nos317 busy317
	JR_EQ8 busy317 0 motornotbusy317
	SLEEP
	JR motorwaiting317
  motornotbusy317:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer319
	DATA8 nos319
	DATA8 busy319
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer319 nos319
	JR_EQ8 0 nos319 motornotbusy319
  motorwaiting319:
	OUTPUT_TEST layer319 nos319 busy319
	JR_EQ8 busy319 0 motornotbusy319
	SLEEP
	JR motorwaiting319
  motornotbusy319:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer322
	DATA8 nos322
	DATA8 busy322
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer322 nos322
	JR_EQ8 0 nos322 motornotbusy322
  motorwaiting322:
	OUTPUT_TEST layer322 nos322 busy322
	JR_EQ8 busy322 0 motornotbusy322
	SLEEP
	JR motorwaiting322
  motornotbusy322:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB323:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer326
	DATA8 nos326
	DATA8 busy326
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer326 nos326
	JR_EQ8 0 nos326 motornotbusy326
  motorwaiting326:
	OUTPUT_TEST layer326 nos326 busy326
	JR_EQ8 busy326 0 motornotbusy326
	SLEEP
	JR motorwaiting326
  motornotbusy326:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB327:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer330
	DATA8 nos330
	DATA8 busy330
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer330 nos330
	JR_EQ8 0 nos330 motornotbusy330
  motorwaiting330:
	OUTPUT_TEST layer330 nos330 busy330
	JR_EQ8 busy330 0 motornotbusy330
	SLEEP
	JR motorwaiting330
  motornotbusy330:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB331:
RETSUB_F_TAKE_NEAR_DOUBLE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer333
	DATA8 nos333
	DATA8 busy333
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer333 nos333
	JR_EQ8 0 nos333 motornotbusy333
  motorwaiting333:
	OUTPUT_TEST layer333 nos333 busy333
	JR_EQ8 busy333 0 motornotbusy333
	SLEEP
	JR motorwaiting333
  motornotbusy333:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer335
	DATA8 nos335
	DATA8 busy335
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer335 nos335
	JR_EQ8 0 nos335 motornotbusy335
  motorwaiting335:
	OUTPUT_TEST layer335 nos335 busy335
	JR_EQ8 busy335 0 motornotbusy335
	SLEEP
	JR motorwaiting335
  motornotbusy335:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer338
	DATA8 nos338
	DATA8 busy338
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer338 nos338
	JR_EQ8 0 nos338 motornotbusy338
  motorwaiting338:
	OUTPUT_TEST layer338 nos338 busy338
	JR_EQ8 busy338 0 motornotbusy338
	SLEEP
	JR motorwaiting338
  motornotbusy338:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB339:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer342
	DATA8 nos342
	DATA8 busy342
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer342 nos342
	JR_EQ8 0 nos342 motornotbusy342
  motorwaiting342:
	OUTPUT_TEST layer342 nos342 busy342
	JR_EQ8 busy342 0 motornotbusy342
	SLEEP
	JR motorwaiting342
  motornotbusy342:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB343:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer346
	DATA8 nos346
	DATA8 busy346
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer346 nos346
	JR_EQ8 0 nos346 motornotbusy346
  motorwaiting346:
	OUTPUT_TEST layer346 nos346 busy346
	JR_EQ8 busy346 0 motornotbusy346
	SLEEP
	JR motorwaiting346
  motornotbusy346:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB347:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
SUB_F_FINISH_AFTER_NEAR_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds351
	MOVEF_32 1500.0 milliseconds351
	DATA32 timer351
	TIMER_WAIT milliseconds351 timer351
	TIMER_READY timer351
    WRITE32 ENDSUB_F_STOP_0:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB352:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer354
	DATA8 nos354
	DATA8 busy354
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer354 nos354
	JR_EQ8 0 nos354 motornotbusy354
  motorwaiting354:
	OUTPUT_TEST layer354 nos354 busy354
	JR_EQ8 busy354 0 motornotbusy354
	SLEEP
	JR motorwaiting354
  motornotbusy354:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer356
	DATA8 nos356
	DATA8 busy356
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer356 nos356
	JR_EQ8 0 nos356 motornotbusy356
  motorwaiting356:
	OUTPUT_TEST layer356 nos356 busy356
	JR_EQ8 busy356 0 motornotbusy356
	SLEEP
	JR motorwaiting356
  motornotbusy356:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds360
	MOVEF_32 1000.0 milliseconds360
	DATA32 timer360
	TIMER_WAIT milliseconds360 timer360
	TIMER_READY timer360
    WRITE32 ENDSUB_F_STOP_0:CALLSUB361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB361:
RETSUB_F_FINISH_AFTER_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_0:
SUB_F_GO_FORWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_0:
SUB_F_GO_BACKWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF -20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF -20.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_BACKWARD_0:
SUB_F_MOVE_FORWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while388:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile388
  whilebody388:
    WRITE32 ENDSUB_F_GO_FORWARD_0:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_0
CALLSUB390:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody388
  endwhile388:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB392 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB392:
RETSUB_F_MOVE_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_0:
SUB_F_MOVE_BACKWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while395:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_LTEQF F.0 F.1 endwhile395
  whilebody395:
    WRITE32 ENDSUB_F_GO_BACKWARD_0:CALLSUB398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_0
CALLSUB398:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_GTF F.0 F.1 whilebody395
  endwhile395:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB401:
RETSUB_F_MOVE_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_0:
SUB_F_MAIN_0:
    STRINGS DUPLICATE 'False' VGV_START_FROM_RIGHT
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else402_1
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 53.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds407
	MOVEF_32 2000.0 milliseconds407
	DATA32 timer407
	TIMER_WAIT milliseconds407 timer407
	TIMER_READY timer407
    WRITE32 ENDSUB_F_STOP_0:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB408:
    MULF VGV_RIGHT_FORWARD -30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds411
	MOVEF_32 1000.0 milliseconds411
	DATA32 timer411
	TIMER_WAIT milliseconds411 timer411
	TIMER_READY timer411
    WRITE32 ENDSUB_F_STOP_0:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB412:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB413:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 200.0 0.0 'True' 

	DATA8 layer415
	DATA8 nos415
	DATA8 busy415
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer415 nos415
	JR_EQ8 0 nos415 motornotbusy415
  motorwaiting415:
	OUTPUT_TEST layer415 nos415 busy415
	JR_EQ8 busy415 0 motornotbusy415
	SLEEP
	JR motorwaiting415
  motornotbusy415:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB416:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer418
	DATA8 nos418
	DATA8 busy418
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer418 nos418
	JR_EQ8 0 nos418 motornotbusy418
  motorwaiting418:
	OUTPUT_TEST layer418 nos418 busy418
	JR_EQ8 busy418 0 motornotbusy418
	SLEEP
	JR motorwaiting418
  motornotbusy418:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB419:
  else402_1:
  endif402:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB420:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 80.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    MOVEF_F 1200.0 VGV_DEG
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else425_1
    MOVEF_F 1100.0 VGV_DEG
  else425_1:
  endif425:
  while427:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile427
  whilebody427:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody427
  endwhile427:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 55.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while433:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile433
  whilebody433:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody433
  endwhile433:
  while436:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile436
  whilebody436:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody436
  endwhile436:
    WRITE32 ENDSUB_F_STOP_RIGHT_0:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_RIGHT_0
CALLSUB439:
    MOVEF_F 105.0 VGV_A
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB440:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 290.0 0.0 'True' 

	DATA8 layer442
	DATA8 nos442
	DATA8 busy442
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer442 nos442
	JR_EQ8 0 nos442 motornotbusy442
  motorwaiting442:
	OUTPUT_TEST layer442 nos442 busy442
	JR_EQ8 busy442 0 motornotbusy442
	SLEEP
	JR motorwaiting442
  motornotbusy442:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB443:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 240.0 0.0 'True' 

	DATA8 layer445
	DATA8 nos445
	DATA8 busy445
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer445 nos445
	JR_EQ8 0 nos445 motornotbusy445
  motorwaiting445:
	OUTPUT_TEST layer445 nos445 busy445
	JR_EQ8 busy445 0 motornotbusy445
	SLEEP
	JR motorwaiting445
  motornotbusy445:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while447:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile447
  whilebody447:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB449:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody447
  endwhile447:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB451:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB452:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    MOVEF_F 500.0 VGV_C
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB454:
    JR_LTEQF VGV_B 80.0 else455_1
    DATA8 layer456
	DATA8 no456
	DATA8 mode8456
	
	MOVEF_8 VGV_RIGHT_SENSOR no456
	SUB8 no456 1 no456
	DIV8 no456 4 layer456
	MATH MOD8 no456 4 no456

	MOVEF_8 2.0 mode8456
	
	INPUT_DEVICE READY_RAW layer456 no456 0 mode8456 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer458
	DATA8 no458
	DATA8 mode8458
	
	MOVEF_8 VGV_RIGHT_SENSOR no458
	SUB8 no458 1 no458
	DIV8 no458 4 layer458
	MATH MOD8 no458 4 no458

	MOVEF_8 1.0 mode8458
	
	INPUT_DEVICE READY_RAW layer458 no458 0 mode8458 0
    JR_LTEQF VGV_G 100.0 else459_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB460 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB460:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif459
  else459_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB461:
    STRINGS DUPLICATE 'True' VGV_BROWN
    MOVEF_F 95.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB462:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB463:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB464:
  else459_2:
  endif459:
    JR endif455
  else455_1:
    JR_LTEQF VGV_B 5.0 else455_2
    DATA8 layer465
	DATA8 no465
	DATA8 mode8465
	
	MOVEF_8 VGV_RIGHT_SENSOR no465
	SUB8 no465 1 no465
	DIV8 no465 4 layer465
	MATH MOD8 no465 4 no465

	MOVEF_8 4.0 mode8465
	
	INPUT_DEVICE READY_RAW layer465 no465 0 mode8465 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    DATA8 layer467
	DATA8 no467
	DATA8 mode8467
	
	MOVEF_8 VGV_RIGHT_SENSOR no467
	SUB8 no467 1 no467
	DIV8 no467 4 layer467
	MATH MOD8 no467 4 no467

	MOVEF_8 1.0 mode8467
	
	INPUT_DEVICE READY_RAW layer467 no467 0 mode8467 0
    STRINGS DUPLICATE 'None' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB468 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB468:
    JR_LTEQF VGV_W 50.0 else469_1
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB470:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB471:
  else469_1:
  endif469:
  else455_2:
  endif455:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB472:
    DATA8 layer473
	DATA8 no473
	DATA8 mode8473
	
	MOVEF_8 VGV_LINE_SENSOR no473
	SUB8 no473 1 no473
	DIV8 no473 4 layer473
	MATH MOD8 no473 4 no473

	MOVEF_8 2.0 mode8473
	
	INPUT_DEVICE READY_RAW layer473 no473 0 mode8473 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    WRITE32 ENDSUB_F_STOP_0:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB475:
  while476:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C or477
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 5.0 endwhile476
  or477:
  whilebody476:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB480:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody476
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 5.0 whilebody476
  endwhile476:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB483:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB484:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB485:
    MOVEF_F 350.0 VGV_C
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else486_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB488:
    MOVEF_F 90.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB489:
    ADDF VGV_C 110.0 VGV_C
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB491:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB493:
    JR_LTEQF VGV_B 80.0 else494_1
    DATA8 layer495
	DATA8 no495
	DATA8 mode8495
	
	MOVEF_8 VGV_RIGHT_SENSOR no495
	SUB8 no495 1 no495
	DIV8 no495 4 layer495
	MATH MOD8 no495 4 no495

	MOVEF_8 2.0 mode8495
	
	INPUT_DEVICE READY_RAW layer495 no495 0 mode8495 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer497
	DATA8 no497
	DATA8 mode8497
	
	MOVEF_8 VGV_RIGHT_SENSOR no497
	SUB8 no497 1 no497
	DIV8 no497 4 layer497
	MATH MOD8 no497 4 no497

	MOVEF_8 1.0 mode8497
	
	INPUT_DEVICE READY_RAW layer497 no497 0 mode8497 0
    JR_LTEQF VGV_G 100.0 else498_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB499 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB499:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif498
  else498_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB500:
    STRINGS DUPLICATE 'True' VGV_BROWN
    MOVEF_F 40.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB501:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB502:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB503:
  else498_2:
  endif498:
    JR endif494
  else494_1:
    JR_LTEQF VGV_B 12.0 else494_2
    DATA8 layer504
	DATA8 no504
	DATA8 mode8504
	
	MOVEF_8 VGV_RIGHT_SENSOR no504
	SUB8 no504 1 no504
	DIV8 no504 4 layer504
	MATH MOD8 no504 4 no504

	MOVEF_8 4.0 mode8504
	
	INPUT_DEVICE READY_RAW layer504 no504 0 mode8504 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB506:
    DATA8 layer507
	DATA8 no507
	DATA8 mode8507
	
	MOVEF_8 VGV_RIGHT_SENSOR no507
	SUB8 no507 1 no507
	DIV8 no507 4 layer507
	MATH MOD8 no507 4 no507

	MOVEF_8 1.0 mode8507
	
	INPUT_DEVICE READY_RAW layer507 no507 0 mode8507 0
    JR_LTEQF VGV_W 55.0 else508_1
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB509:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB510:
  else508_1:
  endif508:
  else494_2:
  endif494:
  else486_1:
  endif486:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB511:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while513:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile513
  whilebody513:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB515:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody513
  endwhile513:
    MOVEF_F 1.0 VGV_P_U
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else517_1
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    JR endif517
  else517_1:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  else517_2:
  endif517:
    DATA32 milliseconds525
	MOVEF_32 1000.0 milliseconds525
	DATA32 timer525
	TIMER_WAIT milliseconds525 timer525
	TIMER_READY timer525
    WRITE32 ENDSUB_F_STOP_0:CALLSUB526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB526:
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_LEFT
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB527:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB529:
    JR_LTEQF VGV_B 85.0 else530_1
    DATA8 layer531
	DATA8 no531
	DATA8 mode8531
	
	MOVEF_8 VGV_RIGHT_SENSOR no531
	SUB8 no531 1 no531
	DIV8 no531 4 layer531
	MATH MOD8 no531 4 no531

	MOVEF_8 2.0 mode8531
	
	INPUT_DEVICE READY_RAW layer531 no531 0 mode8531 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB532:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer534
	DATA8 no534
	DATA8 mode8534
	
	MOVEF_8 VGV_RIGHT_SENSOR no534
	SUB8 no534 1 no534
	DIV8 no534 4 layer534
	MATH MOD8 no534 4 no534

	MOVEF_8 1.0 mode8534
	
	INPUT_DEVICE READY_RAW layer534 no534 0 mode8534 0
    JR_LTEQF VGV_G 100.0 else535_1
    STRINGS DUPLICATE 'R: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB536:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif535
  else535_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB537:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB538:
  else535_2:
  endif535:
    JR endif530
  else530_1:
    JR_LTEQF VGV_B 10.0 else530_2
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB539:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_RIGHT
  else530_2:
  endif530:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB540 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB540:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else541_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB543:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB545:
    JR_LTEQF VGV_B 120.0 else546_1
    DATA8 layer547
	DATA8 no547
	DATA8 mode8547
	
	MOVEF_8 VGV_LEFT_SENSOR no547
	SUB8 no547 1 no547
	DIV8 no547 4 layer547
	MATH MOD8 no547 4 no547

	MOVEF_8 2.0 mode8547
	
	INPUT_DEVICE READY_RAW layer547 no547 0 mode8547 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB548:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer550
	DATA8 no550
	DATA8 mode8550
	
	MOVEF_8 VGV_LEFT_SENSOR no550
	SUB8 no550 1 no550
	DIV8 no550 4 layer550
	MATH MOD8 no550 4 no550

	MOVEF_8 1.0 mode8550
	
	INPUT_DEVICE READY_RAW layer550 no550 0 mode8550 0
    JR_LTEQF VGV_G 100.0 else551_1
    STRINGS DUPLICATE 'L: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB552 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB552:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif551
  else551_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB553 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB553:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB554:
  else551_2:
  endif551:
    JR endif546
  else546_1:
    DATA8 layer555
	DATA8 no555
	DATA8 mode8555
	
	MOVEF_8 VGV_LEFT_SENSOR no555
	SUB8 no555 1 no555
	DIV8 no555 4 layer555
	MATH MOD8 no555 4 no555

	MOVEF_8 2.0 mode8555
	
	INPUT_DEVICE READY_RAW layer555 no555 0 mode8555 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer557
	DATA8 no557
	DATA8 mode8557
	
	MOVEF_8 VGV_LEFT_SENSOR no557
	SUB8 no557 1 no557
	DIV8 no557 4 layer557
	MATH MOD8 no557 4 no557

	MOVEF_8 1.0 mode8557
	
	INPUT_DEVICE READY_RAW layer557 no557 0 mode8557 0
    JR_GTF VGV_G 25.0 or559
    JR_GTEQF VGV_G 18.0 else558_1
  or559:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB560:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_LEFT
  else558_1:
  endif558:
  else546_2:
  endif546:
  else541_1:
  endif541:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB561 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB561:
    MOVEF_F 140.0 VGV_CHEM_BACK
    MOVEF_F 140.0 VGV_NO_BACK
    CALL EQ_STRING VGV_TAKE_RED_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else562_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for565:
    JR_GTF VGV_I 20.0 endfor565
  forbody565:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds571
	MOVEF_32 30.0 milliseconds571
	DATA32 timer571
	TIMER_WAIT milliseconds571 timer571
	TIMER_READY timer571
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody565
  endfor565:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer577
	DATA8 nos577
	DATA8 busy577
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer577 nos577
	JR_EQ8 0 nos577 motornotbusy577
  motorwaiting577:
	OUTPUT_TEST layer577 nos577 busy577
	JR_EQ8 busy577 0 motornotbusy577
	SLEEP
	JR motorwaiting577
  motornotbusy577:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB578:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer580
	DATA8 nos580
	DATA8 busy580
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer580 nos580
	JR_EQ8 0 nos580 motornotbusy580
  motorwaiting580:
	OUTPUT_TEST layer580 nos580 busy580
	JR_EQ8 busy580 0 motornotbusy580
	SLEEP
	JR motorwaiting580
  motornotbusy580:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB581:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer582
	DATA8 nos582
	DATA8 busy582
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer582 nos582
	JR_EQ8 0 nos582 motornotbusy582
  motorwaiting582:
	OUTPUT_TEST layer582 nos582 busy582
	JR_EQ8 busy582 0 motornotbusy582
	SLEEP
	JR motorwaiting582
  motornotbusy582:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for584:
    JR_GTF VGV_I 20.0 endfor584
  forbody584:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds588
	MOVEF_32 20.0 milliseconds588
	DATA32 timer588
	TIMER_WAIT milliseconds588 timer588
	TIMER_READY timer588
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody584
  endfor584:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer594
	DATA8 nos594
	DATA8 busy594
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer594 nos594
	JR_EQ8 0 nos594 motornotbusy594
  motorwaiting594:
	OUTPUT_TEST layer594 nos594 busy594
	JR_EQ8 busy594 0 motornotbusy594
	SLEEP
	JR motorwaiting594
  motornotbusy594:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB595:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer596
	DATA8 nos596
	DATA8 busy596
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer596 nos596
	JR_EQ8 0 nos596 motornotbusy596
  motorwaiting596:
	OUTPUT_TEST layer596 nos596 busy596
	JR_EQ8 busy596 0 motornotbusy596
	SLEEP
	JR motorwaiting596
  motornotbusy596:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB597:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for599:
    JR_GTF VGV_I 20.0 endfor599
  forbody599:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds605
	MOVEF_32 20.0 milliseconds605
	DATA32 timer605
	TIMER_WAIT milliseconds605 timer605
	TIMER_READY timer605
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody599
  endfor599:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer611
	DATA8 nos611
	DATA8 busy611
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer611 nos611
	JR_EQ8 0 nos611 motornotbusy611
  motorwaiting611:
	OUTPUT_TEST layer611 nos611 busy611
	JR_EQ8 busy611 0 motornotbusy611
	SLEEP
	JR motorwaiting611
  motornotbusy611:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB612:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB613:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer615
	DATA8 nos615
	DATA8 busy615
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer615 nos615
	JR_EQ8 0 nos615 motornotbusy615
  motorwaiting615:
	OUTPUT_TEST layer615 nos615 busy615
	JR_EQ8 busy615 0 motornotbusy615
	SLEEP
	JR motorwaiting615
  motornotbusy615:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB616:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds620
	MOVEF_32 1500.0 milliseconds620
	DATA32 timer620
	TIMER_WAIT milliseconds620 timer620
	TIMER_READY timer620
    WRITE32 ENDSUB_F_STOP_0:CALLSUB621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB621:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB622:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for624:
    JR_GTF VGV_I 20.0 endfor624
  forbody624:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds630
	MOVEF_32 20.0 milliseconds630
	DATA32 timer630
	TIMER_WAIT milliseconds630 timer630
	TIMER_READY timer630
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody624
  endfor624:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer636
	DATA8 nos636
	DATA8 busy636
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer636 nos636
	JR_EQ8 0 nos636 motornotbusy636
  motorwaiting636:
	OUTPUT_TEST layer636 nos636 busy636
	JR_EQ8 busy636 0 motornotbusy636
	SLEEP
	JR motorwaiting636
  motornotbusy636:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB637 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB637:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB638 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB638:
    JR endif562
  else562_1:
    CALL EQ_STRING VGV_TAKE_RED_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else562_2
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for641:
    JR_GTF VGV_I 20.0 endfor641
  forbody641:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds647
	MOVEF_32 30.0 milliseconds647
	DATA32 timer647
	TIMER_WAIT milliseconds647 timer647
	TIMER_READY timer647
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody641
  endfor641:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer653
	DATA8 nos653
	DATA8 busy653
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer653 nos653
	JR_EQ8 0 nos653 motornotbusy653
  motorwaiting653:
	OUTPUT_TEST layer653 nos653 busy653
	JR_EQ8 busy653 0 motornotbusy653
	SLEEP
	JR motorwaiting653
  motornotbusy653:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB654:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer656
	DATA8 nos656
	DATA8 busy656
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer656 nos656
	JR_EQ8 0 nos656 motornotbusy656
  motorwaiting656:
	OUTPUT_TEST layer656 nos656 busy656
	JR_EQ8 busy656 0 motornotbusy656
	SLEEP
	JR motorwaiting656
  motornotbusy656:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB657:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer658
	DATA8 nos658
	DATA8 busy658
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer658 nos658
	JR_EQ8 0 nos658 motornotbusy658
  motorwaiting658:
	OUTPUT_TEST layer658 nos658 busy658
	JR_EQ8 busy658 0 motornotbusy658
	SLEEP
	JR motorwaiting658
  motornotbusy658:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for660:
    JR_GTF VGV_I 20.0 endfor660
  forbody660:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds664
	MOVEF_32 20.0 milliseconds664
	DATA32 timer664
	TIMER_WAIT milliseconds664 timer664
	TIMER_READY timer664
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody660
  endfor660:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer670
	DATA8 nos670
	DATA8 busy670
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer670 nos670
	JR_EQ8 0 nos670 motornotbusy670
  motorwaiting670:
	OUTPUT_TEST layer670 nos670 busy670
	JR_EQ8 busy670 0 motornotbusy670
	SLEEP
	JR motorwaiting670
  motornotbusy670:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB671 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB671:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer672
	DATA8 nos672
	DATA8 busy672
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer672 nos672
	JR_EQ8 0 nos672 motornotbusy672
  motorwaiting672:
	OUTPUT_TEST layer672 nos672 busy672
	JR_EQ8 busy672 0 motornotbusy672
	SLEEP
	JR motorwaiting672
  motornotbusy672:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB673 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB673:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for675:
    JR_GTF VGV_I 20.0 endfor675
  forbody675:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds681
	MOVEF_32 20.0 milliseconds681
	DATA32 timer681
	TIMER_WAIT milliseconds681 timer681
	TIMER_READY timer681
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody675
  endfor675:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer687
	DATA8 nos687
	DATA8 busy687
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer687 nos687
	JR_EQ8 0 nos687 motornotbusy687
  motorwaiting687:
	OUTPUT_TEST layer687 nos687 busy687
	JR_EQ8 busy687 0 motornotbusy687
	SLEEP
	JR motorwaiting687
  motornotbusy687:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB688:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB689:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer691
	DATA8 nos691
	DATA8 busy691
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer691 nos691
	JR_EQ8 0 nos691 motornotbusy691
  motorwaiting691:
	OUTPUT_TEST layer691 nos691 busy691
	JR_EQ8 busy691 0 motornotbusy691
	SLEEP
	JR motorwaiting691
  motornotbusy691:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB692 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB692:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds696
	MOVEF_32 1000.0 milliseconds696
	DATA32 timer696
	TIMER_WAIT milliseconds696 timer696
	TIMER_READY timer696
    WRITE32 ENDSUB_F_STOP_0:CALLSUB697 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB697:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB698:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for700:
    JR_GTF VGV_I 20.0 endfor700
  forbody700:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds706
	MOVEF_32 20.0 milliseconds706
	DATA32 timer706
	TIMER_WAIT milliseconds706 timer706
	TIMER_READY timer706
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody700
  endfor700:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer712
	DATA8 nos712
	DATA8 busy712
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer712 nos712
	JR_EQ8 0 nos712 motornotbusy712
  motorwaiting712:
	OUTPUT_TEST layer712 nos712 busy712
	JR_EQ8 busy712 0 motornotbusy712
	SLEEP
	JR motorwaiting712
  motornotbusy712:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB713:
    JR endif562
  else562_2:
    MOVEF_F VGV_NO_BACK VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB714:
  else562_3:
  endif562:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer717
	DATA8 nos717
	DATA8 busy717
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer717 nos717
	JR_EQ8 0 nos717 motornotbusy717
  motorwaiting717:
	OUTPUT_TEST layer717 nos717 busy717
	JR_EQ8 busy717 0 motornotbusy717
	SLEEP
	JR motorwaiting717
  motornotbusy717:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB718:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB719:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds723
	MOVEF_32 700.0 milliseconds723
	DATA32 timer723
	TIMER_WAIT milliseconds723 timer723
	TIMER_READY timer723
    WRITE32 ENDSUB_F_STOP_0:CALLSUB724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB724:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    ADDF F.0 5.0 VGV_A
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 430.0 'True'

	DATA8 layer729
	DATA8 nos729
	DATA8 busy729
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer729 nos729
	JR_EQ8 0 nos729 motornotbusy729
  motorwaiting729:
	OUTPUT_TEST layer729 nos729 busy729
	JR_EQ8 busy729 0 motornotbusy729
	SLEEP
	JR motorwaiting729
  motornotbusy729:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while731:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile731
  whilebody731:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB733:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody731
  endwhile731:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA8 layer739
	DATA8 no739
	DATA8 mode8739
	
	MOVEF_8 VGV_LINE_SENSOR no739
	SUB8 no739 1 no739
	DIV8 no739 4 layer739
	MATH MOD8 no739 4 no739

	MOVEF_8 0.0 mode8739
	
	INPUT_DEVICE READY_RAW layer739 no739 0 mode8739 0
  while740:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 or741
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 220.0 endwhile740
  or741:
  whilebody740:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 whilebody740
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 220.0 whilebody740
  endwhile740:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB746:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB747 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB747:
    MOVEF_F 95.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB748:
    DATA8 layer749
	DATA8 no749
	DATA8 mode8749
	
	MOVEF_8 VGV_LINE_SENSOR no749
	SUB8 no749 1 no749
	DIV8 no749 4 layer749
	MATH MOD8 no749 4 no749

	MOVEF_8 0.0 mode8749
	
	INPUT_DEVICE READY_RAW layer749 no749 0 mode8749 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB750 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB750:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB752 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB752:
    JR_LTEQF VGV_B 55.0 else753_1
    DATA8 layer754
	DATA8 no754
	DATA8 mode8754
	
	MOVEF_8 VGV_LEFT_SENSOR no754
	SUB8 no754 1 no754
	DIV8 no754 4 layer754
	MATH MOD8 no754 4 no754

	MOVEF_8 2.0 mode8754
	
	INPUT_DEVICE READY_RAW layer754 no754 0 mode8754 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB755 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB755:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer757
	DATA8 no757
	DATA8 mode8757
	
	MOVEF_8 VGV_LEFT_SENSOR no757
	SUB8 no757 1 no757
	DIV8 no757 4 layer757
	MATH MOD8 no757 4 no757

	MOVEF_8 1.0 mode8757
	
	INPUT_DEVICE READY_RAW layer757 no757 0 mode8757 0
    JR_LTEQF VGV_G 100.0 else758_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB759:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif758
  else758_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB760:
    MOVEF_F 100.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB761:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB762:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB763 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB763:
  else758_2:
  endif758:
    JR endif753
  else753_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else765_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB766 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB766:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB767 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB767:
  else765_1:
  endif765:
  else753_2:
  endif753:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB768 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB768:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB769 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB769:
    SUBF VGV_A 5.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while772:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 250.0 endwhile772
  whilebody772:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB774:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 250.0 whilebody772
  endwhile772:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds779
	MOVEF_32 2000.0 milliseconds779
	DATA32 timer779
	TIMER_WAIT milliseconds779 timer779
	TIMER_READY timer779
    WRITE32 ENDSUB_F_STOP_0:CALLSUB780 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB780:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB781 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB781:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB783:
    JR_LTEQF VGV_B 55.0 else784_1
    DATA8 layer785
	DATA8 no785
	DATA8 mode8785
	
	MOVEF_8 VGV_LEFT_SENSOR no785
	SUB8 no785 1 no785
	DIV8 no785 4 layer785
	MATH MOD8 no785 4 no785

	MOVEF_8 2.0 mode8785
	
	INPUT_DEVICE READY_RAW layer785 no785 0 mode8785 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB786 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB786:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer788
	DATA8 no788
	DATA8 mode8788
	
	MOVEF_8 VGV_LEFT_SENSOR no788
	SUB8 no788 1 no788
	DIV8 no788 4 layer788
	MATH MOD8 no788 4 no788

	MOVEF_8 1.0 mode8788
	
	INPUT_DEVICE READY_RAW layer788 no788 0 mode8788 0
    JR_LTEQF VGV_G 70.0 else789_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB790:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif789
  else789_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB791 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB791:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB792:
  else789_2:
  endif789:
    JR endif784
  else784_1:
    JR_LTEQF VGV_B 15.0 else784_2
    DATA8 layer793
	DATA8 no793
	DATA8 mode8793
	
	MOVEF_8 VGV_LEFT_SENSOR no793
	SUB8 no793 1 no793
	DIV8 no793 4 layer793
	MATH MOD8 no793 4 no793

	MOVEF_8 4.0 mode8793
	
	INPUT_DEVICE READY_RAW layer793 no793 0 mode8793 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB794:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_W
    DATA8 layer796
	DATA8 no796
	DATA8 mode8796
	
	MOVEF_8 VGV_LEFT_SENSOR no796
	SUB8 no796 1 no796
	DIV8 no796 4 layer796
	MATH MOD8 no796 4 no796

	MOVEF_8 1.0 mode8796
	
	INPUT_DEVICE READY_RAW layer796 no796 0 mode8796 0
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB797 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB797:
    JR_LTEQF VGV_W 60.0 else798_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB799:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB800:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for802:
    JR_GTF VGV_I 20.0 endfor802
  forbody802:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds806
	MOVEF_32 30.0 milliseconds806
	DATA32 timer806
	TIMER_WAIT milliseconds806 timer806
	TIMER_READY timer806
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody802
  endfor802:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer812
	DATA8 nos812
	DATA8 busy812
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer812 nos812
	JR_EQ8 0 nos812 motornotbusy812
  motorwaiting812:
	OUTPUT_TEST layer812 nos812 busy812
	JR_EQ8 busy812 0 motornotbusy812
	SLEEP
	JR motorwaiting812
  motornotbusy812:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB813 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB813:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer814
	DATA8 nos814
	DATA8 busy814
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer814 nos814
	JR_EQ8 0 nos814 motornotbusy814
  motorwaiting814:
	OUTPUT_TEST layer814 nos814 busy814
	JR_EQ8 busy814 0 motornotbusy814
	SLEEP
	JR motorwaiting814
  motornotbusy814:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer817
	DATA8 nos817
	DATA8 busy817
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer817 nos817
	JR_EQ8 0 nos817 motornotbusy817
  motorwaiting817:
	OUTPUT_TEST layer817 nos817 busy817
	JR_EQ8 busy817 0 motornotbusy817
	SLEEP
	JR motorwaiting817
  motornotbusy817:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB818 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB818:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer819
	DATA8 nos819
	DATA8 busy819
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer819 nos819
	JR_EQ8 0 nos819 motornotbusy819
  motorwaiting819:
	OUTPUT_TEST layer819 nos819 busy819
	JR_EQ8 busy819 0 motornotbusy819
	SLEEP
	JR motorwaiting819
  motornotbusy819:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB820 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB820:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer823
	DATA8 nos823
	DATA8 busy823
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer823 nos823
	JR_EQ8 0 nos823 motornotbusy823
  motorwaiting823:
	OUTPUT_TEST layer823 nos823 busy823
	JR_EQ8 busy823 0 motornotbusy823
	SLEEP
	JR motorwaiting823
  motornotbusy823:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB824 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB824:
    DATA32 milliseconds825
	MOVEF_32 1000.0 milliseconds825
	DATA32 timer825
	TIMER_WAIT milliseconds825 timer825
	TIMER_READY timer825
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for827:
    JR_GTF VGV_I 20.0 endfor827
  forbody827:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds830
	MOVEF_32 30.0 milliseconds830
	DATA32 timer830
	TIMER_WAIT milliseconds830 timer830
	TIMER_READY timer830
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody827
  endfor827:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer836
	DATA8 nos836
	DATA8 busy836
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer836 nos836
	JR_EQ8 0 nos836 motornotbusy836
  motorwaiting836:
	OUTPUT_TEST layer836 nos836 busy836
	JR_EQ8 busy836 0 motornotbusy836
	SLEEP
	JR motorwaiting836
  motornotbusy836:
    MULF 30.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds839
	MOVEF_32 1000.0 milliseconds839
	DATA32 timer839
	TIMER_WAIT milliseconds839 timer839
	TIMER_READY timer839
    WRITE32 ENDSUB_F_STOP_0:CALLSUB840 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB840:
  else798_1:
  endif798:
  else784_2:
  endif784:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB841 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB841:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer843
	DATA8 nos843
	DATA8 busy843
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer843 nos843
	JR_EQ8 0 nos843 motornotbusy843
  motorwaiting843:
	OUTPUT_TEST layer843 nos843 busy843
	JR_EQ8 busy843 0 motornotbusy843
	SLEEP
	JR motorwaiting843
  motornotbusy843:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 104.0 0.0 'True' 

	DATA8 layer845
	DATA8 nos845
	DATA8 busy845
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer845 nos845
	JR_EQ8 0 nos845 motornotbusy845
  motorwaiting845:
	OUTPUT_TEST layer845 nos845 busy845
	JR_EQ8 busy845 0 motornotbusy845
	SLEEP
	JR motorwaiting845
  motornotbusy845:
    DATA8 layer846
	DATA8 no846
	DATA8 mode8846
	
	MOVEF_8 VGV_LINE_SENSOR no846
	SUB8 no846 1 no846
	DIV8 no846 4 layer846
	MATH MOD8 no846 4 no846

	MOVEF_8 2.0 mode8846
	
	INPUT_DEVICE READY_RAW layer846 no846 0 mode8846 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 105.0 VGV_A
  while848:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 100.0 endwhile848
  whilebody848:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB850 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB850:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 100.0 whilebody848
  endwhile848:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while855:
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 2.0 endwhile855
  whilebody855:
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 2.0 whilebody855
  endwhile855:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB858 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB858:
    DATA8 layer859
	DATA8 no859
	DATA8 mode8859
	
	MOVEF_8 VGV_LINE_SENSOR no859
	SUB8 no859 1 no859
	DIV8 no859 4 layer859
	MATH MOD8 no859 4 no859

	MOVEF_8 0.0 mode8859
	
	INPUT_DEVICE READY_RAW layer859 no859 0 mode8859 0
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else860_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB862 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB862:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB863 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB863:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB864 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB864:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else866_1
    DATA8 layer867
	DATA8 no867
	DATA8 mode8867
	
	MOVEF_8 VGV_LEFT_SENSOR no867
	SUB8 no867 1 no867
	DIV8 no867 4 layer867
	MATH MOD8 no867 4 no867

	MOVEF_8 2.0 mode8867
	
	INPUT_DEVICE READY_RAW layer867 no867 0 mode8867 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB868 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB868:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer870
	DATA8 no870
	DATA8 mode8870
	
	MOVEF_8 VGV_LEFT_SENSOR no870
	SUB8 no870 1 no870
	DIV8 no870 4 layer870
	MATH MOD8 no870 4 no870

	MOVEF_8 1.0 mode8870
	
	INPUT_DEVICE READY_RAW layer870 no870 0 mode8870 0
    JR_LTEQF VGV_G 100.0 else871_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB872 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB872:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif871
  else871_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB873 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB873:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB874 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB874:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB875 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB875:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB876 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB876:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB877 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB877:
  else871_2:
  endif871:
    JR endif866
  else866_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else879_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB880 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB880:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB881 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB881:
  else879_1:
  endif879:
  else866_2:
  endif866:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB882 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB882:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB883 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB883:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB884 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB884:
    JR endif860
  else860_1:
    MOVEF_F 55.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB885 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB885:
  else860_2:
  endif860:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB886 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB886:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else888_1
    DATA8 layer889
	DATA8 no889
	DATA8 mode8889
	
	MOVEF_8 VGV_LEFT_SENSOR no889
	SUB8 no889 1 no889
	DIV8 no889 4 layer889
	MATH MOD8 no889 4 no889

	MOVEF_8 2.0 mode8889
	
	INPUT_DEVICE READY_RAW layer889 no889 0 mode8889 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB890 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB890:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer892
	DATA8 no892
	DATA8 mode8892
	
	MOVEF_8 VGV_LEFT_SENSOR no892
	SUB8 no892 1 no892
	DIV8 no892 4 layer892
	MATH MOD8 no892 4 no892

	MOVEF_8 1.0 mode8892
	
	INPUT_DEVICE READY_RAW layer892 no892 0 mode8892 0
    JR_LTEQF VGV_G 70.0 else893_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB894 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB894:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif893
  else893_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB895 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB895:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB896 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB896:
  else893_2:
  endif893:
    JR endif888
  else888_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else898_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB899 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB899:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB900 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB900:
  else898_1:
  endif898:
  else888_2:
  endif888:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB901 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB901:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer904
	DATA8 nos904
	DATA8 busy904
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer904 nos904
	JR_EQ8 0 nos904 motornotbusy904
  motorwaiting904:
	OUTPUT_TEST layer904 nos904 busy904
	JR_EQ8 busy904 0 motornotbusy904
	SLEEP
	JR motorwaiting904
  motornotbusy904:
    ADDF VGV_A 7.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while907:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 310.0 endwhile907
  whilebody907:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB909 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB909:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 310.0 whilebody907
  endwhile907:
    MOVEF_F 110.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB911 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB911:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else912_1
    DATA8 layer914
	DATA8 no914
	DATA8 mode8914
	
	MOVEF_8 VGV_LEFT_SENSOR no914
	SUB8 no914 1 no914
	DIV8 no914 4 layer914
	MATH MOD8 no914 4 no914

	MOVEF_8 1.0 mode8914
	
	INPUT_DEVICE READY_RAW layer914 no914 0 mode8914 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB915 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB915:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB917 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB917:
    JR_LTEQF VGV_B 55.0 else918_1
    DATA8 layer919
	DATA8 no919
	DATA8 mode8919
	
	MOVEF_8 VGV_LEFT_SENSOR no919
	SUB8 no919 1 no919
	DIV8 no919 4 layer919
	MATH MOD8 no919 4 no919

	MOVEF_8 2.0 mode8919
	
	INPUT_DEVICE READY_RAW layer919 no919 0 mode8919 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB920 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB920:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer922
	DATA8 no922
	DATA8 mode8922
	
	MOVEF_8 VGV_LEFT_SENSOR no922
	SUB8 no922 1 no922
	DIV8 no922 4 layer922
	MATH MOD8 no922 4 no922

	MOVEF_8 1.0 mode8922
	
	INPUT_DEVICE READY_RAW layer922 no922 0 mode8922 0
    JR_LTEQF VGV_G 70.0 else923_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB924 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB924:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif923
  else923_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB925 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB925:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB926 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB926:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB927 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB927:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB928 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB928:
  else923_2:
  endif923:
    JR endif918
  else918_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else930_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB931 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB931:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB932 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB932:
  else930_1:
  endif930:
  else918_2:
  endif918:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB933 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB933:
  else912_1:
  endif912:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB934 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB934:
    DATA8 layer935
	DATA8 no935
	DATA8 mode8935
	
	MOVEF_8 VGV_LINE_SENSOR no935
	SUB8 no935 1 no935
	DIV8 no935 4 layer935
	MATH MOD8 no935 4 no935

	MOVEF_8 0.0 mode8935
	
	INPUT_DEVICE READY_RAW layer935 no935 0 mode8935 0
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'False'

	DATA8 layer938
	DATA8 nos938
	DATA8 busy938
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer938 nos938
	JR_EQ8 0 nos938 motornotbusy938
  motorwaiting938:
	OUTPUT_TEST layer938 nos938 busy938
	JR_EQ8 busy938 0 motornotbusy938
	SLEEP
	JR motorwaiting938
  motornotbusy938:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while942:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile942
  whilebody942:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody942
  endwhile942:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB945 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB945:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 200.0 0.0 'False' 

	DATA8 layer947
	DATA8 nos947
	DATA8 busy947
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer947 nos947
	JR_EQ8 0 nos947 motornotbusy947
  motorwaiting947:
	OUTPUT_TEST layer947 nos947 busy947
	JR_EQ8 busy947 0 motornotbusy947
	SLEEP
	JR motorwaiting947
  motornotbusy947:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
  while950:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile950
  whilebody950:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody950
  endwhile950:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer954
	DATA8 nos954
	DATA8 busy954
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer954 nos954
	JR_EQ8 0 nos954 motornotbusy954
  motorwaiting954:
	OUTPUT_TEST layer954 nos954 busy954
	JR_EQ8 busy954 0 motornotbusy954
	SLEEP
	JR motorwaiting954
  motornotbusy954:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB955 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB955:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while957:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile957
  whilebody957:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB959 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB959:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody957
  endwhile957:
  while961:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 5.0 endwhile961
  whilebody961:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB963:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 5.0 whilebody961
  endwhile961:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB965 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB965:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer968
	DATA8 nos968
	DATA8 busy968
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer968 nos968
	JR_EQ8 0 nos968 motornotbusy968
  motorwaiting968:
	OUTPUT_TEST layer968 nos968 busy968
	JR_EQ8 busy968 0 motornotbusy968
	SLEEP
	JR motorwaiting968
  motornotbusy968:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB969 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB969:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB970 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB970:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer973
	DATA8 nos973
	DATA8 busy973
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer973 nos973
	JR_EQ8 0 nos973 motornotbusy973
  motorwaiting973:
	OUTPUT_TEST layer973 nos973 busy973
	JR_EQ8 busy973 0 motornotbusy973
	SLEEP
	JR motorwaiting973
  motornotbusy973:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB974 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB974:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB975 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB975:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 25.0 'False'

	DATA8 layer978
	DATA8 nos978
	DATA8 busy978
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer978 nos978
	JR_EQ8 0 nos978 motornotbusy978
  motorwaiting978:
	OUTPUT_TEST layer978 nos978 busy978
	JR_EQ8 busy978 0 motornotbusy978
	SLEEP
	JR motorwaiting978
  motornotbusy978:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while980:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile980
  whilebody980:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF F.0 17.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf986
    DATA8 flag986
    DIVF F.0 10.0 tmpf986
    CP_EQF 0.0 10.0 flag986
    SELECTF flag986 0.0 tmpf986 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody980
  endwhile980:
    MOVEF_F 135.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB996 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB996:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB997 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB997:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB998 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB998:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1000 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1000:
    JR_LTEQF VGV_B 140.0 else1001_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1002 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1002:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif1001
  else1001_1:
    JR_LTEQF VGV_B 80.0 else1001_2
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'FIre' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1003 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1003:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1004 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1004:
    JR endif1001
  else1001_2:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1006_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'True' VGV_CHEM
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1007 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1007:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1008 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1008:
  else1006_1:
  endif1006:
  else1001_3:
  endif1001:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1009 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1009:
    MOVEF_F 710.0 VGV_C
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or1011
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1010_1
  or1011:
    MOVEF_F 180.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1014 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1014:
    MOVEF_F 491.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1016:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 170.0 endwhile1016
  whilebody1016:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB1018 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB1018:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 170.0 whilebody1016
  endwhile1016:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1020 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1020:
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1021_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1023 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1023:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1025 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1025:
    JR_LTEQF VGV_B 50.0 else1026_1
    DATA8 layer1027
	DATA8 no1027
	DATA8 mode81027
	
	MOVEF_8 VGV_LEFT_SENSOR no1027
	SUB8 no1027 1 no1027
	DIV8 no1027 4 layer1027
	MATH MOD8 no1027 4 no1027

	MOVEF_8 2.0 mode81027
	
	INPUT_DEVICE READY_RAW layer1027 no1027 0 mode81027 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1028 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1028:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1030
	DATA8 no1030
	DATA8 mode81030
	
	MOVEF_8 VGV_LEFT_SENSOR no1030
	SUB8 no1030 1 no1030
	DIV8 no1030 4 layer1030
	MATH MOD8 no1030 4 no1030

	MOVEF_8 1.0 mode81030
	
	INPUT_DEVICE READY_RAW layer1030 no1030 0 mode81030 0
    JR_LTEQF VGV_G 100.0 else1031_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1032 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1032:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif1031
  else1031_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1033 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1033:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1034 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1034:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1035 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1035:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1036 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1036:
  else1031_2:
  endif1031:
    JR endif1026
  else1026_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1038_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1039 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1039:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer1042
	DATA8 nos1042
	DATA8 busy1042
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1042 nos1042
	JR_EQ8 0 nos1042 motornotbusy1042
  motorwaiting1042:
	OUTPUT_TEST layer1042 nos1042 busy1042
	JR_EQ8 busy1042 0 motornotbusy1042
	SLEEP
	JR motorwaiting1042
  motornotbusy1042:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1043:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer1044
	DATA8 nos1044
	DATA8 busy1044
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1044 nos1044
	JR_EQ8 0 nos1044 motornotbusy1044
  motorwaiting1044:
	OUTPUT_TEST layer1044 nos1044 busy1044
	JR_EQ8 busy1044 0 motornotbusy1044
	SLEEP
	JR motorwaiting1044
  motornotbusy1044:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1046:
    JR_GTF VGV_I 20.0 endfor1046
  forbody1046:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1049
	MOVEF_32 10.0 milliseconds1049
	DATA32 timer1049
	TIMER_WAIT milliseconds1049 timer1049
	TIMER_READY timer1049
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1046
  endfor1046:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1055
	DATA8 nos1055
	DATA8 busy1055
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1055 nos1055
	JR_EQ8 0 nos1055 motornotbusy1055
  motorwaiting1055:
	OUTPUT_TEST layer1055 nos1055 busy1055
	JR_EQ8 busy1055 0 motornotbusy1055
	SLEEP
	JR motorwaiting1055
  motornotbusy1055:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1056 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1056:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer1057
	DATA8 nos1057
	DATA8 busy1057
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1057 nos1057
	JR_EQ8 0 nos1057 motornotbusy1057
  motorwaiting1057:
	OUTPUT_TEST layer1057 nos1057 busy1057
	JR_EQ8 busy1057 0 motornotbusy1057
	SLEEP
	JR motorwaiting1057
  motornotbusy1057:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1058 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1058:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1059:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1061:
    JR_GTF VGV_I 20.0 endfor1061
  forbody1061:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1065
	MOVEF_32 10.0 milliseconds1065
	DATA32 timer1065
	TIMER_WAIT milliseconds1065 timer1065
	TIMER_READY timer1065
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1061
  endfor1061:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1071
	DATA8 nos1071
	DATA8 busy1071
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1071 nos1071
	JR_EQ8 0 nos1071 motornotbusy1071
  motorwaiting1071:
	OUTPUT_TEST layer1071 nos1071 busy1071
	JR_EQ8 busy1071 0 motornotbusy1071
	SLEEP
	JR motorwaiting1071
  motornotbusy1071:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1072 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1072:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1073 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1073:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer1076
	DATA8 nos1076
	DATA8 busy1076
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1076 nos1076
	JR_EQ8 0 nos1076 motornotbusy1076
  motorwaiting1076:
	OUTPUT_TEST layer1076 nos1076 busy1076
	JR_EQ8 busy1076 0 motornotbusy1076
	SLEEP
	JR motorwaiting1076
  motornotbusy1076:
  else1038_1:
  endif1038:
  else1026_2:
  endif1026:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1077 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1077:
  else1021_1:
  endif1021:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1078_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1080 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1080:
    MOVEF_F 160.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1081 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1081:
    DATA8 layer1082
	DATA8 no1082
	DATA8 mode81082
	
	MOVEF_8 VGV_LEFT_SENSOR no1082
	SUB8 no1082 1 no1082
	DIV8 no1082 4 layer1082
	MATH MOD8 no1082 4 no1082

	MOVEF_8 1.0 mode81082
	
	INPUT_DEVICE READY_RAW layer1082 no1082 0 mode81082 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1083 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1083:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1085 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1085:
    JR_LTEQF VGV_B 40.0 else1086_1
    DATA8 layer1087
	DATA8 no1087
	DATA8 mode81087
	
	MOVEF_8 VGV_LEFT_SENSOR no1087
	SUB8 no1087 1 no1087
	DIV8 no1087 4 layer1087
	MATH MOD8 no1087 4 no1087

	MOVEF_8 2.0 mode81087
	
	INPUT_DEVICE READY_RAW layer1087 no1087 0 mode81087 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1088 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1088:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1090
	DATA8 no1090
	DATA8 mode81090
	
	MOVEF_8 VGV_LEFT_SENSOR no1090
	SUB8 no1090 1 no1090
	DIV8 no1090 4 layer1090
	MATH MOD8 no1090 4 no1090

	MOVEF_8 1.0 mode81090
	
	INPUT_DEVICE READY_RAW layer1090 no1090 0 mode81090 0
    JR_LTEQF VGV_G 50.0 else1091_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1092 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1092:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif1091
  else1091_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1093 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1093:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1094 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1094:
  else1091_2:
  endif1091:
    JR endif1086
  else1086_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1096_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1097 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1097:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB1098 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB1098:
  else1096_1:
  endif1096:
  else1086_2:
  endif1086:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1099 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1099:
    MOVEF_F 160.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1100:
  else1078_1:
  endif1078:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 165.0 'True'

	DATA8 layer1103
	DATA8 nos1103
	DATA8 busy1103
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1103 nos1103
	JR_EQ8 0 nos1103 motornotbusy1103
  motorwaiting1103:
	OUTPUT_TEST layer1103 nos1103 busy1103
	JR_EQ8 busy1103 0 motornotbusy1103
	SLEEP
	JR motorwaiting1103
  motornotbusy1103:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1104:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1105:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 380.0 'True'

	DATA8 layer1108
	DATA8 nos1108
	DATA8 busy1108
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1108 nos1108
	JR_EQ8 0 nos1108 motornotbusy1108
  motorwaiting1108:
	OUTPUT_TEST layer1108 nos1108 busy1108
	JR_EQ8 busy1108 0 motornotbusy1108
	SLEEP
	JR motorwaiting1108
  motornotbusy1108:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1109:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1110:
    DATA32 milliseconds1111
	MOVEF_32 5000.0 milliseconds1111
	DATA32 timer1111
	TIMER_WAIT milliseconds1111 timer1111
	TIMER_READY timer1111
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1114
	DATA8 nos1114
	DATA8 busy1114
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1114 nos1114
	JR_EQ8 0 nos1114 motornotbusy1114
  motorwaiting1114:
	OUTPUT_TEST layer1114 nos1114 busy1114
	JR_EQ8 busy1114 0 motornotbusy1114
	SLEEP
	JR motorwaiting1114
  motornotbusy1114:
    JR endif1010
  else1010_1:
    MOVEF_F 200.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1115:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 370.0 'True'

	DATA8 layer1118
	DATA8 nos1118
	DATA8 busy1118
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1118 nos1118
	JR_EQ8 0 nos1118 motornotbusy1118
  motorwaiting1118:
	OUTPUT_TEST layer1118 nos1118 busy1118
	JR_EQ8 busy1118 0 motornotbusy1118
	SLEEP
	JR motorwaiting1118
  motornotbusy1118:
    SUBF VGV_C 220.0 VGV_C
  else1010_2:
  endif1010:
    MOVEF_F 474.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1121:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile1121
  whilebody1121:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB1123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB1123:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody1121
  endwhile1121:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1125:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1126:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1127_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 115.0 0.0 'True' 

	DATA8 layer1129
	DATA8 nos1129
	DATA8 busy1129
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1129 nos1129
	JR_EQ8 0 nos1129 motornotbusy1129
  motorwaiting1129:
	OUTPUT_TEST layer1129 nos1129 busy1129
	JR_EQ8 busy1129 0 motornotbusy1129
	SLEEP
	JR motorwaiting1129
  motornotbusy1129:
  else1127_1:
  endif1127:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1130:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1133
	DATA8 nos1133
	DATA8 busy1133
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1133 nos1133
	JR_EQ8 0 nos1133 motornotbusy1133
  motorwaiting1133:
	OUTPUT_TEST layer1133 nos1133 busy1133
	JR_EQ8 busy1133 0 motornotbusy1133
	SLEEP
	JR motorwaiting1133
  motornotbusy1133:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1134:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1135_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer1137
	DATA8 nos1137
	DATA8 busy1137
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1137 nos1137
	JR_EQ8 0 nos1137 motornotbusy1137
  motorwaiting1137:
	OUTPUT_TEST layer1137 nos1137 busy1137
	JR_EQ8 busy1137 0 motornotbusy1137
	SLEEP
	JR motorwaiting1137
  motornotbusy1137:
  else1135_1:
  endif1135:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1140
	DATA8 nos1140
	DATA8 busy1140
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1140 nos1140
	JR_EQ8 0 nos1140 motornotbusy1140
  motorwaiting1140:
	OUTPUT_TEST layer1140 nos1140 busy1140
	JR_EQ8 busy1140 0 motornotbusy1140
	SLEEP
	JR motorwaiting1140
  motornotbusy1140:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 60.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1144
	MOVEF_32 1200.0 milliseconds1144
	DATA32 timer1144
	TIMER_WAIT milliseconds1144 timer1144
	TIMER_READY timer1144
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1145:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer1148
	DATA8 nos1148
	DATA8 busy1148
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1148 nos1148
	JR_EQ8 0 nos1148 motornotbusy1148
  motorwaiting1148:
	OUTPUT_TEST layer1148 nos1148 busy1148
	JR_EQ8 busy1148 0 motornotbusy1148
	SLEEP
	JR motorwaiting1148
  motornotbusy1148:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer1150
	DATA8 nos1150
	DATA8 busy1150
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1150 nos1150
	JR_EQ8 0 nos1150 motornotbusy1150
  motorwaiting1150:
	OUTPUT_TEST layer1150 nos1150 busy1150
	JR_EQ8 busy1150 0 motornotbusy1150
	SLEEP
	JR motorwaiting1150
  motornotbusy1150:
    MULF VGV_LEFT_FORWARD 90.0 F.0
    MULF VGV_RIGHT_FORWARD 95.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1154
	MOVEF_32 3500.0 milliseconds1154
	DATA32 timer1154
	TIMER_WAIT milliseconds1154 timer1154
	TIMER_READY timer1154
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1155:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer1156
	DATA8 nos1156
	DATA8 busy1156
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer1156 nos1156
	JR_EQ8 0 nos1156 motornotbusy1156
  motorwaiting1156:
	OUTPUT_TEST layer1156 nos1156 busy1156
	JR_EQ8 busy1156 0 motornotbusy1156
	SLEEP
	JR motorwaiting1156
  motornotbusy1156:
    WRITE32 ENDSUB_F_TAKE_CUBES_0:CALLSUB1157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_0
CALLSUB1157:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1160
	DATA8 nos1160
	DATA8 busy1160
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1160 nos1160
	JR_EQ8 0 nos1160 motornotbusy1160
  motorwaiting1160:
	OUTPUT_TEST layer1160 nos1160 busy1160
	JR_EQ8 busy1160 0 motornotbusy1160
	SLEEP
	JR motorwaiting1160
  motornotbusy1160:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1161_1
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1161_1
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB1164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB1164:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1165:
    JR endif1161
  else1161_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1161_2
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1161_2
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1170
	DATA8 nos1170
	DATA8 busy1170
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1170 nos1170
	JR_EQ8 0 nos1170 motornotbusy1170
  motorwaiting1170:
	OUTPUT_TEST layer1170 nos1170 busy1170
	JR_EQ8 busy1170 0 motornotbusy1170
	SLEEP
	JR motorwaiting1170
  motornotbusy1170:
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB1171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB1171:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1172:
    JR endif1161
  else1161_2:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1161_3
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1161_3
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:CALLSUB1175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_LONG_0
CALLSUB1175:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1176:
    JR endif1161
  else1161_3:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1177_1
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1177_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1180:
    JR endif1177
  else1177_1:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1177_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1182:
    JR endif1177
  else1177_2:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1177_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1184:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1187
	DATA8 nos1187
	DATA8 busy1187
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1187 nos1187
	JR_EQ8 0 nos1187 motornotbusy1187
  motorwaiting1187:
	OUTPUT_TEST layer1187 nos1187 busy1187
	JR_EQ8 busy1187 0 motornotbusy1187
	SLEEP
	JR motorwaiting1187
  motornotbusy1187:
    JR endif1177
  else1177_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1190
	DATA8 nos1190
	DATA8 busy1190
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1190 nos1190
	JR_EQ8 0 nos1190 motornotbusy1190
  motorwaiting1190:
	OUTPUT_TEST layer1190 nos1190 busy1190
	JR_EQ8 busy1190 0 motornotbusy1190
	SLEEP
	JR motorwaiting1190
  motornotbusy1190:
  else1177_4:
  endif1177:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1191_1
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1191_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1194:
    JR endif1191
  else1191_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1191_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1196:
    JR endif1191
  else1191_2:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1191_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1198:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1201
	DATA8 nos1201
	DATA8 busy1201
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1201 nos1201
	JR_EQ8 0 nos1201 motornotbusy1201
  motorwaiting1201:
	OUTPUT_TEST layer1201 nos1201 busy1201
	JR_EQ8 busy1201 0 motornotbusy1201
	SLEEP
	JR motorwaiting1201
  motornotbusy1201:
    JR endif1191
  else1191_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1204
	DATA8 nos1204
	DATA8 busy1204
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1204 nos1204
	JR_EQ8 0 nos1204 motornotbusy1204
  motorwaiting1204:
	OUTPUT_TEST layer1204 nos1204 busy1204
	JR_EQ8 busy1204 0 motornotbusy1204
	SLEEP
	JR motorwaiting1204
  motornotbusy1204:
  else1191_4:
  endif1191:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1205_1
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1205_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1208:
    JR endif1205
  else1205_1:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1205_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1210:
    JR endif1205
  else1205_2:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1205_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1212:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1215
	DATA8 nos1215
	DATA8 busy1215
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1215 nos1215
	JR_EQ8 0 nos1215 motornotbusy1215
  motorwaiting1215:
	OUTPUT_TEST layer1215 nos1215 busy1215
	JR_EQ8 busy1215 0 motornotbusy1215
	SLEEP
	JR motorwaiting1215
  motornotbusy1215:
    JR endif1205
  else1205_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1218
	DATA8 nos1218
	DATA8 busy1218
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1218 nos1218
	JR_EQ8 0 nos1218 motornotbusy1218
  motorwaiting1218:
	OUTPUT_TEST layer1218 nos1218 busy1218
	JR_EQ8 busy1218 0 motornotbusy1218
	SLEEP
	JR motorwaiting1218
  motornotbusy1218:
  else1205_4:
  endif1205:
    MULF -15.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1220
	DATA8 nos1220
	DATA8 busy1220
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1220 nos1220
	JR_EQ8 0 nos1220 motornotbusy1220
  motorwaiting1220:
	OUTPUT_TEST layer1220 nos1220 busy1220
	JR_EQ8 busy1220 0 motornotbusy1220
	SLEEP
	JR motorwaiting1220
  motornotbusy1220:
    MULF VGV_LEFT_FORWARD -25.0 F.0
    MULF VGV_RIGHT_FORWARD -25.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1224
	MOVEF_32 1500.0 milliseconds1224
	DATA32 timer1224
	TIMER_WAIT milliseconds1224 timer1224
	TIMER_READY timer1224
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1225:
  else1161_4:
  endif1161:
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1226_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 55.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1232:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 1200.0 endwhile1232
  whilebody1232:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 1200.0 whilebody1232
  endwhile1232:
  while1235:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 25.0 endwhile1235
  whilebody1235:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 25.0 whilebody1235
  endwhile1235:
  while1238:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile1238
  whilebody1238:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody1238
  endwhile1238:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1241:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1242:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 365.0 0.0 'True' 

	DATA8 layer1244
	DATA8 nos1244
	DATA8 busy1244
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1244 nos1244
	JR_EQ8 0 nos1244 motornotbusy1244
  motorwaiting1244:
	OUTPUT_TEST layer1244 nos1244 busy1244
	JR_EQ8 busy1244 0 motornotbusy1244
	SLEEP
	JR motorwaiting1244
  motornotbusy1244:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1248:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1251
	DATA8 nos1251
	DATA8 busy1251
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1251 nos1251
	JR_EQ8 0 nos1251 motornotbusy1251
  motorwaiting1251:
	OUTPUT_TEST layer1251 nos1251 busy1251
	JR_EQ8 busy1251 0 motornotbusy1251
	SLEEP
	JR motorwaiting1251
  motornotbusy1251:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 300.0 0.0 'True' 

	DATA8 layer1253
	DATA8 nos1253
	DATA8 busy1253
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1253 nos1253
	JR_EQ8 0 nos1253 motornotbusy1253
  motorwaiting1253:
	OUTPUT_TEST layer1253 nos1253 busy1253
	JR_EQ8 busy1253 0 motornotbusy1253
	SLEEP
	JR motorwaiting1253
  motornotbusy1253:
    MULF VGV_LEFT_FORWARD 55.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1257
	MOVEF_32 4000.0 milliseconds1257
	DATA32 timer1257
	TIMER_WAIT milliseconds1257 timer1257
	TIMER_READY timer1257
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1258:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 20.0 'True'

	DATA8 layer1261
	DATA8 nos1261
	DATA8 busy1261
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1261 nos1261
	JR_EQ8 0 nos1261 motornotbusy1261
  motorwaiting1261:
	OUTPUT_TEST layer1261 nos1261 busy1261
	JR_EQ8 busy1261 0 motornotbusy1261
	SLEEP
	JR motorwaiting1261
  motornotbusy1261:
  else1226_1:
  endif1226:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
