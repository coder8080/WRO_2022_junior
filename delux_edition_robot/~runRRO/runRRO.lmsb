DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_10
DATAF VLV_MIN_POWER_10
DATAF VLV_DEG_10
DATAF VLV_COEF_10
DATAF VLV_BASE_POWER_15
DATAF VLV_MIN_POWER_15
DATAF VLV_DEG_15
DATAF VLV_COEF_15
DATAS VLV_MOTOR_14 252
DATAF VLV_FORWARD_14
DATAF VLV_DEG_14
DATAF VLV_MAX_POWER_14
DATAS VLV_ACCELERATION_14 252
DATAS VLV_ZAME_14 252
DATAS VLV_TO_STOP_14 252
DATAF VLV_TIME_2
DATAF VLV_PERCENT_5
DATAF VLV_POWER_1
DATAF VLV_A_8
DATAF VLV_POWER_12
DATAF VLV_DEG_13
DATAF VLV_POWER_13
DATAS VLV_FINISH_FORWARD_16 252
DATAF VLV_L_7
DATAS VLV_IS_INVERTED_25 252
DATAS VLV_LONG_22 252
DATAS VLV_NEAR_22 252
DATAS VLV_SHOULD_MOVE_BACKWARD_22 252
DATAS VLV_IS_INVERTED_22 252
DATAS VLV_IS_INVERTED_26 252
DATAS VLV_TO_DELAY_27 252
DATAF VLV_L_6
DATAF VLV_COEF_17
DATAF VLV_COEF_18
DATAS VLV_IS_INVERTED_19 252
DATAS VLV_IS_INVERTED_20 252
DATAF VLV_MINUS_DEG_20
DATAF VLV_MINUS_DEG_21
DATAS VLV_IS_INVERTED_23 252
DATAS VLV_MOTOR1_23 252
DATAS VLV_MOTOR2_23 252
DATAF VLV_FORWARD1_23
DATAF VLV_FORWARD2_23
DATAF VLV_COEF_23
DATAF VGV_P
DATAF VLV_MINUS_DEG_22
DATAS VLV_MOTOR1_24 252
DATAS VLV_MOTOR2_24 252
DATAF VLV_FORWARD1_24
DATAF VLV_FORWARD2_24
DATAF VLV_COEF_24
DATAS VLV_MOTOR1_25 252
DATAS VLV_MOTOR2_25 252
DATAF VLV_FORWARD1_25
DATAF VLV_FORWARD2_25
DATAF VLV_COEF_25
DATAF VLV_P_25
DATAS VLV_MOTOR1_26 252
DATAS VLV_MOTOR2_26 252
DATAF VLV_FORWARD1_26
DATAF VLV_FORWARD2_26
DATAF VLV_COEF_26
DATAF VGV_LINE
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_ULTRASONIC
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERTED_MOTOR 252
DATAS VGV_MOTORS 252
DATAF VGV_LEFT_FORWARD
DATAF VGV_RIGHT_FORWARD
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_MAX
DATAF VGV_LEFT_MIN
DATAF VGV_LAST_ERR
DATAF VGV_LAST_MOTOR_ERR
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAS VGV_EMPTY_ZONE 252
DATAF VGV_WATER_STATE
DATAF VGV_FIRE_COUNT
DATAF VGV_MEN_COUNT
DATAS VGV_CHEM 252
DATAS VGV_TAKE_CHEM_IN_YELLOW 252
DATAF VGV_CUBES_COUNT
DATAS VGV_START 252
DATAF VGV_A
DATAS VGV_IS_SECOND_BROWN_CHEM 252
DATAF VGV_R
DATAS VGV_OBJECT 252
DATAF VGV_G
DATAF VGV_DEG
DATAS VGV_TAKE_LEFT 252
DATAS VGV_TAKE_RIGHT 252
DATAS VGV_IS_FIRE 252
DATAF VGV_W
DATAF VGV_ULTRA
DATAF VGV_COL
DATAS VGV_IS_SECOND_YELLOW_CHEM 252
DATAS VGV_CH 252
DATAF VGV_U
DATAS VGV_IS_FIRST_BLUE_OBJECT_CHEM 252
DATAS VGV_IS_SECOND_BLUE_OBJECT_CHEM 252
DATAS VGV_IS_ON_SECOND_BLUE 252
DATAS VGV_T 252
DATAS VGV_WHITE_OBJECT 252
DATAF VGV_MINUS_DEG
DATAF VLV_ERR_6
DATAF VLV_DIFF_6
DATAF VLV_DELTA_6
DATAF VLV_LEFT_POWER_6
DATAF VLV_RIGHT_POWER_6
DATAF VLV_ERR_7
DATAF VLV_DIFF_7
DATAF VLV_DELTA_7
DATAF VLV_LEFT_POWER_7
DATAF VLV_RIGHT_POWER_7
DATAF VLV_L_8
DATAF VLV_ERR_8
DATAF VLV_DIFF_8
DATAF VLV_DELTA_8
DATAF VLV_LEFT_POWER_8
DATAF VLV_RIGHT_POWER_8
DATAF VLV_L_10
DATAF VLV_P_10
DATAF VLV_POWER_10
DATAF VLV_R_10
DATAF VLV_DELTA_10
DATAF VLV_LEFT_POWER_10
DATAF VLV_RIGHT_POWER_10
DATAF VLV_L_12
DATAF VLV_R_12
DATAF VLV_ERR_12
DATAF VLV_DIFF_12
DATAF VLV_DELTA_12
DATAF VLV_LEFT_POWER_12
DATAF VLV_RIGHT_POWER_12
DATAF VLV_L_13
DATAF VLV_NORMAL_DEG_14
DATAF VLV_ACCELERATION_DEG_14
DATAF VLV_ZAME_DEG_14
DATAF VLV_M_14
DATAF VLV_MIN_POWER_14
DATAF VLV_P_14
DATAF VLV_POWER_14
DATAF VLV_L_15
DATAF VLV_P_15
DATAF VLV_R_15
DATAF VLV_DELTA_15
DATAF VLV_POWER_15
DATAF VLV_LEFT_POWER_15
DATAF VLV_RIGHT_POWER_15
DATAS VLV_MOT_19 252
DATAF VLV_FORWARD_19
DATAF VLV_COEF_19
DATAF VLV_COEF_20
DATAF VLV_DEG_21
ARRAY16 VLV_RGB_25 2
DATAF VLV_MILLISECOND_27
DATAF VLV_SECONDS_27
DATAF VLV_MINUTES_27
DATAS VLV_TEXT_27 252
DATA32 RUNCOUNTER_F_PREPARE_GRABBER_0
DATA32 RUNCOUNTER_F_KICK_WATER_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_10
    MOVEF_F 0.0 VLV_MIN_POWER_10
    MOVEF_F 0.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_COEF_10
    MOVEF_F 0.0 VLV_BASE_POWER_15
    MOVEF_F 0.0 VLV_MIN_POWER_15
    MOVEF_F 0.0 VLV_DEG_15
    MOVEF_F 0.0 VLV_COEF_15
    STRINGS DUPLICATE '' VLV_MOTOR_14
    MOVEF_F 0.0 VLV_FORWARD_14
    MOVEF_F 0.0 VLV_DEG_14
    MOVEF_F 0.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE '' VLV_ACCELERATION_14
    STRINGS DUPLICATE '' VLV_ZAME_14
    STRINGS DUPLICATE '' VLV_TO_STOP_14
    MOVEF_F 0.0 VLV_TIME_2
    MOVEF_F 0.0 VLV_PERCENT_5
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_A_8
    MOVEF_F 0.0 VLV_POWER_12
    MOVEF_F 0.0 VLV_DEG_13
    MOVEF_F 0.0 VLV_POWER_13
    STRINGS DUPLICATE '' VLV_FINISH_FORWARD_16
    MOVEF_F 0.0 VLV_L_7
    STRINGS DUPLICATE '' VLV_IS_INVERTED_25
    STRINGS DUPLICATE '' VLV_LONG_22
    STRINGS DUPLICATE '' VLV_NEAR_22
    STRINGS DUPLICATE '' VLV_SHOULD_MOVE_BACKWARD_22
    STRINGS DUPLICATE '' VLV_IS_INVERTED_22
    STRINGS DUPLICATE '' VLV_IS_INVERTED_26
    STRINGS DUPLICATE '' VLV_TO_DELAY_27
    MOVEF_F 0.0 VLV_L_6
    MOVEF_F 0.0 VLV_COEF_17
    MOVEF_F 0.0 VLV_COEF_18
    STRINGS DUPLICATE '' VLV_IS_INVERTED_19
    STRINGS DUPLICATE '' VLV_IS_INVERTED_20
    MOVEF_F 0.0 VLV_MINUS_DEG_20
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_23
    STRINGS DUPLICATE '' VLV_MOTOR1_23
    STRINGS DUPLICATE '' VLV_MOTOR2_23
    MOVEF_F 0.0 VLV_FORWARD1_23
    MOVEF_F 0.0 VLV_FORWARD2_23
    MOVEF_F 0.0 VLV_COEF_23
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VLV_MINUS_DEG_22
    STRINGS DUPLICATE '' VLV_MOTOR1_24
    STRINGS DUPLICATE '' VLV_MOTOR2_24
    MOVEF_F 0.0 VLV_FORWARD1_24
    MOVEF_F 0.0 VLV_FORWARD2_24
    MOVEF_F 0.0 VLV_COEF_24
    STRINGS DUPLICATE '' VLV_MOTOR1_25
    STRINGS DUPLICATE '' VLV_MOTOR2_25
    MOVEF_F 0.0 VLV_FORWARD1_25
    MOVEF_F 0.0 VLV_FORWARD2_25
    MOVEF_F 0.0 VLV_COEF_25
    MOVEF_F 0.0 VLV_P_25
    STRINGS DUPLICATE '' VLV_MOTOR1_26
    STRINGS DUPLICATE '' VLV_MOTOR2_26
    MOVEF_F 0.0 VLV_FORWARD1_26
    MOVEF_F 0.0 VLV_FORWARD2_26
    MOVEF_F 0.0 VLV_COEF_26
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    STRINGS DUPLICATE '' VGV_EMPTY_ZONE
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_START
    MOVEF_F 0.0 VGV_A
    STRINGS DUPLICATE '' VGV_IS_SECOND_BROWN_CHEM
    MOVEF_F 0.0 VGV_R
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_TAKE_LEFT
    STRINGS DUPLICATE '' VGV_TAKE_RIGHT
    STRINGS DUPLICATE '' VGV_IS_FIRE
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_COL
    STRINGS DUPLICATE '' VGV_IS_SECOND_YELLOW_CHEM
    STRINGS DUPLICATE '' VGV_CH
    MOVEF_F 0.0 VGV_U
    STRINGS DUPLICATE '' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_ON_SECOND_BLUE
    STRINGS DUPLICATE '' VGV_T
    STRINGS DUPLICATE '' VGV_WHITE_OBJECT
    MOVEF_F 0.0 VGV_MINUS_DEG
    MOVEF_F 0.0 VLV_ERR_6
    MOVEF_F 0.0 VLV_DIFF_6
    MOVEF_F 0.0 VLV_DELTA_6
    MOVEF_F 0.0 VLV_LEFT_POWER_6
    MOVEF_F 0.0 VLV_RIGHT_POWER_6
    MOVEF_F 0.0 VLV_ERR_7
    MOVEF_F 0.0 VLV_DIFF_7
    MOVEF_F 0.0 VLV_DELTA_7
    MOVEF_F 0.0 VLV_LEFT_POWER_7
    MOVEF_F 0.0 VLV_RIGHT_POWER_7
    MOVEF_F 0.0 VLV_L_8
    MOVEF_F 0.0 VLV_ERR_8
    MOVEF_F 0.0 VLV_DIFF_8
    MOVEF_F 0.0 VLV_DELTA_8
    MOVEF_F 0.0 VLV_LEFT_POWER_8
    MOVEF_F 0.0 VLV_RIGHT_POWER_8
    MOVEF_F 0.0 VLV_L_10
    MOVEF_F 0.0 VLV_P_10
    MOVEF_F 0.0 VLV_POWER_10
    MOVEF_F 0.0 VLV_R_10
    MOVEF_F 0.0 VLV_DELTA_10
    MOVEF_F 0.0 VLV_LEFT_POWER_10
    MOVEF_F 0.0 VLV_RIGHT_POWER_10
    MOVEF_F 0.0 VLV_L_12
    MOVEF_F 0.0 VLV_R_12
    MOVEF_F 0.0 VLV_ERR_12
    MOVEF_F 0.0 VLV_DIFF_12
    MOVEF_F 0.0 VLV_DELTA_12
    MOVEF_F 0.0 VLV_LEFT_POWER_12
    MOVEF_F 0.0 VLV_RIGHT_POWER_12
    MOVEF_F 0.0 VLV_L_13
    MOVEF_F 0.0 VLV_NORMAL_DEG_14
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_14
    MOVEF_F 0.0 VLV_ZAME_DEG_14
    MOVEF_F 0.0 VLV_M_14
    MOVEF_F 0.0 VLV_MIN_POWER_14
    MOVEF_F 0.0 VLV_P_14
    MOVEF_F 0.0 VLV_POWER_14
    MOVEF_F 0.0 VLV_L_15
    MOVEF_F 0.0 VLV_P_15
    MOVEF_F 0.0 VLV_R_15
    MOVEF_F 0.0 VLV_DELTA_15
    MOVEF_F 0.0 VLV_POWER_15
    MOVEF_F 0.0 VLV_LEFT_POWER_15
    MOVEF_F 0.0 VLV_RIGHT_POWER_15
    STRINGS DUPLICATE '' VLV_MOT_19
    MOVEF_F 0.0 VLV_FORWARD_19
    MOVEF_F 0.0 VLV_COEF_19
    MOVEF_F 0.0 VLV_COEF_20
    MOVEF_F 0.0 VLV_DEG_21
    CALL ARRAYCREATE_FLOAT VLV_RGB_25
    MOVEF_F 0.0 VLV_MILLISECOND_27
    MOVEF_F 0.0 VLV_SECONDS_27
    MOVEF_F 0.0 VLV_MINUTES_27
    STRINGS DUPLICATE '' VLV_TEXT_27
    MOVE32_32 0 RUNCOUNTER_F_PREPARE_GRABBER_0
    MOVE32_32 0 RUNCOUNTER_F_KICK_WATER_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_PREPARE_GRABBER_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_PREPARE_GRABBER_0 0
    CALL GETANDINC32 RUNCOUNTER_F_PREPARE_GRABBER_0 -1 RUNCOUNTER_F_PREPARE_GRABBER_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_KICK_WATER_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_KICK_WATER_0 1
    CALL GETANDINC32 RUNCOUNTER_F_KICK_WATER_0 -1 RUNCOUNTER_F_KICK_WATER_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_PREPARE_GRABBER_0
subcall PROGRAM_F_KICK_WATER_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    DATAS S.2 252
    DATAS S.3 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1264
    WRITE32 ENDSUB_F_PREPARE_GRABBER_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PREPARE_GRABBER_0
  dispatch1264:
    JR_NEQ32 SUBPROGRAM 1 dispatch1265
    WRITE32 ENDSUB_F_KICK_WATER_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
  dispatch1265:
    MOVEF_F 0.0 VLV_BASE_POWER_10
    MOVEF_F 0.0 VLV_MIN_POWER_10
    MOVEF_F 0.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_COEF_10
    MOVEF_F 0.0 VLV_BASE_POWER_15
    MOVEF_F 0.0 VLV_MIN_POWER_15
    MOVEF_F 0.0 VLV_DEG_15
    MOVEF_F 0.0 VLV_COEF_15
    STRINGS DUPLICATE '' VLV_MOTOR_14
    MOVEF_F 0.0 VLV_FORWARD_14
    MOVEF_F 0.0 VLV_DEG_14
    MOVEF_F 0.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE '' VLV_ACCELERATION_14
    STRINGS DUPLICATE '' VLV_ZAME_14
    STRINGS DUPLICATE '' VLV_TO_STOP_14
    MOVEF_F 0.0 VLV_TIME_2
    MOVEF_F 0.0 VLV_PERCENT_5
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_A_8
    MOVEF_F 0.0 VLV_POWER_12
    MOVEF_F 0.0 VLV_DEG_13
    MOVEF_F 0.0 VLV_POWER_13
    STRINGS DUPLICATE '' VLV_FINISH_FORWARD_16
    MOVEF_F 0.0 VLV_L_7
    STRINGS DUPLICATE '' VLV_IS_INVERTED_25
    STRINGS DUPLICATE '' VLV_LONG_22
    STRINGS DUPLICATE '' VLV_NEAR_22
    STRINGS DUPLICATE '' VLV_SHOULD_MOVE_BACKWARD_22
    STRINGS DUPLICATE '' VLV_IS_INVERTED_22
    STRINGS DUPLICATE '' VLV_IS_INVERTED_26
    STRINGS DUPLICATE '' VLV_TO_DELAY_27
    MOVEF_F 0.0 VLV_L_6
    MOVEF_F 0.0 VLV_COEF_17
    MOVEF_F 0.0 VLV_COEF_18
    STRINGS DUPLICATE '' VLV_IS_INVERTED_19
    STRINGS DUPLICATE '' VLV_IS_INVERTED_20
    MOVEF_F 0.0 VLV_MINUS_DEG_20
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_23
    STRINGS DUPLICATE '' VLV_MOTOR1_23
    STRINGS DUPLICATE '' VLV_MOTOR2_23
    MOVEF_F 0.0 VLV_FORWARD1_23
    MOVEF_F 0.0 VLV_FORWARD2_23
    MOVEF_F 0.0 VLV_COEF_23
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VLV_MINUS_DEG_22
    STRINGS DUPLICATE '' VLV_MOTOR1_24
    STRINGS DUPLICATE '' VLV_MOTOR2_24
    MOVEF_F 0.0 VLV_FORWARD1_24
    MOVEF_F 0.0 VLV_FORWARD2_24
    MOVEF_F 0.0 VLV_COEF_24
    STRINGS DUPLICATE '' VLV_MOTOR1_25
    STRINGS DUPLICATE '' VLV_MOTOR2_25
    MOVEF_F 0.0 VLV_FORWARD1_25
    MOVEF_F 0.0 VLV_FORWARD2_25
    MOVEF_F 0.0 VLV_COEF_25
    MOVEF_F 0.0 VLV_P_25
    STRINGS DUPLICATE '' VLV_MOTOR1_26
    STRINGS DUPLICATE '' VLV_MOTOR2_26
    MOVEF_F 0.0 VLV_FORWARD1_26
    MOVEF_F 0.0 VLV_FORWARD2_26
    MOVEF_F 0.0 VLV_COEF_26
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    STRINGS DUPLICATE '' VGV_EMPTY_ZONE
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_START
    MOVEF_F 0.0 VGV_A
    STRINGS DUPLICATE '' VGV_IS_SECOND_BROWN_CHEM
    MOVEF_F 0.0 VGV_R
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_TAKE_LEFT
    STRINGS DUPLICATE '' VGV_TAKE_RIGHT
    STRINGS DUPLICATE '' VGV_IS_FIRE
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_COL
    STRINGS DUPLICATE '' VGV_IS_SECOND_YELLOW_CHEM
    STRINGS DUPLICATE '' VGV_CH
    MOVEF_F 0.0 VGV_U
    STRINGS DUPLICATE '' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_ON_SECOND_BLUE
    STRINGS DUPLICATE '' VGV_T
    STRINGS DUPLICATE '' VGV_WHITE_OBJECT
    MOVEF_F 0.0 VGV_MINUS_DEG
    MOVEF_F 1.0 VGV_LINE
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERTED_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 37.0 VGV_LEFT_MAX
    MOVEF_F 4.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    STRINGS DUPLICATE 'none' VGV_EMPTY_ZONE
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 2.0 VGV_CUBES_COUNT
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_LEFT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_RIGHT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB7 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB7:
    SOUND_READY
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB10:
ENDTHREAD:
    RETURN
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB12:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 80.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB13 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB13:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB14 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB14:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer15
	DATA8 nos15
	DATA8 busy15
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer15 nos15
	JR_EQ8 0 nos15 motornotbusy15
  motorwaiting15:
	OUTPUT_TEST layer15 nos15 busy15
	JR_EQ8 busy15 0 motornotbusy15
	SLEEP
	JR motorwaiting15
  motornotbusy15:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 130.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB16 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB16:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer17
	DATA8 nos17
	DATA8 busy17
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer17 nos17
	JR_EQ8 0 nos17 motornotbusy17
  motorwaiting17:
	OUTPUT_TEST layer17 nos17 busy17
	JR_EQ8 busy17 0 motornotbusy17
	SLEEP
	JR motorwaiting17
  motornotbusy17:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 125.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB19 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB19:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB20 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB20:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 160.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB21 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB21:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else22_1
    CALL MOTOR.START VGV_WATER_MOTOR 40.0
    DATA32 milliseconds24
	MOVEF_32 500.0 milliseconds24
	DATA32 timer24
	TIMER_WAIT milliseconds24 timer24
	TIMER_READY timer24
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer26
	DATA8 nos26
	DATA8 busy26
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer26 nos26
	JR_EQ8 0 nos26 motornotbusy26
  motorwaiting26:
	OUTPUT_TEST layer26 nos26 busy26
	JR_EQ8 busy26 0 motornotbusy26
	SLEEP
	JR motorwaiting26
  motornotbusy26:
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif22
  else22_1:
    CALL MOTOR.START VGV_WATER_MOTOR -40.0
    DATA32 milliseconds28
	MOVEF_32 500.0 milliseconds28
	DATA32 timer28
	TIMER_WAIT milliseconds28 timer28
	TIMER_READY timer28
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 50.0 0.0 20.0 0.0 'True' 

	DATA8 layer30
	DATA8 nos30
	DATA8 busy30
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer30 nos30
	JR_EQ8 0 nos30 motornotbusy30
  motorwaiting30:
	OUTPUT_TEST layer30 nos30 busy30
	JR_EQ8 busy30 0 motornotbusy30
	SLEEP
	JR motorwaiting30
  motornotbusy30:
  else22_2:
  endif22:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_PREPARE_GRABBER_0:
    CALL MOTOR.START VGV_GRABBER_MOTOR -20.0
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB32 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB32:
    CALL MOTOR.STOP VGV_GRABBER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 50.0 0.0 'True' 

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
RETSUB_F_PREPARE_GRABBER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PREPARE_GRABBER_0:
SUB_F_MAIN_0:
    STRINGS DUPLICATE 'left' VGV_START
    TIMER_READ timeMC9
    MOVEF_F 90.0 VGV_A
    DATA32 tmp36
    CALL GETANDINC32 RUNCOUNTER_F_PREPARE_GRABBER_0 1  RUNCOUNTER_F_PREPARE_GRABBER_0 tmp36
    JR_NEQ32 0 tmp36 alreadylaunched36
    OBJECT_START TF_PREPARE_GRABBER_0
  alreadylaunched36:
    CALL EQ_STRING VGV_START 'left' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else37_1
    MULF 80.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 85.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    WRITE32 ENDSUB_F_RESET_0:CALLSUB43 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB43:
  while44:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    JR_GTEQF F.0 1000.0 endwhile44
  whilebody44:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    JR_LTF F.0 1000.0 whilebody44
  endwhile44:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB47 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB47:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while48:
    JR_GTEQF VGV_P 50.0 endwhile48
  whilebody48:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB49 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB49:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_LTF VGV_P 50.0 whilebody48
  endwhile48:
  while50:
    JR_LTEQF VGV_P 20.0 endwhile50
  whilebody50:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB51 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB51:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_GTF VGV_P 20.0 whilebody50
  endwhile50:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 180.0 VLV_DEG_14
    MOVEF_F 50.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB54 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB54:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 180.0 VLV_DEG_14
    MOVEF_F 50.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB55 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB55:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB56 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB56:
    DATA32 milliseconds57
	MOVEF_32 1000.0 milliseconds57
	DATA32 timer57
	TIMER_WAIT milliseconds57 timer57
	TIMER_READY timer57
    WRITE32 ENDSUB_F_STOP_0:CALLSUB58 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB58:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 55.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB59 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB59:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB61:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB62 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB62:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB63 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB63:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while64:
    JR_LTEQF VGV_P 23.0 endwhile64
  whilebody64:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB65:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB66:
    JR_GTF VGV_P 23.0 whilebody64
  endwhile64:
    JR endif37
  else37_1:
    MULF 80.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 40.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    WRITE32 ENDSUB_F_RESET_0:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB71:
  while72:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 1000.0 endwhile72
  whilebody72:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 1000.0 whilebody72
  endwhile72:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB77:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while78:
    JR_GTEQF VGV_P 50.0 endwhile78
  whilebody78:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB79 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB79:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_LTF VGV_P 50.0 whilebody78
  endwhile78:
  while80:
    JR_LTEQF VGV_P 20.0 endwhile80
  whilebody80:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB81:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_GTF VGV_P 20.0 whilebody80
  endwhile80:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB82:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_14
    MOVEF_F 180.0 VLV_DEG_14
    MOVEF_F 40.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'Fase' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB83:
    MULF VGV_LEFT_FORWARD -40.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB86:
    CALL MOTOR.STOP VGV_LEFT_MOTOR 'True'
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB88:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB89:
  while90:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 1150.0 endwhile90
  whilebody90:
    MOVEF_F 90.0 VLV_POWER_12
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB93:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 1150.0 whilebody90
  endwhile90:
    TIMER_READ timeMC1
  while97:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 1000.0 endwhile97
  whilebody97:
    MOVEF_F 40.0 VLV_POWER_12
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB99 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB99:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 1000.0 whilebody97
  endwhile97:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB101:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB102:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 230.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB104:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 130.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB105:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB106:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB107:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while108:
    JR_LTEQF VGV_P 23.0 endwhile108
  whilebody108:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB109:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F 90.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB110:
    JR_GTF VGV_P 23.0 whilebody108
  endwhile108:
  else37_2:
  endif37:
    MOVEF_F 40.0 VLV_BASE_POWER_15
    MOVEF_F 0.0 VLV_MIN_POWER_15
    MOVEF_F 35.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB111:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB112:
    STRINGS DUPLICATE 'False' VGV_IS_SECOND_BROWN_CHEM
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB113:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_R '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 60.0 else118_1
    DATA8 layer119
	DATA8 no119
	DATA8 mode8119
	
	MOVEF_8 VGV_RIGHT_SENSOR no119
	SUB8 no119 1 no119
	DIV8 no119 4 layer119
	MATH MOD8 no119 4 no119

	MOVEF_8 2.0 mode8119
	
	INPUT_DEVICE READY_RAW layer119 no119 0 mode8119 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB120:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer122
	DATA8 no122
	DATA8 mode8122
	
	MOVEF_8 VGV_RIGHT_SENSOR no122
	SUB8 no122 1 no122
	DIV8 no122 4 layer122
	MATH MOD8 no122 4 no122

	MOVEF_8 1.0 mode8122
	
	INPUT_DEVICE READY_RAW layer122 no122 0 mode8122 0
    JR_LTEQF VGV_G 80.0 else123_1
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    STRINGS DUPLICATE 'human' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif123
  else123_1:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    DATA32 tmp126
    CALL GETANDINC32 RUNCOUNTER_F_KICK_WATER_0 1  RUNCOUNTER_F_KICK_WATER_0 tmp126
    JR_NEQ32 0 tmp126 alreadylaunched126
    OBJECT_START TF_KICK_WATER_0
  alreadylaunched126:
  else123_2:
  endif123:
    JR endif118
  else118_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else118_2
    JR_LTEQF VGV_R 12.0 else118_2
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_SECOND_BROWN_CHEM
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB128:
  else118_2:
  endif118:
    MOVEF_F 525.0 VGV_DEG
    CALL NE_STRING VGV_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else129_1
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 120.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB131:
    SUBF VGV_DEG 120.0 VGV_DEG
  else129_1:
  endif129:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB133:
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else134_1
  while136:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 130.0 F.1
    JR_GTEQF F.0 F.1 endwhile136
  whilebody136:
    MOVEF_F 93.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB140:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 130.0 F.1
    JR_LTF F.0 F.1 whilebody136
  endwhile136:
    MOVEF_F 40.0 VLV_BASE_POWER_15
    MOVEF_F 15.0 VLV_MIN_POWER_15
    MOVEF_F 120.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB144:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB145:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB146:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 80.0 else148_1
    DATA8 layer149
	DATA8 no149
	DATA8 mode8149
	
	MOVEF_8 VGV_RIGHT_SENSOR no149
	SUB8 no149 1 no149
	DIV8 no149 4 layer149
	MATH MOD8 no149 4 no149

	MOVEF_8 2.0 mode8149
	
	INPUT_DEVICE READY_RAW layer149 no149 0 mode8149 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB150:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer152
	DATA8 no152
	DATA8 mode8152
	
	MOVEF_8 VGV_RIGHT_SENSOR no152
	SUB8 no152 1 no152
	DIV8 no152 4 layer152
	MATH MOD8 no152 4 no152

	MOVEF_8 1.0 mode8152
	
	INPUT_DEVICE READY_RAW layer152 no152 0 mode8152 0
    JR_LTEQF VGV_G 100.0 else153_1
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    STRINGS DUPLICATE 'human' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif153
  else153_1:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB156:
    MOVEF_F 40.0 VLV_BASE_POWER_15
    MOVEF_F 15.0 VLV_MIN_POWER_15
    MOVEF_F 50.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB157:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB158:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB159:
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB160:
  else153_2:
  endif153:
    JR endif148
  else148_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else148_2
    JR_LTEQF VGV_R 15.0 else148_2
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_SECOND_BROWN_CHEM
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB162:
    JR endif148
  else148_2:
    CALL EQ_STRING VGV_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else148_3
    STRINGS DUPLICATE 'brown' VGV_EMPTY_ZONE
  else148_3:
  endif148:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB164:
    JR endif134
  else134_1:
  while165:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 VGV_DEG endwhile165
  whilebody165:
    MOVEF_F 90.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB168:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 VGV_DEG whilebody165
  endwhile165:
  else134_2:
  endif134:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB171:
    MOVEF_F 93.0 VGV_A
    CALL EQ_STRING VGV_IS_SECOND_BROWN_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else172_1
    MOVEF_F 90.0 VGV_A
  else172_1:
  endif172:
  while174:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 520.0 endwhile174
  whilebody174:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB177:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 520.0 whilebody174
  endwhile174:
    MULF 40.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF 40.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds184
	MOVEF_32 1000.0 milliseconds184
	DATA32 timer184
	TIMER_WAIT milliseconds184 timer184
	TIMER_READY timer184
    WRITE32 ENDSUB_F_STOP_0:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB185:
    STRINGS DUPLICATE 'False' VGV_TAKE_LEFT
    STRINGS DUPLICATE 'False' VGV_TAKE_RIGHT
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB186:
    STRINGS DUPLICATE 'False' VGV_IS_FIRE
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 60.0 else188_1
    DATA8 layer189
	DATA8 no189
	DATA8 mode8189
	
	MOVEF_8 VGV_RIGHT_SENSOR no189
	SUB8 no189 1 no189
	DIV8 no189 4 layer189
	MATH MOD8 no189 4 no189

	MOVEF_8 2.0 mode8189
	
	INPUT_DEVICE READY_RAW layer189 no189 0 mode8189 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB190:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer192
	DATA8 no192
	DATA8 mode8192
	
	MOVEF_8 VGV_RIGHT_SENSOR no192
	SUB8 no192 1 no192
	DIV8 no192 4 layer192
	MATH MOD8 no192 4 no192

	MOVEF_8 1.0 mode8192
	
	INPUT_DEVICE READY_RAW layer192 no192 0 mode8192 0
    JR_LTEQF VGV_G 100.0 else193_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    STRINGS DUPLICATE 'R: man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif193
  else193_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE 'True' VGV_IS_FIRE
  else193_2:
  endif193:
    JR endif188
  else188_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else188_2
    DATA8 layer197
	DATA8 no197
	DATA8 mode8197
	
	MOVEF_8 VGV_RIGHT_SENSOR no197
	SUB8 no197 1 no197
	DIV8 no197 4 layer197
	MATH MOD8 no197 4 no197

	MOVEF_8 4.0 mode8197
	
	INPUT_DEVICE READY_RAW layer197 no197 0 mode8197 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB198:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA8 layer203
	DATA8 no203
	DATA8 mode8203
	
	MOVEF_8 VGV_RIGHT_SENSOR no203
	SUB8 no203 1 no203
	DIV8 no203 4 layer203
	MATH MOD8 no203 4 no203

	MOVEF_8 1.0 mode8203
	
	INPUT_DEVICE READY_RAW layer203 no203 0 mode8203 0
    JR_LTEQF VGV_W 30.0 else204_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_TAKE_RIGHT
    STRINGS DUPLICATE 'True' VGV_CHEM
  else204_1:
  endif204:
  else188_2:
  endif188:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else205_1
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 50.0 else208_1
    DATA8 layer209
	DATA8 no209
	DATA8 mode8209
	
	MOVEF_8 VGV_LEFT_SENSOR no209
	SUB8 no209 1 no209
	DIV8 no209 4 layer209
	MATH MOD8 no209 4 no209

	MOVEF_8 2.0 mode8209
	
	INPUT_DEVICE READY_RAW layer209 no209 0 mode8209 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB210:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer212
	DATA8 no212
	DATA8 mode8212
	
	MOVEF_8 VGV_LEFT_SENSOR no212
	SUB8 no212 1 no212
	DIV8 no212 4 layer212
	MATH MOD8 no212 4 no212

	MOVEF_8 1.0 mode8212
	
	INPUT_DEVICE READY_RAW layer212 no212 0 mode8212 0
    JR_LTEQF VGV_G 70.0 else213_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB214:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    STRINGS DUPLICATE 'L: man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif213
  else213_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE 'True' VGV_IS_FIRE
  else213_2:
  endif213:
    JR endif208
  else208_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else208_2
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else208_2
    DATA8 layer219
	DATA8 no219
	DATA8 mode8219
	
	MOVEF_8 VGV_LEFT_SENSOR no219
	SUB8 no219 1 no219
	DIV8 no219 4 layer219
	MATH MOD8 no219 4 no219

	MOVEF_8 0.0 mode8219
	
	INPUT_DEVICE READY_RAW layer219 no219 0 mode8219 0
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB221:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB222:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_COL
    DATA8 layer225
	DATA8 no225
	DATA8 mode8225
	
	MOVEF_8 VGV_LEFT_SENSOR no225
	SUB8 no225 1 no225
	DIV8 no225 4 layer225
	MATH MOD8 no225 4 no225

	MOVEF_8 4.0 mode8225
	
	INPUT_DEVICE READY_RAW layer225 no225 0 mode8225 0
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB226:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_W
    MULF 80.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    DATA32 milliseconds230
	MOVEF_32 1000.0 milliseconds230
	DATA32 timer230
	TIMER_WAIT milliseconds230 timer230
	TIMER_READY timer230
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    DATA8 layer232
	DATA8 no232
	DATA8 mode8232
	
	MOVEF_8 VGV_LEFT_SENSOR no232
	SUB8 no232 1 no232
	DIV8 no232 4 layer232
	MATH MOD8 no232 4 no232

	MOVEF_8 1.0 mode8232
	
	INPUT_DEVICE READY_RAW layer232 no232 0 mode8232 0
    JR_LTF VGV_ULTRA 75.0 or234
    JR_EQF VGV_COL 12.0 or234
    JR_LTF VGV_W 30.0 or234
    JR_LTEQF VGV_W 70.0 else233_1
  or234:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_TAKE_LEFT
    JR endif233
  else233_1:
    STRINGS DUPLICATE 'red' VGV_EMPTY_ZONE
  else233_2:
  endif233:
    JR endif208
  else208_2:
    STRINGS DUPLICATE 'red' VGV_EMPTY_ZONE
  else208_3:
  endif208:
  else205_1:
  endif205:
    CALL EQ_STRING VGV_TAKE_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else235_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB237:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 60.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB238:
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 90.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB241:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer242
	DATA8 nos242
	DATA8 busy242
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer242 nos242
	JR_EQ8 0 nos242 motornotbusy242
  motorwaiting242:
	OUTPUT_TEST layer242 nos242 busy242
	JR_EQ8 busy242 0 motornotbusy242
	SLEEP
	JR motorwaiting242
  motornotbusy242:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB243:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 40.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB244:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB245:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer246
	DATA8 nos246
	DATA8 busy246
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer246 nos246
	JR_EQ8 0 nos246 motornotbusy246
  motorwaiting246:
	OUTPUT_TEST layer246 nos246 busy246
	JR_EQ8 busy246 0 motornotbusy246
	SLEEP
	JR motorwaiting246
  motornotbusy246:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB247:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 40.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB248:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB249:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB250:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 90.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB251:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB252:
    DATA32 milliseconds253
	MOVEF_32 1000.0 milliseconds253
	DATA32 timer253
	TIMER_WAIT milliseconds253 timer253
	TIMER_READY timer253
    WRITE32 ENDSUB_F_STOP_0:CALLSUB254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB254:
    JR endif235
  else235_1:
    CALL EQ_STRING VGV_TAKE_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else235_2
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB256:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 60.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB257:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 90.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB260:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer261
	DATA8 nos261
	DATA8 busy261
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer261 nos261
	JR_EQ8 0 nos261 motornotbusy261
  motorwaiting261:
	OUTPUT_TEST layer261 nos261 busy261
	JR_EQ8 busy261 0 motornotbusy261
	SLEEP
	JR motorwaiting261
  motornotbusy261:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB262:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 40.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB263:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB264:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer265
	DATA8 nos265
	DATA8 busy265
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer265 nos265
	JR_EQ8 0 nos265 motornotbusy265
  motorwaiting265:
	OUTPUT_TEST layer265 nos265 busy265
	JR_EQ8 busy265 0 motornotbusy265
	SLEEP
	JR motorwaiting265
  motornotbusy265:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB266:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 40.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB267:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB268:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB269:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_14
    MOVEF_F 90.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB270:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB271:
    DATA32 milliseconds272
	MOVEF_32 1000.0 milliseconds272
	DATA32 timer272
	TIMER_WAIT milliseconds272 timer272
	TIMER_READY timer272
    WRITE32 ENDSUB_F_STOP_0:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB273:
  else235_2:
  endif235:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 110.0 'True'

	DATA8 layer276
	DATA8 nos276
	DATA8 busy276
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer276 nos276
	JR_EQ8 0 nos276 motornotbusy276
  motorwaiting276:
	OUTPUT_TEST layer276 nos276 busy276
	JR_EQ8 busy276 0 motornotbusy276
	SLEEP
	JR motorwaiting276
  motornotbusy276:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB277:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 355.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB279:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB280:
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB281:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB282:
    CALL EQ_STRING VGV_IS_FIRE 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else283_1
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB285:
  else283_1:
  endif283:
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 VGV_EMPTY_ZONE
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 120.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB288:
    MOVEF_F 185.0 VLV_DEG_13
    MOVEF_F 40.0 VLV_POWER_13
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB289:
    MOVEF_F 40.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 120.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB290:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB291 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB291:
    MOVEF_F 400.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB292:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 60.0 else294_1
    DATA8 layer295
	DATA8 no295
	DATA8 mode8295
	
	MOVEF_8 VGV_RIGHT_SENSOR no295
	SUB8 no295 1 no295
	DIV8 no295 4 layer295
	MATH MOD8 no295 4 no295

	MOVEF_8 2.0 mode8295
	
	INPUT_DEVICE READY_RAW layer295 no295 0 mode8295 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB296:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer298
	DATA8 no298
	DATA8 mode8298
	
	MOVEF_8 VGV_RIGHT_SENSOR no298
	SUB8 no298 1 no298
	DIV8 no298 4 layer298
	MATH MOD8 no298 4 no298

	MOVEF_8 1.0 mode8298
	
	INPUT_DEVICE READY_RAW layer298 no298 0 mode8298 0
    JR_LTEQF VGV_G 80.0 else299_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB300:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif299
  else299_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB303 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB303:
  else299_2:
  endif299:
    JR endif294
  else294_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else294_2
    DATA8 layer305
	DATA8 no305
	DATA8 mode8305
	
	MOVEF_8 VGV_RIGHT_SENSOR no305
	SUB8 no305 1 no305
	DIV8 no305 4 layer305
	MATH MOD8 no305 4 no305

	MOVEF_8 4.0 mode8305
	
	INPUT_DEVICE READY_RAW layer305 no305 0 mode8305 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 20.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB307 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB307:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB308:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    DATA8 layer310
	DATA8 no310
	DATA8 mode8310
	
	MOVEF_8 VGV_RIGHT_SENSOR no310
	SUB8 no310 1 no310
	DIV8 no310 4 layer310
	MATH MOD8 no310 4 no310

	MOVEF_8 1.0 mode8310
	
	INPUT_DEVICE READY_RAW layer310 no310 0 mode8310 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 20.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB311:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_LTEQF VGV_W 33.0 else315_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB316:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_TAKE_CHEM_IN_YELLOW
  else315_1:
  endif315:
  else294_2:
  endif294:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_14
    MOVEF_F 260.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB317:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB318:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 260.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB319:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB320 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB320:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB321:
    STRINGS DUPLICATE 'False' VGV_IS_SECOND_YELLOW_CHEM
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else322_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 85.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB324 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB324:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 80.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB325:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB326:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB327:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_R '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_LTEQF VGV_R 50.0 else332_1
    DATA8 layer333
	DATA8 no333
	DATA8 mode8333
	
	MOVEF_8 VGV_LEFT_SENSOR no333
	SUB8 no333 1 no333
	DIV8 no333 4 layer333
	MATH MOD8 no333 4 no333

	MOVEF_8 2.0 mode8333
	
	INPUT_DEVICE READY_RAW layer333 no333 0 mode8333 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB334:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer336
	DATA8 no336
	DATA8 mode8336
	
	MOVEF_8 VGV_LEFT_SENSOR no336
	SUB8 no336 1 no336
	DIV8 no336 4 layer336
	MATH MOD8 no336 4 no336

	MOVEF_8 1.0 mode8336
	
	INPUT_DEVICE READY_RAW layer336 no336 0 mode8336 0
    JR_LTEQF VGV_G 60.0 else337_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif337
  else337_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB340:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 50.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB341 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB341:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB342:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB343:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB344:
  else337_2:
  endif337:
    JR endif332
  else332_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else332_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB346:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 70.0 else348_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_IS_SECOND_YELLOW_CHEM
    STRINGS DUPLICATE 'True' VLV_FINISH_FORWARD_16
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB349:
    JR endif348
  else348_1:
    CALL EQ_STRING VGV_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else348_2
    STRINGS DUPLICATE 'yellow' VGV_EMPTY_ZONE
  else348_2:
  endif348:
    JR endif332
  else332_2:
    CALL EQ_STRING VGV_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else332_3
    STRINGS DUPLICATE 'yellow' VGV_EMPTY_ZONE
  else332_3:
  endif332:
    JR endif322
  else322_1:
    MOVEF_F 165.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_POWER_13
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB352:
  else322_2:
  endif322:
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_POWER_13
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB353:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB354:
    CALL EQ_STRING VGV_IS_SECOND_YELLOW_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else355_1
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 1.0 VGV_A
    JR endif355
  else355_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    ADDF F.0 5.0 VGV_A
  else355_2:
  endif355:
  while361:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 300.0 endwhile361
  whilebody361:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB364:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 300.0 whilebody361
  endwhile361:
    MULF 40.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF 40.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds371
	MOVEF_32 1000.0 milliseconds371
	DATA32 timer371
	TIMER_WAIT milliseconds371 timer371
	TIMER_READY timer371
    WRITE32 ENDSUB_F_STOP_0:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB372:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_R '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 40.0 else377_1
    DATA8 layer378
	DATA8 no378
	DATA8 mode8378
	
	MOVEF_8 VGV_LEFT_SENSOR no378
	SUB8 no378 1 no378
	DIV8 no378 4 layer378
	MATH MOD8 no378 4 no378

	MOVEF_8 2.0 mode8378
	
	INPUT_DEVICE READY_RAW layer378 no378 0 mode8378 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB379:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer381
	DATA8 no381
	DATA8 mode8381
	
	MOVEF_8 VGV_LEFT_SENSOR no381
	SUB8 no381 1 no381
	DIV8 no381 4 layer381
	MATH MOD8 no381 4 no381

	MOVEF_8 1.0 mode8381
	
	INPUT_DEVICE READY_RAW layer381 no381 0 mode8381 0
    JR_LTEQF VGV_G 50.0 else382_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif382
  else382_1:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB384:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB386:
  else382_2:
  endif382:
    JR endif377
  else377_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else377_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB388:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    STRINGS DUPLICATE 'False' VGV_CH
    JR_GTEQF VGV_ULTRA 75.0 else390_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif390
  else390_1:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 20.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB392 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB392:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB393 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB393:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB397:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
    JR_GTEQF VGV_ULTRA 75.0 else399_1
    STRINGS DUPLICATE 'True' VGV_CH
  else399_1:
  endif399:
  else390_2:
  endif390:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 75.0 else403_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB404:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 80.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB405:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB406:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer407
	DATA8 nos407
	DATA8 busy407
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer407 nos407
	JR_EQ8 0 nos407 motornotbusy407
  motorwaiting407:
	OUTPUT_TEST layer407 nos407 busy407
	JR_EQ8 busy407 0 motornotbusy407
	SLEEP
	JR motorwaiting407
  motornotbusy407:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_14
    MOVEF_F 160.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB408:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer409
	DATA8 nos409
	DATA8 busy409
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer409 nos409
	JR_EQ8 0 nos409 motornotbusy409
  motorwaiting409:
	OUTPUT_TEST layer409 nos409 busy409
	JR_EQ8 busy409 0 motornotbusy409
	SLEEP
	JR motorwaiting409
  motornotbusy409:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 160.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB411:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB412:
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB413:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB414:
  else403_1:
  endif403:
  else377_2:
  endif377:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 5.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB415:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB416:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 250.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB418:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 115.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB419:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB420:
    MOVEF_F 1200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB421:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB422:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 120.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB423 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB423:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB424:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_U
  while426:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 195.0 endwhile426
  whilebody426:
    MOVEF_F 95.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB429:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 195.0 whilebody426
  endwhile426:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 15.0 VLV_MIN_POWER_15
    MOVEF_F 120.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB432:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB433:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB434:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 50.0 else436_1
    DATA8 layer437
	DATA8 no437
	DATA8 mode8437
	
	MOVEF_8 VGV_LEFT_SENSOR no437
	SUB8 no437 1 no437
	DIV8 no437 4 layer437
	MATH MOD8 no437 4 no437

	MOVEF_8 2.0 mode8437
	
	INPUT_DEVICE READY_RAW layer437 no437 0 mode8437 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB438:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer440
	DATA8 no440
	DATA8 mode8440
	
	MOVEF_8 VGV_LEFT_SENSOR no440
	SUB8 no440 1 no440
	DIV8 no440 4 layer440
	MATH MOD8 no440 4 no440

	MOVEF_8 1.0 mode8440
	
	INPUT_DEVICE READY_RAW layer440 no440 0 mode8440 0
    JR_LTEQF VGV_G 80.0 else441_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif441
  else441_1:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB443:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB445:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 50.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB446:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB447:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB448:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB449:
  else441_2:
  endif441:
    JR endif436
  else436_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else436_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB451:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 90.0 else456_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VLV_FINISH_FORWARD_16
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB457:
    JR endif456
  else456_1:
    CALL EQ_STRING VGV_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else456_2
    STRINGS DUPLICATE 'green' VGV_EMPTY_ZONE
  else456_2:
  endif456:
    JR endif436
  else436_2:
    CALL EQ_STRING VGV_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else436_3
    STRINGS DUPLICATE 'green' VGV_EMPTY_ZONE
  else436_3:
  endif436:
    CALL EQ_STRING VGV_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or461
    CALL EQ_STRING VGV_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else460_1
  or461:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB464:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 70.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB465:
    JR endif460
  else460_1:
    MOVEF_F 80.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_POWER_13
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB466:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 70.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB467:
  else460_2:
  endif460:
    STRINGS DUPLICATE 'False' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'none' VGV_OBJECT
    STRINGS DUPLICATE 'False' VGV_IS_ON_SECOND_BLUE
    WRITE32 ENDSUB_F_STOP_0:CALLSUB468 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB468:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB469:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 50.0 else471_1
    DATA8 layer472
	DATA8 no472
	DATA8 mode8472
	
	MOVEF_8 VGV_LEFT_SENSOR no472
	SUB8 no472 1 no472
	DIV8 no472 4 layer472
	MATH MOD8 no472 4 no472

	MOVEF_8 2.0 mode8472
	
	INPUT_DEVICE READY_RAW layer472 no472 0 mode8472 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB473:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer475
	DATA8 no475
	DATA8 mode8475
	
	MOVEF_8 VGV_LEFT_SENSOR no475
	SUB8 no475 1 no475
	DIV8 no475 4 layer475
	MATH MOD8 no475 4 no475

	MOVEF_8 1.0 mode8475
	
	INPUT_DEVICE READY_RAW layer475 no475 0 mode8475 0
    JR_LTEQF VGV_G 100.0 else476_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif476
  else476_1:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB478:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB480:
  else476_2:
  endif476:
    JR endif471
  else471_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else471_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB482:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 80.0 else487_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 145.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB488:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 145.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB489:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB490:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB491:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB493:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer494
	DATA8 nos494
	DATA8 busy494
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer494 nos494
	JR_EQ8 0 nos494 motornotbusy494
  motorwaiting494:
	OUTPUT_TEST layer494 nos494 busy494
	JR_EQ8 busy494 0 motornotbusy494
	SLEEP
	JR motorwaiting494
  motornotbusy494:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB495:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB496:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 35.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB497:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB498:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer499
	DATA8 nos499
	DATA8 busy499
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer499 nos499
	JR_EQ8 0 nos499 motornotbusy499
  motorwaiting499:
	OUTPUT_TEST layer499 nos499 busy499
	JR_EQ8 busy499 0 motornotbusy499
	SLEEP
	JR motorwaiting499
  motornotbusy499:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB500:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB501:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 40.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB502:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB503:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB504:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB505:
  else487_1:
  endif487:
  else471_2:
  endif471:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else506_1
    STRINGS DUPLICATE 'True' VGV_IS_ON_SECOND_BLUE
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB508:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB509:
  while510:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 320.0 endwhile510
  whilebody510:
    MOVEF_F 95.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB513:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 320.0 whilebody510
  endwhile510:
    MOVEF_F 40.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 100.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB516:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB517:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB518:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_R '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_LTEQF VGV_R 50.0 else523_1
    DATA8 layer524
	DATA8 no524
	DATA8 mode8524
	
	MOVEF_8 VGV_LEFT_SENSOR no524
	SUB8 no524 1 no524
	DIV8 no524 4 layer524
	MATH MOD8 no524 4 no524

	MOVEF_8 2.0 mode8524
	
	INPUT_DEVICE READY_RAW layer524 no524 0 mode8524 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB525:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer527
	DATA8 no527
	DATA8 mode8527
	
	MOVEF_8 VGV_LEFT_SENSOR no527
	SUB8 no527 1 no527
	DIV8 no527 4 layer527
	MATH MOD8 no527 4 no527

	MOVEF_8 1.0 mode8527
	
	INPUT_DEVICE READY_RAW layer527 no527 0 mode8527 0
    JR_LTEQF VGV_G 80.0 else528_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB529:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif528
  else528_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB532:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 50.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB533:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB534:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB535:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB536:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 50.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB537:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB538:
  else528_2:
  endif528:
    JR endif523
  else523_1:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB539:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 80.0 else541_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else541_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VLV_FINISH_FORWARD_16
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB543:
    JR endif541
  else541_1:
    CALL EQ_STRING VGV_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else541_2
    STRINGS DUPLICATE 'blue' VGV_EMPTY_ZONE
  else541_2:
  endif541:
  else523_2:
  endif523:
  else506_1:
  endif506:
    STRINGS VALUE_FORMATTED VGV_MEN_COUNT '%g' 99 S.3
    CALL TEXT.APPEND S.3 ' ' S.2
    STRINGS VALUE_FORMATTED VGV_FIRE_COUNT '%g' 99 S.3
    CALL TEXT.APPEND S.2 S.3 S.1
    CALL TEXT.APPEND S.1 ' ' S.0
    CALL TEXT.APPEND S.0 VGV_CHEM VGV_T
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 VGV_T
    CALL LCD.TEXT 1.0 0.0 40.0 2.0 VGV_EMPTY_ZONE
    STRINGS DUPLICATE 'none' VGV_WHITE_OBJECT
    JR_GTEQF VGV_MEN_COUNT 2.0 else554_1
    STRINGS DUPLICATE 'man' VGV_WHITE_OBJECT
    JR endif554
  else554_1:
    JR_GTEQF VGV_FIRE_COUNT 2.0 else554_2
    STRINGS DUPLICATE 'fire' VGV_WHITE_OBJECT
    JR endif554
  else554_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else554_3
    STRINGS DUPLICATE 'chem' VGV_WHITE_OBJECT
  else554_3:
  endif554:
    CALL EQ_STRING VGV_WHITE_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else556_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif556
  else556_1:
    CALL EQ_STRING VGV_WHITE_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else556_2
    STRINGS DUPLICATE 'white' VGV_EMPTY_ZONE
  else556_2:
  endif556:
    CALL EQ_STRING VGV_WHITE_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or561
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or561
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else560_1
  or561:
    CALL EQ_STRING VGV_IS_ON_SECOND_BLUE 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else565_1
    CALL EQ_STRING VGV_IS_SECOND_BLUE_OBJECT_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else567_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 30.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB569:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 30.0 VLV_MIN_POWER_15
    MOVEF_F 50.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB570:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    JR endif567
  else567_1:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 10.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB572:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB573:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB574:
  else567_2:
  endif567:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB576:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB577:
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB578:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB579:
    JR endif565
  else565_1:
    CALL EQ_STRING VGV_IS_FIRST_BLUE_OBJECT_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else580_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB582:
    MOVEF_F 215.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_POWER_13
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB583:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 100.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB584:
    JR endif580
  else580_1:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 75.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB585:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 75.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB586:
  else580_2:
  endif580:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB587 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB587:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB589 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB589:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB590:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB591:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB592:
  else565_2:
  endif565:
    MOVEF_F 100.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB593:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB594:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB595:
    DATA8 layer596
	DATA8 no596
	DATA8 mode8596
	
	MOVEF_8 VGV_LINE no596
	SUB8 no596 1 no596
	DIV8 no596 4 layer596
	MATH MOD8 no596 4 no596

	MOVEF_8 2.0 mode8596
	
	INPUT_DEVICE READY_RAW layer596 no596 0 mode8596 0
  while597:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 130.0 endwhile597
  whilebody597:
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB600:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 130.0 whilebody597
  endwhile597:
  while603:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_EQF F.0 4.0 endwhile603
  whilebody603:
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB605:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_NEQF F.0 4.0 whilebody603
  endwhile603:
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else607_1
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else607_1
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 100.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB610:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB611 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB611:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB612:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB613:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 30.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB614:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 30.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB615:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB616:
    JR endif607
  else607_1:
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else607_2
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 100.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB618:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB619:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB620:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB621:
    JR endif607
  else607_2:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else607_3
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 170.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB623 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB623:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB624:
  else607_3:
  endif607:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else625_1
    DATA8 layer627
	DATA8 no627
	DATA8 mode8627
	
	MOVEF_8 VGV_LINE no627
	SUB8 no627 1 no627
	DIV8 no627 4 layer627
	MATH MOD8 no627 4 no627

	MOVEF_8 2.0 mode8627
	
	INPUT_DEVICE READY_RAW layer627 no627 0 mode8627 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB628:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB629 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB629:
    MOVEF_F 350.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_POWER_13
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB630 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB630:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 100.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB631 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB631:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB632 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB632:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB633:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB635:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer636
	DATA8 nos636
	DATA8 busy636
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer636 nos636
	JR_EQ8 0 nos636 motornotbusy636
  motorwaiting636:
	OUTPUT_TEST layer636 nos636 busy636
	JR_EQ8 busy636 0 motornotbusy636
	SLEEP
	JR motorwaiting636
  motornotbusy636:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 65.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB637 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB637:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 65.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB638 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB638:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB639 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB639:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer640
	DATA8 nos640
	DATA8 busy640
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer640 nos640
	JR_EQ8 0 nos640 motornotbusy640
  motorwaiting640:
	OUTPUT_TEST layer640 nos640 busy640
	JR_EQ8 busy640 0 motornotbusy640
	SLEEP
	JR motorwaiting640
  motornotbusy640:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB641:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 40.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB642 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB642:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB643:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB644:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 185.0 'True'

	DATA8 layer648
	DATA8 nos648
	DATA8 busy648
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer648 nos648
	JR_EQ8 0 nos648 motornotbusy648
  motorwaiting648:
	OUTPUT_TEST layer648 nos648 busy648
	JR_EQ8 busy648 0 motornotbusy648
	SLEEP
	JR motorwaiting648
  motornotbusy648:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB649 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB649:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB650 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB650:
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_POWER_13
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB651 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB651:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 100.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB652:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB653:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 200.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB654:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB655 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB655:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_14
    MOVEF_F 210.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB656 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB656:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB657:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB658 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB658:
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_POWER_13
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB659:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB660:
  else625_1:
  endif625:
    CALL EQ_STRING VGV_WHITE_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else661_1
    DATA8 layer663
	DATA8 no663
	DATA8 mode8663
	
	MOVEF_8 VGV_LINE no663
	SUB8 no663 1 no663
	DIV8 no663 4 layer663
	MATH MOD8 no663 4 no663

	MOVEF_8 0.0 mode8663
	
	INPUT_DEVICE READY_RAW layer663 no663 0 mode8663 0
    MOVEF_F 100.0 VGV_MINUS_DEG
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else664_1
    ADDF VGV_MINUS_DEG 200.0 VGV_MINUS_DEG
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB667 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB667:
  else664_1:
  endif664:
    SUBF 420.0 VGV_MINUS_DEG VLV_DEG_13
    MOVEF_F 30.0 VLV_POWER_13
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB669:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 100.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB670:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB671 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB671:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB672:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB673 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB673:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB674:
    STRINGS DUPLICATE 'False' VGV_CH
    DATA8 layer675
	DATA8 no675
	DATA8 mode8675
	
	MOVEF_8 VGV_RIGHT_SENSOR no675
	SUB8 no675 1 no675
	DIV8 no675 4 layer675
	MATH MOD8 no675 4 no675

	MOVEF_8 4.0 mode8675
	
	INPUT_DEVICE READY_RAW layer675 no675 0 mode8675 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB676:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    JR_LTEQF VGV_W 40.0 else678_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif678
  else678_1:
    DATA8 layer679
	DATA8 no679
	DATA8 mode8679
	
	MOVEF_8 VGV_RIGHT_SENSOR no679
	SUB8 no679 1 no679
	DIV8 no679 4 layer679
	MATH MOD8 no679 4 no679

	MOVEF_8 0.0 mode8679
	
	INPUT_DEVICE READY_RAW layer679 no679 0 mode8679 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 25.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB681:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB682:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 F.0
    JR_NEQF F.0 12.0 else683_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif683
  else683_1:
    DATA8 layer685
	DATA8 no685
	DATA8 mode8685
	
	MOVEF_8 VGV_RIGHT_SENSOR no685
	SUB8 no685 1 no685
	DIV8 no685 4 layer685
	MATH MOD8 no685 4 no685

	MOVEF_8 4.0 mode8685
	
	INPUT_DEVICE READY_RAW layer685 no685 0 mode8685 0
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB686:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    JR_LTEQF VGV_W 40.0 else688_1
    STRINGS DUPLICATE 'True' VGV_CH
  else688_1:
  endif688:
  else683_2:
  endif683:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 25.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB689:
  else678_2:
  endif678:
    CALL EQ_STRING VGV_CH 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else690_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB692 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB692:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB693:
    MOVEF_F 30.0 VLV_DEG_13
    MOVEF_F -30.0 VLV_POWER_13
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB694 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB694:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 80.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB695:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB696 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB696:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB697 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB697:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB698:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer699
	DATA8 nos699
	DATA8 busy699
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer699 nos699
	JR_EQ8 0 nos699 motornotbusy699
  motorwaiting699:
	OUTPUT_TEST layer699 nos699 busy699
	JR_EQ8 busy699 0 motornotbusy699
	SLEEP
	JR motorwaiting699
  motornotbusy699:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB700:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 35.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB701:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB702:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer703
	DATA8 nos703
	DATA8 busy703
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer703 nos703
	JR_EQ8 0 nos703 motornotbusy703
  motorwaiting703:
	OUTPUT_TEST layer703 nos703 busy703
	JR_EQ8 busy703 0 motornotbusy703
	SLEEP
	JR motorwaiting703
  motornotbusy703:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB704:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB705 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB705:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 35.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB706 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB706:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB707:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB708 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB708:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 90.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB710 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB710:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB711 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB711:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB712 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB712:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_14
    MOVEF_F 490.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB713:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB714:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 120.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB715:
    JR endif690
  else690_1:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 230.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB717 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB717:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer718
	DATA8 nos718
	DATA8 busy718
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer718 nos718
	JR_EQ8 0 nos718 motornotbusy718
  motorwaiting718:
	OUTPUT_TEST layer718 nos718 busy718
	JR_EQ8 busy718 0 motornotbusy718
	SLEEP
	JR motorwaiting718
  motornotbusy718:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB719:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB720:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 60.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB721 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB721:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB722 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB722:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 70.0 VLV_DEG_14
    MOVEF_F 25.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB723 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB723:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer724
	DATA8 nos724
	DATA8 busy724
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer724 nos724
	JR_EQ8 0 nos724 motornotbusy724
  motorwaiting724:
	OUTPUT_TEST layer724 nos724 busy724
	JR_EQ8 busy724 0 motornotbusy724
	SLEEP
	JR motorwaiting724
  motornotbusy724:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 230.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB726:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_14
    MOVEF_F 80.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB727:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 110.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB728:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 170.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB729:
  else690_2:
  endif690:
    JR endif661
  else661_1:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else661_2
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB731 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB731:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 50.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB732 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB732:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB733:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB734:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 140.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB735:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB736:
  else661_2:
  endif661:
    MOVEF_F 520.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_POWER_13
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB737:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 370.0 'True'

	DATA8 layer740
	DATA8 nos740
	DATA8 busy740
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer740 nos740
	JR_EQ8 0 nos740 motornotbusy740
  motorwaiting740:
	OUTPUT_TEST layer740 nos740 busy740
	JR_EQ8 busy740 0 motornotbusy740
	SLEEP
	JR motorwaiting740
  motornotbusy740:
    JR endif560
  else560_1:
    CALL EQ_STRING VGV_IS_ON_SECOND_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else741_1
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB743 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB743:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB744 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB744:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_A
    MOVEF_F 510.0 VGV_DEG
    CALL EQ_STRING VGV_IS_FIRST_BLUE_OBJECT_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else746_1
    SUBF VGV_DEG 290.0 VGV_DEG
  else746_1:
  endif746:
  while749:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 200.0 F.1
    JR_GTEQF F.0 F.1 endwhile749
  whilebody749:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB753:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 200.0 F.1
    JR_LTF F.0 F.1 whilebody749
  endwhile749:
    MOVEF_F 40.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 100.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB757 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB757:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB758 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB758:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB759:
  else741_1:
  endif741:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB760:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB761:
    DATA8 layer762
	DATA8 no762
	DATA8 mode8762
	
	MOVEF_8 VGV_LINE no762
	SUB8 no762 1 no762
	DIV8 no762 4 layer762
	MATH MOD8 no762 4 no762

	MOVEF_8 0.0 mode8762
	
	INPUT_DEVICE READY_RAW layer762 no762 0 mode8762 0
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_A
  while764:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 330.0 endwhile764
  whilebody764:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB767 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB767:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 330.0 whilebody764
  endwhile764:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB770 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB770:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while771:
    JR_LTEQF VGV_P 20.0 endwhile771
  whilebody771:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB772 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB772:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB773 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB773:
    JR_GTF VGV_P 20.0 whilebody771
  endwhile771:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB774:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 200.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'Fales' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB775 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB775:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB778 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB778:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while779:
    JR_GTEQF VGV_P 20.0 endwhile779
  whilebody779:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB780 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB780:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_LTF VGV_P 20.0 whilebody779
  endwhile779:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer782
	DATA8 nos782
	DATA8 busy782
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer782 nos782
	JR_EQ8 0 nos782 motornotbusy782
  motorwaiting782:
	OUTPUT_TEST layer782 nos782 busy782
	JR_EQ8 busy782 0 motornotbusy782
	SLEEP
	JR motorwaiting782
  motornotbusy782:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB783:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB784 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB784:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB785 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB785:
  while786:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 200.0 endwhile786
  whilebody786:
    MOVEF_F -100.0 VLV_L_7
    WRITE32 ENDSUB_F_LINE_SLOW_1:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_SLOW_1
CALLSUB789:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 200.0 whilebody786
  endwhile786:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB792:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while793:
    JR_LTEQF VGV_P 10.0 endwhile793
  whilebody793:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB794:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F -100.0 VLV_L_7
    WRITE32 ENDSUB_F_LINE_SLOW_1:CALLSUB795 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_SLOW_1
CALLSUB795:
    JR_GTF VGV_P 10.0 whilebody793
  endwhile793:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB796:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB797 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB797:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB798 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB798:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB799:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB800:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB801:
  else560_2:
  endif560:
    DATA8 layer802
	DATA8 no802
	DATA8 mode8802
	
	MOVEF_8 VGV_LINE no802
	SUB8 no802 1 no802
	DIV8 no802 4 layer802
	MATH MOD8 no802 4 no802

	MOVEF_8 0.0 mode8802
	
	INPUT_DEVICE READY_RAW layer802 no802 0 mode8802 0
    CALL EQ_STRING VGV_EMPTY_ZONE 'brown' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or804
    CALL EQ_STRING VGV_EMPTY_ZONE 'red' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else803_1
  or804:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB808 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB808:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB809 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB809:
    MOVEF_F 3000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB810 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB810:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB811 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB811:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_14
    MOVEF_F 190.0 VLV_DEG_14
    MOVEF_F 40.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB812 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB812:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 180.0 VLV_DEG_14
    MOVEF_F 40.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB814 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB814:
    MULF 40.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
    MULF 45.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setSpeedB
	OUTPUT_SPEED 0 2 setSpeedB
	OUTPUT_START 0 2
    WRITE32 ENDSUB_F_RESET_0:CALLSUB819 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB819:
    CALL EQ_STRING VGV_EMPTY_ZONE 'brown' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else820_1
  while822:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 650.0 endwhile822
  whilebody822:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 650.0 whilebody822
  endwhile822:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB827 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB827:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer828
	DATA8 nos828
	DATA8 busy828
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer828 nos828
	JR_EQ8 0 nos828 motornotbusy828
  motorwaiting828:
	OUTPUT_TEST layer828 nos828 busy828
	JR_EQ8 busy828 0 motornotbusy828
	SLEEP
	JR motorwaiting828
  motornotbusy828:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 30.0 VLV_MIN_POWER_10
    MOVEF_F 650.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB829 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB829:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB830 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB830:
    JR endif820
  else820_1:
  while831:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 1250.0 endwhile831
  whilebody831:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 1250.0 whilebody831
  endwhile831:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB836:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer837
	DATA8 nos837
	DATA8 busy837
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer837 nos837
	JR_EQ8 0 nos837 motornotbusy837
  motorwaiting837:
	OUTPUT_TEST layer837 nos837 busy837
	JR_EQ8 busy837 0 motornotbusy837
	SLEEP
	JR motorwaiting837
  motornotbusy837:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 30.0 VLV_MIN_POWER_10
    MOVEF_F 1250.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB838:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB839 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB839:
  else820_2:
  endif820:
    WRITE32 ENDSUB_F_PREPARE_GRABBER_0:CALLSUB840 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PREPARE_GRABBER_0
CALLSUB840:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 180.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB842 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB842:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 30.0 VLV_DEG_14
    MOVEF_F 40.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB843 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB843:
    MOVEF_8 -30.0 setSpeedB
	OUTPUT_SPEED 0 2 setSpeedB
	OUTPUT_START 0 2
    MOVEF_F 2000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB845 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB845:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB846 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB846:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB847 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB847:
    MOVEF_F 3500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB848 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB848:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB849 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB849:
    JR endif803
  else803_1:
    CALL EQ_STRING VGV_EMPTY_ZONE 'green' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or850
    CALL EQ_STRING VGV_EMPTY_ZONE 'blue' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else803_2
  or850:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB854 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB854:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB855 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB855:
    MOVEF_F 3000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB856 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB856:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB857 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB857:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 110.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB858 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB858:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB859 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB859:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 365.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB860 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB860:
    CALL EQ_STRING VGV_EMPTY_ZONE 'green' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else861_1
    MOVEF_F 35.0 VLV_BASE_POWER_10
    MOVEF_F 35.0 VLV_MIN_POWER_10
    MOVEF_F 1250.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB863 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB863:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB864 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB864:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer865
	DATA8 nos865
	DATA8 busy865
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer865 nos865
	JR_EQ8 0 nos865 motornotbusy865
  motorwaiting865:
	OUTPUT_TEST layer865 nos865 busy865
	JR_EQ8 busy865 0 motornotbusy865
	SLEEP
	JR motorwaiting865
  motornotbusy865:
    MOVEF_F 35.0 VLV_BASE_POWER_10
    MOVEF_F 35.0 VLV_MIN_POWER_10
    MOVEF_F 1250.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB866 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB866:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB867 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB867:
    JR endif861
  else861_1:
    MOVEF_F 25.0 VLV_BASE_POWER_10
    MOVEF_F 25.0 VLV_MIN_POWER_10
    MOVEF_F 650.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB868 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB868:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB869 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB869:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer870
	DATA8 nos870
	DATA8 busy870
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer870 nos870
	JR_EQ8 0 nos870 motornotbusy870
  motorwaiting870:
	OUTPUT_TEST layer870 nos870 busy870
	JR_EQ8 busy870 0 motornotbusy870
	SLEEP
	JR motorwaiting870
  motornotbusy870:
    MOVEF_F 25.0 VLV_BASE_POWER_10
    MOVEF_F 25.0 VLV_MIN_POWER_10
    MOVEF_F 650.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB871 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB871:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB872 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB872:
  else861_2:
  endif861:
    WRITE32 ENDSUB_F_PREPARE_GRABBER_0:CALLSUB873 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PREPARE_GRABBER_0
CALLSUB873:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB875 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB875:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB876 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB876:
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB877 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB877:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB878 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB878:
    JR endif803
  else803_2:
    CALL EQ_STRING VGV_EMPTY_ZONE 'white' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else803_3
    WRITE32 ENDSUB_F_STOP_0:CALLSUB880 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB880:
    MOVEF_F 25.0 VLV_BASE_POWER_10
    MOVEF_F 25.0 VLV_MIN_POWER_10
    MOVEF_F 650.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB881 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB881:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB882 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB882:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer883
	DATA8 nos883
	DATA8 busy883
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer883 nos883
	JR_EQ8 0 nos883 motornotbusy883
  motorwaiting883:
	OUTPUT_TEST layer883 nos883 busy883
	JR_EQ8 busy883 0 motornotbusy883
	SLEEP
	JR motorwaiting883
  motornotbusy883:
    MOVEF_F 25.0 VLV_BASE_POWER_10
    MOVEF_F 25.0 VLV_MIN_POWER_10
    MOVEF_F 650.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB884 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB884:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB885 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB885:
    WRITE32 ENDSUB_F_PREPARE_GRABBER_0:CALLSUB886 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PREPARE_GRABBER_0
CALLSUB886:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB888 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB888:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB889 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB889:
    MOVEF_F 2000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB890 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB890:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB891 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB891:
    JR endif803
  else803_3:
    CALL EQ_STRING VGV_EMPTY_ZONE 'yellow' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else803_4
    WRITE32 ENDSUB_F_STOP_0:CALLSUB893 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB893:
    MOVEF_F 25.0 VLV_BASE_POWER_10
    MOVEF_F 25.0 VLV_MIN_POWER_10
    MOVEF_F 1250.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB894 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB894:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB895 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB895:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer896
	DATA8 nos896
	DATA8 busy896
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer896 nos896
	JR_EQ8 0 nos896 motornotbusy896
  motorwaiting896:
	OUTPUT_TEST layer896 nos896 busy896
	JR_EQ8 busy896 0 motornotbusy896
	SLEEP
	JR motorwaiting896
  motornotbusy896:
    MOVEF_F 25.0 VLV_BASE_POWER_10
    MOVEF_F 25.0 VLV_MIN_POWER_10
    MOVEF_F 1250.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB897 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB897:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB898 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB898:
    WRITE32 ENDSUB_F_PREPARE_GRABBER_0:CALLSUB899 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PREPARE_GRABBER_0
CALLSUB899:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB901 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB901:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB902 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB902:
    MOVEF_F 2000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB903 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB903:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB904 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB904:
    JR endif803
  else803_4:
    WRITE32 ENDSUB_F_PREPARE_GRABBER_0:CALLSUB905 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PREPARE_GRABBER_0
CALLSUB905:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB907 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB907:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB908 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB908:
    MOVEF_F 2000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB909 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB909:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB910 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB910:
  else803_5:
  endif803:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB911 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB911:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 30.0 VLV_MIN_POWER_10
    MOVEF_F 150.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB912 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB912:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB913 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB913:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_14
    MOVEF_F 325.0 VLV_DEG_14
    MOVEF_F 40.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB914 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB914:
    MULF 50.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 60.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    MOVEF_F 4000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB919 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB919:
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_25
    WRITE32 ENDSUB_F_TAKE_CUBES_1:CALLSUB920 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_1
CALLSUB920:
    STRINGS DUPLICATE VGV_BROWN_MAN VLV_LONG_22
    STRINGS DUPLICATE VGV_RED_MAN VLV_NEAR_22
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_22
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB921 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB921:
    STRINGS DUPLICATE VGV_WHITE_MAN VLV_LONG_22
    STRINGS DUPLICATE VGV_YELLOW_MAN VLV_NEAR_22
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_22
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB922 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB922:
    STRINGS DUPLICATE VGV_BLUE_MAN VLV_LONG_22
    STRINGS DUPLICATE VGV_GREEN_MAN VLV_NEAR_22
    STRINGS DUPLICATE 'False' VLV_SHOULD_MOVE_BACKWARD_22
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB923 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB923:
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_26
    WRITE32 ENDSUB_F_FINISH_AFTER_DELIVERIES_1:CALLSUB924 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_DELIVERIES_1
CALLSUB924:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 20.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB925 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB925:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB926 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB926:
    STRINGS DUPLICATE 'True' VLV_TO_DELAY_27
    WRITE32 ENDSUB_F_SHOW_TIME_1:CALLSUB927 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SHOW_TIME_1
CALLSUB927:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_MOVEMENT_INIT_1:
    MULF VLV_POWER_1 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF VLV_POWER_1 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
RETSUB_F_MOVEMENT_INIT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVEMENT_INIT_1:
SUB_F_DELAY_1:
    DATA32 milliseconds932
	MOVEF_32 VLV_TIME_2 milliseconds932
	DATA32 timer932
	TIMER_WAIT milliseconds932 timer932
	TIMER_READY timer932
RETSUB_F_DELAY_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_1:
SUB_F_RESET_0:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 2
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_STOP_0:
    OUTPUT_POWER 0 3 0
	OUTPUT_STOP 0 3 1
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_READ_PERCENT_1:
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf939
    DATA8 flag939
    DIVF F.1 F.2 tmpf939
    CP_EQF 0.0 F.2 flag939
    SELECTF flag939 0.0 tmpf939 F.0

    MULF F.0 100.0 VLV_PERCENT_5
RETSUB_F_READ_PERCENT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_READ_PERCENT_1:
SUB_F_LINE_1:
    JR_NEQF VLV_L_6 -100.0 else941_1
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf945
    DATA8 flag945
    DIVF F.1 F.2 tmpf945
    CP_EQF 0.0 F.2 flag945
    SELECTF flag945 0.0 tmpf945 F.0

    MULF F.0 150.0 VLV_L_6
  else941_1:
  endif941:
    SUBF VLV_L_6 50.0 VLV_ERR_6
    SUBF VLV_ERR_6 VGV_LAST_ERR VLV_DIFF_6
    MULF VLV_ERR_6 1.0 F.0
    MULF VLV_DIFF_6 7.0 F.1
    ADDF F.0 F.1 VLV_DELTA_6
    SUBF 80.0 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF 80.0 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VLV_LEFT_POWER_6 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_6 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_6 VGV_LAST_ERR
    DATA32 milliseconds958
	MOVEF_32 5.0 milliseconds958
	DATA32 timer958
	TIMER_WAIT milliseconds958 timer958
	TIMER_READY timer958
RETSUB_F_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_1:
SUB_F_LINE_SLOW_1:
    JR_NEQF VLV_L_7 -100.0 else959_1
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf963
    DATA8 flag963
    DIVF F.1 F.2 tmpf963
    CP_EQF 0.0 F.2 flag963
    SELECTF flag963 0.0 tmpf963 F.0

    MULF F.0 150.0 VLV_L_7
  else959_1:
  endif959:
    SUBF VLV_L_7 50.0 VLV_ERR_7
    SUBF VLV_ERR_7 VGV_LAST_ERR VLV_DIFF_7
    MULF VLV_ERR_7 0.5 F.0
    MULF VLV_DIFF_7 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_7
    SUBF 30.0 VLV_DELTA_7 VLV_LEFT_POWER_7
    ADDF 30.0 VLV_DELTA_7 VLV_RIGHT_POWER_7
    MULF VLV_LEFT_POWER_7 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_7 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_7 VGV_LAST_ERR
    DATA32 milliseconds976
	MOVEF_32 5.0 milliseconds976
	DATA32 timer976
	TIMER_WAIT milliseconds976 timer976
	TIMER_READY timer976
RETSUB_F_LINE_SLOW_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_SLOW_1:
SUB_F_ULTRA_LINE_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VLV_L_8
    SUBF VLV_L_8 VLV_A_8 VLV_ERR_8
    SUBF VLV_ERR_8 VGV_LAST_ERR VLV_DIFF_8
    MULF VLV_ERR_8 0.8 F.0
    MULF VLV_DIFF_8 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_8
    SUBF 40.0 VLV_DELTA_8 VLV_LEFT_POWER_8
    ADDF 40.0 VLV_DELTA_8 VLV_RIGHT_POWER_8
    MULF VLV_LEFT_POWER_8 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_8 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_8 VGV_LAST_ERR
RETSUB_F_ULTRA_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRA_LINE_1:
SUB_F_SPEEDUP_4:
    MOVEF_F 15.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB989 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB989:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB990 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB990:
    TIMER_READ timeMC2
    MOVEF_F 0.0 VLV_L_10
  while992:
    JR_GTEQF VLV_L_10 VLV_DEG_10 endwhile992
  whilebody992:
    TIMER_READ timeMC2tmp
	SUB32 timeMC2tmp timeMC2 timeMC2tmp
	MOVE32_F timeMC2tmp F.0
    JR_LTEQF F.0 1000.0 else993_1
    JR_GTEQF VLV_L_10 20.0 else993_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB995 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB995:
    ADDF VLV_MIN_POWER_10 5.0 VLV_MIN_POWER_10
    TIMER_READ timeMC2
  else993_1:
  endif993:
    DATAF tmpf998
    DATA8 flag998
    DIVF VLV_L_10 VLV_DEG_10 tmpf998
    CP_EQF 0.0 VLV_DEG_10 flag998
    SELECTF flag998 0.0 tmpf998 VLV_P_10

    SUBF VLV_BASE_POWER_10 VLV_MIN_POWER_10 F.1
    MULF F.1 VLV_P_10 F.0
    ADDF F.0 VLV_MIN_POWER_10 VLV_POWER_10
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_10 VLV_L_10
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_10 VLV_R_10
    SUBF VLV_L_10 VLV_R_10 F.0
    MULF F.0 VLV_P_10 VLV_DELTA_10
    SUBF VLV_POWER_10 VLV_DELTA_10 VLV_LEFT_POWER_10
    ADDF VLV_POWER_10 VLV_DELTA_10 VLV_RIGHT_POWER_10
    MULF VLV_LEFT_POWER_10 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_10 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_10 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_10 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    JR_LTF VLV_L_10 VLV_DEG_10 whilebody992
  endwhile992:
RETSUB_F_SPEEDUP_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPEEDUP_4:
SUB_F_SYNC_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_12
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_12
    SUBF VLV_L_12 VLV_R_12 VLV_ERR_12
    SUBF VLV_ERR_12 VGV_LAST_ERR VLV_DIFF_12
    MULF VLV_ERR_12 1.0 F.0
    MULF VLV_DIFF_12 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_12
    SUBF VLV_POWER_12 VLV_DELTA_12 VLV_LEFT_POWER_12
    ADDF VLV_POWER_12 VLV_DELTA_12 VLV_RIGHT_POWER_12
    MULF VLV_LEFT_POWER_12 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_12 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_12 VGV_LAST_ERR
RETSUB_F_SYNC_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SYNC_1:
SUB_F_FORWARD_DEG_2:
    MOVEF_F VLV_POWER_13 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1033 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1033:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1034 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1034:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_13
  while1037:
    MATH ABS VLV_L_13 F.0
    MATH ABS VLV_DEG_13 F.1
    JR_GTEQF F.0 F.1 endwhile1037
  whilebody1037:
    MOVEF_F VLV_POWER_13 VLV_POWER_12
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB1040 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB1040:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_13
    MATH ABS VLV_L_13 F.0
    MATH ABS VLV_DEG_13 F.1
    JR_LTF F.0 F.1 whilebody1037
  endwhile1037:
RETSUB_F_FORWARD_DEG_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FORWARD_DEG_2:
SUB_F_MOVE_MOTOR_7:
    MOVEF_F VLV_DEG_14 VLV_NORMAL_DEG_14
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_14
    MOVEF_F 0.0 VLV_ZAME_DEG_14
    CALL EQ_STRING VLV_ACCELERATION_14 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1045_1
    DATAF tmpf1047
    DATA8 flag1047
    DIVF VLV_DEG_14 2.0 tmpf1047
    CP_EQF 0.0 2.0 flag1047
    SELECTF flag1047 0.0 tmpf1047 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag1049
	CP_LTF F.0 120.0 flag1049
	SELECTF flag1049 F.0 120.0 VLV_ACCELERATION_DEG_14
    SUBF VLV_NORMAL_DEG_14 VLV_ACCELERATION_DEG_14 VLV_NORMAL_DEG_14
  else1045_1:
  endif1045:
    CALL EQ_STRING VLV_ZAME_14 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1051_1
    DATAF tmpf1053
    DATA8 flag1053
    DIVF VLV_DEG_14 2.0 tmpf1053
    CP_EQF 0.0 2.0 flag1053
    SELECTF flag1053 0.0 tmpf1053 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag1055
	CP_LTF F.0 120.0 flag1055
	SELECTF flag1055 F.0 120.0 VLV_ZAME_DEG_14
    SUBF VLV_NORMAL_DEG_14 VLV_ZAME_DEG_14 VLV_NORMAL_DEG_14
  else1051_1:
  endif1051:
    CALL EQ_STRING VLV_ACCELERATION_14 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1057_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_14
    MOVEF_F 0.0 VLV_M_14
    MOVEF_F 10.0 VLV_MIN_POWER_14
    TIMER_READ timeMC1
  while1061:
    JR_GTEQF VLV_M_14 VLV_ACCELERATION_DEG_14 endwhile1061
  whilebody1061:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTEQF F.0 700.0 else1062_1
    JR_GTEQF VLV_M_14 20.0 else1062_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB1064 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB1064:
    ADDF VLV_MIN_POWER_14 5.0 VLV_MIN_POWER_14
    MOVEF_F VLV_ACCELERATION_DEG_14 VLV_ACCELERATION_DEG_14
    TIMER_READ timeMC1
  else1062_1:
  endif1062:
    DATAF tmpf1067
    DATA8 flag1067
    DIVF VLV_M_14 VLV_ACCELERATION_DEG_14 tmpf1067
    CP_EQF 0.0 VLV_ACCELERATION_DEG_14 flag1067
    SELECTF flag1067 0.0 tmpf1067 VLV_P_14

    SUBF VLV_MAX_POWER_14 VLV_MIN_POWER_14 F.1
    MULF F.1 VLV_P_14 F.0
    ADDF F.0 VLV_MIN_POWER_14 VLV_POWER_14
    MULF VLV_POWER_14 VLV_FORWARD_14 F.0
    CALL MOTOR.START VLV_MOTOR_14 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_14 F.0
    MULF F.0 VLV_FORWARD_14 VLV_M_14
    DATA32 milliseconds1075
	MOVEF_32 10.0 milliseconds1075
	DATA32 timer1075
	TIMER_WAIT milliseconds1075 timer1075
	TIMER_READY timer1075
    JR_LTF VLV_M_14 VLV_ACCELERATION_DEG_14 whilebody1061
  endwhile1061:
  else1057_1:
  endif1057:
    JR_LTEQF VLV_NORMAL_DEG_14 0.0 else1076_1
    MULF VLV_MAX_POWER_14 VLV_FORWARD_14 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_14 F.0 0.0 VLV_NORMAL_DEG_14 0.0 'False' 

	DATA8 layer1078
	DATA8 nos1078
	DATA8 busy1078
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_14 layer1078 nos1078
	JR_EQ8 0 nos1078 motornotbusy1078
  motorwaiting1078:
	OUTPUT_TEST layer1078 nos1078 busy1078
	JR_EQ8 busy1078 0 motornotbusy1078
	SLEEP
	JR motorwaiting1078
  motornotbusy1078:
  else1076_1:
  endif1076:
    CALL EQ_STRING VLV_ZAME_14 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1079_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_14
    MOVEF_F 0.0 VLV_M_14
  while1082:
    JR_GTEQF VLV_M_14 VLV_ZAME_DEG_14 endwhile1082
  whilebody1082:
    DATAF tmpf1083
    DATA8 flag1083
    DIVF VLV_M_14 VLV_ZAME_DEG_14 tmpf1083
    CP_EQF 0.0 VLV_ZAME_DEG_14 flag1083
    SELECTF flag1083 0.0 tmpf1083 F.0

    SUBF 1.0 F.0 VLV_P_14
    SUBF VLV_MAX_POWER_14 10.0 F.1
    MULF F.1 VLV_P_14 F.0
    ADDF F.0 10.0 VLV_POWER_14
    MULF VLV_POWER_14 VLV_FORWARD_14 F.0
    CALL MOTOR.START VLV_MOTOR_14 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_14 F.0
    MULF F.0 VLV_FORWARD_14 VLV_M_14
    DATA32 milliseconds1092
	MOVEF_32 10.0 milliseconds1092
	DATA32 timer1092
	TIMER_WAIT milliseconds1092 timer1092
	TIMER_READY timer1092
    JR_LTF VLV_M_14 VLV_ZAME_DEG_14 whilebody1082
  endwhile1082:
  else1079_1:
  endif1079:
    CALL EQ_STRING VLV_TO_STOP_14 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1093_1
    CALL MOTOR.STOP VLV_MOTOR_14 'True'
  else1093_1:
  endif1093:
RETSUB_F_MOVE_MOTOR_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_MOTOR_7:
SUB_F_ZAME_4:
    MOVEF_F VLV_BASE_POWER_15 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1096 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1096:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1097 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1097:
    MOVEF_F 0.0 VLV_L_15
  while1098:
    JR_GTEQF VLV_L_15 VLV_DEG_15 endwhile1098
  whilebody1098:
    DATAF tmpf1099
    DATA8 flag1099
    DIVF VLV_L_15 VLV_DEG_15 tmpf1099
    CP_EQF 0.0 VLV_DEG_15 flag1099
    SELECTF flag1099 0.0 tmpf1099 VLV_P_15

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_15 VLV_L_15
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_15 VLV_R_15
    SUBF VLV_L_15 VLV_R_15 F.0
    SUBF 1.0 VLV_P_15 F.1
    MULF F.0 F.1 VLV_DELTA_15
    SUBF VLV_BASE_POWER_15 VLV_MIN_POWER_15 F.1
    SUBF 1.0 VLV_P_15 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_15 VLV_POWER_15
    SUBF VLV_POWER_15 VLV_DELTA_15 VLV_LEFT_POWER_15
    ADDF VLV_POWER_15 VLV_DELTA_15 VLV_RIGHT_POWER_15
    MULF VLV_LEFT_POWER_15 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_15 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_15 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_15 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds1121
	MOVEF_32 10.0 milliseconds1121
	DATA32 timer1121
	TIMER_WAIT milliseconds1121 timer1121
	TIMER_READY timer1121
    JR_LTF VLV_L_15 VLV_DEG_15 whilebody1098
  endwhile1098:
RETSUB_F_ZAME_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAME_4:
SUB_F_TAKE_CHEM_ON_LEFT_1:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1122:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 80.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB1123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB1123:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1124:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer1125
	DATA8 nos1125
	DATA8 busy1125
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1125 nos1125
	JR_EQ8 0 nos1125 motornotbusy1125
  motorwaiting1125:
	OUTPUT_TEST layer1125 nos1125 busy1125
	JR_EQ8 busy1125 0 motornotbusy1125
	SLEEP
	JR motorwaiting1125
  motornotbusy1125:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_14
    MOVEF_F 130.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1126:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer1127
	DATA8 nos1127
	DATA8 busy1127
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1127 nos1127
	JR_EQ8 0 nos1127 motornotbusy1127
  motorwaiting1127:
	OUTPUT_TEST layer1127 nos1127 busy1127
	JR_EQ8 busy1127 0 motornotbusy1127
	SLEEP
	JR motorwaiting1127
  motornotbusy1127:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_14
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_14
    MOVEF_F 125.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1129:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1130:
    CALL EQ_STRING VLV_FINISH_FORWARD_16 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1131_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 160.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1133:
    JR endif1131
  else1131_1:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 30.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1134:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 30.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB1135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB1135:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1136:
  else1131_2:
  endif1131:
RETSUB_F_TAKE_CHEM_ON_LEFT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_1:
SUB_F_OPEN_CUBES_1:
    MULF 50.0 VLV_COEF_17 F.0
    CALL MOTOR.START VGV_WATER_MOTOR F.0
    DATA32 milliseconds1139
	MOVEF_32 500.0 milliseconds1139
	DATA32 timer1139
	TIMER_WAIT milliseconds1139 timer1139
	TIMER_READY timer1139
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
RETSUB_F_OPEN_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_1:
SUB_F_CLOSE_CUBES_1:
    MULF -30.0 VLV_COEF_18 F.0
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR F.0 0.0 90.0 0.0 'True' 

	DATA8 layer1142
	DATA8 nos1142
	DATA8 busy1142
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer1142 nos1142
	JR_EQ8 0 nos1142 motornotbusy1142
  motorwaiting1142:
	OUTPUT_TEST layer1142 nos1142 busy1142
	JR_EQ8 busy1142 0 motornotbusy1142
	SLEEP
	JR motorwaiting1142
  motornotbusy1142:
RETSUB_F_CLOSE_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_1:
SUB_F_DELIVER_LONG_1:
    CALL EQ_STRING VLV_IS_INVERTED_19 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1143_1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOT_19
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_19
    MOVEF_F 1.0 VLV_COEF_19
    JR endif1143
  else1143_1:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOT_19
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_19
    MOVEF_F -1.0 VLV_COEF_19
  else1143_2:
  endif1143:
    JR_NEQF VGV_CUBES_COUNT 2.0 else1145_1
    MOVEF_F VLV_COEF_19 VLV_COEF_17
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB1146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB1146:
    STRINGS DUPLICATE VLV_MOT_19 VLV_MOTOR_14
    MOVEF_F VLV_FORWARD_19 VLV_FORWARD_14
    MOVEF_F 270.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1147:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1148:
    STRINGS DUPLICATE VLV_MOT_19 VLV_MOTOR_14
    MULF VLV_FORWARD_19 -1.0 VLV_FORWARD_14
    MOVEF_F 120.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1150:
    MOVEF_F VLV_COEF_19 VLV_COEF_18
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB1151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB1151:
    STRINGS DUPLICATE VLV_MOT_19 VLV_MOTOR_14
    MULF VLV_FORWARD_19 -1.0 VLV_FORWARD_14
    MOVEF_F 145.0 VLV_DEG_14
    MOVEF_F 20.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1153:
    MOVEF_F 1.0 VGV_CUBES_COUNT
    JR endif1145
  else1145_1:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 30.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1154:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1155:
    STRINGS DUPLICATE VLV_MOT_19 VLV_MOTOR_14
    MOVEF_F VLV_FORWARD_19 VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1156:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1157:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1158:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1159:
    MOVEF_F VLV_COEF_19 VLV_COEF_17
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB1160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB1160:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 45.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1161:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 45.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB1162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB1162:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1163:
    STRINGS DUPLICATE VLV_MOT_19 VLV_MOTOR_14
    MULF VLV_FORWARD_19 -1.0 VLV_FORWARD_14
    MOVEF_F 360.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1165:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 30.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1166:
    MOVEF_F 0.0 VGV_CUBES_COUNT
  else1145_2:
  endif1145:
RETSUB_F_DELIVER_LONG_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_LONG_1:
SUB_F_DELIVER_NEAR_2:
    CALL EQ_STRING VLV_IS_INVERTED_20 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1167_1
    MOVEF_F 1.0 VLV_COEF_20
    JR endif1167
  else1167_1:
    MOVEF_F -1.0 VLV_COEF_20
  else1167_2:
  endif1167:
    MOVEF_F 0.0 VLV_MINUS_DEG_20
    MOVEF_F VLV_COEF_20 VLV_COEF_17
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB1169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB1169:
    JR_NEQF VGV_CUBES_COUNT 2.0 else1170_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 30.0 VLV_MIN_POWER_10
    MOVEF_F 45.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1171:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1172:
    MOVEF_F VLV_COEF_20 VLV_COEF_18
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB1173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB1173:
    MOVEF_F 1.0 VGV_CUBES_COUNT
    MOVEF_F 45.0 VLV_MINUS_DEG_20
  else1170_1:
  endif1170:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1174:
    SUBF VGV_CUBES_COUNT 1.0 VGV_CUBES_COUNT
RETSUB_F_DELIVER_NEAR_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_NEAR_2:
SUB_F_MOVE_TO_NEXT_ZONE_1:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1176:
    SUBF 205.0 VLV_MINUS_DEG_21 VLV_DEG_21
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F VLV_DEG_21 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1178:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1179:
RETSUB_F_MOVE_TO_NEXT_ZONE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_TO_NEXT_ZONE_1:
SUB_F_DELIVER_GROUP_4:
    MOVEF_F 0.0 VLV_MINUS_DEG_22
    CALL EQ_STRING VLV_LONG_22 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1180_1
    STRINGS DUPLICATE VLV_IS_INVERTED_22 VLV_IS_INVERTED_19
    WRITE32 ENDSUB_F_DELIVER_LONG_1:CALLSUB1182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_LONG_1
CALLSUB1182:
  else1180_1:
  endif1180:
    CALL EQ_STRING VLV_NEAR_22 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1183_1
    STRINGS DUPLICATE VLV_IS_INVERTED_22 VLV_IS_INVERTED_20
    WRITE32 ENDSUB_F_DELIVER_NEAR_2:CALLSUB1185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_NEAR_2
CALLSUB1185:
    MOVEF_F VLV_MINUS_DEG_20 VLV_MINUS_DEG_22
  else1183_1:
  endif1183:
    CALL EQ_STRING VLV_SHOULD_MOVE_BACKWARD_22 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1186_1
    MOVEF_F VLV_MINUS_DEG_22 VLV_MINUS_DEG_21
    WRITE32 ENDSUB_F_MOVE_TO_NEXT_ZONE_1:CALLSUB1188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_TO_NEXT_ZONE_1
CALLSUB1188:
  else1186_1:
  endif1186:
RETSUB_F_DELIVER_GROUP_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_GROUP_4:
SUB_F_GET_MOTORS_6:
    CALL EQ_STRING VLV_IS_INVERTED_23 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1189_1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR1_23
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR2_23
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD1_23
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD2_23
    MOVEF_F 1.0 VLV_COEF_23
    JR endif1189
  else1189_1:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR1_23
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR2_23
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD1_23
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD2_23
    MOVEF_F -1.0 VLV_COEF_23
  else1189_2:
  endif1189:
RETSUB_F_GET_MOTORS_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GET_MOTORS_6:
SUB_F_TAKE_CUBES_1:
    DATA8 layer1191
	DATA8 no1191
	DATA8 mode81191
	
	MOVEF_8 VGV_LINE no1191
	SUB8 no1191 1 no1191
	DIV8 no1191 4 layer1191
	MATH MOD8 no1191 4 no1191

	MOVEF_8 0.0 mode81191
	
	INPUT_DEVICE READY_RAW layer1191 no1191 0 mode81191 0
    STRINGS DUPLICATE VLV_IS_INVERTED_25 VLV_IS_INVERTED_23
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB1192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB1192:
    STRINGS DUPLICATE VLV_MOTOR1_23 VLV_MOTOR1_25
    STRINGS DUPLICATE VLV_MOTOR2_23 VLV_MOTOR2_25
    MOVEF_F VLV_FORWARD1_23 VLV_FORWARD1_25
    MOVEF_F VLV_FORWARD2_23 VLV_FORWARD2_25
    MOVEF_F VLV_COEF_23 VLV_COEF_25
    MOVEF_F VLV_COEF_25 VLV_COEF_17
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB1193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB1193:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1194:
    MOVEF_F 30.0 VLV_BASE_POWER_15
    MOVEF_F 20.0 VLV_MIN_POWER_15
    MOVEF_F 75.0 VLV_DEG_15
    MOVEF_F -1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB1195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB1195:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1196:
    STRINGS DUPLICATE VLV_MOTOR2_25 VLV_MOTOR_14
    MULF VLV_FORWARD2_25 -1.0 VLV_FORWARD_14
    MOVEF_F 180.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1198:
    STRINGS DUPLICATE VLV_MOTOR1_25 VLV_MOTOR_14
    MOVEF_F VLV_FORWARD1_25 VLV_FORWARD_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'False' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1199:
    MULF VLV_FORWARD2_25 -30.0 F.0
    CALL MOTOR.START VLV_MOTOR2_25 F.0
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1202:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1203:
    MULF VLV_FORWARD1_25 -40.0 F.0
    CALL MOTOR.START VLV_MOTOR1_25 F.0
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1206:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1207:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1208:
    MOVEF_F 50.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 120.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1209:
    MOVEF_F 760.0 VLV_DEG_13
    MOVEF_F 50.0 VLV_POWER_13
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB1210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB1210:
    MOVEF_F 50.0 VLV_BASE_POWER_15
    MOVEF_F 30.0 VLV_MIN_POWER_15
    MOVEF_F 100.0 VLV_DEG_15
    MOVEF_F 1.0 VLV_COEF_15
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB1211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB1211:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1212:
    MOVEF_F VLV_COEF_25 VLV_COEF_18
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB1213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB1213:
    STRINGS DUPLICATE VLV_MOTOR2_25 VLV_MOTOR_14
    MULF VLV_FORWARD2_25 -1.0 VLV_FORWARD_14
    MOVEF_F 250.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1215:
    STRINGS DUPLICATE VLV_MOTOR1_25 VLV_MOTOR_14
    MULF VLV_FORWARD1_25 -1.0 VLV_FORWARD_14
    MOVEF_F 250.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1217:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1218:
    MOVEF_F -30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1219:
    CALL EQ_STRING VLV_IS_INVERTED_25 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1220_1
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB1222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB1222:
    MOVEF_F VLV_PERCENT_5 VLV_P_25
  while1223:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MATH ABS F.1 F.0
    JR_LTF F.0 20.0 or1224
    JR_LTEQF VLV_P_25 20.0 endwhile1223
  or1224:
  whilebody1223:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB1227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB1227:
    MOVEF_F VLV_PERCENT_5 VLV_P_25
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MATH ABS F.1 F.0
    JR_LTF F.0 20.0 whilebody1223
    JR_GTF VLV_P_25 20.0 whilebody1223
  endwhile1223:
    JR endif1220
  else1220_1:
    DATA8 layer1230
	DATA8 no1230
	DATA8 mode81230
	
	MOVEF_8 VGV_LINE no1230
	SUB8 no1230 1 no1230
	DIV8 no1230 4 layer1230
	MATH MOD8 no1230 4 no1230

	MOVEF_8 4.0 mode81230
	
	INPUT_DEVICE READY_RAW layer1230 no1230 0 mode81230 0
    DATA8 layer1231
	DATA8 no1231	
	MOVEF_8 VGV_LINE no1231
	SUB8 no1231 1 no1231
	DIV8 no1231 4 layer1231
	MATH MOD8 no1231 4 no1231 
	INPUT_READY layer1231 no1231
    CALL SENSOR.READRAW VGV_LINE 3.0 VLV_RGB_25
  while1233:
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_RGB_25
    JR_LTEQF F.0 50.0 endwhile1233
  whilebody1233:
    CALL SENSOR.READRAW VGV_LINE 3.0 VLV_RGB_25
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_RGB_25
    JR_GTF F.0 50.0 whilebody1233
  endwhile1233:
    DATA8 layer1237
	DATA8 no1237
	DATA8 mode81237
	
	MOVEF_8 VGV_LINE no1237
	SUB8 no1237 1 no1237
	DIV8 no1237 4 layer1237
	MATH MOD8 no1237 4 no1237

	MOVEF_8 0.0 mode81237
	
	INPUT_DEVICE READY_RAW layer1237 no1237 0 mode81237 0
  else1220_2:
  endif1220:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1238:
RETSUB_F_TAKE_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_1:
SUB_F_FINISH_AFTER_DELIVERIES_1:
    STRINGS DUPLICATE VLV_IS_INVERTED_26 VLV_IS_INVERTED_23
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB1239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB1239:
    STRINGS DUPLICATE VLV_MOTOR1_23 VLV_MOTOR1_26
    STRINGS DUPLICATE VLV_MOTOR2_23 VLV_MOTOR2_26
    MOVEF_F VLV_FORWARD1_23 VLV_FORWARD1_26
    MOVEF_F VLV_FORWARD2_23 VLV_FORWARD2_26
    MOVEF_F VLV_COEF_23 VLV_COEF_26
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1240 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1240:
    MOVEF_F 1500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1241:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1242:
    STRINGS DUPLICATE VLV_MOTOR1_26 VLV_MOTOR_14
    MOVEF_F VLV_FORWARD1_26 VLV_FORWARD_14
    MOVEF_F 210.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1243:
    STRINGS DUPLICATE VLV_MOTOR2_26 VLV_MOTOR_14
    MULF VLV_FORWARD2_26 -1.0 VLV_FORWARD_14
    MOVEF_F 150.0 VLV_DEG_14
    MOVEF_F 30.0 VLV_MAX_POWER_14
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_14
    STRINGS DUPLICATE 'True' VLV_ZAME_14
    STRINGS DUPLICATE 'True' VLV_TO_STOP_14
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1245:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1246:
    MOVEF_F 1500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1247:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1248:
RETSUB_F_FINISH_AFTER_DELIVERIES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_DELIVERIES_1:
SUB_F_SHOW_TIME_1:
    TIMER_READ timeMC9tmp
	SUB32 timeMC9tmp timeMC9 timeMC9tmp
	MOVE32_F timeMC9tmp VLV_MILLISECOND_27
    DATAF tmpf1250
    DATA8 flag1250
    DIVF VLV_MILLISECOND_27 1000.0 tmpf1250
    CP_EQF 0.0 1000.0 flag1250
    SELECTF flag1250 0.0 tmpf1250 F.0

    MATH FLOOR F.0 VLV_SECONDS_27
    DATAF tmpf1252
    DATA8 flag1252
    DIVF VLV_SECONDS_27 60.0 tmpf1252
    CP_EQF 0.0 60.0 flag1252
    SELECTF flag1252 0.0 tmpf1252 F.0

    MATH FLOOR F.0 VLV_MINUTES_27
    MATH MOD VLV_SECONDS_27 60.0 VLV_SECONDS_27
    STRINGS VALUE_FORMATTED VLV_MINUTES_27 '%g' 99 S.1
    CALL TEXT.APPEND S.1 ':' S.0
    STRINGS VALUE_FORMATTED VLV_SECONDS_27 '%g' 99 S.1
    CALL TEXT.APPEND S.0 S.1 VLV_TEXT_27
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 VLV_TEXT_27
    CALL EQ_STRING VLV_TO_DELAY_27 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1261_1
    MOVEF_F 100000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1263:
  else1261_1:
  endif1261:
RETSUB_F_SHOW_TIME_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SHOW_TIME_1:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall NE_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 flag 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
isequal:
	STRINGS DUPLICATE 'False' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'True' result
	RETURN
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
