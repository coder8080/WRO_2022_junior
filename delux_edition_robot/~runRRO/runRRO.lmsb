DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_10
DATAF VLV_MIN_POWER_10
DATAF VLV_DEG_10
DATAF VLV_COEF_10
DATAF VLV_BASE_POWER_14
DATAF VLV_MIN_POWER_14
DATAF VLV_DEG_14
DATAF VLV_COEF_14
DATAS VLV_MOTOR_13 252
DATAF VLV_FORWARD_13
DATAF VLV_DEG_13
DATAF VLV_MAX_POWER_13
DATAS VLV_ACCELERATION_13 252
DATAS VLV_ZAME_13 252
DATAS VLV_TO_STOP_13 252
DATAF VLV_TIME_2
DATAF VLV_PERCENT_5
DATAF VLV_POWER_1
DATAF VLV_A_8
DATAF VLV_POWER_11
DATAF VLV_DEG_12
DATAF VLV_POWER_12
DATAS VLV_FINISH_FORWARD_15 252
DATAF VLV_L_7
DATAS VLV_IS_INVERTED_23 252
DATAS VLV_IS_INVERTED_24 252
DATAS VLV_LONG_21 252
DATAS VLV_NEAR_21 252
DATAS VLV_SHOULD_MOVE_BACKWARD_21 252
DATAS VLV_IS_INVERTED_21 252
DATAS VLV_IS_INVERTED_25 252
DATAS VLV_TO_DELAY_26 252
DATAF VLV_L_6
DATAF VLV_COEF_16
DATAF VLV_COEF_17
DATAS VLV_IS_INVERTED_18 252
DATAS VLV_IS_INVERTED_19 252
DATAF VLV_MINUS_DEG_19
DATAF VLV_MINUS_DEG_20
DATAS VLV_IS_INVERTED_22 252
DATAS VLV_MOTOR1_22 252
DATAS VLV_MOTOR2_22 252
DATAF VLV_FORWARD1_22
DATAF VLV_FORWARD2_22
DATAF VLV_COEF_22
DATAF VGV_P
DATAF VLV_MINUS_DEG_21
DATAS VLV_MOTOR1_23 252
DATAS VLV_MOTOR2_23 252
DATAF VLV_FORWARD1_23
DATAF VLV_FORWARD2_23
DATAF VLV_COEF_23
DATAS VLV_MOTOR1_24 252
DATAS VLV_MOTOR2_24 252
DATAF VLV_FORWARD1_24
DATAF VLV_FORWARD2_24
DATAF VLV_COEF_24
DATAF VLV_P_24
DATAS VLV_MOTOR1_25 252
DATAS VLV_MOTOR2_25 252
DATAF VLV_FORWARD1_25
DATAF VLV_FORWARD2_25
DATAF VLV_COEF_25
DATAF VGV_LINE
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_ULTRASONIC
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERTED_MOTOR 252
DATAS VGV_MOTORS 252
DATAF VGV_LEFT_FORWARD
DATAF VGV_RIGHT_FORWARD
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_MAX
DATAF VGV_LEFT_MIN
DATAF VGV_LAST_ERR
DATAF VGV_LAST_MOTOR_ERR
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_WATER_STATE
DATAF VGV_FIRE_COUNT
DATAF VGV_MEN_COUNT
DATAS VGV_CHEM 252
DATAS VGV_TAKE_CHEM_IN_YELLOW 252
DATAF VGV_CUBES_COUNT
DATAS VGV_START 252
DATAF VGV_A
DATAF VGV_R
DATAS VGV_OBEJCT 252
DATAS VGV_OBJECT 252
DATAF VGV_DEG
DATAF VGV_G
DATAS VGV_TAKE_LEFT 252
DATAS VGV_TAKE_RIGHT 252
DATAF VGV_W
DATAF VGV_ULTRA
DATAS VGV_CH 252
DATAS VGV_IS_FIRST_BLUE_OBJECT_CHEM 252
DATAS VGV_IS_SECOND_BLUE_OBJECT_CHEM 252
DATAS VGV_IS_ON_SECOND_BLUE 252
DATAS VGV_WHITE_OBJECT 252
DATAF VGV_MINUS_DEG
DATAF VLV_ERR_6
DATAF VLV_DIFF_6
DATAF VLV_DELTA_6
DATAF VLV_LEFT_POWER_6
DATAF VLV_RIGHT_POWER_6
DATAF VLV_ERR_7
DATAF VLV_DIFF_7
DATAF VLV_DELTA_7
DATAF VLV_LEFT_POWER_7
DATAF VLV_RIGHT_POWER_7
DATAF VLV_L_8
DATAF VLV_ERR_8
DATAF VLV_DIFF_8
DATAF VLV_DELTA_8
DATAF VLV_LEFT_POWER_8
DATAF VLV_RIGHT_POWER_8
DATAF VLV_L_10
DATAF VLV_P_10
DATAF VLV_POWER_10
DATAF VLV_R_10
DATAF VLV_DELTA_10
DATAF VLV_LEFT_POWER_10
DATAF VLV_RIGHT_POWER_10
DATAF VLV_L_11
DATAF VLV_R_11
DATAF VLV_ERR_11
DATAF VLV_DIFF_11
DATAF VLV_DELTA_11
DATAF VLV_LEFT_POWER_11
DATAF VLV_RIGHT_POWER_11
DATAF VLV_L_12
DATAF VLV_NORMAL_DEG_13
DATAF VLV_ACCELERATION_DEG_13
DATAF VLV_ZAME_DEG_13
DATAF VLV_M_13
DATAF VLV_MIN_POWER_13
DATAF VLV_P_13
DATAF VLV_POWER_13
DATAF VLV_L_14
DATAF VLV_P_14
DATAF VLV_R_14
DATAF VLV_DELTA_14
DATAF VLV_POWER_14
DATAF VLV_LEFT_POWER_14
DATAF VLV_RIGHT_POWER_14
DATAS VLV_MOT_18 252
DATAF VLV_FORWARD_18
DATAF VLV_COEF_18
DATAF VLV_COEF_19
DATAF VLV_DEG_20
DATAF VLV_MILLISECOND_26
DATAF VLV_SECONDS_26
DATAF VLV_MINUTES_26
DATAS VLV_TEXT_26 252
DATA32 RUNCOUNTER_F_KICK_WATER_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_10
    MOVEF_F 0.0 VLV_MIN_POWER_10
    MOVEF_F 0.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_COEF_10
    MOVEF_F 0.0 VLV_BASE_POWER_14
    MOVEF_F 0.0 VLV_MIN_POWER_14
    MOVEF_F 0.0 VLV_DEG_14
    MOVEF_F 0.0 VLV_COEF_14
    STRINGS DUPLICATE '' VLV_MOTOR_13
    MOVEF_F 0.0 VLV_FORWARD_13
    MOVEF_F 0.0 VLV_DEG_13
    MOVEF_F 0.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE '' VLV_ACCELERATION_13
    STRINGS DUPLICATE '' VLV_ZAME_13
    STRINGS DUPLICATE '' VLV_TO_STOP_13
    MOVEF_F 0.0 VLV_TIME_2
    MOVEF_F 0.0 VLV_PERCENT_5
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_A_8
    MOVEF_F 0.0 VLV_POWER_11
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_POWER_12
    STRINGS DUPLICATE '' VLV_FINISH_FORWARD_15
    MOVEF_F 0.0 VLV_L_7
    STRINGS DUPLICATE '' VLV_IS_INVERTED_23
    STRINGS DUPLICATE '' VLV_IS_INVERTED_24
    STRINGS DUPLICATE '' VLV_LONG_21
    STRINGS DUPLICATE '' VLV_NEAR_21
    STRINGS DUPLICATE '' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_25
    STRINGS DUPLICATE '' VLV_TO_DELAY_26
    MOVEF_F 0.0 VLV_L_6
    MOVEF_F 0.0 VLV_COEF_16
    MOVEF_F 0.0 VLV_COEF_17
    STRINGS DUPLICATE '' VLV_IS_INVERTED_18
    STRINGS DUPLICATE '' VLV_IS_INVERTED_19
    MOVEF_F 0.0 VLV_MINUS_DEG_19
    MOVEF_F 0.0 VLV_MINUS_DEG_20
    STRINGS DUPLICATE '' VLV_IS_INVERTED_22
    STRINGS DUPLICATE '' VLV_MOTOR1_22
    STRINGS DUPLICATE '' VLV_MOTOR2_22
    MOVEF_F 0.0 VLV_FORWARD1_22
    MOVEF_F 0.0 VLV_FORWARD2_22
    MOVEF_F 0.0 VLV_COEF_22
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    STRINGS DUPLICATE '' VLV_MOTOR1_23
    STRINGS DUPLICATE '' VLV_MOTOR2_23
    MOVEF_F 0.0 VLV_FORWARD1_23
    MOVEF_F 0.0 VLV_FORWARD2_23
    MOVEF_F 0.0 VLV_COEF_23
    STRINGS DUPLICATE '' VLV_MOTOR1_24
    STRINGS DUPLICATE '' VLV_MOTOR2_24
    MOVEF_F 0.0 VLV_FORWARD1_24
    MOVEF_F 0.0 VLV_FORWARD2_24
    MOVEF_F 0.0 VLV_COEF_24
    MOVEF_F 0.0 VLV_P_24
    STRINGS DUPLICATE '' VLV_MOTOR1_25
    STRINGS DUPLICATE '' VLV_MOTOR2_25
    MOVEF_F 0.0 VLV_FORWARD1_25
    MOVEF_F 0.0 VLV_FORWARD2_25
    MOVEF_F 0.0 VLV_COEF_25
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_START
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_R
    STRINGS DUPLICATE '' VGV_OBEJCT
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_TAKE_LEFT
    STRINGS DUPLICATE '' VGV_TAKE_RIGHT
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_ULTRA
    STRINGS DUPLICATE '' VGV_CH
    STRINGS DUPLICATE '' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_ON_SECOND_BLUE
    STRINGS DUPLICATE '' VGV_WHITE_OBJECT
    MOVEF_F 0.0 VGV_MINUS_DEG
    MOVEF_F 0.0 VLV_ERR_6
    MOVEF_F 0.0 VLV_DIFF_6
    MOVEF_F 0.0 VLV_DELTA_6
    MOVEF_F 0.0 VLV_LEFT_POWER_6
    MOVEF_F 0.0 VLV_RIGHT_POWER_6
    MOVEF_F 0.0 VLV_ERR_7
    MOVEF_F 0.0 VLV_DIFF_7
    MOVEF_F 0.0 VLV_DELTA_7
    MOVEF_F 0.0 VLV_LEFT_POWER_7
    MOVEF_F 0.0 VLV_RIGHT_POWER_7
    MOVEF_F 0.0 VLV_L_8
    MOVEF_F 0.0 VLV_ERR_8
    MOVEF_F 0.0 VLV_DIFF_8
    MOVEF_F 0.0 VLV_DELTA_8
    MOVEF_F 0.0 VLV_LEFT_POWER_8
    MOVEF_F 0.0 VLV_RIGHT_POWER_8
    MOVEF_F 0.0 VLV_L_10
    MOVEF_F 0.0 VLV_P_10
    MOVEF_F 0.0 VLV_POWER_10
    MOVEF_F 0.0 VLV_R_10
    MOVEF_F 0.0 VLV_DELTA_10
    MOVEF_F 0.0 VLV_LEFT_POWER_10
    MOVEF_F 0.0 VLV_RIGHT_POWER_10
    MOVEF_F 0.0 VLV_L_11
    MOVEF_F 0.0 VLV_R_11
    MOVEF_F 0.0 VLV_ERR_11
    MOVEF_F 0.0 VLV_DIFF_11
    MOVEF_F 0.0 VLV_DELTA_11
    MOVEF_F 0.0 VLV_LEFT_POWER_11
    MOVEF_F 0.0 VLV_RIGHT_POWER_11
    MOVEF_F 0.0 VLV_L_12
    MOVEF_F 0.0 VLV_NORMAL_DEG_13
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_13
    MOVEF_F 0.0 VLV_ZAME_DEG_13
    MOVEF_F 0.0 VLV_M_13
    MOVEF_F 0.0 VLV_MIN_POWER_13
    MOVEF_F 0.0 VLV_P_13
    MOVEF_F 0.0 VLV_POWER_13
    MOVEF_F 0.0 VLV_L_14
    MOVEF_F 0.0 VLV_P_14
    MOVEF_F 0.0 VLV_R_14
    MOVEF_F 0.0 VLV_DELTA_14
    MOVEF_F 0.0 VLV_POWER_14
    MOVEF_F 0.0 VLV_LEFT_POWER_14
    MOVEF_F 0.0 VLV_RIGHT_POWER_14
    STRINGS DUPLICATE '' VLV_MOT_18
    MOVEF_F 0.0 VLV_FORWARD_18
    MOVEF_F 0.0 VLV_COEF_18
    MOVEF_F 0.0 VLV_COEF_19
    MOVEF_F 0.0 VLV_DEG_20
    MOVEF_F 0.0 VLV_MILLISECOND_26
    MOVEF_F 0.0 VLV_SECONDS_26
    MOVEF_F 0.0 VLV_MINUTES_26
    STRINGS DUPLICATE '' VLV_TEXT_26
    MOVE32_32 0 RUNCOUNTER_F_KICK_WATER_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_KICK_WATER_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_KICK_WATER_0 0
    CALL GETANDINC32 RUNCOUNTER_F_KICK_WATER_0 -1 RUNCOUNTER_F_KICK_WATER_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_KICK_WATER_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1083
    WRITE32 ENDSUB_F_KICK_WATER_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
  dispatch1083:
    MOVEF_F 0.0 VLV_BASE_POWER_10
    MOVEF_F 0.0 VLV_MIN_POWER_10
    MOVEF_F 0.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_COEF_10
    MOVEF_F 0.0 VLV_BASE_POWER_14
    MOVEF_F 0.0 VLV_MIN_POWER_14
    MOVEF_F 0.0 VLV_DEG_14
    MOVEF_F 0.0 VLV_COEF_14
    STRINGS DUPLICATE '' VLV_MOTOR_13
    MOVEF_F 0.0 VLV_FORWARD_13
    MOVEF_F 0.0 VLV_DEG_13
    MOVEF_F 0.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE '' VLV_ACCELERATION_13
    STRINGS DUPLICATE '' VLV_ZAME_13
    STRINGS DUPLICATE '' VLV_TO_STOP_13
    MOVEF_F 0.0 VLV_TIME_2
    MOVEF_F 0.0 VLV_PERCENT_5
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_A_8
    MOVEF_F 0.0 VLV_POWER_11
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_POWER_12
    STRINGS DUPLICATE '' VLV_FINISH_FORWARD_15
    MOVEF_F 0.0 VLV_L_7
    STRINGS DUPLICATE '' VLV_IS_INVERTED_23
    STRINGS DUPLICATE '' VLV_IS_INVERTED_24
    STRINGS DUPLICATE '' VLV_LONG_21
    STRINGS DUPLICATE '' VLV_NEAR_21
    STRINGS DUPLICATE '' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_25
    STRINGS DUPLICATE '' VLV_TO_DELAY_26
    MOVEF_F 0.0 VLV_L_6
    MOVEF_F 0.0 VLV_COEF_16
    MOVEF_F 0.0 VLV_COEF_17
    STRINGS DUPLICATE '' VLV_IS_INVERTED_18
    STRINGS DUPLICATE '' VLV_IS_INVERTED_19
    MOVEF_F 0.0 VLV_MINUS_DEG_19
    MOVEF_F 0.0 VLV_MINUS_DEG_20
    STRINGS DUPLICATE '' VLV_IS_INVERTED_22
    STRINGS DUPLICATE '' VLV_MOTOR1_22
    STRINGS DUPLICATE '' VLV_MOTOR2_22
    MOVEF_F 0.0 VLV_FORWARD1_22
    MOVEF_F 0.0 VLV_FORWARD2_22
    MOVEF_F 0.0 VLV_COEF_22
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    STRINGS DUPLICATE '' VLV_MOTOR1_23
    STRINGS DUPLICATE '' VLV_MOTOR2_23
    MOVEF_F 0.0 VLV_FORWARD1_23
    MOVEF_F 0.0 VLV_FORWARD2_23
    MOVEF_F 0.0 VLV_COEF_23
    STRINGS DUPLICATE '' VLV_MOTOR1_24
    STRINGS DUPLICATE '' VLV_MOTOR2_24
    MOVEF_F 0.0 VLV_FORWARD1_24
    MOVEF_F 0.0 VLV_FORWARD2_24
    MOVEF_F 0.0 VLV_COEF_24
    MOVEF_F 0.0 VLV_P_24
    STRINGS DUPLICATE '' VLV_MOTOR1_25
    STRINGS DUPLICATE '' VLV_MOTOR2_25
    MOVEF_F 0.0 VLV_FORWARD1_25
    MOVEF_F 0.0 VLV_FORWARD2_25
    MOVEF_F 0.0 VLV_COEF_25
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_START
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_R
    STRINGS DUPLICATE '' VGV_OBEJCT
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_TAKE_LEFT
    STRINGS DUPLICATE '' VGV_TAKE_RIGHT
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_ULTRA
    STRINGS DUPLICATE '' VGV_CH
    STRINGS DUPLICATE '' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_ON_SECOND_BLUE
    STRINGS DUPLICATE '' VGV_WHITE_OBJECT
    MOVEF_F 0.0 VGV_MINUS_DEG
    MOVEF_F 1.0 VGV_LINE
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERTED_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 40.0 VGV_LEFT_MAX
    MOVEF_F 5.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 2.0 VGV_CUBES_COUNT
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_LEFT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_RIGHT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB7 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB7:
    SOUND_READY
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB10:
ENDTHREAD:
    RETURN
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB12:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 80.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB13 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB13:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB14 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB14:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer15
	DATA8 nos15
	DATA8 busy15
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer15 nos15
	JR_EQ8 0 nos15 motornotbusy15
  motorwaiting15:
	OUTPUT_TEST layer15 nos15 busy15
	JR_EQ8 busy15 0 motornotbusy15
	SLEEP
	JR motorwaiting15
  motornotbusy15:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 130.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB16 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB16:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer17
	DATA8 nos17
	DATA8 busy17
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer17 nos17
	JR_EQ8 0 nos17 motornotbusy17
  motorwaiting17:
	OUTPUT_TEST layer17 nos17 busy17
	JR_EQ8 busy17 0 motornotbusy17
	SLEEP
	JR motorwaiting17
  motornotbusy17:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 120.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB19 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB19:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB20 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB20:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 160.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB21 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB21:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else22_1
    CALL MOTOR.START VGV_WATER_MOTOR 50.0
    DATA32 milliseconds24
	MOVEF_32 500.0 milliseconds24
	DATA32 timer24
	TIMER_WAIT milliseconds24 timer24
	TIMER_READY timer24
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer26
	DATA8 nos26
	DATA8 busy26
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer26 nos26
	JR_EQ8 0 nos26 motornotbusy26
  motorwaiting26:
	OUTPUT_TEST layer26 nos26 busy26
	JR_EQ8 busy26 0 motornotbusy26
	SLEEP
	JR motorwaiting26
  motornotbusy26:
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif22
  else22_1:
    CALL MOTOR.START VGV_WATER_MOTOR -50.0
    DATA32 milliseconds28
	MOVEF_32 500.0 milliseconds28
	DATA32 timer28
	TIMER_WAIT milliseconds28 timer28
	TIMER_READY timer28
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 50.0 0.0 20.0 0.0 'True' 

	DATA8 layer30
	DATA8 nos30
	DATA8 busy30
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer30 nos30
	JR_EQ8 0 nos30 motornotbusy30
  motorwaiting30:
	OUTPUT_TEST layer30 nos30 busy30
	JR_EQ8 busy30 0 motornotbusy30
	SLEEP
	JR motorwaiting30
  motornotbusy30:
  else22_2:
  endif22:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_MAIN_0:
    STRINGS DUPLICATE 'right' VGV_START
    TIMER_READ timeMC9
    MOVEF_F 97.0 VGV_A
    CALL EQ_STRING VGV_START 'left' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else32_1
    MULF 80.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 85.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    WRITE32 ENDSUB_F_RESET_0:CALLSUB38 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB38:
  while39:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    JR_GTEQF F.0 1000.0 endwhile39
  whilebody39:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    JR_LTF F.0 1000.0 whilebody39
  endwhile39:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB42 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB42:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while43:
    JR_GTEQF VGV_P 50.0 endwhile43
  whilebody43:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB44 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB44:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_LTF VGV_P 50.0 whilebody43
  endwhile43:
  while45:
    JR_LTEQF VGV_P 20.0 endwhile45
  whilebody45:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB46 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB46:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_GTF VGV_P 20.0 whilebody45
  endwhile45:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 180.0 VLV_DEG_13
    MOVEF_F 50.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB49 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB49:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 180.0 VLV_DEG_13
    MOVEF_F 50.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB50 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB50:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB51 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB51:
    DATA32 milliseconds52
	MOVEF_32 1000.0 milliseconds52
	DATA32 timer52
	TIMER_WAIT milliseconds52 timer52
	TIMER_READY timer52
    WRITE32 ENDSUB_F_STOP_0:CALLSUB53 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB53:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 70.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB54 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB54:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB56 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB56:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB57 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB57:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB58 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB58:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while59:
    JR_LTEQF VGV_P 23.0 endwhile59
  whilebody59:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB60:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB61:
    JR_GTF VGV_P 23.0 whilebody59
  endwhile59:
    JR endif32
  else32_1:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB62 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB62:
    MULF 80.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 40.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    WRITE32 ENDSUB_F_RESET_0:CALLSUB67 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB67:
  while68:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 1000.0 endwhile68
  whilebody68:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 1000.0 whilebody68
  endwhile68:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB73 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB73:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while74:
    JR_GTEQF VGV_P 50.0 endwhile74
  whilebody74:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB75:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_LTF VGV_P 50.0 whilebody74
  endwhile74:
  while76:
    JR_LTEQF VGV_P 20.0 endwhile76
  whilebody76:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB77:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_GTF VGV_P 20.0 whilebody76
  endwhile76:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB78:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 180.0 VLV_DEG_13
    MOVEF_F 40.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'Fase' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB79 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB79:
    MULF VGV_LEFT_FORWARD -40.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB82:
    CALL MOTOR.STOP VGV_LEFT_MOTOR 'True'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB84 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB84:
    TIMER_READ timeMC1
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB86:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB87:
  while88:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 3000.0 endwhile88
  whilebody88:
    MOVEF_F 40.0 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB90:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 3000.0 whilebody88
  endwhile88:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB92:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 230.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB94:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 130.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB95:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB96:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB97:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while98:
    JR_LTEQF VGV_P 23.0 endwhile98
  whilebody98:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB99 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB99:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F 90.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB100:
    JR_GTF VGV_P 23.0 whilebody98
  endwhile98:
  else32_2:
  endif32:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 0.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB101:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB102:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB103:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBEJCT
    JR_LTEQF VGV_R 150.0 else105_1
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    STRINGS DUPLICATE 'human' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif105
  else105_1:
    JR_LTEQF VGV_R 60.0 else105_2
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    DATA32 tmp108
    CALL GETANDINC32 RUNCOUNTER_F_KICK_WATER_0 1  RUNCOUNTER_F_KICK_WATER_0 tmp108
    JR_NEQ32 0 tmp108 alreadylaunched108
    OBJECT_START TF_KICK_WATER_0
  alreadylaunched108:
    JR endif105
  else105_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else105_3
    JR_LTEQF VGV_R 15.0 else105_3
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB110:
  else105_3:
  endif105:
    MOVEF_F 525.0 VGV_DEG
    CALL NE_STRING VGV_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else111_1
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 120.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB113:
    SUBF VGV_DEG 120.0 VGV_DEG
  else111_1:
  endif111:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB115:
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else116_1
  while118:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 120.0 F.1
    JR_GTEQF F.0 F.1 endwhile118
  whilebody118:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB122:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 120.0 F.1
    JR_LTF F.0 F.1 whilebody118
  endwhile118:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 15.0 VLV_MIN_POWER_14
    MOVEF_F 120.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB126:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB127:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB128:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 80.0 else130_1
    DATA8 layer131
	DATA8 no131
	DATA8 mode8131
	
	MOVEF_8 VGV_RIGHT_SENSOR no131
	SUB8 no131 1 no131
	DIV8 no131 4 layer131
	MATH MOD8 no131 4 no131

	MOVEF_8 2.0 mode8131
	
	INPUT_DEVICE READY_RAW layer131 no131 0 mode8131 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB132:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer134
	DATA8 no134
	DATA8 mode8134
	
	MOVEF_8 VGV_RIGHT_SENSOR no134
	SUB8 no134 1 no134
	DIV8 no134 4 layer134
	MATH MOD8 no134 4 no134

	MOVEF_8 1.0 mode8134
	
	INPUT_DEVICE READY_RAW layer134 no134 0 mode8134 0
    JR_LTEQF VGV_G 100.0 else135_1
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    STRINGS DUPLICATE 'human' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif135
  else135_1:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB138:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 15.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB139:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB140:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB141:
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB142:
  else135_2:
  endif135:
    JR endif130
  else130_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else130_2
    JR_LTEQF VGV_R 20.0 else130_2
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB144:
  else130_2:
  endif130:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB145:
    JR endif116
  else116_1:
  while146:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 VGV_DEG endwhile146
  whilebody146:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB149:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 VGV_DEG whilebody146
  endwhile146:
  else116_2:
  endif116:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB152:
    MOVEF_F 96.0 VGV_A
  while153:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 520.0 endwhile153
  whilebody153:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB156:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 520.0 whilebody153
  endwhile153:
    MULF 60.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF 60.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds163
	MOVEF_32 1000.0 milliseconds163
	DATA32 timer163
	TIMER_WAIT milliseconds163 timer163
	TIMER_READY timer163
    WRITE32 ENDSUB_F_STOP_0:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB164:
    STRINGS DUPLICATE 'False' VGV_TAKE_LEFT
    STRINGS DUPLICATE 'False' VGV_TAKE_RIGHT
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB165:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 80.0 else167_1
    DATA8 layer168
	DATA8 no168
	DATA8 mode8168
	
	MOVEF_8 VGV_RIGHT_SENSOR no168
	SUB8 no168 1 no168
	DIV8 no168 4 layer168
	MATH MOD8 no168 4 no168

	MOVEF_8 2.0 mode8168
	
	INPUT_DEVICE READY_RAW layer168 no168 0 mode8168 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB169:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer171
	DATA8 no171
	DATA8 mode8171
	
	MOVEF_8 VGV_RIGHT_SENSOR no171
	SUB8 no171 1 no171
	DIV8 no171 4 layer171
	MATH MOD8 no171 4 no171

	MOVEF_8 1.0 mode8171
	
	INPUT_DEVICE READY_RAW layer171 no171 0 mode8171 0
    JR_LTEQF VGV_G 100.0 else172_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    STRINGS DUPLICATE 'R: man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif172
  else172_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB175:
  else172_2:
  endif172:
    JR endif167
  else167_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else167_2
    DATA8 layer177
	DATA8 no177
	DATA8 mode8177
	
	MOVEF_8 VGV_RIGHT_SENSOR no177
	SUB8 no177 1 no177
	DIV8 no177 4 layer177
	MATH MOD8 no177 4 no177

	MOVEF_8 4.0 mode8177
	
	INPUT_DEVICE READY_RAW layer177 no177 0 mode8177 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB178:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA8 layer183
	DATA8 no183
	DATA8 mode8183
	
	MOVEF_8 VGV_RIGHT_SENSOR no183
	SUB8 no183 1 no183
	DIV8 no183 4 layer183
	MATH MOD8 no183 4 no183

	MOVEF_8 1.0 mode8183
	
	INPUT_DEVICE READY_RAW layer183 no183 0 mode8183 0
    JR_LTEQF VGV_W 30.0 else184_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_TAKE_RIGHT
    STRINGS DUPLICATE 'True' VGV_CHEM
  else184_1:
  endif184:
  else167_2:
  endif167:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else185_1
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 60.0 else188_1
    DATA8 layer189
	DATA8 no189
	DATA8 mode8189
	
	MOVEF_8 VGV_LEFT_SENSOR no189
	SUB8 no189 1 no189
	DIV8 no189 4 layer189
	MATH MOD8 no189 4 no189

	MOVEF_8 2.0 mode8189
	
	INPUT_DEVICE READY_RAW layer189 no189 0 mode8189 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB190:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer192
	DATA8 no192
	DATA8 mode8192
	
	MOVEF_8 VGV_LEFT_SENSOR no192
	SUB8 no192 1 no192
	DIV8 no192 4 layer192
	MATH MOD8 no192 4 no192

	MOVEF_8 1.0 mode8192
	
	INPUT_DEVICE READY_RAW layer192 no192 0 mode8192 0
    JR_LTEQF VGV_G 100.0 else193_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    STRINGS DUPLICATE 'L: man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif193
  else193_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB196:
  else193_2:
  endif193:
    JR endif188
  else188_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else188_2
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 40.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB199:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB200:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    MULF 80.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    DATA32 milliseconds204
	MOVEF_32 1000.0 milliseconds204
	DATA32 timer204
	TIMER_WAIT milliseconds204 timer204
	TIMER_READY timer204
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    JR_GTEQF VGV_ULTRA 75.0 else206_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_TAKE_LEFT
  else206_1:
  endif206:
  else188_2:
  endif188:
  else185_1:
  endif185:
    CALL EQ_STRING VGV_TAKE_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else207_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB209:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 60.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB210:
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB213:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer214
	DATA8 nos214
	DATA8 busy214
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer214 nos214
	JR_EQ8 0 nos214 motornotbusy214
  motorwaiting214:
	OUTPUT_TEST layer214 nos214 busy214
	JR_EQ8 busy214 0 motornotbusy214
	SLEEP
	JR motorwaiting214
  motornotbusy214:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB215:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB216:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB217:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer218
	DATA8 nos218
	DATA8 busy218
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer218 nos218
	JR_EQ8 0 nos218 motornotbusy218
  motorwaiting218:
	OUTPUT_TEST layer218 nos218 busy218
	JR_EQ8 busy218 0 motornotbusy218
	SLEEP
	JR motorwaiting218
  motornotbusy218:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB219:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB220:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB221:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB222:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB223:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB224:
    DATA32 milliseconds225
	MOVEF_32 1000.0 milliseconds225
	DATA32 timer225
	TIMER_WAIT milliseconds225 timer225
	TIMER_READY timer225
    WRITE32 ENDSUB_F_STOP_0:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB226:
    JR endif207
  else207_1:
    CALL EQ_STRING VGV_TAKE_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else207_2
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB228:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 60.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB229:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB232:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer233
	DATA8 nos233
	DATA8 busy233
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer233 nos233
	JR_EQ8 0 nos233 motornotbusy233
  motorwaiting233:
	OUTPUT_TEST layer233 nos233 busy233
	JR_EQ8 busy233 0 motornotbusy233
	SLEEP
	JR motorwaiting233
  motornotbusy233:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB234:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB235:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB236:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer237
	DATA8 nos237
	DATA8 busy237
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer237 nos237
	JR_EQ8 0 nos237 motornotbusy237
  motorwaiting237:
	OUTPUT_TEST layer237 nos237 busy237
	JR_EQ8 busy237 0 motornotbusy237
	SLEEP
	JR motorwaiting237
  motornotbusy237:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB238:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB239:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB240 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB240:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB241:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB242:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB243:
    DATA32 milliseconds244
	MOVEF_32 1000.0 milliseconds244
	DATA32 timer244
	TIMER_WAIT milliseconds244 timer244
	TIMER_READY timer244
    WRITE32 ENDSUB_F_STOP_0:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB245:
  else207_2:
  endif207:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB246:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB249:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB250:
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB251:
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 120.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB252:
    MOVEF_F 185.0 VLV_DEG_12
    MOVEF_F 40.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB253:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 120.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB254:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB255:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB256:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 160.0 else258_1
    JR endif258
  else258_1:
    JR_LTEQF VGV_R 80.0 else258_2
    DATA8 layer259
	DATA8 no259
	DATA8 mode8259
	
	MOVEF_8 VGV_RIGHT_SENSOR no259
	SUB8 no259 1 no259
	DIV8 no259 4 layer259
	MATH MOD8 no259 4 no259

	MOVEF_8 2.0 mode8259
	
	INPUT_DEVICE READY_RAW layer259 no259 0 mode8259 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB260:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer262
	DATA8 no262
	DATA8 mode8262
	
	MOVEF_8 VGV_RIGHT_SENSOR no262
	SUB8 no262 1 no262
	DIV8 no262 4 layer262
	MATH MOD8 no262 4 no262

	MOVEF_8 1.0 mode8262
	
	INPUT_DEVICE READY_RAW layer262 no262 0 mode8262 0
    JR_LTEQF VGV_G 80.0 else263_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif263
  else263_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB266:
  else263_2:
  endif263:
    JR endif258
  else258_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else258_3
    DATA8 layer268
	DATA8 no268
	DATA8 mode8268
	
	MOVEF_8 VGV_RIGHT_SENSOR no268
	SUB8 no268 1 no268
	DIV8 no268 4 layer268
	MATH MOD8 no268 4 no268

	MOVEF_8 2.0 mode8268
	
	INPUT_DEVICE READY_RAW layer268 no268 0 mode8268 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB269:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer271
	DATA8 no271
	DATA8 mode8271
	
	MOVEF_8 VGV_RIGHT_SENSOR no271
	SUB8 no271 1 no271
	DIV8 no271 4 layer271
	MATH MOD8 no271 4 no271

	MOVEF_8 1.0 mode8271
	
	INPUT_DEVICE READY_RAW layer271 no271 0 mode8271 0
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_G '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_LTEQF VGV_G 15.0 else275_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_TAKE_CHEM_IN_YELLOW
  else275_1:
  endif275:
  else258_3:
  endif258:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 255.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB276:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB277:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 260.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB278:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB279:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB280:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else281_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB283:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 90.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB284:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB285:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB286:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 50.0 else288_1
    DATA8 layer289
	DATA8 no289
	DATA8 mode8289
	
	MOVEF_8 VGV_LEFT_SENSOR no289
	SUB8 no289 1 no289
	DIV8 no289 4 layer289
	MATH MOD8 no289 4 no289

	MOVEF_8 2.0 mode8289
	
	INPUT_DEVICE READY_RAW layer289 no289 0 mode8289 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB290:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer292
	DATA8 no292
	DATA8 mode8292
	
	MOVEF_8 VGV_LEFT_SENSOR no292
	SUB8 no292 1 no292
	DIV8 no292 4 layer292
	MATH MOD8 no292 4 no292

	MOVEF_8 1.0 mode8292
	
	INPUT_DEVICE READY_RAW layer292 no292 0 mode8292 0
    JR_LTEQF VGV_G 70.0 else293_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif293
  else293_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB296:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB297:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB298:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB299:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB300:
  else293_2:
  endif293:
    JR endif288
  else288_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else288_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB302:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 70.0 else304_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VLV_FINISH_FORWARD_15
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB305:
  else304_1:
  endif304:
  else288_2:
  endif288:
    JR endif281
  else281_1:
    MOVEF_F 165.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB306 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB306:
  else281_2:
  endif281:
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB307 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB307:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB308:
    MOVEF_F 95.0 VGV_A
  while309:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 300.0 endwhile309
  whilebody309:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB312:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 300.0 whilebody309
  endwhile309:
    MULF 40.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF 40.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds319
	MOVEF_32 1000.0 milliseconds319
	DATA32 timer319
	TIMER_WAIT milliseconds319 timer319
	TIMER_READY timer319
    WRITE32 ENDSUB_F_STOP_0:CALLSUB320 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB320:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 160.0 else322_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif322
  else322_1:
    JR_LTEQF VGV_R 80.0 else322_2
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'fire' VGV_OBEJCT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB325:
    JR endif322
  else322_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else322_3
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB327:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    STRINGS DUPLICATE 'False' VGV_CH
    JR_GTEQF VGV_ULTRA 75.0 else329_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif329
  else329_1:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 20.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB331:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB332:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB336:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
    JR_GTEQF VGV_ULTRA 75.0 else338_1
    STRINGS DUPLICATE 'True' VGV_CH
  else338_1:
  endif338:
  else329_2:
  endif329:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 75.0 else342_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB343:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 80.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB344:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB345:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer346
	DATA8 nos346
	DATA8 busy346
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer346 nos346
	JR_EQ8 0 nos346 motornotbusy346
  motorwaiting346:
	OUTPUT_TEST layer346 nos346 busy346
	JR_EQ8 busy346 0 motornotbusy346
	SLEEP
	JR motorwaiting346
  motornotbusy346:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 160.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB347:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer348
	DATA8 nos348
	DATA8 busy348
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer348 nos348
	JR_EQ8 0 nos348 motornotbusy348
  motorwaiting348:
	OUTPUT_TEST layer348 nos348 busy348
	JR_EQ8 busy348 0 motornotbusy348
	SLEEP
	JR motorwaiting348
  motornotbusy348:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 160.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB350 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB350:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB351:
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB352:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB353:
  else342_1:
  endif342:
  else322_3:
  endif322:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 240.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB355:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 105.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB356:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB357:
    MOVEF_F 1200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB358:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB359:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 120.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB360:
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else361_1
    WRITE32 ENDSUB_F_RESET_0:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB363:
  while364:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 175.0 endwhile364
  whilebody364:
    MOVEF_F 93.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB367:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 175.0 whilebody364
  endwhile364:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 15.0 VLV_MIN_POWER_14
    MOVEF_F 120.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB370:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB371:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB372:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 60.0 else374_1
    DATA8 layer375
	DATA8 no375
	DATA8 mode8375
	
	MOVEF_8 VGV_LEFT_SENSOR no375
	SUB8 no375 1 no375
	DIV8 no375 4 layer375
	MATH MOD8 no375 4 no375

	MOVEF_8 2.0 mode8375
	
	INPUT_DEVICE READY_RAW layer375 no375 0 mode8375 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB376:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer378
	DATA8 no378
	DATA8 mode8378
	
	MOVEF_8 VGV_LEFT_SENSOR no378
	SUB8 no378 1 no378
	DIV8 no378 4 layer378
	MATH MOD8 no378 4 no378

	MOVEF_8 1.0 mode8378
	
	INPUT_DEVICE READY_RAW layer378 no378 0 mode8378 0
    JR_LTEQF VGV_G 80.0 else379_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif379
  else379_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB382:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB383:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB384:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB385:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB386:
  else379_2:
  endif379:
    JR endif374
  else374_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else374_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB388:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 90.0 else393_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VLV_FINISH_FORWARD_15
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB394:
  else393_1:
  endif393:
  else374_2:
  endif374:
    CALL EQ_STRING VGV_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or396
    CALL EQ_STRING VGV_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else395_1
  or396:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB399:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 70.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB400:
    JR endif395
  else395_1:
    MOVEF_F 80.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB401:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 70.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB402:
  else395_2:
  endif395:
    JR endif361
  else361_1:
    MOVEF_F 450.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB403:
  else361_2:
  endif361:
    STRINGS DUPLICATE 'False' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VGV_IS_ON_SECOND_BLUE
    WRITE32 ENDSUB_F_STOP_0:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB404:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB405:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 50.0 else407_1
    DATA8 layer408
	DATA8 no408
	DATA8 mode8408
	
	MOVEF_8 VGV_LEFT_SENSOR no408
	SUB8 no408 1 no408
	DIV8 no408 4 layer408
	MATH MOD8 no408 4 no408

	MOVEF_8 2.0 mode8408
	
	INPUT_DEVICE READY_RAW layer408 no408 0 mode8408 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB409:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer411
	DATA8 no411
	DATA8 mode8411
	
	MOVEF_8 VGV_LEFT_SENSOR no411
	SUB8 no411 1 no411
	DIV8 no411 4 layer411
	MATH MOD8 no411 4 no411

	MOVEF_8 1.0 mode8411
	
	INPUT_DEVICE READY_RAW layer411 no411 0 mode8411 0
    JR_LTEQF VGV_G 100.0 else412_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif412
  else412_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB415:
  else412_2:
  endif412:
    JR endif407
  else407_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else407_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB417:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 80.0 else422_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 145.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB423 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB423:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 145.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB424:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB425:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB426:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB428:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer429
	DATA8 nos429
	DATA8 busy429
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer429 nos429
	JR_EQ8 0 nos429 motornotbusy429
  motorwaiting429:
	OUTPUT_TEST layer429 nos429 busy429
	JR_EQ8 busy429 0 motornotbusy429
	SLEEP
	JR motorwaiting429
  motornotbusy429:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB430:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB431:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB432:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB433:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer434
	DATA8 nos434
	DATA8 busy434
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer434 nos434
	JR_EQ8 0 nos434 motornotbusy434
  motorwaiting434:
	OUTPUT_TEST layer434 nos434 busy434
	JR_EQ8 busy434 0 motornotbusy434
	SLEEP
	JR motorwaiting434
  motornotbusy434:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB435:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB436:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB437:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB438:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB439:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB440:
  else422_1:
  endif422:
  else407_2:
  endif407:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else441_1
    STRINGS DUPLICATE 'True' VGV_IS_ON_SECOND_BLUE
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB443:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB444:
  while445:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 320.0 endwhile445
  whilebody445:
    MOVEF_F 93.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB448:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 320.0 whilebody445
  endwhile445:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB451:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB452:
    STRINGS DUPLICATE 'none' VGV_OBJECT
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB453:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 50.0 else455_1
    DATA8 layer456
	DATA8 no456
	DATA8 mode8456
	
	MOVEF_8 VGV_LEFT_SENSOR no456
	SUB8 no456 1 no456
	DIV8 no456 4 layer456
	MATH MOD8 no456 4 no456

	MOVEF_8 2.0 mode8456
	
	INPUT_DEVICE READY_RAW layer456 no456 0 mode8456 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB457:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer459
	DATA8 no459
	DATA8 mode8459
	
	MOVEF_8 VGV_LEFT_SENSOR no459
	SUB8 no459 1 no459
	DIV8 no459 4 layer459
	MATH MOD8 no459 4 no459

	MOVEF_8 1.0 mode8459
	
	INPUT_DEVICE READY_RAW layer459 no459 0 mode8459 0
    JR_LTEQF VGV_G 80.0 else460_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif460
  else460_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Trie' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB463:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB464:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB465:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB466:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB467:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB468 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB468:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB469:
  else460_2:
  endif460:
    JR endif455
  else455_1:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB470:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 80.0 else472_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'Treu' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VLV_FINISH_FORWARD_15
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB473:
  else472_1:
  endif472:
  else455_2:
  endif455:
  else441_1:
  endif441:
    STRINGS DUPLICATE 'none' VGV_WHITE_OBJECT
    JR_GTEQF VGV_MEN_COUNT 2.0 else474_1
    STRINGS DUPLICATE 'man' VGV_WHITE_OBJECT
    JR endif474
  else474_1:
    JR_GTEQF VGV_FIRE_COUNT 2.0 else474_2
    STRINGS DUPLICATE 'fire' VGV_WHITE_OBJECT
    JR endif474
  else474_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else474_3
    STRINGS DUPLICATE 'chem' VGV_WHITE_OBJECT
  else474_3:
  endif474:
    CALL EQ_STRING VGV_WHITE_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else476_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
  else476_1:
  endif476:
    CALL EQ_STRING VGV_WHITE_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or480
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or480
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else479_1
  or480:
    CALL EQ_STRING VGV_IS_ON_SECOND_BLUE 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else484_1
    CALL EQ_STRING VGV_IS_SECOND_BLUE_OBJECT_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else486_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 30.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB488:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 30.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB489:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    JR endif486
  else486_1:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 10.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB491:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB492:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB493:
  else486_2:
  endif486:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB495:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB496:
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB497:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB498:
    JR endif484
  else484_1:
    CALL EQ_STRING VGV_IS_FIRST_BLUE_OBJECT_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else499_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB501:
    MOVEF_F 215.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB502:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB503:
    JR endif499
  else499_1:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 75.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB504:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 75.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB505:
  else499_2:
  endif499:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB506:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB508:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB509:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB510:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB511:
  else484_2:
  endif484:
    MOVEF_F 100.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB512 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB512:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB513:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB514:
    DATA8 layer515
	DATA8 no515
	DATA8 mode8515
	
	MOVEF_8 VGV_LINE no515
	SUB8 no515 1 no515
	DIV8 no515 4 layer515
	MATH MOD8 no515 4 no515

	MOVEF_8 2.0 mode8515
	
	INPUT_DEVICE READY_RAW layer515 no515 0 mode8515 0
  while516:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 130.0 endwhile516
  whilebody516:
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB519:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 130.0 whilebody516
  endwhile516:
  while522:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_EQF F.0 6.0 endwhile522
  whilebody522:
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB524:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_NEQF F.0 6.0 whilebody522
  endwhile522:
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else526_1
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else526_1
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB529:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB530:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB531:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB532:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB533:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB534:
    JR endif526
  else526_1:
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else526_2
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB536:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB537:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB538:
    JR endif526
  else526_2:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else526_3
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 170.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB540 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB540:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB541:
  else526_3:
  endif526:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else542_1
    DATA8 layer544
	DATA8 no544
	DATA8 mode8544
	
	MOVEF_8 VGV_LINE no544
	SUB8 no544 1 no544
	DIV8 no544 4 layer544
	MATH MOD8 no544 4 no544

	MOVEF_8 2.0 mode8544
	
	INPUT_DEVICE READY_RAW layer544 no544 0 mode8544 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB545:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB546 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB546:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB547:
  while548:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_EQF F.0 4.0 endwhile548
  whilebody548:
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB550:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_NEQF F.0 4.0 whilebody548
  endwhile548:
    MOVEF_F 250.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB552 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB552:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB553 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB553:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB554:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB556 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB556:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer557
	DATA8 nos557
	DATA8 busy557
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer557 nos557
	JR_EQ8 0 nos557 motornotbusy557
  motorwaiting557:
	OUTPUT_TEST layer557 nos557 busy557
	JR_EQ8 busy557 0 motornotbusy557
	SLEEP
	JR motorwaiting557
  motornotbusy557:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 65.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB558:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 65.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB559:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB560:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer561
	DATA8 nos561
	DATA8 busy561
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer561 nos561
	JR_EQ8 0 nos561 motornotbusy561
  motorwaiting561:
	OUTPUT_TEST layer561 nos561 busy561
	JR_EQ8 busy561 0 motornotbusy561
	SLEEP
	JR motorwaiting561
  motornotbusy561:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB562 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB562:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB563 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB563:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB564:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB565:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 177.0 'True'

	DATA8 layer569
	DATA8 nos569
	DATA8 busy569
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer569 nos569
	JR_EQ8 0 nos569 motornotbusy569
  motorwaiting569:
	OUTPUT_TEST layer569 nos569 busy569
	JR_EQ8 busy569 0 motornotbusy569
	SLEEP
	JR motorwaiting569
  motornotbusy569:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB570:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB571:
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB572:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB573:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB574:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 200.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB575:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB576:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 210.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB577:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB578:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB579:
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB580:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB581:
  else542_1:
  endif542:
    CALL EQ_STRING VGV_WHITE_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else582_1
    DATA8 layer584
	DATA8 no584
	DATA8 mode8584
	
	MOVEF_8 VGV_LINE no584
	SUB8 no584 1 no584
	DIV8 no584 4 layer584
	MATH MOD8 no584 4 no584

	MOVEF_8 0.0 mode8584
	
	INPUT_DEVICE READY_RAW layer584 no584 0 mode8584 0
    MOVEF_F 100.0 VGV_MINUS_DEG
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else585_1
    ADDF VGV_MINUS_DEG 200.0 VGV_MINUS_DEG
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB588:
  else585_1:
  endif585:
    SUBF 420.0 VGV_MINUS_DEG VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB590:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB591:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB592:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB593:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB594:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB595:
    STRINGS DUPLICATE 'False' VGV_CH
    DATA8 layer596
	DATA8 no596
	DATA8 mode8596
	
	MOVEF_8 VGV_RIGHT_SENSOR no596
	SUB8 no596 1 no596
	DIV8 no596 4 layer596
	MATH MOD8 no596 4 no596

	MOVEF_8 4.0 mode8596
	
	INPUT_DEVICE READY_RAW layer596 no596 0 mode8596 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB597:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    JR_LTEQF VGV_W 40.0 else599_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif599
  else599_1:
    DATA8 layer600
	DATA8 no600
	DATA8 mode8600
	
	MOVEF_8 VGV_RIGHT_SENSOR no600
	SUB8 no600 1 no600
	DIV8 no600 4 layer600
	MATH MOD8 no600 4 no600

	MOVEF_8 0.0 mode8600
	
	INPUT_DEVICE READY_RAW layer600 no600 0 mode8600 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 25.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB602:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB603:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 F.0
    JR_NEQF F.0 12.0 else604_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif604
  else604_1:
    DATA8 layer606
	DATA8 no606
	DATA8 mode8606
	
	MOVEF_8 VGV_RIGHT_SENSOR no606
	SUB8 no606 1 no606
	DIV8 no606 4 layer606
	MATH MOD8 no606 4 no606

	MOVEF_8 4.0 mode8606
	
	INPUT_DEVICE READY_RAW layer606 no606 0 mode8606 0
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB607:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    JR_LTEQF VGV_W 40.0 else609_1
    STRINGS DUPLICATE 'True' VGV_CH
  else609_1:
  endif609:
  else604_2:
  endif604:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 25.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB610:
  else599_2:
  endif599:
    CALL EQ_STRING VGV_CH 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else611_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB613:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB614:
    MOVEF_F 30.0 VLV_DEG_12
    MOVEF_F -30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB615:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 80.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB616:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB617 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB617:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB618:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB619:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer620
	DATA8 nos620
	DATA8 busy620
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer620 nos620
	JR_EQ8 0 nos620 motornotbusy620
  motorwaiting620:
	OUTPUT_TEST layer620 nos620 busy620
	JR_EQ8 busy620 0 motornotbusy620
	SLEEP
	JR motorwaiting620
  motornotbusy620:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB621:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB622:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB623 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB623:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer624
	DATA8 nos624
	DATA8 busy624
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer624 nos624
	JR_EQ8 0 nos624 motornotbusy624
  motorwaiting624:
	OUTPUT_TEST layer624 nos624 busy624
	JR_EQ8 busy624 0 motornotbusy624
	SLEEP
	JR motorwaiting624
  motornotbusy624:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB625:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB626 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB626:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB627:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB628:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB629 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB629:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB631 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB631:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB632 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB632:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB633:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 490.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB634:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB635:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 120.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB636 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB636:
    JR endif611
  else611_1:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 230.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB638 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB638:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer639
	DATA8 nos639
	DATA8 busy639
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer639 nos639
	JR_EQ8 0 nos639 motornotbusy639
  motorwaiting639:
	OUTPUT_TEST layer639 nos639 busy639
	JR_EQ8 busy639 0 motornotbusy639
	SLEEP
	JR motorwaiting639
  motornotbusy639:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB640 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB640:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB641:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 60.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB642 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB642:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB643:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 70.0 VLV_DEG_13
    MOVEF_F 25.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB644:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer645
	DATA8 nos645
	DATA8 busy645
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer645 nos645
	JR_EQ8 0 nos645 motornotbusy645
  motorwaiting645:
	OUTPUT_TEST layer645 nos645 busy645
	JR_EQ8 busy645 0 motornotbusy645
	SLEEP
	JR motorwaiting645
  motornotbusy645:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 230.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB647:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 80.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB648:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 130.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB649 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB649:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 170.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB650 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB650:
  else611_2:
  endif611:
    JR endif582
  else582_1:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else582_2
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 55.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB652:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 55.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB653:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB654:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB655 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB655:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 140.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB656 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB656:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB657:
  else582_2:
  endif582:
    MOVEF_F 200.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB658 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB658:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB659:
  while660:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 600.0 endwhile660
  whilebody660:
    MOVEF_F 480.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB663:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 600.0 whilebody660
  endwhile660:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB666 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB666:
    JR endif479
  else479_1:
    CALL EQ_STRING VGV_IS_ON_SECOND_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else667_1
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB669:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB670:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_A
  while672:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 310.0 endwhile672
  whilebody672:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB675 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB675:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 310.0 whilebody672
  endwhile672:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB678 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB678:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB679:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB680 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB680:
  else667_1:
  endif667:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB681:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB682:
    DATA8 layer683
	DATA8 no683
	DATA8 mode8683
	
	MOVEF_8 VGV_LINE no683
	SUB8 no683 1 no683
	DIV8 no683 4 layer683
	MATH MOD8 no683 4 no683

	MOVEF_8 0.0 mode8683
	
	INPUT_DEVICE READY_RAW layer683 no683 0 mode8683 0
  while684:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 330.0 endwhile684
  whilebody684:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB687 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB687:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 330.0 whilebody684
  endwhile684:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB690 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB690:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while691:
    JR_LTEQF VGV_P 20.0 endwhile691
  whilebody691:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB692 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB692:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB693:
    JR_GTF VGV_P 20.0 whilebody691
  endwhile691:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB694 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB694:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 200.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'Fales' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB695:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB698:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while699:
    JR_GTEQF VGV_P 20.0 endwhile699
  whilebody699:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB700:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_LTF VGV_P 20.0 whilebody699
  endwhile699:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer702
	DATA8 nos702
	DATA8 busy702
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer702 nos702
	JR_EQ8 0 nos702 motornotbusy702
  motorwaiting702:
	OUTPUT_TEST layer702 nos702 busy702
	JR_EQ8 busy702 0 motornotbusy702
	SLEEP
	JR motorwaiting702
  motornotbusy702:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB703:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB704:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB705 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB705:
  while706:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 200.0 endwhile706
  whilebody706:
    MOVEF_F -100.0 VLV_L_7
    WRITE32 ENDSUB_F_LINE_SLOW_1:CALLSUB709 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_SLOW_1
CALLSUB709:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 200.0 whilebody706
  endwhile706:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB712 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB712:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while713:
    JR_LTEQF VGV_P 10.0 endwhile713
  whilebody713:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB714:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F -100.0 VLV_L_7
    WRITE32 ENDSUB_F_LINE_SLOW_1:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_SLOW_1
CALLSUB715:
    JR_GTF VGV_P 10.0 whilebody713
  endwhile713:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB716 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB716:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 390.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB717 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB717:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 42.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB718:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 42.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB719:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB720:
  else479_2:
  endif479:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer721
	DATA8 nos721
	DATA8 busy721
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer721 nos721
	JR_EQ8 0 nos721 motornotbusy721
  motorwaiting721:
	OUTPUT_TEST layer721 nos721 busy721
	JR_EQ8 busy721 0 motornotbusy721
	SLEEP
	JR motorwaiting721
  motornotbusy721:
    CALL EQ_STRING VGV_START 'left' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else722_1
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_23
    WRITE32 ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:CALLSUB724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FROM_PROTECTED_TO_FINISH_1
CALLSUB724:
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_24
    WRITE32 ENDSUB_F_TAKE_CUBES_1:CALLSUB725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_1
CALLSUB725:
    STRINGS DUPLICATE VGV_BROWN_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_RED_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB726:
    STRINGS DUPLICATE VGV_WHITE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_YELLOW_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB727:
    STRINGS DUPLICATE VGV_BLUE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_GREEN_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'False' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB728:
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_25
    WRITE32 ENDSUB_F_FINISH_AFTER_DELIVERIES_1:CALLSUB729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_DELIVERIES_1
CALLSUB729:
    JR endif722
  else722_1:
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_23
    WRITE32 ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:CALLSUB730 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FROM_PROTECTED_TO_FINISH_1
CALLSUB730:
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_24
    WRITE32 ENDSUB_F_TAKE_CUBES_1:CALLSUB731 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_1
CALLSUB731:
    STRINGS DUPLICATE VGV_BLUE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_GREEN_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB732 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB732:
    STRINGS DUPLICATE VGV_WHITE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_YELLOW_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB733:
    STRINGS DUPLICATE VGV_BROWN_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_RED_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'False' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB734:
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_25
    WRITE32 ENDSUB_F_FINISH_AFTER_DELIVERIES_1:CALLSUB735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_DELIVERIES_1
CALLSUB735:
  else722_2:
  endif722:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB736:
    STRINGS DUPLICATE 'True' VLV_TO_DELAY_26
    WRITE32 ENDSUB_F_SHOW_TIME_1:CALLSUB737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SHOW_TIME_1
CALLSUB737:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_MOVEMENT_INIT_1:
    MULF VLV_POWER_1 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF VLV_POWER_1 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
RETSUB_F_MOVEMENT_INIT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVEMENT_INIT_1:
SUB_F_DELAY_1:
    DATA32 milliseconds742
	MOVEF_32 VLV_TIME_2 milliseconds742
	DATA32 timer742
	TIMER_WAIT milliseconds742 timer742
	TIMER_READY timer742
RETSUB_F_DELAY_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_1:
SUB_F_RESET_0:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 2
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_STOP_0:
    OUTPUT_POWER 0 3 0
	OUTPUT_STOP 0 3 1
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_READ_PERCENT_1:
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf749
    DATA8 flag749
    DIVF F.1 F.2 tmpf749
    CP_EQF 0.0 F.2 flag749
    SELECTF flag749 0.0 tmpf749 F.0

    MULF F.0 100.0 VLV_PERCENT_5
RETSUB_F_READ_PERCENT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_READ_PERCENT_1:
SUB_F_LINE_1:
    JR_NEQF VLV_L_6 -100.0 else751_1
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf755
    DATA8 flag755
    DIVF F.1 F.2 tmpf755
    CP_EQF 0.0 F.2 flag755
    SELECTF flag755 0.0 tmpf755 F.0

    MULF F.0 150.0 VLV_L_6
  else751_1:
  endif751:
    SUBF VLV_L_6 50.0 VLV_ERR_6
    SUBF VLV_ERR_6 VGV_LAST_ERR VLV_DIFF_6
    MULF VLV_ERR_6 1.0 F.0
    MULF VLV_DIFF_6 7.0 F.1
    ADDF F.0 F.1 VLV_DELTA_6
    SUBF 80.0 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF 80.0 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VLV_LEFT_POWER_6 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_6 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_6 VGV_LAST_ERR
    DATA32 milliseconds768
	MOVEF_32 5.0 milliseconds768
	DATA32 timer768
	TIMER_WAIT milliseconds768 timer768
	TIMER_READY timer768
RETSUB_F_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_1:
SUB_F_LINE_SLOW_1:
    JR_NEQF VLV_L_7 -100.0 else769_1
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf773
    DATA8 flag773
    DIVF F.1 F.2 tmpf773
    CP_EQF 0.0 F.2 flag773
    SELECTF flag773 0.0 tmpf773 F.0

    MULF F.0 150.0 VLV_L_7
  else769_1:
  endif769:
    SUBF VLV_L_7 50.0 VLV_ERR_7
    SUBF VLV_ERR_7 VGV_LAST_ERR VLV_DIFF_7
    MULF VLV_ERR_7 0.5 F.0
    MULF VLV_DIFF_7 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_7
    SUBF 30.0 VLV_DELTA_7 VLV_LEFT_POWER_7
    ADDF 30.0 VLV_DELTA_7 VLV_RIGHT_POWER_7
    MULF VLV_LEFT_POWER_7 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_7 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_7 VGV_LAST_ERR
    DATA32 milliseconds786
	MOVEF_32 5.0 milliseconds786
	DATA32 timer786
	TIMER_WAIT milliseconds786 timer786
	TIMER_READY timer786
RETSUB_F_LINE_SLOW_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_SLOW_1:
SUB_F_ULTRA_LINE_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VLV_L_8
    SUBF VLV_L_8 VLV_A_8 VLV_ERR_8
    SUBF VLV_ERR_8 VGV_LAST_ERR VLV_DIFF_8
    MULF VLV_ERR_8 0.8 F.0
    MULF VLV_DIFF_8 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_8
    SUBF 40.0 VLV_DELTA_8 VLV_LEFT_POWER_8
    ADDF 40.0 VLV_DELTA_8 VLV_RIGHT_POWER_8
    MULF VLV_LEFT_POWER_8 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_8 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_8 VGV_LAST_ERR
RETSUB_F_ULTRA_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRA_LINE_1:
SUB_F_SPEEDUP_4:
    MOVEF_F 15.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB799:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB800:
    MOVEF_F 0.0 VLV_L_10
  while801:
    JR_GTEQF VLV_L_10 VLV_DEG_10 endwhile801
  whilebody801:
    DATAF tmpf802
    DATA8 flag802
    DIVF VLV_L_10 VLV_DEG_10 tmpf802
    CP_EQF 0.0 VLV_DEG_10 flag802
    SELECTF flag802 0.0 tmpf802 VLV_P_10

    SUBF VLV_BASE_POWER_10 VLV_MIN_POWER_10 F.1
    MULF F.1 VLV_P_10 F.0
    ADDF F.0 VLV_MIN_POWER_10 VLV_POWER_10
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_10 VLV_L_10
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_10 VLV_R_10
    SUBF VLV_L_10 VLV_R_10 F.0
    MULF F.0 VLV_P_10 VLV_DELTA_10
    SUBF VLV_POWER_10 VLV_DELTA_10 VLV_LEFT_POWER_10
    ADDF VLV_POWER_10 VLV_DELTA_10 VLV_RIGHT_POWER_10
    MULF VLV_LEFT_POWER_10 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_10 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_10 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_10 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    JR_LTF VLV_L_10 VLV_DEG_10 whilebody801
  endwhile801:
RETSUB_F_SPEEDUP_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPEEDUP_4:
SUB_F_SYNC_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_11
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_11
    SUBF VLV_L_11 VLV_R_11 VLV_ERR_11
    SUBF VLV_ERR_11 VGV_LAST_ERR VLV_DIFF_11
    MULF VLV_ERR_11 1.0 F.0
    MULF VLV_DIFF_11 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_11
    SUBF VLV_POWER_11 VLV_DELTA_11 VLV_LEFT_POWER_11
    ADDF VLV_POWER_11 VLV_DELTA_11 VLV_RIGHT_POWER_11
    MULF VLV_LEFT_POWER_11 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_11 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_11 VGV_LAST_ERR
RETSUB_F_SYNC_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SYNC_1:
SUB_F_FORWARD_DEG_2:
    MOVEF_F VLV_POWER_12 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB837:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB838:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_12
  while841:
    MATH ABS VLV_L_12 F.0
    MATH ABS VLV_DEG_12 F.1
    JR_GTEQF F.0 F.1 endwhile841
  whilebody841:
    MOVEF_F VLV_POWER_12 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB844 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB844:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_12
    MATH ABS VLV_L_12 F.0
    MATH ABS VLV_DEG_12 F.1
    JR_LTF F.0 F.1 whilebody841
  endwhile841:
RETSUB_F_FORWARD_DEG_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FORWARD_DEG_2:
SUB_F_MOVE_MOTOR_7:
    MOVEF_F VLV_DEG_13 VLV_NORMAL_DEG_13
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_13
    MOVEF_F 0.0 VLV_ZAME_DEG_13
    CALL EQ_STRING VLV_ACCELERATION_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else849_1
    DATAF tmpf851
    DATA8 flag851
    DIVF VLV_DEG_13 2.0 tmpf851
    CP_EQF 0.0 2.0 flag851
    SELECTF flag851 0.0 tmpf851 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag853
	CP_LTF F.0 120.0 flag853
	SELECTF flag853 F.0 120.0 VLV_ACCELERATION_DEG_13
    SUBF VLV_NORMAL_DEG_13 VLV_ACCELERATION_DEG_13 VLV_NORMAL_DEG_13
  else849_1:
  endif849:
    CALL EQ_STRING VLV_ZAME_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else855_1
    DATAF tmpf857
    DATA8 flag857
    DIVF VLV_DEG_13 2.0 tmpf857
    CP_EQF 0.0 2.0 flag857
    SELECTF flag857 0.0 tmpf857 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag859
	CP_LTF F.0 120.0 flag859
	SELECTF flag859 F.0 120.0 VLV_ZAME_DEG_13
    SUBF VLV_NORMAL_DEG_13 VLV_ZAME_DEG_13 VLV_NORMAL_DEG_13
  else855_1:
  endif855:
    CALL EQ_STRING VLV_ACCELERATION_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else861_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_13
    MOVEF_F 0.0 VLV_M_13
    MOVEF_F 10.0 VLV_MIN_POWER_13
    TIMER_READ timeMC1
  while865:
    JR_GTEQF VLV_M_13 VLV_ACCELERATION_DEG_13 endwhile865
  whilebody865:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTEQF F.0 700.0 else866_1
    JR_GTEQF VLV_M_13 20.0 else866_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB868 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB868:
    ADDF VLV_MIN_POWER_13 2.0 VLV_MIN_POWER_13
    TIMER_READ timeMC1
  else866_1:
  endif866:
    DATAF tmpf871
    DATA8 flag871
    DIVF VLV_M_13 VLV_ACCELERATION_DEG_13 tmpf871
    CP_EQF 0.0 VLV_ACCELERATION_DEG_13 flag871
    SELECTF flag871 0.0 tmpf871 VLV_P_13

    SUBF VLV_MAX_POWER_13 VLV_MIN_POWER_13 F.1
    MULF F.1 VLV_P_13 F.0
    ADDF F.0 VLV_MIN_POWER_13 VLV_POWER_13
    MULF VLV_POWER_13 VLV_FORWARD_13 F.0
    CALL MOTOR.START VLV_MOTOR_13 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_13 F.0
    MULF F.0 VLV_FORWARD_13 VLV_M_13
    DATA32 milliseconds879
	MOVEF_32 10.0 milliseconds879
	DATA32 timer879
	TIMER_WAIT milliseconds879 timer879
	TIMER_READY timer879
    JR_LTF VLV_M_13 VLV_ACCELERATION_DEG_13 whilebody865
  endwhile865:
  else861_1:
  endif861:
    JR_LTEQF VLV_NORMAL_DEG_13 0.0 else880_1
    MULF VLV_MAX_POWER_13 VLV_FORWARD_13 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_13 F.0 0.0 VLV_NORMAL_DEG_13 0.0 'False' 

	DATA8 layer882
	DATA8 nos882
	DATA8 busy882
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_13 layer882 nos882
	JR_EQ8 0 nos882 motornotbusy882
  motorwaiting882:
	OUTPUT_TEST layer882 nos882 busy882
	JR_EQ8 busy882 0 motornotbusy882
	SLEEP
	JR motorwaiting882
  motornotbusy882:
  else880_1:
  endif880:
    CALL EQ_STRING VLV_ZAME_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else883_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_13
    MOVEF_F 0.0 VLV_M_13
  while886:
    JR_GTEQF VLV_M_13 VLV_ZAME_DEG_13 endwhile886
  whilebody886:
    DATAF tmpf887
    DATA8 flag887
    DIVF VLV_M_13 VLV_ZAME_DEG_13 tmpf887
    CP_EQF 0.0 VLV_ZAME_DEG_13 flag887
    SELECTF flag887 0.0 tmpf887 F.0

    SUBF 1.0 F.0 VLV_P_13
    SUBF VLV_MAX_POWER_13 10.0 F.1
    MULF F.1 VLV_P_13 F.0
    ADDF F.0 10.0 VLV_POWER_13
    MULF VLV_POWER_13 VLV_FORWARD_13 F.0
    CALL MOTOR.START VLV_MOTOR_13 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_13 F.0
    MULF F.0 VLV_FORWARD_13 VLV_M_13
    DATA32 milliseconds896
	MOVEF_32 10.0 milliseconds896
	DATA32 timer896
	TIMER_WAIT milliseconds896 timer896
	TIMER_READY timer896
    JR_LTF VLV_M_13 VLV_ZAME_DEG_13 whilebody886
  endwhile886:
  else883_1:
  endif883:
    CALL EQ_STRING VLV_TO_STOP_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else897_1
    CALL MOTOR.STOP VLV_MOTOR_13 'True'
  else897_1:
  endif897:
RETSUB_F_MOVE_MOTOR_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_MOTOR_7:
SUB_F_ZAME_4:
    MOVEF_F VLV_BASE_POWER_14 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB900 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB900:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB901 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB901:
    MOVEF_F 0.0 VLV_L_14
  while902:
    JR_GTEQF VLV_L_14 VLV_DEG_14 endwhile902
  whilebody902:
    DATAF tmpf903
    DATA8 flag903
    DIVF VLV_L_14 VLV_DEG_14 tmpf903
    CP_EQF 0.0 VLV_DEG_14 flag903
    SELECTF flag903 0.0 tmpf903 VLV_P_14

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_14 VLV_L_14
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_14 VLV_R_14
    SUBF VLV_L_14 VLV_R_14 F.0
    SUBF 1.0 VLV_P_14 F.1
    MULF F.0 F.1 VLV_DELTA_14
    SUBF VLV_BASE_POWER_14 VLV_MIN_POWER_14 F.1
    SUBF 1.0 VLV_P_14 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_14 VLV_POWER_14
    SUBF VLV_POWER_14 VLV_DELTA_14 VLV_LEFT_POWER_14
    ADDF VLV_POWER_14 VLV_DELTA_14 VLV_RIGHT_POWER_14
    MULF VLV_LEFT_POWER_14 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_14 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_14 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_14 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds925
	MOVEF_32 10.0 milliseconds925
	DATA32 timer925
	TIMER_WAIT milliseconds925 timer925
	TIMER_READY timer925
    JR_LTF VLV_L_14 VLV_DEG_14 whilebody902
  endwhile902:
RETSUB_F_ZAME_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAME_4:
SUB_F_TAKE_CHEM_ON_LEFT_1:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB926 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB926:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 80.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB927 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB927:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB928 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB928:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer929
	DATA8 nos929
	DATA8 busy929
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer929 nos929
	JR_EQ8 0 nos929 motornotbusy929
  motorwaiting929:
	OUTPUT_TEST layer929 nos929 busy929
	JR_EQ8 busy929 0 motornotbusy929
	SLEEP
	JR motorwaiting929
  motornotbusy929:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 130.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB930:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer931
	DATA8 nos931
	DATA8 busy931
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer931 nos931
	JR_EQ8 0 nos931 motornotbusy931
  motorwaiting931:
	OUTPUT_TEST layer931 nos931 busy931
	JR_EQ8 busy931 0 motornotbusy931
	SLEEP
	JR motorwaiting931
  motornotbusy931:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 125.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB933 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB933:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB934 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB934:
    CALL EQ_STRING VLV_FINISH_FORWARD_15 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else935_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 160.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB937 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB937:
    JR endif935
  else935_1:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 30.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB938 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB938:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 30.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB939 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB939:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB940 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB940:
  else935_2:
  endif935:
RETSUB_F_TAKE_CHEM_ON_LEFT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_1:
SUB_F_OPEN_CUBES_1:
    MULF 50.0 VLV_COEF_16 F.0
    CALL MOTOR.START VGV_WATER_MOTOR F.0
    DATA32 milliseconds943
	MOVEF_32 500.0 milliseconds943
	DATA32 timer943
	TIMER_WAIT milliseconds943 timer943
	TIMER_READY timer943
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
RETSUB_F_OPEN_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_1:
SUB_F_CLOSE_CUBES_1:
    MULF -30.0 VLV_COEF_17 F.0
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR F.0 0.0 90.0 0.0 'True' 

	DATA8 layer946
	DATA8 nos946
	DATA8 busy946
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer946 nos946
	JR_EQ8 0 nos946 motornotbusy946
  motorwaiting946:
	OUTPUT_TEST layer946 nos946 busy946
	JR_EQ8 busy946 0 motornotbusy946
	SLEEP
	JR motorwaiting946
  motornotbusy946:
RETSUB_F_CLOSE_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_1:
SUB_F_DELIVER_LONG_1:
    CALL EQ_STRING VLV_IS_INVERTED_18 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else947_1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOT_18
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_18
    MOVEF_F 1.0 VLV_COEF_18
    JR endif947
  else947_1:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOT_18
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_18
    MOVEF_F -1.0 VLV_COEF_18
  else947_2:
  endif947:
    JR_NEQF VGV_CUBES_COUNT 2.0 else949_1
    MOVEF_F VLV_COEF_18 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB950 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB950:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD_18 VLV_FORWARD_13
    MOVEF_F 270.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB951 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB951:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB952 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB952:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MULF VLV_FORWARD_18 -1.0 VLV_FORWARD_13
    MOVEF_F 120.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB954 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB954:
    MOVEF_F VLV_COEF_18 VLV_COEF_17
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB955 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB955:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MULF VLV_FORWARD_18 -1.0 VLV_FORWARD_13
    MOVEF_F 145.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB957 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB957:
    MOVEF_F 1.0 VGV_CUBES_COUNT
    JR endif949
  else949_1:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 30.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB958 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB958:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB959 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB959:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD_18 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB960 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB960:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB961 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB961:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB962 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB962:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB963:
    MOVEF_F VLV_COEF_18 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB964 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB964:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 45.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB965 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB965:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 45.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB966 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB966:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB967 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB967:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MULF VLV_FORWARD_18 -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB969 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB969:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 30.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB970 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB970:
    MOVEF_F 0.0 VGV_CUBES_COUNT
  else949_2:
  endif949:
RETSUB_F_DELIVER_LONG_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_LONG_1:
SUB_F_DELIVER_NEAR_2:
    CALL EQ_STRING VLV_IS_INVERTED_19 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else971_1
    MOVEF_F 1.0 VLV_COEF_19
    JR endif971
  else971_1:
    MOVEF_F -1.0 VLV_COEF_19
  else971_2:
  endif971:
    MOVEF_F 0.0 VLV_MINUS_DEG_19
    MOVEF_F VLV_COEF_19 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB973 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB973:
    JR_NEQF VGV_CUBES_COUNT 2.0 else974_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 30.0 VLV_MIN_POWER_10
    MOVEF_F 45.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB975 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB975:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB976 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB976:
    MOVEF_F VLV_COEF_19 VLV_COEF_17
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB977 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB977:
    MOVEF_F 1.0 VGV_CUBES_COUNT
    MOVEF_F 45.0 VLV_MINUS_DEG_19
  else974_1:
  endif974:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB978 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB978:
    SUBF VGV_CUBES_COUNT 1.0 VGV_CUBES_COUNT
RETSUB_F_DELIVER_NEAR_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_NEAR_2:
SUB_F_MOVE_TO_NEXT_ZONE_1:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB980 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB980:
    SUBF 210.0 VLV_MINUS_DEG_20 VLV_DEG_20
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F VLV_DEG_20 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB982 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB982:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB983 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB983:
RETSUB_F_MOVE_TO_NEXT_ZONE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_TO_NEXT_ZONE_1:
SUB_F_DELIVER_GROUP_4:
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    CALL EQ_STRING VLV_LONG_21 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else984_1
    STRINGS DUPLICATE VLV_IS_INVERTED_21 VLV_IS_INVERTED_18
    WRITE32 ENDSUB_F_DELIVER_LONG_1:CALLSUB986 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_LONG_1
CALLSUB986:
  else984_1:
  endif984:
    CALL EQ_STRING VLV_NEAR_21 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else987_1
    STRINGS DUPLICATE VLV_IS_INVERTED_21 VLV_IS_INVERTED_19
    WRITE32 ENDSUB_F_DELIVER_NEAR_2:CALLSUB989 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_NEAR_2
CALLSUB989:
    MOVEF_F VLV_MINUS_DEG_19 VLV_MINUS_DEG_21
  else987_1:
  endif987:
    CALL EQ_STRING VLV_SHOULD_MOVE_BACKWARD_21 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else990_1
    MOVEF_F VLV_MINUS_DEG_21 VLV_MINUS_DEG_20
    WRITE32 ENDSUB_F_MOVE_TO_NEXT_ZONE_1:CALLSUB992 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_TO_NEXT_ZONE_1
CALLSUB992:
  else990_1:
  endif990:
RETSUB_F_DELIVER_GROUP_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_GROUP_4:
SUB_F_GET_MOTORS_6:
    CALL EQ_STRING VLV_IS_INVERTED_22 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else993_1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR1_22
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR2_22
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD1_22
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD2_22
    MOVEF_F 1.0 VLV_COEF_22
    JR endif993
  else993_1:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR1_22
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR2_22
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD1_22
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD2_22
    MOVEF_F -1.0 VLV_COEF_22
  else993_2:
  endif993:
RETSUB_F_GET_MOTORS_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GET_MOTORS_6:
SUB_F_FROM_PROTECTED_TO_FINISH_1:
    STRINGS DUPLICATE VLV_IS_INVERTED_23 VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB995 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB995:
    STRINGS DUPLICATE VLV_MOTOR1_22 VLV_MOTOR1_23
    STRINGS DUPLICATE VLV_MOTOR2_22 VLV_MOTOR2_23
    MOVEF_F VLV_FORWARD1_22 VLV_FORWARD1_23
    MOVEF_F VLV_FORWARD2_22 VLV_FORWARD2_23
    MOVEF_F VLV_COEF_22 VLV_COEF_23
    MOVEF_F 50.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 300.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB996 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB996:
    CALL MOTOR.STOP VLV_MOTOR1_23 'True'
    STRINGS DUPLICATE VLV_MOTOR2_23 VLV_MOTOR_13
    MULF VLV_FORWARD2_23 -1.0 VLV_FORWARD_13
    MOVEF_F 330.0 VLV_DEG_13
    MOVEF_F 50.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'False' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB999 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB999:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1000 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1000:
    MOVEF_F 1700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1001 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1001:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1002 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1002:
    CALL MOTOR.START VGV_GRABBER_MOTOR -50.0
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1004 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1004:
    CALL MOTOR.STOP VGV_GRABBER_MOTOR 'True'
    MULF VLV_FORWARD2_23 30.0 F.0
    CALL MOTOR.START VLV_MOTOR2_23 F.0
    MOVEF_F 1500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1008 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1008:
    CALL MOTOR.STOP VLV_MOTOR2_23 'True'
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1010 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1010:
    MULF 40.0 VLV_FORWARD1_23 F.0
    CALL MOTOR.START VLV_MOTOR1_23 F.0
    MULF 50.0 VLV_FORWARD2_23 F.0
    CALL MOTOR.START VLV_MOTOR2_23 F.0
  while1015:
    CALL MOTOR.GETCOUNT VLV_MOTOR1_23 F.1
    MULF F.1 VLV_FORWARD1_23 F.0
    JR_GTEQF F.0 1000.0 endwhile1015
  whilebody1015:
    CALL MOTOR.GETCOUNT VLV_MOTOR1_23 F.1
    MULF F.1 VLV_FORWARD1_23 F.0
    JR_LTF F.0 1000.0 whilebody1015
  endwhile1015:
    MULF 40.0 VLV_FORWARD1_23 F.0
    CALL MOTOR.START VLV_MOTOR1_23 F.0
    MULF 60.0 VLV_FORWARD2_23 F.0
    CALL MOTOR.START VLV_MOTOR2_23 F.0
    DATA32 milliseconds1024
	MOVEF_32 1200.0 milliseconds1024
	DATA32 timer1024
	TIMER_WAIT milliseconds1024 timer1024
	TIMER_READY timer1024
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1025 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1025:
RETSUB_F_FROM_PROTECTED_TO_FINISH_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:
SUB_F_TAKE_CUBES_1:
    DATA8 layer1026
	DATA8 no1026
	DATA8 mode81026
	
	MOVEF_8 VGV_LINE no1026
	SUB8 no1026 1 no1026
	DIV8 no1026 4 layer1026
	MATH MOD8 no1026 4 no1026

	MOVEF_8 0.0 mode81026
	
	INPUT_DEVICE READY_RAW layer1026 no1026 0 mode81026 0
    STRINGS DUPLICATE VLV_IS_INVERTED_24 VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB1027 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB1027:
    STRINGS DUPLICATE VLV_MOTOR1_22 VLV_MOTOR1_24
    STRINGS DUPLICATE VLV_MOTOR2_22 VLV_MOTOR2_24
    MOVEF_F VLV_FORWARD1_22 VLV_FORWARD1_24
    MOVEF_F VLV_FORWARD2_22 VLV_FORWARD2_24
    MOVEF_F VLV_COEF_22 VLV_COEF_24
    MOVEF_F VLV_COEF_24 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB1028 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB1028:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 75.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1029 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1029:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 75.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB1030 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB1030:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1031 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1031:
    STRINGS DUPLICATE VLV_MOTOR2_24 VLV_MOTOR_13
    MULF VLV_FORWARD2_24 -1.0 VLV_FORWARD_13
    MOVEF_F 180.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1033 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1033:
    STRINGS DUPLICATE VLV_MOTOR1_24 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD1_24 VLV_FORWARD_13
    MOVEF_F 40.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1034 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1034:
    MULF VLV_FORWARD2_24 -30.0 F.0
    CALL MOTOR.START VLV_MOTOR2_24 F.0
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1037 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1037:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1038 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1038:
    MULF VLV_FORWARD1_24 -40.0 F.0
    CALL MOTOR.START VLV_MOTOR1_24 F.0
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1041 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1041:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1042 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1042:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1043:
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1044 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1044:
    MOVEF_F 800.0 VLV_DEG_12
    MOVEF_F 40.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB1045 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB1045:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 30.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB1046 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB1046:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1047 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1047:
    MOVEF_F VLV_COEF_24 VLV_COEF_17
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB1048 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB1048:
    STRINGS DUPLICATE VLV_MOTOR2_24 VLV_MOTOR_13
    MULF VLV_FORWARD2_24 -1.0 VLV_FORWARD_13
    MOVEF_F 250.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1050 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1050:
    STRINGS DUPLICATE VLV_MOTOR1_24 VLV_MOTOR_13
    MULF VLV_FORWARD1_24 -1.0 VLV_FORWARD_13
    MOVEF_F 250.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1052 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1052:
    MOVEF_F -30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1053 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1053:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB1054 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB1054:
    MOVEF_F VLV_PERCENT_5 VLV_P_24
  while1055:
    JR_LTEQF VLV_P_24 20.0 endwhile1055
  whilebody1055:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB1056 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB1056:
    MOVEF_F VLV_PERCENT_5 VLV_P_24
    JR_GTF VLV_P_24 20.0 whilebody1055
  endwhile1055:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1057 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1057:
RETSUB_F_TAKE_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_1:
SUB_F_FINISH_AFTER_DELIVERIES_1:
    STRINGS DUPLICATE VLV_IS_INVERTED_25 VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB1058 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB1058:
    STRINGS DUPLICATE VLV_MOTOR1_22 VLV_MOTOR1_25
    STRINGS DUPLICATE VLV_MOTOR2_22 VLV_MOTOR2_25
    MOVEF_F VLV_FORWARD1_22 VLV_FORWARD1_25
    MOVEF_F VLV_FORWARD2_22 VLV_FORWARD2_25
    MOVEF_F VLV_COEF_22 VLV_COEF_25
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1059:
    MOVEF_F 1500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1060 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1060:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1061 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1061:
    STRINGS DUPLICATE VLV_MOTOR1_25 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD1_25 VLV_FORWARD_13
    MOVEF_F 210.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1062 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1062:
    STRINGS DUPLICATE VLV_MOTOR2_25 VLV_MOTOR_13
    MULF VLV_FORWARD2_25 -1.0 VLV_FORWARD_13
    MOVEF_F 150.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1064 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1064:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1065 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1065:
    MOVEF_F 2000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1066 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1066:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1067 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1067:
RETSUB_F_FINISH_AFTER_DELIVERIES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_DELIVERIES_1:
SUB_F_SHOW_TIME_1:
    TIMER_READ timeMC9tmp
	SUB32 timeMC9tmp timeMC9 timeMC9tmp
	MOVE32_F timeMC9tmp VLV_MILLISECOND_26
    DATAF tmpf1069
    DATA8 flag1069
    DIVF VLV_MILLISECOND_26 1000.0 tmpf1069
    CP_EQF 0.0 1000.0 flag1069
    SELECTF flag1069 0.0 tmpf1069 F.0

    MATH FLOOR F.0 VLV_SECONDS_26
    DATAF tmpf1071
    DATA8 flag1071
    DIVF VLV_SECONDS_26 60.0 tmpf1071
    CP_EQF 0.0 60.0 flag1071
    SELECTF flag1071 0.0 tmpf1071 F.0

    MATH FLOOR F.0 VLV_MINUTES_26
    MATH MOD VLV_SECONDS_26 60.0 VLV_SECONDS_26
    STRINGS VALUE_FORMATTED VLV_MINUTES_26 '%g' 99 S.1
    CALL TEXT.APPEND S.1 ':' S.0
    STRINGS VALUE_FORMATTED VLV_SECONDS_26 '%g' 99 S.1
    CALL TEXT.APPEND S.0 S.1 VLV_TEXT_26
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 VLV_TEXT_26
    CALL EQ_STRING VLV_TO_DELAY_26 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1080_1
    MOVEF_F 100000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1082 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1082:
  else1080_1:
  endif1080:
RETSUB_F_SHOW_TIME_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SHOW_TIME_1:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall NE_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 flag 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
isequal:
	STRINGS DUPLICATE 'False' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'True' result
	RETURN
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
