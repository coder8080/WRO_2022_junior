DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_4
DATAF VLV_MIN_POWER_4
DATAF VLV_DEG_4
DATAF VLV_ACCELERATION_4
DATAF VLV_ZAME_4
DATAF VLV_BASE_POWER_5
DATAF VLV_MIN_POWER_5
DATAF VLV_DEG_5
DATAF VLV_ACCELERATION_5
DATAF VLV_ZAME_5
DATAF VLV_U_2
DATAF VLV_BASE_POWER_2
DATAF VLV_MIN_POWER_2
DATAF VLV_DEGREES_2
DATAF VLV_ZAMED_DEGREES_2
DATAF VLV_POWER_1
DATAF VLV_U_1
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERSED_MOTOR 252
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_MOTORS 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_LINE_SENSOR
DATAF VGV_ULTRASONIC
DATAF VGV_RIGHT_FORWARD
DATAF VGV_LEFT_FORWARD
DATAF VGV_A
DATAF VGV_P
DATAF VGV_D
DATAF VGV_LASTERROR
DATAF VGV_NOWERROR
DATAF VGV_DIF
DATAF VGV_INTEGRAL
DATAF VGV_DERIVATIVE
DATAF VGV_UP
DATAF VGV_P_U
DATAF VGV_D_U
DATAF VGV_DEG
DATAS VGV_IS_CHEM_ON_RIGHT 252
DATAS VGV_IS_CHEM_ON_LEFT 252
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_CHEM 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_CUBES_COUNT
DATAF VGV_WATER_STATE
DATAS VGV_OBJECT 252
DATAF VGV_B
DATAF VGV_W
DATAS VGV_START_FROM_RIGHT 252
DATAF VGV_C
DATAF VGV_G
DATAF VGV_I
DATAF VGV_R_C
DATAF VGV_L_C
DATAF VGV_DIFF
DATAF VGV_R_P
DATAF VGV_L_P
DATAS VGV_TAKE_RED_RIGHT 252
DATAS VGV_TAKE_RED_LEFT 252
DATAF VGV_CHEM_BACK
DATAF VGV_NO_BACK
DATAF VGV_ULTRA
DATAF VGV_T
DATAF VGV_MINS
DATAF VGV_SECS
DATAS VGV_STR 252
DATAF VGV_N
DATAS VGV_FILENAME 252
DATAF VLV_V_1
DATAF VLV_NOWERROR_1
DATAF VLV_DIF_1
DATAF VLV_INTEGRAL_1
DATAF VLV_DERIVATIVE_1
DATAF VLV_UP_1
DATAF VLV_LASTERROR_1
DATAF VLV_NORMAL_DEGREES_2
DATAF VLV_C_2
DATAF VLV_MINUS_2
DATAF VLV_POWER_2
DATAF VLV_NORMAL_DEGREES_4
DATAF VLV_C_4
DATAF VLV_P_4
DATAF VLV_POWER_4
DATAF VLV_DELTA_4
DATAF VLV_LEFT_POWER_4
DATAF VLV_RIGHT_POWER_4
DATAF VLV_NORMAL_DEGREES_5
DATAF VLV_C_5
DATAF VLV_P_5
DATAF VLV_POWER_5
DATAF VLV_DELTA_5
DATAF VLV_LEFT_POWER_5
DATAF VLV_RIGHT_POWER_5

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_4
    MOVEF_F 0.0 VLV_MIN_POWER_4
    MOVEF_F 0.0 VLV_DEG_4
    MOVEF_F 0.0 VLV_ACCELERATION_4
    MOVEF_F 0.0 VLV_ZAME_4
    MOVEF_F 0.0 VLV_BASE_POWER_5
    MOVEF_F 0.0 VLV_MIN_POWER_5
    MOVEF_F 0.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    MOVEF_F 0.0 VLV_U_2
    MOVEF_F 0.0 VLV_BASE_POWER_2
    MOVEF_F 0.0 VLV_MIN_POWER_2
    MOVEF_F 0.0 VLV_DEGREES_2
    MOVEF_F 0.0 VLV_ZAMED_DEGREES_2
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_U_1
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_T
    MOVEF_F 0.0 VGV_MINS
    MOVEF_F 0.0 VGV_SECS
    STRINGS DUPLICATE '' VGV_STR
    MOVEF_F 0.0 VGV_N
    STRINGS DUPLICATE '' VGV_FILENAME
    MOVEF_F 0.0 VLV_V_1
    MOVEF_F 0.0 VLV_NOWERROR_1
    MOVEF_F 0.0 VLV_DIF_1
    MOVEF_F 0.0 VLV_INTEGRAL_1
    MOVEF_F 0.0 VLV_DERIVATIVE_1
    MOVEF_F 0.0 VLV_UP_1
    MOVEF_F 0.0 VLV_LASTERROR_1
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_2
    MOVEF_F 0.0 VLV_C_2
    MOVEF_F 0.0 VLV_MINUS_2
    MOVEF_F 0.0 VLV_POWER_2
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_4
    MOVEF_F 0.0 VLV_C_4
    MOVEF_F 0.0 VLV_P_4
    MOVEF_F 0.0 VLV_POWER_4
    MOVEF_F 0.0 VLV_DELTA_4
    MOVEF_F 0.0 VLV_LEFT_POWER_4
    MOVEF_F 0.0 VLV_RIGHT_POWER_4
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_5
    MOVEF_F 0.0 VLV_C_5
    MOVEF_F 0.0 VLV_P_5
    MOVEF_F 0.0 VLV_POWER_5
    MOVEF_F 0.0 VLV_DELTA_5
    MOVEF_F 0.0 VLV_LEFT_POWER_5
    MOVEF_F 0.0 VLV_RIGHT_POWER_5
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    DATAS S.2 252
    MOVE8_8 0 STACKPOINTER
    MOVEF_F 0.0 VLV_BASE_POWER_4
    MOVEF_F 0.0 VLV_MIN_POWER_4
    MOVEF_F 0.0 VLV_DEG_4
    MOVEF_F 0.0 VLV_ACCELERATION_4
    MOVEF_F 0.0 VLV_ZAME_4
    MOVEF_F 0.0 VLV_BASE_POWER_5
    MOVEF_F 0.0 VLV_MIN_POWER_5
    MOVEF_F 0.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    MOVEF_F 0.0 VLV_U_2
    MOVEF_F 0.0 VLV_BASE_POWER_2
    MOVEF_F 0.0 VLV_MIN_POWER_2
    MOVEF_F 0.0 VLV_DEGREES_2
    MOVEF_F 0.0 VLV_ZAMED_DEGREES_2
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_U_1
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_T
    MOVEF_F 0.0 VGV_MINS
    MOVEF_F 0.0 VGV_SECS
    STRINGS DUPLICATE '' VGV_STR
    MOVEF_F 0.0 VGV_N
    STRINGS DUPLICATE '' VGV_FILENAME
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 1.0 VGV_LINE_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 1.0 VGV_P
    MOVEF_F 6.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 1.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 2.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE_SENSOR no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_RIGHT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_LEFT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 1.0 'Low battery'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB10:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB11 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB11:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB12:
ENDTHREAD:
    RETURN
SUB_F_LINE_0:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF 20.0 F.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf17
    DATA8 flag17
    DIVF F.0 10.0 tmpf17
    CP_EQF 0.0 10.0 flag17
    SELECTF flag17 0.0 tmpf17 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_LINE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_0:
SUB_F_ULTRASONIC_SLOW_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf30
    DATA8 flag30
    DIVF F.0 10.0 tmpf30
    CP_EQF 0.0 10.0 flag30
    SELECTF flag30 0.0 tmpf30 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 20.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 20.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SLOW_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SLOW_0:
SUB_F_ULTRASONIC_FAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf45
    DATA8 flag45
    DIVF F.0 10.0 tmpf45
    CP_EQF 0.0 10.0 flag45
    SELECTF flag45 0.0 tmpf45 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 30.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 30.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_FAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_FAST_0:
SUB_F_ULTRASONIC_SUPERFAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf60
    DATA8 flag60
    DIVF F.0 10.0 tmpf60
    CP_EQF 0.0 10.0 flag60
    SELECTF flag60 0.0 tmpf60 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 80.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 80.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SUPERFAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SUPERFAST_0:
SUB_F_STOP_0:
    CALL MOTOR.STOP VGV_MOTORS 'True'
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_STOP_RIGHT_0:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
RETSUB_F_STOP_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_RIGHT_0:
SUB_F_DELAY_0:
    DATA32 milliseconds73
	MOVEF_32 300.0 milliseconds73
	DATA32 timer73
	TIMER_WAIT milliseconds73 timer73
	TIMER_READY timer73
RETSUB_F_DELAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_0:
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_LEFT_0:
    MOVEF_F 20.0 VLV_BASE_POWER_4
    MOVEF_F 10.0 VLV_MIN_POWER_4
    MOVEF_F 280.0 VLV_DEG_4
    MOVEF_F 100.0 VLV_ACCELERATION_4
    MOVEF_F 100.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB75:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB76:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB77:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for79:
    JR_GTF VGV_I 20.0 endfor79
  forbody79:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds83
	MOVEF_32 10.0 milliseconds83
	DATA32 timer83
	TIMER_WAIT milliseconds83 timer83
	TIMER_READY timer83
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody79
  endfor79:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 360.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer89
	DATA8 nos89
	DATA8 busy89
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer89 nos89
	JR_EQ8 0 nos89 motornotbusy89
  motorwaiting89:
	OUTPUT_TEST layer89 nos89 busy89
	JR_EQ8 busy89 0 motornotbusy89
	SLEEP
	JR motorwaiting89
  motornotbusy89:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer90
	DATA8 nos90
	DATA8 busy90
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer90 nos90
	JR_EQ8 0 nos90 motornotbusy90
  motorwaiting90:
	OUTPUT_TEST layer90 nos90 busy90
	JR_EQ8 busy90 0 motornotbusy90
	SLEEP
	JR motorwaiting90
  motornotbusy90:
    MOVEF_F 70.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB91:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer92
	DATA8 nos92
	DATA8 busy92
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer92 nos92
	JR_EQ8 0 nos92 motornotbusy92
  motorwaiting92:
	OUTPUT_TEST layer92 nos92 busy92
	JR_EQ8 busy92 0 motornotbusy92
	SLEEP
	JR motorwaiting92
  motornotbusy92:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB93:
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB94:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for96:
    JR_GTF VGV_I 20.0 endfor96
  forbody96:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds99
	MOVEF_32 10.0 milliseconds99
	DATA32 timer99
	TIMER_WAIT milliseconds99 timer99
	TIMER_READY timer99
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody96
  endfor96:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 350.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer105
	DATA8 nos105
	DATA8 busy105
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer105 nos105
	JR_EQ8 0 nos105 motornotbusy105
  motorwaiting105:
	OUTPUT_TEST layer105 nos105 busy105
	JR_EQ8 busy105 0 motornotbusy105
	SLEEP
	JR motorwaiting105
  motornotbusy105:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB106:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB107:
    MOVEF_F 280.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB108:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB109:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB110:
RETSUB_F_TAKE_CHEM_ON_LEFT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_0:
SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 170.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB111:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB112:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer113
	DATA8 nos113
	DATA8 busy113
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer113 nos113
	JR_EQ8 0 nos113 motornotbusy113
  motorwaiting113:
	OUTPUT_TEST layer113 nos113 busy113
	JR_EQ8 busy113 0 motornotbusy113
	SLEEP
	JR motorwaiting113
  motornotbusy113:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for115:
    JR_GTF VGV_I 20.0 endfor115
  forbody115:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds118
	MOVEF_32 10.0 milliseconds118
	DATA32 timer118
	TIMER_WAIT milliseconds118 timer118
	TIMER_READY timer118
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody115
  endfor115:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer124
	DATA8 nos124
	DATA8 busy124
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer124 nos124
	JR_EQ8 0 nos124 motornotbusy124
  motorwaiting124:
	OUTPUT_TEST layer124 nos124 busy124
	JR_EQ8 busy124 0 motornotbusy124
	SLEEP
	JR motorwaiting124
  motornotbusy124:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB125:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB126:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer127
	DATA8 nos127
	DATA8 busy127
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer127 nos127
	JR_EQ8 0 nos127 motornotbusy127
  motorwaiting127:
	OUTPUT_TEST layer127 nos127 busy127
	JR_EQ8 busy127 0 motornotbusy127
	SLEEP
	JR motorwaiting127
  motornotbusy127:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB128:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB129:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for131:
    JR_GTF VGV_I 20.0 endfor131
  forbody131:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds135
	MOVEF_32 10.0 milliseconds135
	DATA32 timer135
	TIMER_WAIT milliseconds135 timer135
	TIMER_READY timer135
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody131
  endfor131:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer141
	DATA8 nos141
	DATA8 busy141
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer141 nos141
	JR_EQ8 0 nos141 motornotbusy141
  motorwaiting141:
	OUTPUT_TEST layer141 nos141 busy141
	JR_EQ8 busy141 0 motornotbusy141
	SLEEP
	JR motorwaiting141
  motornotbusy141:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB142:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB143:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for145:
    JR_GTF VGV_I 20.0 endfor145
  forbody145:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds149
	MOVEF_32 30.0 milliseconds149
	DATA32 timer149
	TIMER_WAIT milliseconds149 timer149
	TIMER_READY timer149
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody145
  endfor145:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 170.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer155
	DATA8 nos155
	DATA8 busy155
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer155 nos155
	JR_EQ8 0 nos155 motornotbusy155
  motorwaiting155:
	OUTPUT_TEST layer155 nos155 busy155
	JR_EQ8 busy155 0 motornotbusy155
	SLEEP
	JR motorwaiting155
  motornotbusy155:
RETSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for157:
    JR_GTF VGV_I 20.0 endfor157
  forbody157:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds163
	MOVEF_32 30.0 milliseconds163
	DATA32 timer163
	TIMER_WAIT milliseconds163 timer163
	TIMER_READY timer163
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody157
  endfor157:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer169
	DATA8 nos169
	DATA8 busy169
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer169 nos169
	JR_EQ8 0 nos169 motornotbusy169
  motorwaiting169:
	OUTPUT_TEST layer169 nos169 busy169
	JR_EQ8 busy169 0 motornotbusy169
	SLEEP
	JR motorwaiting169
  motornotbusy169:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB170:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer171
	DATA8 nos171
	DATA8 busy171
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer171 nos171
	JR_EQ8 0 nos171 motornotbusy171
  motorwaiting171:
	OUTPUT_TEST layer171 nos171 busy171
	JR_EQ8 busy171 0 motornotbusy171
	SLEEP
	JR motorwaiting171
  motornotbusy171:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for173:
    JR_GTF VGV_I 20.0 endfor173
  forbody173:
    MULF VGV_I VGV_LEFT_FORWARD F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds176
	MOVEF_32 10.0 milliseconds176
	DATA32 timer176
	TIMER_WAIT milliseconds176 timer176
	TIMER_READY timer176
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody173
  endfor173:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer182
	DATA8 nos182
	DATA8 busy182
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer182 nos182
	JR_EQ8 0 nos182 motornotbusy182
  motorwaiting182:
	OUTPUT_TEST layer182 nos182 busy182
	JR_EQ8 busy182 0 motornotbusy182
	SLEEP
	JR motorwaiting182
  motornotbusy182:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB183:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer184
	DATA8 nos184
	DATA8 busy184
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer184 nos184
	JR_EQ8 0 nos184 motornotbusy184
  motorwaiting184:
	OUTPUT_TEST layer184 nos184 busy184
	JR_EQ8 busy184 0 motornotbusy184
	SLEEP
	JR motorwaiting184
  motornotbusy184:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB185:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB186:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for188:
    JR_GTF VGV_I 20.0 endfor188
  forbody188:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds192
	MOVEF_32 10.0 milliseconds192
	DATA32 timer192
	TIMER_WAIT milliseconds192 timer192
	TIMER_READY timer192
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody188
  endfor188:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer198
	DATA8 nos198
	DATA8 busy198
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer198 nos198
	JR_EQ8 0 nos198 motornotbusy198
  motorwaiting198:
	OUTPUT_TEST layer198 nos198 busy198
	JR_EQ8 busy198 0 motornotbusy198
	SLEEP
	JR motorwaiting198
  motornotbusy198:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB199:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB200:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for202:
    JR_GTF VGV_I 20.0 endfor202
  forbody202:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds206
	MOVEF_32 30.0 milliseconds206
	DATA32 timer206
	TIMER_WAIT milliseconds206 timer206
	TIMER_READY timer206
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody202
  endfor202:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer212
	DATA8 nos212
	DATA8 busy212
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer212 nos212
	JR_EQ8 0 nos212 motornotbusy212
  motorwaiting212:
	OUTPUT_TEST layer212 nos212 busy212
	JR_EQ8 busy212 0 motornotbusy212
	SLEEP
	JR motorwaiting212
  motornotbusy212:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else213_1
    CALL MOTOR.START VGV_WATER_MOTOR -30.0
    DATA32 milliseconds215
	MOVEF_32 1500.0 milliseconds215
	DATA32 timer215
	TIMER_WAIT milliseconds215 timer215
	TIMER_READY timer215
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 30.0 0.0 40.0 0.0 'True' 

	DATA8 layer217
	DATA8 nos217
	DATA8 busy217
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer217 nos217
	JR_EQ8 0 nos217 motornotbusy217
  motorwaiting217:
	OUTPUT_TEST layer217 nos217 busy217
	JR_EQ8 busy217 0 motornotbusy217
	SLEEP
	JR motorwaiting217
  motornotbusy217:
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif213
  else213_1:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds219
	MOVEF_32 2000.0 milliseconds219
	DATA32 timer219
	TIMER_WAIT milliseconds219 timer219
	TIMER_READY timer219
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -30.0 0.0 40.0 0.0 'True' 

	DATA8 layer221
	DATA8 nos221
	DATA8 busy221
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer221 nos221
	JR_EQ8 0 nos221 motornotbusy221
  motorwaiting221:
	OUTPUT_TEST layer221 nos221 busy221
	JR_EQ8 busy221 0 motornotbusy221
	SLEEP
	JR motorwaiting221
  motornotbusy221:
  else213_2:
  endif213:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_UPDATE_DISPLAY_0:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_OBJECT
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.1
    CALL TEXT.APPEND 'Red: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.1
    CALL TEXT.APPEND 'White: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 75.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_UPDATE_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UPDATE_DISPLAY_0:
SUB_F_RESET_VALUES_0:
    STRINGS DUPLICATE 'None' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
RETSUB_F_RESET_VALUES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_VALUES_0:
SUB_F_CLOSE_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -10.0 0.0 70.0 0.0 'True' 

	DATA8 layer232
	DATA8 nos232
	DATA8 busy232
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer232 nos232
	JR_EQ8 0 nos232 motornotbusy232
  motorwaiting232:
	OUTPUT_TEST layer232 nos232 busy232
	JR_EQ8 busy232 0 motornotbusy232
	SLEEP
	JR motorwaiting232
  motornotbusy232:
RETSUB_F_CLOSE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_0:
SUB_F_OPEN_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 10.0 0.0 70.0 0.0 'True' 

	DATA8 layer233
	DATA8 nos233
	DATA8 busy233
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer233 nos233
	JR_EQ8 0 nos233 motornotbusy233
  motorwaiting233:
	OUTPUT_TEST layer233 nos233 busy233
	JR_EQ8 busy233 0 motornotbusy233
	SLEEP
	JR motorwaiting233
  motornotbusy233:
RETSUB_F_OPEN_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_0:
SUB_F_TAKE_CUBES_0:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds235
	MOVEF_32 500.0 milliseconds235
	DATA32 timer235
	TIMER_WAIT milliseconds235 timer235
	TIMER_READY timer235
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer239
	DATA8 nos239
	DATA8 busy239
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer239 nos239
	JR_EQ8 0 nos239 motornotbusy239
  motorwaiting239:
	OUTPUT_TEST layer239 nos239 busy239
	JR_EQ8 busy239 0 motornotbusy239
	SLEEP
	JR motorwaiting239
  motornotbusy239:
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR -20.0 0.0 360.0 0.0 'True' 

	DATA8 layer240
	DATA8 nos240
	DATA8 busy240
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer240 nos240
	JR_EQ8 0 nos240 motornotbusy240
  motorwaiting240:
	OUTPUT_TEST layer240 nos240 busy240
	JR_EQ8 busy240 0 motornotbusy240
	SLEEP
	JR motorwaiting240
  motornotbusy240:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds244
	MOVEF_32 700.0 milliseconds244
	DATA32 timer244
	TIMER_WAIT milliseconds244 timer244
	TIMER_READY timer244
    WRITE32 ENDSUB_F_STOP_0:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB245:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 229.0 VLV_U_2
    MOVEF_F 50.0 VLV_BASE_POWER_2
    MOVEF_F 20.0 VLV_MIN_POWER_2
    MOVEF_F 930.0 VLV_DEGREES_2
    MOVEF_F 200.0 VLV_ZAMED_DEGREES_2
    WRITE32 ENDSUB_F_ULTRASONIC_ZAMED_5:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_ZAMED_5
CALLSUB247:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer248
	DATA8 nos248
	DATA8 busy248
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer248 nos248
	JR_EQ8 0 nos248 motornotbusy248
  motorwaiting248:
	OUTPUT_TEST layer248 nos248 busy248
	JR_EQ8 busy248 0 motornotbusy248
	SLEEP
	JR motorwaiting248
  motornotbusy248:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB249:
RETSUB_F_TAKE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_0:
SUB_F_TAKE_LONG_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer251
	DATA8 nos251
	DATA8 busy251
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer251 nos251
	JR_EQ8 0 nos251 motornotbusy251
  motorwaiting251:
	OUTPUT_TEST layer251 nos251 busy251
	JR_EQ8 busy251 0 motornotbusy251
	SLEEP
	JR motorwaiting251
  motornotbusy251:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer254
	DATA8 nos254
	DATA8 busy254
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer254 nos254
	JR_EQ8 0 nos254 motornotbusy254
  motorwaiting254:
	OUTPUT_TEST layer254 nos254 busy254
	JR_EQ8 busy254 0 motornotbusy254
	SLEEP
	JR motorwaiting254
  motornotbusy254:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB255:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer258
	DATA8 nos258
	DATA8 busy258
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer258 nos258
	JR_EQ8 0 nos258 motornotbusy258
  motorwaiting258:
	OUTPUT_TEST layer258 nos258 busy258
	JR_EQ8 busy258 0 motornotbusy258
	SLEEP
	JR motorwaiting258
  motornotbusy258:
    JR_NEQF VGV_CUBES_COUNT 2.0 else259_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB260:
  else259_1:
  endif259:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 38.0 'True'

	DATA8 layer263
	DATA8 nos263
	DATA8 busy263
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer263 nos263
	JR_EQ8 0 nos263 motornotbusy263
  motorwaiting263:
	OUTPUT_TEST layer263 nos263 busy263
	JR_EQ8 busy263 0 motornotbusy263
	SLEEP
	JR motorwaiting263
  motornotbusy263:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer265
	DATA8 nos265
	DATA8 busy265
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer265 nos265
	JR_EQ8 0 nos265 motornotbusy265
  motorwaiting265:
	OUTPUT_TEST layer265 nos265 busy265
	JR_EQ8 busy265 0 motornotbusy265
	SLEEP
	JR motorwaiting265
  motornotbusy265:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_0:
SUB_F_TAKE_NEAR_0:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer267
	DATA8 nos267
	DATA8 busy267
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer267 nos267
	JR_EQ8 0 nos267 motornotbusy267
  motorwaiting267:
	OUTPUT_TEST layer267 nos267 busy267
	JR_EQ8 busy267 0 motornotbusy267
	SLEEP
	JR motorwaiting267
  motornotbusy267:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer269
	DATA8 nos269
	DATA8 busy269
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer269 nos269
	JR_EQ8 0 nos269 motornotbusy269
  motorwaiting269:
	OUTPUT_TEST layer269 nos269 busy269
	JR_EQ8 busy269 0 motornotbusy269
	SLEEP
	JR motorwaiting269
  motornotbusy269:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB270:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    MULF 20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer273
	DATA8 nos273
	DATA8 busy273
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer273 nos273
	JR_EQ8 0 nos273 motornotbusy273
  motorwaiting273:
	OUTPUT_TEST layer273 nos273 busy273
	JR_EQ8 busy273 0 motornotbusy273
	SLEEP
	JR motorwaiting273
  motornotbusy273:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB274:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer277
	DATA8 nos277
	DATA8 busy277
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer277 nos277
	JR_EQ8 0 nos277 motornotbusy277
  motorwaiting277:
	OUTPUT_TEST layer277 nos277 busy277
	JR_EQ8 busy277 0 motornotbusy277
	SLEEP
	JR motorwaiting277
  motornotbusy277:
    JR_NEQF VGV_CUBES_COUNT 2.0 else278_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB279:
  else278_1:
  endif278:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer282
	DATA8 nos282
	DATA8 busy282
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer282 nos282
	JR_EQ8 0 nos282 motornotbusy282
  motorwaiting282:
	OUTPUT_TEST layer282 nos282 busy282
	JR_EQ8 busy282 0 motornotbusy282
	SLEEP
	JR motorwaiting282
  motornotbusy282:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer284
	DATA8 nos284
	DATA8 busy284
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer284 nos284
	JR_EQ8 0 nos284 motornotbusy284
  motorwaiting284:
	OUTPUT_TEST layer284 nos284 busy284
	JR_EQ8 busy284 0 motornotbusy284
	SLEEP
	JR motorwaiting284
  motornotbusy284:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer286
	DATA8 nos286
	DATA8 busy286
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer286 nos286
	JR_EQ8 0 nos286 motornotbusy286
  motorwaiting286:
	OUTPUT_TEST layer286 nos286 busy286
	JR_EQ8 busy286 0 motornotbusy286
	SLEEP
	JR motorwaiting286
  motornotbusy286:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB287:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer290
	DATA8 nos290
	DATA8 busy290
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer290 nos290
	JR_EQ8 0 nos290 motornotbusy290
  motorwaiting290:
	OUTPUT_TEST layer290 nos290 busy290
	JR_EQ8 busy290 0 motornotbusy290
	SLEEP
	JR motorwaiting290
  motornotbusy290:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_0:
SUB_F_TAKE_BOTH_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer292
	DATA8 nos292
	DATA8 busy292
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer292 nos292
	JR_EQ8 0 nos292 motornotbusy292
  motorwaiting292:
	OUTPUT_TEST layer292 nos292 busy292
	JR_EQ8 busy292 0 motornotbusy292
	SLEEP
	JR motorwaiting292
  motornotbusy292:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer295
	DATA8 nos295
	DATA8 busy295
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer295 nos295
	JR_EQ8 0 nos295 motornotbusy295
  motorwaiting295:
	OUTPUT_TEST layer295 nos295 busy295
	JR_EQ8 busy295 0 motornotbusy295
	SLEEP
	JR motorwaiting295
  motornotbusy295:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB296:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer299
	DATA8 nos299
	DATA8 busy299
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer299 nos299
	JR_EQ8 0 nos299 motornotbusy299
  motorwaiting299:
	OUTPUT_TEST layer299 nos299 busy299
	JR_EQ8 busy299 0 motornotbusy299
	SLEEP
	JR motorwaiting299
  motornotbusy299:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB300:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer303
	DATA8 nos303
	DATA8 busy303
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer303 nos303
	JR_EQ8 0 nos303 motornotbusy303
  motorwaiting303:
	OUTPUT_TEST layer303 nos303 busy303
	JR_EQ8 busy303 0 motornotbusy303
	SLEEP
	JR motorwaiting303
  motornotbusy303:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer305
	DATA8 nos305
	DATA8 busy305
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer305 nos305
	JR_EQ8 0 nos305 motornotbusy305
  motorwaiting305:
	OUTPUT_TEST layer305 nos305 busy305
	JR_EQ8 busy305 0 motornotbusy305
	SLEEP
	JR motorwaiting305
  motornotbusy305:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer308
	DATA8 nos308
	DATA8 busy308
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer308 nos308
	JR_EQ8 0 nos308 motornotbusy308
  motorwaiting308:
	OUTPUT_TEST layer308 nos308 busy308
	JR_EQ8 busy308 0 motornotbusy308
	SLEEP
	JR motorwaiting308
  motornotbusy308:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB309:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer312
	DATA8 nos312
	DATA8 busy312
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer312 nos312
	JR_EQ8 0 nos312 motornotbusy312
  motorwaiting312:
	OUTPUT_TEST layer312 nos312 busy312
	JR_EQ8 busy312 0 motornotbusy312
	SLEEP
	JR motorwaiting312
  motornotbusy312:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer314
	DATA8 nos314
	DATA8 busy314
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer314 nos314
	JR_EQ8 0 nos314 motornotbusy314
  motorwaiting314:
	OUTPUT_TEST layer314 nos314 busy314
	JR_EQ8 busy314 0 motornotbusy314
	SLEEP
	JR motorwaiting314
  motornotbusy314:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer316
	DATA8 nos316
	DATA8 busy316
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer316 nos316
	JR_EQ8 0 nos316 motornotbusy316
  motorwaiting316:
	OUTPUT_TEST layer316 nos316 busy316
	JR_EQ8 busy316 0 motornotbusy316
	SLEEP
	JR motorwaiting316
  motornotbusy316:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer319
	DATA8 nos319
	DATA8 busy319
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer319 nos319
	JR_EQ8 0 nos319 motornotbusy319
  motorwaiting319:
	OUTPUT_TEST layer319 nos319 busy319
	JR_EQ8 busy319 0 motornotbusy319
	SLEEP
	JR motorwaiting319
  motornotbusy319:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_0:
SUB_F_TAKE_NEAR_DOUBLE_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer321
	DATA8 nos321
	DATA8 busy321
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer321 nos321
	JR_EQ8 0 nos321 motornotbusy321
  motorwaiting321:
	OUTPUT_TEST layer321 nos321 busy321
	JR_EQ8 busy321 0 motornotbusy321
	SLEEP
	JR motorwaiting321
  motornotbusy321:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer323
	DATA8 nos323
	DATA8 busy323
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer323 nos323
	JR_EQ8 0 nos323 motornotbusy323
  motorwaiting323:
	OUTPUT_TEST layer323 nos323 busy323
	JR_EQ8 busy323 0 motornotbusy323
	SLEEP
	JR motorwaiting323
  motornotbusy323:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer326
	DATA8 nos326
	DATA8 busy326
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer326 nos326
	JR_EQ8 0 nos326 motornotbusy326
  motorwaiting326:
	OUTPUT_TEST layer326 nos326 busy326
	JR_EQ8 busy326 0 motornotbusy326
	SLEEP
	JR motorwaiting326
  motornotbusy326:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB327:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer330
	DATA8 nos330
	DATA8 busy330
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer330 nos330
	JR_EQ8 0 nos330 motornotbusy330
  motorwaiting330:
	OUTPUT_TEST layer330 nos330 busy330
	JR_EQ8 busy330 0 motornotbusy330
	SLEEP
	JR motorwaiting330
  motornotbusy330:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB331:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer334
	DATA8 nos334
	DATA8 busy334
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer334 nos334
	JR_EQ8 0 nos334 motornotbusy334
  motorwaiting334:
	OUTPUT_TEST layer334 nos334 busy334
	JR_EQ8 busy334 0 motornotbusy334
	SLEEP
	JR motorwaiting334
  motornotbusy334:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB335:
RETSUB_F_TAKE_NEAR_DOUBLE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer337
	DATA8 nos337
	DATA8 busy337
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer337 nos337
	JR_EQ8 0 nos337 motornotbusy337
  motorwaiting337:
	OUTPUT_TEST layer337 nos337 busy337
	JR_EQ8 busy337 0 motornotbusy337
	SLEEP
	JR motorwaiting337
  motornotbusy337:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer339
	DATA8 nos339
	DATA8 busy339
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer339 nos339
	JR_EQ8 0 nos339 motornotbusy339
  motorwaiting339:
	OUTPUT_TEST layer339 nos339 busy339
	JR_EQ8 busy339 0 motornotbusy339
	SLEEP
	JR motorwaiting339
  motornotbusy339:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer342
	DATA8 nos342
	DATA8 busy342
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer342 nos342
	JR_EQ8 0 nos342 motornotbusy342
  motorwaiting342:
	OUTPUT_TEST layer342 nos342 busy342
	JR_EQ8 busy342 0 motornotbusy342
	SLEEP
	JR motorwaiting342
  motornotbusy342:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB343:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer346
	DATA8 nos346
	DATA8 busy346
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer346 nos346
	JR_EQ8 0 nos346 motornotbusy346
  motorwaiting346:
	OUTPUT_TEST layer346 nos346 busy346
	JR_EQ8 busy346 0 motornotbusy346
	SLEEP
	JR motorwaiting346
  motornotbusy346:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB347:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer350
	DATA8 nos350
	DATA8 busy350
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer350 nos350
	JR_EQ8 0 nos350 motornotbusy350
  motorwaiting350:
	OUTPUT_TEST layer350 nos350 busy350
	JR_EQ8 busy350 0 motornotbusy350
	SLEEP
	JR motorwaiting350
  motornotbusy350:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB351:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
SUB_F_FINISH_AFTER_NEAR_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds355
	MOVEF_32 1500.0 milliseconds355
	DATA32 timer355
	TIMER_WAIT milliseconds355 timer355
	TIMER_READY timer355
    WRITE32 ENDSUB_F_STOP_0:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB356:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer358
	DATA8 nos358
	DATA8 busy358
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer358 nos358
	JR_EQ8 0 nos358 motornotbusy358
  motorwaiting358:
	OUTPUT_TEST layer358 nos358 busy358
	JR_EQ8 busy358 0 motornotbusy358
	SLEEP
	JR motorwaiting358
  motornotbusy358:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer360
	DATA8 nos360
	DATA8 busy360
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer360 nos360
	JR_EQ8 0 nos360 motornotbusy360
  motorwaiting360:
	OUTPUT_TEST layer360 nos360 busy360
	JR_EQ8 busy360 0 motornotbusy360
	SLEEP
	JR motorwaiting360
  motornotbusy360:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds364
	MOVEF_32 1000.0 milliseconds364
	DATA32 timer364
	TIMER_WAIT milliseconds364 timer364
	TIMER_READY timer364
    WRITE32 ENDSUB_F_STOP_0:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB365:
RETSUB_F_FINISH_AFTER_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_0:
SUB_F_GO_FORWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_0:
SUB_F_GO_FORWARD_RIGHT_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 21.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_RIGHT_0:
SUB_F_GO_BACKWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF -20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF -20.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_BACKWARD_0:
SUB_F_MOVE_FORWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while404:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile404
  whilebody404:
    WRITE32 ENDSUB_F_GO_FORWARD_0:CALLSUB406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_0
CALLSUB406:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody404
  endwhile404:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB408:
RETSUB_F_MOVE_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_0:
SUB_F_MOVE_BACKWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while411:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_LTEQF F.0 F.1 endwhile411
  whilebody411:
    WRITE32 ENDSUB_F_GO_BACKWARD_0:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_0
CALLSUB414:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_GTF F.0 F.1 whilebody411
  endwhile411:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB417:
RETSUB_F_MOVE_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_0:
SUB_F_PLAY_MUSIC_0:
    MOVEF_F 1.0 VGV_N
  while418:
  whilebody418:
    STRINGS VALUE_FORMATTED VGV_N '%g' 99 S.0
    CALL TEXT.APPEND 'WRO_2022/files/bad_piggies_' S.0 VGV_FILENAME
    CALL SPEAKER.PLAY 100.0 VGV_FILENAME
  while422:
    CALL SPEAKER.ISBUSY S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 endwhile422
  whilebody422:
    CALL SPEAKER.ISBUSY S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 whilebody422
  endwhile422:
    ADDF VGV_N 1.0 VGV_N
    JR_NEQF VGV_N 23.0 else426_1
    MOVEF_F 1.0 VGV_N
    DATA32 milliseconds427
	MOVEF_32 1000.0 milliseconds427
	DATA32 timer427
	TIMER_WAIT milliseconds427 timer427
	TIMER_READY timer427
  else426_1:
  endif426:
    JR whilebody418
  endwhile418:
RETSUB_F_PLAY_MUSIC_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PLAY_MUSIC_0:
SUB_F_MAIN_0:
    TIMER_READ timeMC9
    STRINGS DUPLICATE 'False' VGV_START_FROM_RIGHT
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else429_1
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 53.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds434
	MOVEF_32 2000.0 milliseconds434
	DATA32 timer434
	TIMER_WAIT milliseconds434 timer434
	TIMER_READY timer434
    WRITE32 ENDSUB_F_STOP_0:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB435:
    MULF VGV_RIGHT_FORWARD -30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds438
	MOVEF_32 1000.0 milliseconds438
	DATA32 timer438
	TIMER_WAIT milliseconds438 timer438
	TIMER_READY timer438
    WRITE32 ENDSUB_F_STOP_0:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB439:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB440:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 200.0 0.0 'True' 

	DATA8 layer442
	DATA8 nos442
	DATA8 busy442
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer442 nos442
	JR_EQ8 0 nos442 motornotbusy442
  motorwaiting442:
	OUTPUT_TEST layer442 nos442 busy442
	JR_EQ8 busy442 0 motornotbusy442
	SLEEP
	JR motorwaiting442
  motornotbusy442:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB443:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer445
	DATA8 nos445
	DATA8 busy445
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer445 nos445
	JR_EQ8 0 nos445 motornotbusy445
  motorwaiting445:
	OUTPUT_TEST layer445 nos445 busy445
	JR_EQ8 busy445 0 motornotbusy445
	SLEEP
	JR motorwaiting445
  motornotbusy445:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB446:
  else429_1:
  endif429:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB447:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 80.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    MOVEF_F 1200.0 VGV_DEG
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else452_1
    MOVEF_F 1100.0 VGV_DEG
  else452_1:
  endif452:
  while454:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile454
  whilebody454:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody454
  endwhile454:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 55.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while460:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile460
  whilebody460:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody460
  endwhile460:
  while463:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile463
  whilebody463:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody463
  endwhile463:
    WRITE32 ENDSUB_F_STOP_RIGHT_0:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_RIGHT_0
CALLSUB466:
    MOVEF_F 97.0 VGV_A
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB467:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer469
	DATA8 nos469
	DATA8 busy469
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer469 nos469
	JR_EQ8 0 nos469 motornotbusy469
  motorwaiting469:
	OUTPUT_TEST layer469 nos469 busy469
	JR_EQ8 busy469 0 motornotbusy469
	SLEEP
	JR motorwaiting469
  motornotbusy469:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB470:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 235.0 0.0 'True' 

	DATA8 layer472
	DATA8 nos472
	DATA8 busy472
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer472 nos472
	JR_EQ8 0 nos472 motornotbusy472
  motorwaiting472:
	OUTPUT_TEST layer472 nos472 busy472
	JR_EQ8 busy472 0 motornotbusy472
	SLEEP
	JR motorwaiting472
  motornotbusy472:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while474:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile474
  whilebody474:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB476:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody474
  endwhile474:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB478:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB479:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    MOVEF_F 500.0 VGV_C
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB481:
    JR_LTEQF VGV_B 80.0 else482_1
    DATA8 layer483
	DATA8 no483
	DATA8 mode8483
	
	MOVEF_8 VGV_RIGHT_SENSOR no483
	SUB8 no483 1 no483
	DIV8 no483 4 layer483
	MATH MOD8 no483 4 no483

	MOVEF_8 2.0 mode8483
	
	INPUT_DEVICE READY_RAW layer483 no483 0 mode8483 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer485
	DATA8 no485
	DATA8 mode8485
	
	MOVEF_8 VGV_RIGHT_SENSOR no485
	SUB8 no485 1 no485
	DIV8 no485 4 layer485
	MATH MOD8 no485 4 no485

	MOVEF_8 1.0 mode8485
	
	INPUT_DEVICE READY_RAW layer485 no485 0 mode8485 0
    JR_LTEQF VGV_G 100.0 else486_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB487:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif486
  else486_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB488:
    STRINGS DUPLICATE 'True' VGV_BROWN
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB489:
  else486_2:
  endif486:
    JR endif482
  else482_1:
    JR_LTEQF VGV_B 5.0 else482_2
    DATA8 layer490
	DATA8 no490
	DATA8 mode8490
	
	MOVEF_8 VGV_RIGHT_SENSOR no490
	SUB8 no490 1 no490
	DIV8 no490 4 layer490
	MATH MOD8 no490 4 no490

	MOVEF_8 4.0 mode8490
	
	INPUT_DEVICE READY_RAW layer490 no490 0 mode8490 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    DATA8 layer492
	DATA8 no492
	DATA8 mode8492
	
	MOVEF_8 VGV_RIGHT_SENSOR no492
	SUB8 no492 1 no492
	DIV8 no492 4 layer492
	MATH MOD8 no492 4 no492

	MOVEF_8 1.0 mode8492
	
	INPUT_DEVICE READY_RAW layer492 no492 0 mode8492 0
    STRINGS DUPLICATE 'None' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB493:
    JR_LTEQF VGV_W 29.0 else494_1
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB495:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB496:
  else494_1:
  endif494:
  else482_2:
  endif482:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB497:
    DATA8 layer498
	DATA8 no498
	DATA8 mode8498
	
	MOVEF_8 VGV_LINE_SENSOR no498
	SUB8 no498 1 no498
	DIV8 no498 4 layer498
	MATH MOD8 no498 4 no498

	MOVEF_8 2.0 mode8498
	
	INPUT_DEVICE READY_RAW layer498 no498 0 mode8498 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    WRITE32 ENDSUB_F_STOP_0:CALLSUB500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB500:
  while501:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C or502
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 5.0 endwhile501
  or502:
  whilebody501:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB505:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody501
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 5.0 whilebody501
  endwhile501:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB508:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB509:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB510:
    MOVEF_F 350.0 VGV_C
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else511_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB513:
    MOVEF_F 90.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB514:
    ADDF VGV_C 110.0 VGV_C
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB516:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB518:
    JR_LTEQF VGV_B 80.0 else519_1
    DATA8 layer520
	DATA8 no520
	DATA8 mode8520
	
	MOVEF_8 VGV_RIGHT_SENSOR no520
	SUB8 no520 1 no520
	DIV8 no520 4 layer520
	MATH MOD8 no520 4 no520

	MOVEF_8 2.0 mode8520
	
	INPUT_DEVICE READY_RAW layer520 no520 0 mode8520 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer522
	DATA8 no522
	DATA8 mode8522
	
	MOVEF_8 VGV_RIGHT_SENSOR no522
	SUB8 no522 1 no522
	DIV8 no522 4 layer522
	MATH MOD8 no522 4 no522

	MOVEF_8 1.0 mode8522
	
	INPUT_DEVICE READY_RAW layer522 no522 0 mode8522 0
    JR_LTEQF VGV_G 100.0 else523_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB524:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif523
  else523_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB525:
    STRINGS DUPLICATE 'True' VGV_BROWN
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 80.0 VLV_DEG_5
    MOVEF_F 40.0 VLV_ACCELERATION_5
    MOVEF_F 40.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB526:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB527:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB528:
    MOVEF_F 20.0 VLV_BASE_POWER_4
    MOVEF_F 10.0 VLV_MIN_POWER_4
    MOVEF_F 80.0 VLV_DEG_4
    MOVEF_F 40.0 VLV_ACCELERATION_4
    MOVEF_F 40.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB529:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB530:
  else523_2:
  endif523:
    JR endif519
  else519_1:
    JR_LTEQF VGV_B 17.0 else519_2
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB531:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB532:
  else519_2:
  endif519:
  else511_1:
  endif511:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB533:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while535:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile535
  whilebody535:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB537:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody535
  endwhile535:
    MOVEF_F 1.0 VGV_P_U
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else539_1
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    JR endif539
  else539_1:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  else539_2:
  endif539:
    DATA32 milliseconds547
	MOVEF_32 1000.0 milliseconds547
	DATA32 timer547
	TIMER_WAIT milliseconds547 timer547
	TIMER_READY timer547
    WRITE32 ENDSUB_F_STOP_0:CALLSUB548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB548:
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_LEFT
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB549:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB551 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB551:
    JR_LTEQF VGV_B 85.0 else552_1
    DATA8 layer553
	DATA8 no553
	DATA8 mode8553
	
	MOVEF_8 VGV_RIGHT_SENSOR no553
	SUB8 no553 1 no553
	DIV8 no553 4 layer553
	MATH MOD8 no553 4 no553

	MOVEF_8 2.0 mode8553
	
	INPUT_DEVICE READY_RAW layer553 no553 0 mode8553 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB554:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer556
	DATA8 no556
	DATA8 mode8556
	
	MOVEF_8 VGV_RIGHT_SENSOR no556
	SUB8 no556 1 no556
	DIV8 no556 4 layer556
	MATH MOD8 no556 4 no556

	MOVEF_8 1.0 mode8556
	
	INPUT_DEVICE READY_RAW layer556 no556 0 mode8556 0
    JR_LTEQF VGV_G 100.0 else557_1
    STRINGS DUPLICATE 'R: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB558:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif557
  else557_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB559:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB560:
  else557_2:
  endif557:
    JR endif552
  else552_1:
    JR_LTEQF VGV_B 10.0 else552_2
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB561 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB561:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_RIGHT
  else552_2:
  endif552:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB562 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB562:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else563_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB565:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB567 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB567:
    JR_LTEQF VGV_B 90.0 else568_1
    DATA8 layer569
	DATA8 no569
	DATA8 mode8569
	
	MOVEF_8 VGV_LEFT_SENSOR no569
	SUB8 no569 1 no569
	DIV8 no569 4 layer569
	MATH MOD8 no569 4 no569

	MOVEF_8 2.0 mode8569
	
	INPUT_DEVICE READY_RAW layer569 no569 0 mode8569 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB570:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer572
	DATA8 no572
	DATA8 mode8572
	
	MOVEF_8 VGV_LEFT_SENSOR no572
	SUB8 no572 1 no572
	DIV8 no572 4 layer572
	MATH MOD8 no572 4 no572

	MOVEF_8 1.0 mode8572
	
	INPUT_DEVICE READY_RAW layer572 no572 0 mode8572 0
    JR_LTEQF VGV_G 100.0 else573_1
    STRINGS DUPLICATE 'L: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB574:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif573
  else573_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB575:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB576:
  else573_2:
  endif573:
    JR endif568
  else568_1:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 30.0 0.0 'True' 

	DATA8 layer578
	DATA8 nos578
	DATA8 busy578
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer578 nos578
	JR_EQ8 0 nos578 motornotbusy578
  motorwaiting578:
	OUTPUT_TEST layer578 nos578 busy578
	JR_EQ8 busy578 0 motornotbusy578
	SLEEP
	JR motorwaiting578
  motornotbusy578:
    DATA32 milliseconds579
	MOVEF_32 500.0 milliseconds579
	DATA32 timer579
	TIMER_WAIT milliseconds579 timer579
	TIMER_READY timer579
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds586
	MOVEF_32 500.0 milliseconds586
	DATA32 timer586
	TIMER_WAIT milliseconds586 timer586
	TIMER_READY timer586
    JR_LTEQF VGV_B 28.0 else587_1
    WRITE32 ENDSUB_F_STOP_0:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB588:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB589 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB589:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_LEFT
  else587_1:
  endif587:
  else568_2:
  endif568:
  else563_1:
  endif563:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB590:
    MOVEF_F 140.0 VGV_CHEM_BACK
    MOVEF_F 130.0 VGV_NO_BACK
    CALL EQ_STRING VGV_TAKE_RED_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else591_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for594:
    JR_GTF VGV_I 20.0 endfor594
  forbody594:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds600
	MOVEF_32 30.0 milliseconds600
	DATA32 timer600
	TIMER_WAIT milliseconds600 timer600
	TIMER_READY timer600
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody594
  endfor594:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer606
	DATA8 nos606
	DATA8 busy606
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer606 nos606
	JR_EQ8 0 nos606 motornotbusy606
  motorwaiting606:
	OUTPUT_TEST layer606 nos606 busy606
	JR_EQ8 busy606 0 motornotbusy606
	SLEEP
	JR motorwaiting606
  motornotbusy606:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB607:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer609
	DATA8 nos609
	DATA8 busy609
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer609 nos609
	JR_EQ8 0 nos609 motornotbusy609
  motorwaiting609:
	OUTPUT_TEST layer609 nos609 busy609
	JR_EQ8 busy609 0 motornotbusy609
	SLEEP
	JR motorwaiting609
  motornotbusy609:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB610:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer611
	DATA8 nos611
	DATA8 busy611
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer611 nos611
	JR_EQ8 0 nos611 motornotbusy611
  motorwaiting611:
	OUTPUT_TEST layer611 nos611 busy611
	JR_EQ8 busy611 0 motornotbusy611
	SLEEP
	JR motorwaiting611
  motornotbusy611:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for613:
    JR_GTF VGV_I 20.0 endfor613
  forbody613:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds617
	MOVEF_32 20.0 milliseconds617
	DATA32 timer617
	TIMER_WAIT milliseconds617 timer617
	TIMER_READY timer617
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody613
  endfor613:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer623
	DATA8 nos623
	DATA8 busy623
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer623 nos623
	JR_EQ8 0 nos623 motornotbusy623
  motorwaiting623:
	OUTPUT_TEST layer623 nos623 busy623
	JR_EQ8 busy623 0 motornotbusy623
	SLEEP
	JR motorwaiting623
  motornotbusy623:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB624:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer625
	DATA8 nos625
	DATA8 busy625
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer625 nos625
	JR_EQ8 0 nos625 motornotbusy625
  motorwaiting625:
	OUTPUT_TEST layer625 nos625 busy625
	JR_EQ8 busy625 0 motornotbusy625
	SLEEP
	JR motorwaiting625
  motornotbusy625:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB626 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB626:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for628:
    JR_GTF VGV_I 20.0 endfor628
  forbody628:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds634
	MOVEF_32 20.0 milliseconds634
	DATA32 timer634
	TIMER_WAIT milliseconds634 timer634
	TIMER_READY timer634
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody628
  endfor628:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer640
	DATA8 nos640
	DATA8 busy640
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer640 nos640
	JR_EQ8 0 nos640 motornotbusy640
  motorwaiting640:
	OUTPUT_TEST layer640 nos640 busy640
	JR_EQ8 busy640 0 motornotbusy640
	SLEEP
	JR motorwaiting640
  motornotbusy640:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB641:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB642 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB642:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer644
	DATA8 nos644
	DATA8 busy644
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer644 nos644
	JR_EQ8 0 nos644 motornotbusy644
  motorwaiting644:
	OUTPUT_TEST layer644 nos644 busy644
	JR_EQ8 busy644 0 motornotbusy644
	SLEEP
	JR motorwaiting644
  motornotbusy644:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB645:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds649
	MOVEF_32 1500.0 milliseconds649
	DATA32 timer649
	TIMER_WAIT milliseconds649 timer649
	TIMER_READY timer649
    WRITE32 ENDSUB_F_STOP_0:CALLSUB650 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB650:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB651 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB651:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for653:
    JR_GTF VGV_I 20.0 endfor653
  forbody653:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds659
	MOVEF_32 20.0 milliseconds659
	DATA32 timer659
	TIMER_WAIT milliseconds659 timer659
	TIMER_READY timer659
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody653
  endfor653:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer665
	DATA8 nos665
	DATA8 busy665
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer665 nos665
	JR_EQ8 0 nos665 motornotbusy665
  motorwaiting665:
	OUTPUT_TEST layer665 nos665 busy665
	JR_EQ8 busy665 0 motornotbusy665
	SLEEP
	JR motorwaiting665
  motornotbusy665:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB666 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB666:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB667 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB667:
    JR endif591
  else591_1:
    CALL EQ_STRING VGV_TAKE_RED_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else591_2
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for670:
    JR_GTF VGV_I 20.0 endfor670
  forbody670:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds676
	MOVEF_32 30.0 milliseconds676
	DATA32 timer676
	TIMER_WAIT milliseconds676 timer676
	TIMER_READY timer676
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody670
  endfor670:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer682
	DATA8 nos682
	DATA8 busy682
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer682 nos682
	JR_EQ8 0 nos682 motornotbusy682
  motorwaiting682:
	OUTPUT_TEST layer682 nos682 busy682
	JR_EQ8 busy682 0 motornotbusy682
	SLEEP
	JR motorwaiting682
  motornotbusy682:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB683:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer685
	DATA8 nos685
	DATA8 busy685
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer685 nos685
	JR_EQ8 0 nos685 motornotbusy685
  motorwaiting685:
	OUTPUT_TEST layer685 nos685 busy685
	JR_EQ8 busy685 0 motornotbusy685
	SLEEP
	JR motorwaiting685
  motornotbusy685:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB686:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer687
	DATA8 nos687
	DATA8 busy687
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer687 nos687
	JR_EQ8 0 nos687 motornotbusy687
  motorwaiting687:
	OUTPUT_TEST layer687 nos687 busy687
	JR_EQ8 busy687 0 motornotbusy687
	SLEEP
	JR motorwaiting687
  motornotbusy687:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for689:
    JR_GTF VGV_I 20.0 endfor689
  forbody689:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds693
	MOVEF_32 20.0 milliseconds693
	DATA32 timer693
	TIMER_WAIT milliseconds693 timer693
	TIMER_READY timer693
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody689
  endfor689:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer699
	DATA8 nos699
	DATA8 busy699
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer699 nos699
	JR_EQ8 0 nos699 motornotbusy699
  motorwaiting699:
	OUTPUT_TEST layer699 nos699 busy699
	JR_EQ8 busy699 0 motornotbusy699
	SLEEP
	JR motorwaiting699
  motornotbusy699:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB700:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer701
	DATA8 nos701
	DATA8 busy701
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer701 nos701
	JR_EQ8 0 nos701 motornotbusy701
  motorwaiting701:
	OUTPUT_TEST layer701 nos701 busy701
	JR_EQ8 busy701 0 motornotbusy701
	SLEEP
	JR motorwaiting701
  motornotbusy701:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB702:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for704:
    JR_GTF VGV_I 20.0 endfor704
  forbody704:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds710
	MOVEF_32 20.0 milliseconds710
	DATA32 timer710
	TIMER_WAIT milliseconds710 timer710
	TIMER_READY timer710
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody704
  endfor704:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer716
	DATA8 nos716
	DATA8 busy716
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer716 nos716
	JR_EQ8 0 nos716 motornotbusy716
  motorwaiting716:
	OUTPUT_TEST layer716 nos716 busy716
	JR_EQ8 busy716 0 motornotbusy716
	SLEEP
	JR motorwaiting716
  motornotbusy716:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB717 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB717:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB718:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer720
	DATA8 nos720
	DATA8 busy720
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer720 nos720
	JR_EQ8 0 nos720 motornotbusy720
  motorwaiting720:
	OUTPUT_TEST layer720 nos720 busy720
	JR_EQ8 busy720 0 motornotbusy720
	SLEEP
	JR motorwaiting720
  motornotbusy720:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB721 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB721:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds725
	MOVEF_32 1000.0 milliseconds725
	DATA32 timer725
	TIMER_WAIT milliseconds725 timer725
	TIMER_READY timer725
    WRITE32 ENDSUB_F_STOP_0:CALLSUB726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB726:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB727:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for729:
    JR_GTF VGV_I 20.0 endfor729
  forbody729:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds735
	MOVEF_32 20.0 milliseconds735
	DATA32 timer735
	TIMER_WAIT milliseconds735 timer735
	TIMER_READY timer735
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody729
  endfor729:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer741
	DATA8 nos741
	DATA8 busy741
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer741 nos741
	JR_EQ8 0 nos741 motornotbusy741
  motorwaiting741:
	OUTPUT_TEST layer741 nos741 busy741
	JR_EQ8 busy741 0 motornotbusy741
	SLEEP
	JR motorwaiting741
  motornotbusy741:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB742:
    JR endif591
  else591_2:
    MOVEF_F VGV_NO_BACK VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB743 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB743:
  else591_3:
  endif591:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer746
	DATA8 nos746
	DATA8 busy746
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer746 nos746
	JR_EQ8 0 nos746 motornotbusy746
  motorwaiting746:
	OUTPUT_TEST layer746 nos746 busy746
	JR_EQ8 busy746 0 motornotbusy746
	SLEEP
	JR motorwaiting746
  motornotbusy746:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB747 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB747:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB748:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds752
	MOVEF_32 700.0 milliseconds752
	DATA32 timer752
	TIMER_WAIT milliseconds752 timer752
	TIMER_READY timer752
    WRITE32 ENDSUB_F_STOP_0:CALLSUB753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB753:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    ADDF F.0 5.0 VGV_A
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 430.0 'True'

	DATA8 layer758
	DATA8 nos758
	DATA8 busy758
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer758 nos758
	JR_EQ8 0 nos758 motornotbusy758
  motorwaiting758:
	OUTPUT_TEST layer758 nos758 busy758
	JR_EQ8 busy758 0 motornotbusy758
	SLEEP
	JR motorwaiting758
  motornotbusy758:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while760:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile760
  whilebody760:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB762:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody760
  endwhile760:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA8 layer768
	DATA8 no768
	DATA8 mode8768
	
	MOVEF_8 VGV_LINE_SENSOR no768
	SUB8 no768 1 no768
	DIV8 no768 4 layer768
	MATH MOD8 no768 4 no768

	MOVEF_8 0.0 mode8768
	
	INPUT_DEVICE READY_RAW layer768 no768 0 mode8768 0
  while769:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 or770
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 220.0 endwhile769
  or770:
  whilebody769:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 whilebody769
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 220.0 whilebody769
  endwhile769:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB775 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB775:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB776 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB776:
    MOVEF_F 92.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB777:
    DATA8 layer778
	DATA8 no778
	DATA8 mode8778
	
	MOVEF_8 VGV_LINE_SENSOR no778
	SUB8 no778 1 no778
	DIV8 no778 4 layer778
	MATH MOD8 no778 4 no778

	MOVEF_8 0.0 mode8778
	
	INPUT_DEVICE READY_RAW layer778 no778 0 mode8778 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB779 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB779:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB781 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB781:
    JR_LTEQF VGV_B 45.0 else782_1
    DATA8 layer783
	DATA8 no783
	DATA8 mode8783
	
	MOVEF_8 VGV_LEFT_SENSOR no783
	SUB8 no783 1 no783
	DIV8 no783 4 layer783
	MATH MOD8 no783 4 no783

	MOVEF_8 2.0 mode8783
	
	INPUT_DEVICE READY_RAW layer783 no783 0 mode8783 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB784 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB784:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer786
	DATA8 no786
	DATA8 mode8786
	
	MOVEF_8 VGV_LEFT_SENSOR no786
	SUB8 no786 1 no786
	DIV8 no786 4 layer786
	MATH MOD8 no786 4 no786

	MOVEF_8 1.0 mode8786
	
	INPUT_DEVICE READY_RAW layer786 no786 0 mode8786 0
    JR_LTEQF VGV_G 100.0 else787_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB788 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB788:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif787
  else787_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB789:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 100.0 VLV_DEG_5
    MOVEF_F 50.0 VLV_ACCELERATION_5
    MOVEF_F 50.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB790:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB791 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB791:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB792:
    MOVEF_F 20.0 VLV_BASE_POWER_4
    MOVEF_F 10.0 VLV_MIN_POWER_4
    MOVEF_F 100.0 VLV_DEG_4
    MOVEF_F 100.0 VLV_ACCELERATION_4
    MOVEF_F 0.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB793 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB793:
  else787_2:
  endif787:
    JR endif782
  else782_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds798
	MOVEF_32 1000.0 milliseconds798
	DATA32 timer798
	TIMER_WAIT milliseconds798 timer798
	TIMER_READY timer798
    JR_GTEQF VGV_ULTRA 85.0 else799_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB800:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB801:
  else799_1:
  endif799:
  else782_2:
  endif782:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB802 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB802:
    CALL EQ_STRING VGV_OBJECT 'Fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else803_1
    MOVEF_F 30.0 VLV_BASE_POWER_4
    MOVEF_F 10.0 VLV_MIN_POWER_4
    MOVEF_F 115.0 VLV_DEG_4
    MOVEF_F 0.0 VLV_ACCELERATION_4
    MOVEF_F 0.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB805:
    JR endif803
  else803_1:
    MOVEF_F 30.0 VLV_BASE_POWER_4
    MOVEF_F 10.0 VLV_MIN_POWER_4
    MOVEF_F 115.0 VLV_DEG_4
    MOVEF_F 115.0 VLV_ACCELERATION_4
    MOVEF_F 0.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB806 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB806:
  else803_2:
  endif803:
    SUBF VGV_A 0.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while809:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 250.0 endwhile809
  whilebody809:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB811 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB811:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 250.0 whilebody809
  endwhile809:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds816
	MOVEF_32 2000.0 milliseconds816
	DATA32 timer816
	TIMER_WAIT milliseconds816 timer816
	TIMER_READY timer816
    WRITE32 ENDSUB_F_STOP_0:CALLSUB817 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB817:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB818 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB818:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB820 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB820:
    JR_LTEQF VGV_B 55.0 else821_1
    DATA8 layer822
	DATA8 no822
	DATA8 mode8822
	
	MOVEF_8 VGV_LEFT_SENSOR no822
	SUB8 no822 1 no822
	DIV8 no822 4 layer822
	MATH MOD8 no822 4 no822

	MOVEF_8 2.0 mode8822
	
	INPUT_DEVICE READY_RAW layer822 no822 0 mode8822 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB823 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB823:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer825
	DATA8 no825
	DATA8 mode8825
	
	MOVEF_8 VGV_LEFT_SENSOR no825
	SUB8 no825 1 no825
	DIV8 no825 4 layer825
	MATH MOD8 no825 4 no825

	MOVEF_8 1.0 mode8825
	
	INPUT_DEVICE READY_RAW layer825 no825 0 mode8825 0
    JR_LTEQF VGV_G 70.0 else826_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB827 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB827:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif826
  else826_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB828 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB828:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB829 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB829:
  else826_2:
  endif826:
    JR endif821
  else821_1:
    JR_LTEQF VGV_B 15.0 else821_2
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds834
	MOVEF_32 1000.0 milliseconds834
	DATA32 timer834
	TIMER_WAIT milliseconds834 timer834
	TIMER_READY timer834
    JR_GTEQF VGV_ULTRA 85.0 else835_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB836:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB837:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for839:
    JR_GTF VGV_I 20.0 endfor839
  forbody839:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds843
	MOVEF_32 30.0 milliseconds843
	DATA32 timer843
	TIMER_WAIT milliseconds843 timer843
	TIMER_READY timer843
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody839
  endfor839:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer849
	DATA8 nos849
	DATA8 busy849
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer849 nos849
	JR_EQ8 0 nos849 motornotbusy849
  motorwaiting849:
	OUTPUT_TEST layer849 nos849 busy849
	JR_EQ8 busy849 0 motornotbusy849
	SLEEP
	JR motorwaiting849
  motornotbusy849:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB850 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB850:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer851
	DATA8 nos851
	DATA8 busy851
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer851 nos851
	JR_EQ8 0 nos851 motornotbusy851
  motorwaiting851:
	OUTPUT_TEST layer851 nos851 busy851
	JR_EQ8 busy851 0 motornotbusy851
	SLEEP
	JR motorwaiting851
  motornotbusy851:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer854
	DATA8 nos854
	DATA8 busy854
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer854 nos854
	JR_EQ8 0 nos854 motornotbusy854
  motorwaiting854:
	OUTPUT_TEST layer854 nos854 busy854
	JR_EQ8 busy854 0 motornotbusy854
	SLEEP
	JR motorwaiting854
  motornotbusy854:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB855 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB855:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer856
	DATA8 nos856
	DATA8 busy856
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer856 nos856
	JR_EQ8 0 nos856 motornotbusy856
  motorwaiting856:
	OUTPUT_TEST layer856 nos856 busy856
	JR_EQ8 busy856 0 motornotbusy856
	SLEEP
	JR motorwaiting856
  motornotbusy856:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB857 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB857:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer860
	DATA8 nos860
	DATA8 busy860
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer860 nos860
	JR_EQ8 0 nos860 motornotbusy860
  motorwaiting860:
	OUTPUT_TEST layer860 nos860 busy860
	JR_EQ8 busy860 0 motornotbusy860
	SLEEP
	JR motorwaiting860
  motornotbusy860:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB861 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB861:
    DATA32 milliseconds862
	MOVEF_32 1000.0 milliseconds862
	DATA32 timer862
	TIMER_WAIT milliseconds862 timer862
	TIMER_READY timer862
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for864:
    JR_GTF VGV_I 20.0 endfor864
  forbody864:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds867
	MOVEF_32 30.0 milliseconds867
	DATA32 timer867
	TIMER_WAIT milliseconds867 timer867
	TIMER_READY timer867
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody864
  endfor864:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer873
	DATA8 nos873
	DATA8 busy873
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer873 nos873
	JR_EQ8 0 nos873 motornotbusy873
  motorwaiting873:
	OUTPUT_TEST layer873 nos873 busy873
	JR_EQ8 busy873 0 motornotbusy873
	SLEEP
	JR motorwaiting873
  motornotbusy873:
    MULF 30.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds876
	MOVEF_32 1000.0 milliseconds876
	DATA32 timer876
	TIMER_WAIT milliseconds876 timer876
	TIMER_READY timer876
    WRITE32 ENDSUB_F_STOP_0:CALLSUB877 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB877:
  else835_1:
  endif835:
  else821_2:
  endif821:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB878 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB878:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer880
	DATA8 nos880
	DATA8 busy880
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer880 nos880
	JR_EQ8 0 nos880 motornotbusy880
  motorwaiting880:
	OUTPUT_TEST layer880 nos880 busy880
	JR_EQ8 busy880 0 motornotbusy880
	SLEEP
	JR motorwaiting880
  motornotbusy880:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 104.0 0.0 'True' 

	DATA8 layer882
	DATA8 nos882
	DATA8 busy882
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer882 nos882
	JR_EQ8 0 nos882 motornotbusy882
  motorwaiting882:
	OUTPUT_TEST layer882 nos882 busy882
	JR_EQ8 busy882 0 motornotbusy882
	SLEEP
	JR motorwaiting882
  motornotbusy882:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 102.0 VGV_A
  while884:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 100.0 endwhile884
  whilebody884:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB886 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB886:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 100.0 whilebody884
  endwhile884:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while891:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 6.0 endwhile891
  whilebody891:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 6.0 whilebody891
  endwhile891:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB894 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB894:
    DATA8 layer895
	DATA8 no895
	DATA8 mode8895
	
	MOVEF_8 VGV_LINE_SENSOR no895
	SUB8 no895 1 no895
	DIV8 no895 4 layer895
	MATH MOD8 no895 4 no895

	MOVEF_8 0.0 mode8895
	
	INPUT_DEVICE READY_RAW layer895 no895 0 mode8895 0
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else896_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB898 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB898:
    MOVEF_F 110.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB899 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB899:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB900 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB900:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else902_1
    DATA8 layer903
	DATA8 no903
	DATA8 mode8903
	
	MOVEF_8 VGV_LEFT_SENSOR no903
	SUB8 no903 1 no903
	DIV8 no903 4 layer903
	MATH MOD8 no903 4 no903

	MOVEF_8 2.0 mode8903
	
	INPUT_DEVICE READY_RAW layer903 no903 0 mode8903 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB904 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB904:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer906
	DATA8 no906
	DATA8 mode8906
	
	MOVEF_8 VGV_LEFT_SENSOR no906
	SUB8 no906 1 no906
	DIV8 no906 4 layer906
	MATH MOD8 no906 4 no906

	MOVEF_8 1.0 mode8906
	
	INPUT_DEVICE READY_RAW layer906 no906 0 mode8906 0
    JR_LTEQF VGV_G 100.0 else907_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB908 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB908:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif907
  else907_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB909 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB909:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB910 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB910:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB911 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB911:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB912 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB912:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB913 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB913:
  else907_2:
  endif907:
    JR endif902
  else902_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else915_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB916 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB916:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB917 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB917:
  else915_1:
  endif915:
  else902_2:
  endif902:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB918 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB918:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB919 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB919:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB920 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB920:
    JR endif896
  else896_1:
    MOVEF_F 60.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB921 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB921:
  else896_2:
  endif896:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB922 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB922:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else924_1
    DATA8 layer925
	DATA8 no925
	DATA8 mode8925
	
	MOVEF_8 VGV_LEFT_SENSOR no925
	SUB8 no925 1 no925
	DIV8 no925 4 layer925
	MATH MOD8 no925 4 no925

	MOVEF_8 2.0 mode8925
	
	INPUT_DEVICE READY_RAW layer925 no925 0 mode8925 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB926 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB926:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer928
	DATA8 no928
	DATA8 mode8928
	
	MOVEF_8 VGV_LEFT_SENSOR no928
	SUB8 no928 1 no928
	DIV8 no928 4 layer928
	MATH MOD8 no928 4 no928

	MOVEF_8 1.0 mode8928
	
	INPUT_DEVICE READY_RAW layer928 no928 0 mode8928 0
    JR_LTEQF VGV_G 70.0 else929_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB930:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif929
  else929_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB931 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB931:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB932 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB932:
  else929_2:
  endif929:
    JR endif924
  else924_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else934_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB935 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB935:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB936 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB936:
  else934_1:
  endif934:
  else924_2:
  endif924:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB937 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB937:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer940
	DATA8 nos940
	DATA8 busy940
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer940 nos940
	JR_EQ8 0 nos940 motornotbusy940
  motorwaiting940:
	OUTPUT_TEST layer940 nos940 busy940
	JR_EQ8 busy940 0 motornotbusy940
	SLEEP
	JR motorwaiting940
  motornotbusy940:
    ADDF VGV_A 7.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while943:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 310.0 endwhile943
  whilebody943:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB945 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB945:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 310.0 whilebody943
  endwhile943:
    MOVEF_F 120.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB947 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB947:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else948_1
    DATA8 layer950
	DATA8 no950
	DATA8 mode8950
	
	MOVEF_8 VGV_LEFT_SENSOR no950
	SUB8 no950 1 no950
	DIV8 no950 4 layer950
	MATH MOD8 no950 4 no950

	MOVEF_8 1.0 mode8950
	
	INPUT_DEVICE READY_RAW layer950 no950 0 mode8950 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB951 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB951:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB953 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB953:
    JR_LTEQF VGV_B 55.0 else954_1
    DATA8 layer955
	DATA8 no955
	DATA8 mode8955
	
	MOVEF_8 VGV_LEFT_SENSOR no955
	SUB8 no955 1 no955
	DIV8 no955 4 layer955
	MATH MOD8 no955 4 no955

	MOVEF_8 2.0 mode8955
	
	INPUT_DEVICE READY_RAW layer955 no955 0 mode8955 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB956 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB956:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer958
	DATA8 no958
	DATA8 mode8958
	
	MOVEF_8 VGV_LEFT_SENSOR no958
	SUB8 no958 1 no958
	DIV8 no958 4 layer958
	MATH MOD8 no958 4 no958

	MOVEF_8 1.0 mode8958
	
	INPUT_DEVICE READY_RAW layer958 no958 0 mode8958 0
    JR_LTEQF VGV_G 70.0 else959_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB960 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB960:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif959
  else959_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB961 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB961:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB962 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB962:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB963:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB964 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB964:
  else959_2:
  endif959:
    JR endif954
  else954_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else966_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB967 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB967:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB968 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB968:
  else966_1:
  endif966:
  else954_2:
  endif954:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB969 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB969:
  else948_1:
  endif948:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB970 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB970:
    DATA8 layer971
	DATA8 no971
	DATA8 mode8971
	
	MOVEF_8 VGV_LINE_SENSOR no971
	SUB8 no971 1 no971
	DIV8 no971 4 layer971
	MATH MOD8 no971 4 no971

	MOVEF_8 0.0 mode8971
	
	INPUT_DEVICE READY_RAW layer971 no971 0 mode8971 0
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'False'

	DATA8 layer974
	DATA8 nos974
	DATA8 busy974
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer974 nos974
	JR_EQ8 0 nos974 motornotbusy974
  motorwaiting974:
	OUTPUT_TEST layer974 nos974 busy974
	JR_EQ8 busy974 0 motornotbusy974
	SLEEP
	JR motorwaiting974
  motornotbusy974:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while978:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile978
  whilebody978:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody978
  endwhile978:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB981 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB981:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 200.0 0.0 'False' 

	DATA8 layer983
	DATA8 nos983
	DATA8 busy983
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer983 nos983
	JR_EQ8 0 nos983 motornotbusy983
  motorwaiting983:
	OUTPUT_TEST layer983 nos983 busy983
	JR_EQ8 busy983 0 motornotbusy983
	SLEEP
	JR motorwaiting983
  motornotbusy983:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
  while986:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile986
  whilebody986:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody986
  endwhile986:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer990
	DATA8 nos990
	DATA8 busy990
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer990 nos990
	JR_EQ8 0 nos990 motornotbusy990
  motorwaiting990:
	OUTPUT_TEST layer990 nos990 busy990
	JR_EQ8 busy990 0 motornotbusy990
	SLEEP
	JR motorwaiting990
  motornotbusy990:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB991 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB991:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while993:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile993
  whilebody993:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB995 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB995:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody993
  endwhile993:
  while997:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 5.0 endwhile997
  whilebody997:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB999 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB999:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 5.0 whilebody997
  endwhile997:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1001 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1001:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer1004
	DATA8 nos1004
	DATA8 busy1004
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1004 nos1004
	JR_EQ8 0 nos1004 motornotbusy1004
  motorwaiting1004:
	OUTPUT_TEST layer1004 nos1004 busy1004
	JR_EQ8 busy1004 0 motornotbusy1004
	SLEEP
	JR motorwaiting1004
  motornotbusy1004:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1005 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1005:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1006 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1006:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1009
	DATA8 nos1009
	DATA8 busy1009
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1009 nos1009
	JR_EQ8 0 nos1009 motornotbusy1009
  motorwaiting1009:
	OUTPUT_TEST layer1009 nos1009 busy1009
	JR_EQ8 busy1009 0 motornotbusy1009
	SLEEP
	JR motorwaiting1009
  motornotbusy1009:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1010 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1010:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1011 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1011:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 25.0 'False'

	DATA8 layer1014
	DATA8 nos1014
	DATA8 busy1014
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1014 nos1014
	JR_EQ8 0 nos1014 motornotbusy1014
  motorwaiting1014:
	OUTPUT_TEST layer1014 nos1014 busy1014
	JR_EQ8 busy1014 0 motornotbusy1014
	SLEEP
	JR motorwaiting1014
  motornotbusy1014:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1016:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile1016
  whilebody1016:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF F.0 17.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf1022
    DATA8 flag1022
    DIVF F.0 10.0 tmpf1022
    CP_EQF 0.0 10.0 flag1022
    SELECTF flag1022 0.0 tmpf1022 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 20.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -20.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody1016
  endwhile1016:
    MOVEF_F 20.0 VLV_BASE_POWER_4
    MOVEF_F 10.0 VLV_MIN_POWER_4
    MOVEF_F 135.0 VLV_DEG_4
    MOVEF_F 0.0 VLV_ACCELERATION_4
    MOVEF_F 135.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1032 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1032:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1033 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1033:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1034 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1034:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1036 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1036:
    JR_LTEQF VGV_B 80.0 else1037_1
    DATA8 layer1038
	DATA8 no1038
	DATA8 mode81038
	
	MOVEF_8 VGV_LEFT_SENSOR no1038
	SUB8 no1038 1 no1038
	DIV8 no1038 4 layer1038
	MATH MOD8 no1038 4 no1038

	MOVEF_8 2.0 mode81038
	
	INPUT_DEVICE READY_RAW layer1038 no1038 0 mode81038 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1039 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1039:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1041
	DATA8 no1041
	DATA8 mode81041
	
	MOVEF_8 VGV_LEFT_SENSOR no1041
	SUB8 no1041 1 no1041
	DIV8 no1041 4 layer1041
	MATH MOD8 no1041 4 no1041

	MOVEF_8 1.0 mode81041
	
	INPUT_DEVICE READY_RAW layer1041 no1041 0 mode81041 0
    JR_LTEQF VGV_G 80.0 else1042_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1043:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif1042
  else1042_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'FIre' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1044 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1044:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1045 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1045:
  else1042_2:
  endif1042:
    JR endif1037
  else1037_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1047_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'True' VGV_CHEM
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1048 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1048:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1049 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1049:
    MULF 10.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 10.0 0.0 'True' 

	DATA8 layer1051
	DATA8 nos1051
	DATA8 busy1051
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1051 nos1051
	JR_EQ8 0 nos1051 motornotbusy1051
  motorwaiting1051:
	OUTPUT_TEST layer1051 nos1051 busy1051
	JR_EQ8 busy1051 0 motornotbusy1051
	SLEEP
	JR motorwaiting1051
  motornotbusy1051:
  else1047_1:
  endif1047:
  else1037_2:
  endif1037:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1052 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1052:
    MOVEF_F 710.0 VGV_C
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or1054
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1053_1
  or1054:
    MULF 10.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 10.0 0.0 'True' 

	DATA8 layer1058
	DATA8 nos1058
	DATA8 busy1058
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1058 nos1058
	JR_EQ8 0 nos1058 motornotbusy1058
  motorwaiting1058:
	OUTPUT_TEST layer1058 nos1058 busy1058
	JR_EQ8 busy1058 0 motornotbusy1058
	SLEEP
	JR motorwaiting1058
  motornotbusy1058:
    MOVEF_F 20.0 VLV_BASE_POWER_4
    MOVEF_F 10.0 VLV_MIN_POWER_4
    MOVEF_F 530.0 VLV_DEG_4
    MOVEF_F 200.0 VLV_ACCELERATION_4
    MOVEF_F 200.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1059:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1060 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1060:
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1061_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1063 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1063:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1065 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1065:
    JR_LTEQF VGV_B 50.0 else1066_1
    DATA8 layer1067
	DATA8 no1067
	DATA8 mode81067
	
	MOVEF_8 VGV_LEFT_SENSOR no1067
	SUB8 no1067 1 no1067
	DIV8 no1067 4 layer1067
	MATH MOD8 no1067 4 no1067

	MOVEF_8 2.0 mode81067
	
	INPUT_DEVICE READY_RAW layer1067 no1067 0 mode81067 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1068 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1068:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1070
	DATA8 no1070
	DATA8 mode81070
	
	MOVEF_8 VGV_LEFT_SENSOR no1070
	SUB8 no1070 1 no1070
	DIV8 no1070 4 layer1070
	MATH MOD8 no1070 4 no1070

	MOVEF_8 1.0 mode81070
	
	INPUT_DEVICE READY_RAW layer1070 no1070 0 mode81070 0
    JR_LTEQF VGV_G 70.0 else1071_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1072 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1072:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif1071
  else1071_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1073 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1073:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1074 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1074:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1075 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1075:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1076 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1076:
  else1071_2:
  endif1071:
    JR endif1066
  else1066_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds1081
	MOVEF_32 3000.0 milliseconds1081
	DATA32 timer1081
	TIMER_WAIT milliseconds1081 timer1081
	TIMER_READY timer1081
    JR_GTEQF VGV_ULTRA 85.0 else1082_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1083 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1083:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer1086
	DATA8 nos1086
	DATA8 busy1086
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1086 nos1086
	JR_EQ8 0 nos1086 motornotbusy1086
  motorwaiting1086:
	OUTPUT_TEST layer1086 nos1086 busy1086
	JR_EQ8 busy1086 0 motornotbusy1086
	SLEEP
	JR motorwaiting1086
  motornotbusy1086:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1087 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1087:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer1088
	DATA8 nos1088
	DATA8 busy1088
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1088 nos1088
	JR_EQ8 0 nos1088 motornotbusy1088
  motorwaiting1088:
	OUTPUT_TEST layer1088 nos1088 busy1088
	JR_EQ8 busy1088 0 motornotbusy1088
	SLEEP
	JR motorwaiting1088
  motornotbusy1088:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1090:
    JR_GTF VGV_I 20.0 endfor1090
  forbody1090:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1093
	MOVEF_32 10.0 milliseconds1093
	DATA32 timer1093
	TIMER_WAIT milliseconds1093 timer1093
	TIMER_READY timer1093
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1090
  endfor1090:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1099
	DATA8 nos1099
	DATA8 busy1099
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1099 nos1099
	JR_EQ8 0 nos1099 motornotbusy1099
  motorwaiting1099:
	OUTPUT_TEST layer1099 nos1099 busy1099
	JR_EQ8 busy1099 0 motornotbusy1099
	SLEEP
	JR motorwaiting1099
  motornotbusy1099:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1100:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer1101
	DATA8 nos1101
	DATA8 busy1101
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1101 nos1101
	JR_EQ8 0 nos1101 motornotbusy1101
  motorwaiting1101:
	OUTPUT_TEST layer1101 nos1101 busy1101
	JR_EQ8 busy1101 0 motornotbusy1101
	SLEEP
	JR motorwaiting1101
  motornotbusy1101:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1102:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1103:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1105:
    JR_GTF VGV_I 20.0 endfor1105
  forbody1105:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1109
	MOVEF_32 10.0 milliseconds1109
	DATA32 timer1109
	TIMER_WAIT milliseconds1109 timer1109
	TIMER_READY timer1109
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1105
  endfor1105:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1115
	DATA8 nos1115
	DATA8 busy1115
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1115 nos1115
	JR_EQ8 0 nos1115 motornotbusy1115
  motorwaiting1115:
	OUTPUT_TEST layer1115 nos1115 busy1115
	JR_EQ8 busy1115 0 motornotbusy1115
	SLEEP
	JR motorwaiting1115
  motornotbusy1115:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1116:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1117:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer1120
	DATA8 nos1120
	DATA8 busy1120
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1120 nos1120
	JR_EQ8 0 nos1120 motornotbusy1120
  motorwaiting1120:
	OUTPUT_TEST layer1120 nos1120 busy1120
	JR_EQ8 busy1120 0 motornotbusy1120
	SLEEP
	JR motorwaiting1120
  motornotbusy1120:
  else1082_1:
  endif1082:
  else1066_2:
  endif1066:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1121:
  else1061_1:
  endif1061:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1122_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1124:
    MOVEF_F 20.0 VLV_BASE_POWER_4
    MOVEF_F 10.0 VLV_MIN_POWER_4
    MOVEF_F 160.0 VLV_DEG_4
    MOVEF_F 80.0 VLV_ACCELERATION_4
    MOVEF_F 80.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1125:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1126:
    DATA8 layer1127
	DATA8 no1127
	DATA8 mode81127
	
	MOVEF_8 VGV_LEFT_SENSOR no1127
	SUB8 no1127 1 no1127
	DIV8 no1127 4 layer1127
	MATH MOD8 no1127 4 no1127

	MOVEF_8 1.0 mode81127
	
	INPUT_DEVICE READY_RAW layer1127 no1127 0 mode81127 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1128:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1130:
    JR_LTEQF VGV_B 40.0 else1131_1
    DATA8 layer1132
	DATA8 no1132
	DATA8 mode81132
	
	MOVEF_8 VGV_LEFT_SENSOR no1132
	SUB8 no1132 1 no1132
	DIV8 no1132 4 layer1132
	MATH MOD8 no1132 4 no1132

	MOVEF_8 2.0 mode81132
	
	INPUT_DEVICE READY_RAW layer1132 no1132 0 mode81132 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1133:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1135
	DATA8 no1135
	DATA8 mode81135
	
	MOVEF_8 VGV_LEFT_SENSOR no1135
	SUB8 no1135 1 no1135
	DIV8 no1135 4 layer1135
	MATH MOD8 no1135 4 no1135

	MOVEF_8 1.0 mode81135
	
	INPUT_DEVICE READY_RAW layer1135 no1135 0 mode81135 0
    JR_LTEQF VGV_G 50.0 else1136_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1137:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif1136
  else1136_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1138:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1139:
  else1136_2:
  endif1136:
    JR endif1131
  else1131_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1141_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1142:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB1143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB1143:
  else1141_1:
  endif1141:
  else1131_2:
  endif1131:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1144:
    MOVEF_F 160.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1145:
  else1122_1:
  endif1122:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 165.0 'True'

	DATA8 layer1148
	DATA8 nos1148
	DATA8 busy1148
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1148 nos1148
	JR_EQ8 0 nos1148 motornotbusy1148
  motorwaiting1148:
	OUTPUT_TEST layer1148 nos1148 busy1148
	JR_EQ8 busy1148 0 motornotbusy1148
	SLEEP
	JR motorwaiting1148
  motornotbusy1148:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1149:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1150:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 380.0 'True'

	DATA8 layer1153
	DATA8 nos1153
	DATA8 busy1153
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1153 nos1153
	JR_EQ8 0 nos1153 motornotbusy1153
  motorwaiting1153:
	OUTPUT_TEST layer1153 nos1153 busy1153
	JR_EQ8 busy1153 0 motornotbusy1153
	SLEEP
	JR motorwaiting1153
  motornotbusy1153:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1154:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1155:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1158
	DATA8 nos1158
	DATA8 busy1158
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1158 nos1158
	JR_EQ8 0 nos1158 motornotbusy1158
  motorwaiting1158:
	OUTPUT_TEST layer1158 nos1158 busy1158
	JR_EQ8 busy1158 0 motornotbusy1158
	SLEEP
	JR motorwaiting1158
  motornotbusy1158:
    JR endif1053
  else1053_1:
    MOVEF_F 200.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1159:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 370.0 'True'

	DATA8 layer1162
	DATA8 nos1162
	DATA8 busy1162
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1162 nos1162
	JR_EQ8 0 nos1162 motornotbusy1162
  motorwaiting1162:
	OUTPUT_TEST layer1162 nos1162 busy1162
	JR_EQ8 busy1162 0 motornotbusy1162
	SLEEP
	JR motorwaiting1162
  motornotbusy1162:
    SUBF VGV_C 220.0 VGV_C
  else1053_2:
  endif1053:
    MOVEF_F 490.0 VLV_U_2
    MOVEF_F 50.0 VLV_BASE_POWER_2
    MOVEF_F 20.0 VLV_MIN_POWER_2
    MOVEF_F VGV_C VLV_DEGREES_2
    MOVEF_F 200.0 VLV_ZAMED_DEGREES_2
    WRITE32 ENDSUB_F_ULTRASONIC_ZAMED_5:CALLSUB1164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_ZAMED_5
CALLSUB1164:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1165:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1166:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1167_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 115.0 0.0 'True' 

	DATA8 layer1169
	DATA8 nos1169
	DATA8 busy1169
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1169 nos1169
	JR_EQ8 0 nos1169 motornotbusy1169
  motorwaiting1169:
	OUTPUT_TEST layer1169 nos1169 busy1169
	JR_EQ8 busy1169 0 motornotbusy1169
	SLEEP
	JR motorwaiting1169
  motornotbusy1169:
  else1167_1:
  endif1167:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1170:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1173
	DATA8 nos1173
	DATA8 busy1173
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1173 nos1173
	JR_EQ8 0 nos1173 motornotbusy1173
  motorwaiting1173:
	OUTPUT_TEST layer1173 nos1173 busy1173
	JR_EQ8 busy1173 0 motornotbusy1173
	SLEEP
	JR motorwaiting1173
  motornotbusy1173:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1174:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1175_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer1177
	DATA8 nos1177
	DATA8 busy1177
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1177 nos1177
	JR_EQ8 0 nos1177 motornotbusy1177
  motorwaiting1177:
	OUTPUT_TEST layer1177 nos1177 busy1177
	JR_EQ8 busy1177 0 motornotbusy1177
	SLEEP
	JR motorwaiting1177
  motornotbusy1177:
  else1175_1:
  endif1175:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1180
	DATA8 nos1180
	DATA8 busy1180
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1180 nos1180
	JR_EQ8 0 nos1180 motornotbusy1180
  motorwaiting1180:
	OUTPUT_TEST layer1180 nos1180 busy1180
	JR_EQ8 busy1180 0 motornotbusy1180
	SLEEP
	JR motorwaiting1180
  motornotbusy1180:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 60.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1184
	MOVEF_32 1200.0 milliseconds1184
	DATA32 timer1184
	TIMER_WAIT milliseconds1184 timer1184
	TIMER_READY timer1184
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1185:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 220.0 'True'

	DATA8 layer1188
	DATA8 nos1188
	DATA8 busy1188
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1188 nos1188
	JR_EQ8 0 nos1188 motornotbusy1188
  motorwaiting1188:
	OUTPUT_TEST layer1188 nos1188 busy1188
	JR_EQ8 busy1188 0 motornotbusy1188
	SLEEP
	JR motorwaiting1188
  motornotbusy1188:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1190
	DATA8 nos1190
	DATA8 busy1190
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1190 nos1190
	JR_EQ8 0 nos1190 motornotbusy1190
  motorwaiting1190:
	OUTPUT_TEST layer1190 nos1190 busy1190
	JR_EQ8 busy1190 0 motornotbusy1190
	SLEEP
	JR motorwaiting1190
  motornotbusy1190:
    MOVEF_F 107.0 VGV_A
    TIMER_READ timeMC1
  while1192:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 4500.0 endwhile1192
  whilebody1192:
    WRITE32 ENDSUB_F_ULTRASONIC_SUPERFAST_0:CALLSUB1194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SUPERFAST_0
CALLSUB1194:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 4500.0 whilebody1192
  endwhile1192:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1196:
    WRITE32 ENDSUB_F_TAKE_CUBES_0:CALLSUB1197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_0
CALLSUB1197:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1200
	DATA8 nos1200
	DATA8 busy1200
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1200 nos1200
	JR_EQ8 0 nos1200 motornotbusy1200
  motorwaiting1200:
	OUTPUT_TEST layer1200 nos1200 busy1200
	JR_EQ8 busy1200 0 motornotbusy1200
	SLEEP
	JR motorwaiting1200
  motornotbusy1200:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1201_1
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1201_1
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB1204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB1204:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1205:
    JR endif1201
  else1201_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1201_2
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1201_2
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1210
	DATA8 nos1210
	DATA8 busy1210
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1210 nos1210
	JR_EQ8 0 nos1210 motornotbusy1210
  motorwaiting1210:
	OUTPUT_TEST layer1210 nos1210 busy1210
	JR_EQ8 busy1210 0 motornotbusy1210
	SLEEP
	JR motorwaiting1210
  motornotbusy1210:
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB1211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB1211:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1212:
    JR endif1201
  else1201_2:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1201_3
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1201_3
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:CALLSUB1215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_LONG_0
CALLSUB1215:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1216:
    JR endif1201
  else1201_3:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1217_1
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1217_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1220:
    JR endif1217
  else1217_1:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1217_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1222:
    JR endif1217
  else1217_2:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1217_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1224:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1227
	DATA8 nos1227
	DATA8 busy1227
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1227 nos1227
	JR_EQ8 0 nos1227 motornotbusy1227
  motorwaiting1227:
	OUTPUT_TEST layer1227 nos1227 busy1227
	JR_EQ8 busy1227 0 motornotbusy1227
	SLEEP
	JR motorwaiting1227
  motornotbusy1227:
    JR endif1217
  else1217_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1230
	DATA8 nos1230
	DATA8 busy1230
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1230 nos1230
	JR_EQ8 0 nos1230 motornotbusy1230
  motorwaiting1230:
	OUTPUT_TEST layer1230 nos1230 busy1230
	JR_EQ8 busy1230 0 motornotbusy1230
	SLEEP
	JR motorwaiting1230
  motornotbusy1230:
  else1217_4:
  endif1217:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1231_1
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1231_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1234:
    JR endif1231
  else1231_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1231_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1236:
    JR endif1231
  else1231_2:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1231_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1238:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1241
	DATA8 nos1241
	DATA8 busy1241
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1241 nos1241
	JR_EQ8 0 nos1241 motornotbusy1241
  motorwaiting1241:
	OUTPUT_TEST layer1241 nos1241 busy1241
	JR_EQ8 busy1241 0 motornotbusy1241
	SLEEP
	JR motorwaiting1241
  motornotbusy1241:
    JR endif1231
  else1231_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1244
	DATA8 nos1244
	DATA8 busy1244
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1244 nos1244
	JR_EQ8 0 nos1244 motornotbusy1244
  motorwaiting1244:
	OUTPUT_TEST layer1244 nos1244 busy1244
	JR_EQ8 busy1244 0 motornotbusy1244
	SLEEP
	JR motorwaiting1244
  motornotbusy1244:
  else1231_4:
  endif1231:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1245_1
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1245_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1248:
    JR endif1245
  else1245_1:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1245_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1250:
    JR endif1245
  else1245_2:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1245_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1252:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1255
	DATA8 nos1255
	DATA8 busy1255
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1255 nos1255
	JR_EQ8 0 nos1255 motornotbusy1255
  motorwaiting1255:
	OUTPUT_TEST layer1255 nos1255 busy1255
	JR_EQ8 busy1255 0 motornotbusy1255
	SLEEP
	JR motorwaiting1255
  motornotbusy1255:
    JR endif1245
  else1245_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1258
	DATA8 nos1258
	DATA8 busy1258
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1258 nos1258
	JR_EQ8 0 nos1258 motornotbusy1258
  motorwaiting1258:
	OUTPUT_TEST layer1258 nos1258 busy1258
	JR_EQ8 busy1258 0 motornotbusy1258
	SLEEP
	JR motorwaiting1258
  motornotbusy1258:
  else1245_4:
  endif1245:
    MULF -15.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1260
	DATA8 nos1260
	DATA8 busy1260
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1260 nos1260
	JR_EQ8 0 nos1260 motornotbusy1260
  motorwaiting1260:
	OUTPUT_TEST layer1260 nos1260 busy1260
	JR_EQ8 busy1260 0 motornotbusy1260
	SLEEP
	JR motorwaiting1260
  motornotbusy1260:
    MULF VGV_LEFT_FORWARD -25.0 F.0
    MULF VGV_RIGHT_FORWARD -25.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1264
	MOVEF_32 1500.0 milliseconds1264
	DATA32 timer1264
	TIMER_WAIT milliseconds1264 timer1264
	TIMER_READY timer1264
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1265:
  else1201_4:
  endif1201:
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1266_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 55.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1272:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 1200.0 endwhile1272
  whilebody1272:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 1200.0 whilebody1272
  endwhile1272:
  while1275:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 25.0 endwhile1275
  whilebody1275:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 25.0 whilebody1275
  endwhile1275:
  while1278:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile1278
  whilebody1278:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody1278
  endwhile1278:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1281:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1282:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 365.0 0.0 'True' 

	DATA8 layer1284
	DATA8 nos1284
	DATA8 busy1284
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1284 nos1284
	JR_EQ8 0 nos1284 motornotbusy1284
  motorwaiting1284:
	OUTPUT_TEST layer1284 nos1284 busy1284
	JR_EQ8 busy1284 0 motornotbusy1284
	SLEEP
	JR motorwaiting1284
  motornotbusy1284:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1288:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1291
	DATA8 nos1291
	DATA8 busy1291
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1291 nos1291
	JR_EQ8 0 nos1291 motornotbusy1291
  motorwaiting1291:
	OUTPUT_TEST layer1291 nos1291 busy1291
	JR_EQ8 busy1291 0 motornotbusy1291
	SLEEP
	JR motorwaiting1291
  motornotbusy1291:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 300.0 0.0 'True' 

	DATA8 layer1293
	DATA8 nos1293
	DATA8 busy1293
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1293 nos1293
	JR_EQ8 0 nos1293 motornotbusy1293
  motorwaiting1293:
	OUTPUT_TEST layer1293 nos1293 busy1293
	JR_EQ8 busy1293 0 motornotbusy1293
	SLEEP
	JR motorwaiting1293
  motornotbusy1293:
    MULF VGV_LEFT_FORWARD 55.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1297
	MOVEF_32 4000.0 milliseconds1297
	DATA32 timer1297
	TIMER_WAIT milliseconds1297 timer1297
	TIMER_READY timer1297
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1298:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 20.0 'True'

	DATA8 layer1301
	DATA8 nos1301
	DATA8 busy1301
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1301 nos1301
	JR_EQ8 0 nos1301 motornotbusy1301
  motorwaiting1301:
	OUTPUT_TEST layer1301 nos1301 busy1301
	JR_EQ8 busy1301 0 motornotbusy1301
	SLEEP
	JR motorwaiting1301
  motornotbusy1301:
    JR endif1266
  else1266_1:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 20.0 'True'

	DATA8 layer1304
	DATA8 nos1304
	DATA8 busy1304
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1304 nos1304
	JR_EQ8 0 nos1304 motornotbusy1304
  motorwaiting1304:
	OUTPUT_TEST layer1304 nos1304 busy1304
	JR_EQ8 busy1304 0 motornotbusy1304
	SLEEP
	JR motorwaiting1304
  motornotbusy1304:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1305:
  else1266_2:
  endif1266:
    TIMER_READ timeMC9tmp
	SUB32 timeMC9tmp timeMC9 timeMC9tmp
	MOVE32_F timeMC9tmp VGV_T
    DATAF tmpf1307
    DATA8 flag1307
    DIVF VGV_T 60000.0 tmpf1307
    CP_EQF 0.0 60000.0 flag1307
    SELECTF flag1307 0.0 tmpf1307 F.0

    MATH FLOOR F.0 VGV_MINS
    MATH MOD VGV_T 60000.0 F.1
    DATAF tmpf1310
    DATA8 flag1310
    DIVF F.1 1000.0 tmpf1310
    CP_EQF 0.0 1000.0 flag1310
    SELECTF flag1310 0.0 tmpf1310 F.0

    MATH FLOOR F.0 VGV_SECS
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MINS '%g' 99 S.1
    CALL TEXT.APPEND S.1 ':' S.0
    STRINGS VALUE_FORMATTED VGV_SECS '%g' 99 S.1
    CALL TEXT.APPEND S.0 S.1 VGV_STR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_STR
    WRITE32 ENDSUB_F_PLAY_MUSIC_0:CALLSUB1318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PLAY_MUSIC_0
CALLSUB1318:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_ULTRASONIC_POWER_2:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VLV_V_1
    SUBF VLV_V_1 VLV_U_1 VLV_NOWERROR_1
    SUBF VGV_LASTERROR VLV_NOWERROR_1 VLV_DIF_1
    ADDF VGV_INTEGRAL VLV_NOWERROR_1 F.0
    DATAF tmpf1323
    DATA8 flag1323
    DIVF F.0 10.0 tmpf1323
    CP_EQF 0.0 10.0 flag1323
    SELECTF flag1323 0.0 tmpf1323 VLV_INTEGRAL_1

    SUBF VLV_NOWERROR_1 VGV_LASTERROR VLV_DERIVATIVE_1
    MULF VLV_NOWERROR_1 VGV_P_U F.0
    MULF VLV_INTEGRAL_1 VGV_D_U F.1
    ADDF F.0 F.1 VLV_UP_1
    ADDF VLV_POWER_1 VLV_UP_1 F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF VLV_POWER_1 VLV_UP_1 F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VLV_NOWERROR_1 VLV_LASTERROR_1
RETSUB_F_ULTRASONIC_POWER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_POWER_2:
SUB_F_ULTRASONIC_ZAMED_5:
    SUBF VLV_DEGREES_2 VLV_ZAMED_DEGREES_2 VLV_NORMAL_DEGREES_2
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1336:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VLV_NORMAL_DEGREES_2 endwhile1336
  whilebody1336:
    MOVEF_F VLV_BASE_POWER_2 VLV_POWER_1
    MOVEF_F VLV_U_2 VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB1338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB1338:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VLV_NORMAL_DEGREES_2 whilebody1336
  endwhile1336:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_2
  while1342:
    JR_GTEQF VLV_C_2 VLV_ZAMED_DEGREES_2 endwhile1342
  whilebody1342:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.1
    DATAF tmpf1344
    DATA8 flag1344
    DIVF F.1 VLV_ZAMED_DEGREES_2 tmpf1344
    CP_EQF 0.0 VLV_ZAMED_DEGREES_2 flag1344
    SELECTF flag1344 0.0 tmpf1344 F.0

    MULF F.0 VLV_BASE_POWER_2 VLV_MINUS_2
    SUBF VLV_BASE_POWER_2 VLV_MINUS_2 VLV_POWER_2
    JR_GTEQF VLV_POWER_2 VLV_MIN_POWER_2 else1347_1
    MOVEF_F VLV_MIN_POWER_2 VLV_POWER_2
  else1347_1:
  endif1347:
    MOVEF_F VLV_POWER_2 VLV_POWER_1
    MOVEF_F VLV_U_2 VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB1348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB1348:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_2
    JR_LTF VLV_C_2 VLV_ZAMED_DEGREES_2 whilebody1342
  endwhile1342:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1350 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1350:
RETSUB_F_ULTRASONIC_ZAMED_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_ZAMED_5:
SUB_F_RESET_0:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_MOVE_FORWARD_ACCELERATION_5:
    SUBF VLV_DEG_4 VLV_ACCELERATION_4 F.0
    SUBF F.0 VLV_ZAME_4 VLV_NORMAL_DEGREES_4
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1355:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_4
  while1357:
    JR_GTEQF VLV_C_4 VLV_ACCELERATION_4 endwhile1357
  whilebody1357:
    DATAF tmpf1358
    DATA8 flag1358
    DIVF VLV_C_4 VLV_ACCELERATION_4 tmpf1358
    CP_EQF 0.0 VLV_ACCELERATION_4 flag1358
    SELECTF flag1358 0.0 tmpf1358 VLV_P_4

    JR_LTEQF VLV_P_4 1.0 else1359_1
    MOVEF_F 1.0 VLV_P_4
  else1359_1:
  endif1359:
    MULF VLV_P_4 VLV_BASE_POWER_4 VLV_POWER_4
    JR_GTEQF VLV_POWER_4 VLV_MIN_POWER_4 else1361_1
    MOVEF_F VLV_MIN_POWER_4 VLV_POWER_4
  else1361_1:
  endif1361:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_POWER_4 '%g' 99 S.2
    CALL TEXT.APPEND S.2 ' ' S.1
    STRINGS VALUE_FORMATTED VLV_C_4 '%g' 99 S.2
    CALL TEXT.APPEND S.1 S.2 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_P_4 VLV_DELTA_4
    SUBF VLV_POWER_4 VLV_DELTA_4 VLV_LEFT_POWER_4
    ADDF VLV_POWER_4 VLV_DELTA_4 VLV_RIGHT_POWER_4
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_4 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_4 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_4
    JR_LTF VLV_C_4 VLV_ACCELERATION_4 whilebody1357
  endwhile1357:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1382:
    MOVEF_F 0.0 VLV_C_4
  while1383:
    JR_GTEQF VLV_C_4 VLV_NORMAL_DEGREES_4 endwhile1383
  whilebody1383:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 1.0 VLV_DELTA_4
    SUBF VLV_BASE_POWER_4 VLV_DELTA_4 VLV_LEFT_POWER_4
    ADDF VLV_BASE_POWER_4 VLV_DELTA_4 VLV_RIGHT_POWER_4
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_4 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_4 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_4
    JR_LTF VLV_C_4 VLV_NORMAL_DEGREES_4 whilebody1383
  endwhile1383:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1396:
    MOVEF_F 0.0 VLV_C_4
  while1397:
    JR_GTEQF VLV_C_4 VLV_ZAME_4 endwhile1397
  whilebody1397:
    DATAF tmpf1398
    DATA8 flag1398
    DIVF VLV_C_4 VLV_ZAME_4 tmpf1398
    CP_EQF 0.0 VLV_ZAME_4 flag1398
    SELECTF flag1398 0.0 tmpf1398 VLV_P_4

    SUBF 1.0 VLV_P_4 F.0
    MULF VLV_BASE_POWER_4 F.0 VLV_POWER_4
    JR_GTEQF VLV_POWER_4 VLV_MIN_POWER_4 else1401_1
    MOVEF_F VLV_MIN_POWER_4 VLV_POWER_4
  else1401_1:
  endif1401:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    SUBF 1.0 VLV_P_4 F.1
    MULF F.0 F.1 VLV_DELTA_4
    SUBF VLV_POWER_4 VLV_DELTA_4 VLV_LEFT_POWER_4
    ADDF VLV_POWER_4 VLV_DELTA_4 VLV_RIGHT_POWER_4
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_4 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_4 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_4
    JR_LTF VLV_C_4 VLV_ZAME_4 whilebody1397
  endwhile1397:
RETSUB_F_MOVE_FORWARD_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:
SUB_F_MOVE_BACKWARD_ACCELERATION_5:
    SUBF VLV_DEG_5 VLV_ACCELERATION_5 F.0
    SUBF F.0 VLV_ZAME_5 VLV_NORMAL_DEGREES_5
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1417:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_5
  while1420:
    JR_GTEQF VLV_C_5 VLV_ACCELERATION_5 endwhile1420
  whilebody1420:
    DATAF tmpf1421
    DATA8 flag1421
    DIVF VLV_C_5 VLV_ACCELERATION_5 tmpf1421
    CP_EQF 0.0 VLV_ACCELERATION_5 flag1421
    SELECTF flag1421 0.0 tmpf1421 VLV_P_5

    JR_LTEQF VLV_P_5 1.0 else1422_1
    MOVEF_F 1.0 VLV_P_5
  else1422_1:
  endif1422:
    MULF VLV_P_5 VLV_BASE_POWER_5 VLV_POWER_5
    JR_GTEQF VLV_POWER_5 VLV_MIN_POWER_5 else1424_1
    MOVEF_F VLV_MIN_POWER_5 VLV_POWER_5
  else1424_1:
  endif1424:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_POWER_5 '%g' 99 S.2
    CALL TEXT.APPEND S.2 ' ' S.1
    STRINGS VALUE_FORMATTED VLV_C_5 '%g' 99 S.2
    CALL TEXT.APPEND S.1 S.2 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.4
    MULF F.4 VGV_RIGHT_FORWARD F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_P_5 F.0
    MULF F.0 -1.0 VLV_DELTA_5
    SUBF VLV_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_5
    JR_LTF VLV_C_5 VLV_ACCELERATION_5 whilebody1420
  endwhile1420:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1449:
    MOVEF_F 0.0 VLV_C_5
  while1450:
    JR_GTEQF VLV_C_5 VLV_NORMAL_DEGREES_5 endwhile1450
  whilebody1450:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 -1.0 VLV_DELTA_5
    SUBF VLV_BASE_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_BASE_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_5
    JR_LTF VLV_C_5 VLV_NORMAL_DEGREES_5 whilebody1450
  endwhile1450:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1466:
    MOVEF_F 0.0 VLV_C_5
  while1467:
    JR_GTEQF VLV_C_5 VLV_ZAME_5 endwhile1467
  whilebody1467:
    DATAF tmpf1468
    DATA8 flag1468
    DIVF VLV_C_5 VLV_ZAME_5 tmpf1468
    CP_EQF 0.0 VLV_ZAME_5 flag1468
    SELECTF flag1468 0.0 tmpf1468 VLV_P_5

    SUBF 1.0 VLV_P_5 F.0
    MULF VLV_BASE_POWER_5 F.0 VLV_POWER_5
    JR_GTEQF VLV_POWER_5 VLV_MIN_POWER_5 else1471_1
    MOVEF_F VLV_MIN_POWER_5 VLV_POWER_5
  else1471_1:
  endif1471:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.4
    MULF F.4 VGV_RIGHT_FORWARD F.3
    SUBF F.2 F.3 F.1
    SUBF 1.0 VLV_P_5 F.2
    MULF F.1 F.2 F.0
    MULF F.0 -1.0 VLV_DELTA_5
    SUBF VLV_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_5
    JR_LTF VLV_C_5 VLV_ZAME_5 whilebody1467
  endwhile1467:
RETSUB_F_MOVE_BACKWARD_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall SPEAKER.ISBUSY     // S
{
	OUT_S result 8
	
	DATA8 busy
	SOUND_TEST busy
	JR_EQ8 busy 0 notbusy
	STRINGS DUPLICATE 'True' result
	RETURN
notbusy:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
