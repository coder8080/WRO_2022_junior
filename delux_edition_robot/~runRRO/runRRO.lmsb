DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_9
DATAF VLV_MIN_POWER_9
DATAF VLV_DEG_9
DATAF VLV_COEF_9
DATAF VLV_BASE_POWER_13
DATAF VLV_MIN_POWER_13
DATAF VLV_DEG_13
DATAF VLV_COEF_13
DATAS VLV_MOTOR_12 252
DATAF VLV_FORWARD_12
DATAF VLV_DEG_12
DATAF VLV_MAX_POWER_12
DATAS VLV_ACCELERATION_12 252
DATAS VLV_ZAME_12 252
DATAS VLV_TO_STOP_12 252
DATAF VLV_TIME_6
DATAF VLV_PERCENT_14
DATAF VLV_POWER_1
DATAF VLV_A_4
DATAF VLV_DEG_11
DATAF VLV_POWER_11
DATAF VLV_POWER_10
DATAF VLV_L_3
DATAS VLV_IS_INVERTED_22 252
DATAS VLV_LONG_21 252
DATAS VLV_NEAR_21 252
DATAS VLV_SHOULD_MOVE_BACKWARD_21 252
DATAS VLV_IS_INVERTED_21 252
DATAS VLV_TO_DELAY_15 252
DATAF VLV_L_2
DATAF VLV_COEF_16
DATAF VLV_COEF_17
DATAS VLV_IS_INVERTED_18 252
DATAS VLV_IS_INVERTED_19 252
DATAF VLV_MINUS_DEG_19
DATAF VLV_MINUS_DEG_20
DATAF VGV_P
DATAF VLV_P_20
DATAF VLV_MINUS_DEG_21
DATAF VLV_P_23
DATAF VGV_LINE
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_ULTRASONIC
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERTED_MOTOR 252
DATAS VGV_MOTORS 252
DATAF VGV_LEFT_FORWARD
DATAF VGV_RIGHT_FORWARD
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_MAX
DATAF VGV_LEFT_MIN
DATAF VGV_LAST_ERR
DATAF VGV_LAST_MOTOR_ERR
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_WATER_STATE
DATAF VGV_FIRE_COUNT
DATAF VGV_MEN_COUNT
DATAS VGV_CHEM 252
DATAS VGV_TAKE_CHEM_IN_YELLOW 252
DATAF VGV_CUBES_COUNT
DATAS VGV_START 252
DATAF VGV_A
DATAF VGV_R
DATAS VGV_OBEJCT 252
DATAS VGV_OBJECT 252
DATAF VGV_DEG
DATAF VGV_G
DATAS VGV_TAKE_LEFT 252
DATAS VGV_TAKE_RIGHT 252
DATAF VGV_W
DATAF VGV_ULTRA
DATAS VGV_IS_FIRST_BLUE_OBJECT_CHEM 252
DATAS VGV_IS_ON_SECOND_BLUE 252
DATAS VGV_WHITE_OBJECT 252
DATAF VGV_MINUS_DEG
DATAS VGV_CH 252
DATAF VLV_ERR_2
DATAF VLV_DIFF_2
DATAF VLV_DELTA_2
DATAF VLV_LEFT_POWER_2
DATAF VLV_RIGHT_POWER_2
DATAF VLV_ERR_3
DATAF VLV_DIFF_3
DATAF VLV_DELTA_3
DATAF VLV_LEFT_POWER_3
DATAF VLV_RIGHT_POWER_3
DATAF VLV_L_4
DATAF VLV_ERR_4
DATAF VLV_DIFF_4
DATAF VLV_DELTA_4
DATAF VLV_LEFT_POWER_4
DATAF VLV_RIGHT_POWER_4
DATAF VLV_L_9
DATAF VLV_P_9
DATAF VLV_POWER_9
DATAF VLV_R_9
DATAF VLV_DELTA_9
DATAF VLV_LEFT_POWER_9
DATAF VLV_RIGHT_POWER_9
DATAF VLV_L_10
DATAF VLV_R_10
DATAF VLV_ERR_10
DATAF VLV_DIFF_10
DATAF VLV_DELTA_10
DATAF VLV_LEFT_POWER_10
DATAF VLV_RIGHT_POWER_10
DATAF VLV_L_11
DATAF VLV_NORMAL_DEG_12
DATAF VLV_ACCELERATION_DEG_12
DATAF VLV_ZAME_DEG_12
DATAF VLV_M_12
DATAF VLV_P_12
DATAF VLV_POWER_12
DATAF VLV_L_13
DATAF VLV_P_13
DATAF VLV_R_13
DATAF VLV_DELTA_13
DATAF VLV_POWER_13
DATAF VLV_LEFT_POWER_13
DATAF VLV_RIGHT_POWER_13
DATAF VLV_MILLISECOND_15
DATAF VLV_SECONDS_15
DATAF VLV_MINUTES_15
DATAS VLV_TEXT_15 252
DATAS VLV_MOT_18 252
DATAF VLV_FORWARD_18
DATAF VLV_COEF_18
DATAF VLV_COEF_19
DATAF VLV_DEG_20
DATAS VLV_MOTOR1_22 252
DATAS VLV_MOTOR2_22 252
DATAF VLV_FORWARD1_22
DATAF VLV_FORWARD2_22
DATA32 RUNCOUNTER_F_KICK_WATER_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_9
    MOVEF_F 0.0 VLV_MIN_POWER_9
    MOVEF_F 0.0 VLV_DEG_9
    MOVEF_F 0.0 VLV_COEF_9
    MOVEF_F 0.0 VLV_BASE_POWER_13
    MOVEF_F 0.0 VLV_MIN_POWER_13
    MOVEF_F 0.0 VLV_DEG_13
    MOVEF_F 0.0 VLV_COEF_13
    STRINGS DUPLICATE '' VLV_MOTOR_12
    MOVEF_F 0.0 VLV_FORWARD_12
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE '' VLV_ACCELERATION_12
    STRINGS DUPLICATE '' VLV_ZAME_12
    STRINGS DUPLICATE '' VLV_TO_STOP_12
    MOVEF_F 0.0 VLV_TIME_6
    MOVEF_F 0.0 VLV_PERCENT_14
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_A_4
    MOVEF_F 0.0 VLV_DEG_11
    MOVEF_F 0.0 VLV_POWER_11
    MOVEF_F 0.0 VLV_POWER_10
    MOVEF_F 0.0 VLV_L_3
    STRINGS DUPLICATE '' VLV_IS_INVERTED_22
    STRINGS DUPLICATE '' VLV_LONG_21
    STRINGS DUPLICATE '' VLV_NEAR_21
    STRINGS DUPLICATE '' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_21
    STRINGS DUPLICATE '' VLV_TO_DELAY_15
    MOVEF_F 0.0 VLV_L_2
    MOVEF_F 0.0 VLV_COEF_16
    MOVEF_F 0.0 VLV_COEF_17
    STRINGS DUPLICATE '' VLV_IS_INVERTED_18
    STRINGS DUPLICATE '' VLV_IS_INVERTED_19
    MOVEF_F 0.0 VLV_MINUS_DEG_19
    MOVEF_F 0.0 VLV_MINUS_DEG_20
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VLV_P_20
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    MOVEF_F 0.0 VLV_P_23
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_START
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_R
    STRINGS DUPLICATE '' VGV_OBEJCT
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_TAKE_LEFT
    STRINGS DUPLICATE '' VGV_TAKE_RIGHT
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_ULTRA
    STRINGS DUPLICATE '' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_ON_SECOND_BLUE
    STRINGS DUPLICATE '' VGV_WHITE_OBJECT
    MOVEF_F 0.0 VGV_MINUS_DEG
    STRINGS DUPLICATE '' VGV_CH
    MOVEF_F 0.0 VLV_ERR_2
    MOVEF_F 0.0 VLV_DIFF_2
    MOVEF_F 0.0 VLV_DELTA_2
    MOVEF_F 0.0 VLV_LEFT_POWER_2
    MOVEF_F 0.0 VLV_RIGHT_POWER_2
    MOVEF_F 0.0 VLV_ERR_3
    MOVEF_F 0.0 VLV_DIFF_3
    MOVEF_F 0.0 VLV_DELTA_3
    MOVEF_F 0.0 VLV_LEFT_POWER_3
    MOVEF_F 0.0 VLV_RIGHT_POWER_3
    MOVEF_F 0.0 VLV_L_4
    MOVEF_F 0.0 VLV_ERR_4
    MOVEF_F 0.0 VLV_DIFF_4
    MOVEF_F 0.0 VLV_DELTA_4
    MOVEF_F 0.0 VLV_LEFT_POWER_4
    MOVEF_F 0.0 VLV_RIGHT_POWER_4
    MOVEF_F 0.0 VLV_L_9
    MOVEF_F 0.0 VLV_P_9
    MOVEF_F 0.0 VLV_POWER_9
    MOVEF_F 0.0 VLV_R_9
    MOVEF_F 0.0 VLV_DELTA_9
    MOVEF_F 0.0 VLV_LEFT_POWER_9
    MOVEF_F 0.0 VLV_RIGHT_POWER_9
    MOVEF_F 0.0 VLV_L_10
    MOVEF_F 0.0 VLV_R_10
    MOVEF_F 0.0 VLV_ERR_10
    MOVEF_F 0.0 VLV_DIFF_10
    MOVEF_F 0.0 VLV_DELTA_10
    MOVEF_F 0.0 VLV_LEFT_POWER_10
    MOVEF_F 0.0 VLV_RIGHT_POWER_10
    MOVEF_F 0.0 VLV_L_11
    MOVEF_F 0.0 VLV_NORMAL_DEG_12
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_12
    MOVEF_F 0.0 VLV_ZAME_DEG_12
    MOVEF_F 0.0 VLV_M_12
    MOVEF_F 0.0 VLV_P_12
    MOVEF_F 0.0 VLV_POWER_12
    MOVEF_F 0.0 VLV_L_13
    MOVEF_F 0.0 VLV_P_13
    MOVEF_F 0.0 VLV_R_13
    MOVEF_F 0.0 VLV_DELTA_13
    MOVEF_F 0.0 VLV_POWER_13
    MOVEF_F 0.0 VLV_LEFT_POWER_13
    MOVEF_F 0.0 VLV_RIGHT_POWER_13
    MOVEF_F 0.0 VLV_MILLISECOND_15
    MOVEF_F 0.0 VLV_SECONDS_15
    MOVEF_F 0.0 VLV_MINUTES_15
    STRINGS DUPLICATE '' VLV_TEXT_15
    STRINGS DUPLICATE '' VLV_MOT_18
    MOVEF_F 0.0 VLV_FORWARD_18
    MOVEF_F 0.0 VLV_COEF_18
    MOVEF_F 0.0 VLV_COEF_19
    MOVEF_F 0.0 VLV_DEG_20
    STRINGS DUPLICATE '' VLV_MOTOR1_22
    STRINGS DUPLICATE '' VLV_MOTOR2_22
    MOVEF_F 0.0 VLV_FORWARD1_22
    MOVEF_F 0.0 VLV_FORWARD2_22
    MOVE32_32 0 RUNCOUNTER_F_KICK_WATER_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_KICK_WATER_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_KICK_WATER_0 0
    CALL GETANDINC32 RUNCOUNTER_F_KICK_WATER_0 -1 RUNCOUNTER_F_KICK_WATER_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_KICK_WATER_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch975
    WRITE32 ENDSUB_F_KICK_WATER_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
  dispatch975:
    MOVEF_F 0.0 VLV_BASE_POWER_9
    MOVEF_F 0.0 VLV_MIN_POWER_9
    MOVEF_F 0.0 VLV_DEG_9
    MOVEF_F 0.0 VLV_COEF_9
    MOVEF_F 0.0 VLV_BASE_POWER_13
    MOVEF_F 0.0 VLV_MIN_POWER_13
    MOVEF_F 0.0 VLV_DEG_13
    MOVEF_F 0.0 VLV_COEF_13
    STRINGS DUPLICATE '' VLV_MOTOR_12
    MOVEF_F 0.0 VLV_FORWARD_12
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE '' VLV_ACCELERATION_12
    STRINGS DUPLICATE '' VLV_ZAME_12
    STRINGS DUPLICATE '' VLV_TO_STOP_12
    MOVEF_F 0.0 VLV_TIME_6
    MOVEF_F 0.0 VLV_PERCENT_14
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_A_4
    MOVEF_F 0.0 VLV_DEG_11
    MOVEF_F 0.0 VLV_POWER_11
    MOVEF_F 0.0 VLV_POWER_10
    MOVEF_F 0.0 VLV_L_3
    STRINGS DUPLICATE '' VLV_IS_INVERTED_22
    STRINGS DUPLICATE '' VLV_LONG_21
    STRINGS DUPLICATE '' VLV_NEAR_21
    STRINGS DUPLICATE '' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_21
    STRINGS DUPLICATE '' VLV_TO_DELAY_15
    MOVEF_F 0.0 VLV_L_2
    MOVEF_F 0.0 VLV_COEF_16
    MOVEF_F 0.0 VLV_COEF_17
    STRINGS DUPLICATE '' VLV_IS_INVERTED_18
    STRINGS DUPLICATE '' VLV_IS_INVERTED_19
    MOVEF_F 0.0 VLV_MINUS_DEG_19
    MOVEF_F 0.0 VLV_MINUS_DEG_20
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VLV_P_20
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    MOVEF_F 0.0 VLV_P_23
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_START
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_R
    STRINGS DUPLICATE '' VGV_OBEJCT
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_TAKE_LEFT
    STRINGS DUPLICATE '' VGV_TAKE_RIGHT
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_ULTRA
    STRINGS DUPLICATE '' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_ON_SECOND_BLUE
    STRINGS DUPLICATE '' VGV_WHITE_OBJECT
    MOVEF_F 0.0 VGV_MINUS_DEG
    STRINGS DUPLICATE '' VGV_CH
    MOVEF_F 1.0 VGV_LINE
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERTED_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 40.0 VGV_LEFT_MAX
    MOVEF_F 5.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 2.0 VGV_CUBES_COUNT
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_LEFT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_RIGHT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB7 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB7:
    SOUND_READY
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB10:
ENDTHREAD:
    RETURN
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else12_1
    CALL MOTOR.START VGV_WATER_MOTOR 50.0
    DATA32 milliseconds14
	MOVEF_32 500.0 milliseconds14
	DATA32 timer14
	TIMER_WAIT milliseconds14 timer14
	TIMER_READY timer14
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer16
	DATA8 nos16
	DATA8 busy16
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer16 nos16
	JR_EQ8 0 nos16 motornotbusy16
  motorwaiting16:
	OUTPUT_TEST layer16 nos16 busy16
	JR_EQ8 busy16 0 motornotbusy16
	SLEEP
	JR motorwaiting16
  motornotbusy16:
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif12
  else12_1:
    CALL MOTOR.START VGV_WATER_MOTOR -50.0
    DATA32 milliseconds18
	MOVEF_32 500.0 milliseconds18
	DATA32 timer18
	TIMER_WAIT milliseconds18 timer18
	TIMER_READY timer18
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 50.0 0.0 20.0 0.0 'True' 

	DATA8 layer20
	DATA8 nos20
	DATA8 busy20
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer20 nos20
	JR_EQ8 0 nos20 motornotbusy20
  motorwaiting20:
	OUTPUT_TEST layer20 nos20 busy20
	JR_EQ8 busy20 0 motornotbusy20
	SLEEP
	JR motorwaiting20
  motornotbusy20:
  else12_2:
  endif12:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 50.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB21 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB21:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 50.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB22 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB22:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB25 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB25:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer26
	DATA8 nos26
	DATA8 busy26
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer26 nos26
	JR_EQ8 0 nos26 motornotbusy26
  motorwaiting26:
	OUTPUT_TEST layer26 nos26 busy26
	JR_EQ8 busy26 0 motornotbusy26
	SLEEP
	JR motorwaiting26
  motornotbusy26:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 50.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB27 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB27:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 50.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB28:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB29 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB29:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer30
	DATA8 nos30
	DATA8 busy30
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer30 nos30
	JR_EQ8 0 nos30 motornotbusy30
  motorwaiting30:
	OUTPUT_TEST layer30 nos30 busy30
	JR_EQ8 busy30 0 motornotbusy30
	SLEEP
	JR motorwaiting30
  motornotbusy30:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 60.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB31 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB31:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 15.0 VLV_MIN_POWER_13
    MOVEF_F 60.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB32 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB32:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB33 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB33:
    MOVEF_F 300.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB34 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB34:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_12
    MOVEF_F 85.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB35 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB35:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB36 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB36:
    MOVEF_F 300.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB37 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB37:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 100.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB38 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB38:
    STRINGS DUPLICATE 'True' VGV_CHEM
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_TAKE_CHEM_ON_LEFT_0:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 50.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB39 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB39:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 50.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB40 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB40:
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB43 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB43:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer44
	DATA8 nos44
	DATA8 busy44
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer44 nos44
	JR_EQ8 0 nos44 motornotbusy44
  motorwaiting44:
	OUTPUT_TEST layer44 nos44 busy44
	JR_EQ8 busy44 0 motornotbusy44
	SLEEP
	JR motorwaiting44
  motornotbusy44:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 50.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB45 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB45:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 50.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB46 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB46:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB47 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB47:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer48
	DATA8 nos48
	DATA8 busy48
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer48 nos48
	JR_EQ8 0 nos48 motornotbusy48
  motorwaiting48:
	OUTPUT_TEST layer48 nos48 busy48
	JR_EQ8 busy48 0 motornotbusy48
	SLEEP
	JR motorwaiting48
  motornotbusy48:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 60.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB49 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB49:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 15.0 VLV_MIN_POWER_13
    MOVEF_F 60.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB50 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB50:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB51 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB51:
    MOVEF_F 300.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB52 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB52:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 85.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB53 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB53:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB54 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB54:
    MOVEF_F 300.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB55 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB55:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 100.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB56 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB56:
    STRINGS DUPLICATE 'True' VGV_CHEM
RETSUB_F_TAKE_CHEM_ON_LEFT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_0:
SUB_F_MAIN_0:
    STRINGS DUPLICATE 'left' VGV_START
    TIMER_READ timeMC9
    MOVEF_F 97.0 VGV_A
    MULF 80.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 85.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    WRITE32 ENDSUB_F_RESET_0:CALLSUB62 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB62:
  while63:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    JR_GTEQF F.0 1000.0 endwhile63
  whilebody63:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    JR_LTF F.0 1000.0 whilebody63
  endwhile63:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB66:
    MOVEF_F VLV_PERCENT_14 VGV_P
  while67:
    JR_GTEQF VGV_P 50.0 endwhile67
  whilebody67:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB68 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB68:
    MOVEF_F VLV_PERCENT_14 VGV_P
    JR_LTF VGV_P 50.0 whilebody67
  endwhile67:
  while69:
    JR_LTEQF VGV_P 20.0 endwhile69
  whilebody69:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB70 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB70:
    MOVEF_F VLV_PERCENT_14 VGV_P
    JR_GTF VGV_P 20.0 whilebody69
  endwhile69:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 180.0 VLV_DEG_12
    MOVEF_F 50.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'False' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB73 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB73:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 180.0 VLV_DEG_12
    MOVEF_F 50.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'False' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB74 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB74:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB75:
    DATA32 milliseconds76
	MOVEF_32 1000.0 milliseconds76
	DATA32 timer76
	TIMER_WAIT milliseconds76 timer76
	TIMER_READY timer76
    WRITE32 ENDSUB_F_STOP_0:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB77:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 70.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB78:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_12
    MOVEF_F 360.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB80 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB80:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB81:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB82:
    MOVEF_F VLV_PERCENT_14 VGV_P
  while83:
    JR_LTEQF VGV_P 23.0 endwhile83
  whilebody83:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB84 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB84:
    MOVEF_F VLV_PERCENT_14 VGV_P
    MOVEF_F VGV_A VLV_A_4
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB85 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB85:
    JR_GTF VGV_P 23.0 whilebody83
  endwhile83:
    MOVEF_F 40.0 VLV_BASE_POWER_13
    MOVEF_F 0.0 VLV_MIN_POWER_13
    MOVEF_F 35.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB86:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB87:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB88:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBEJCT
    JR_LTEQF VGV_R 150.0 else90_1
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    STRINGS DUPLICATE 'human' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif90
  else90_1:
    JR_LTEQF VGV_R 60.0 else90_2
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    DATA32 tmp93
    CALL GETANDINC32 RUNCOUNTER_F_KICK_WATER_0 1  RUNCOUNTER_F_KICK_WATER_0 tmp93
    JR_NEQ32 0 tmp93 alreadylaunched93
    OBJECT_START TF_KICK_WATER_0
  alreadylaunched93:
    JR endif90
  else90_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else90_3
    JR_LTEQF VGV_R 15.0 else90_3
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB95:
  else90_3:
  endif90:
    MOVEF_F 525.0 VGV_DEG
    CALL NE_STRING VGV_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else96_1
    MOVEF_F 40.0 VLV_BASE_POWER_9
    MOVEF_F 15.0 VLV_MIN_POWER_9
    MOVEF_F 120.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB98:
    SUBF VGV_DEG 120.0 VGV_DEG
  else96_1:
  endif96:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB100:
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else101_1
  while103:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 120.0 F.1
    JR_GTEQF F.0 F.1 endwhile103
  whilebody103:
    MOVEF_F VGV_A VLV_A_4
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB107:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 120.0 F.1
    JR_LTF F.0 F.1 whilebody103
  endwhile103:
    MOVEF_F 40.0 VLV_BASE_POWER_13
    MOVEF_F 15.0 VLV_MIN_POWER_13
    MOVEF_F 120.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB111:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB112:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB113:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 80.0 else115_1
    DATA8 layer116
	DATA8 no116
	DATA8 mode8116
	
	MOVEF_8 VGV_RIGHT_SENSOR no116
	SUB8 no116 1 no116
	DIV8 no116 4 layer116
	MATH MOD8 no116 4 no116

	MOVEF_8 2.0 mode8116
	
	INPUT_DEVICE READY_RAW layer116 no116 0 mode8116 0
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB117:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer119
	DATA8 no119
	DATA8 mode8119
	
	MOVEF_8 VGV_RIGHT_SENSOR no119
	SUB8 no119 1 no119
	DIV8 no119 4 layer119
	MATH MOD8 no119 4 no119

	MOVEF_8 1.0 mode8119
	
	INPUT_DEVICE READY_RAW layer119 no119 0 mode8119 0
    JR_LTEQF VGV_G 100.0 else120_1
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    STRINGS DUPLICATE 'human' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif120
  else120_1:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 40.0 VLV_BASE_POWER_9
    MOVEF_F 15.0 VLV_MIN_POWER_9
    MOVEF_F 50.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB123:
    MOVEF_F 40.0 VLV_BASE_POWER_13
    MOVEF_F 15.0 VLV_MIN_POWER_13
    MOVEF_F 50.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB124:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB125:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB126:
    MOVEF_F 40.0 VLV_BASE_POWER_9
    MOVEF_F 15.0 VLV_MIN_POWER_9
    MOVEF_F 100.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB127:
  else120_2:
  endif120:
    JR endif115
  else115_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else115_2
    JR_LTEQF VGV_R 20.0 else115_2
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB129:
  else115_2:
  endif115:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB130:
    JR endif101
  else101_1:
  while131:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 VGV_DEG endwhile131
  whilebody131:
    MOVEF_F VGV_A VLV_A_4
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB134:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 VGV_DEG whilebody131
  endwhile131:
  else101_2:
  endif101:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB137:
    MOVEF_F 96.0 VGV_A
  while138:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 520.0 endwhile138
  whilebody138:
    MOVEF_F VGV_A VLV_A_4
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB141:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 520.0 whilebody138
  endwhile138:
    MULF 60.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF 60.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds148
	MOVEF_32 1000.0 milliseconds148
	DATA32 timer148
	TIMER_WAIT milliseconds148 timer148
	TIMER_READY timer148
    WRITE32 ENDSUB_F_STOP_0:CALLSUB149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB149:
    STRINGS DUPLICATE 'False' VGV_TAKE_LEFT
    STRINGS DUPLICATE 'False' VGV_TAKE_RIGHT
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB150:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 80.0 else152_1
    DATA8 layer153
	DATA8 no153
	DATA8 mode8153
	
	MOVEF_8 VGV_RIGHT_SENSOR no153
	SUB8 no153 1 no153
	DIV8 no153 4 layer153
	MATH MOD8 no153 4 no153

	MOVEF_8 2.0 mode8153
	
	INPUT_DEVICE READY_RAW layer153 no153 0 mode8153 0
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB154:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer156
	DATA8 no156
	DATA8 mode8156
	
	MOVEF_8 VGV_RIGHT_SENSOR no156
	SUB8 no156 1 no156
	DIV8 no156 4 layer156
	MATH MOD8 no156 4 no156

	MOVEF_8 1.0 mode8156
	
	INPUT_DEVICE READY_RAW layer156 no156 0 mode8156 0
    JR_LTEQF VGV_G 100.0 else157_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    STRINGS DUPLICATE 'R: man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif157
  else157_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB160:
  else157_2:
  endif157:
    JR endif152
  else152_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else152_2
    DATA8 layer162
	DATA8 no162
	DATA8 mode8162
	
	MOVEF_8 VGV_RIGHT_SENSOR no162
	SUB8 no162 1 no162
	DIV8 no162 4 layer162
	MATH MOD8 no162 4 no162

	MOVEF_8 4.0 mode8162
	
	INPUT_DEVICE READY_RAW layer162 no162 0 mode8162 0
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB163:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA8 layer168
	DATA8 no168
	DATA8 mode8168
	
	MOVEF_8 VGV_RIGHT_SENSOR no168
	SUB8 no168 1 no168
	DIV8 no168 4 layer168
	MATH MOD8 no168 4 no168

	MOVEF_8 1.0 mode8168
	
	INPUT_DEVICE READY_RAW layer168 no168 0 mode8168 0
    JR_LTEQF VGV_W 30.0 else169_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_TAKE_RIGHT
    STRINGS DUPLICATE 'True' VGV_CHEM
  else169_1:
  endif169:
  else152_2:
  endif152:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else170_1
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 70.0 else173_1
    DATA8 layer174
	DATA8 no174
	DATA8 mode8174
	
	MOVEF_8 VGV_LEFT_SENSOR no174
	SUB8 no174 1 no174
	DIV8 no174 4 layer174
	MATH MOD8 no174 4 no174

	MOVEF_8 2.0 mode8174
	
	INPUT_DEVICE READY_RAW layer174 no174 0 mode8174 0
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB175:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer177
	DATA8 no177
	DATA8 mode8177
	
	MOVEF_8 VGV_LEFT_SENSOR no177
	SUB8 no177 1 no177
	DIV8 no177 4 layer177
	MATH MOD8 no177 4 no177

	MOVEF_8 1.0 mode8177
	
	INPUT_DEVICE READY_RAW layer177 no177 0 mode8177 0
    JR_LTEQF VGV_G 100.0 else178_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    STRINGS DUPLICATE 'L: man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif178
  else178_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB181:
  else178_2:
  endif178:
    JR endif173
  else173_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else173_2
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 40.0 VLV_DEG_12
    MOVEF_F 20.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'False' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB184:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB185:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    MULF 80.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    DATA32 milliseconds189
	MOVEF_32 1000.0 milliseconds189
	DATA32 timer189
	TIMER_WAIT milliseconds189 timer189
	TIMER_READY timer189
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    JR_GTEQF VGV_ULTRA 75.0 else191_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_TAKE_LEFT
  else191_1:
  endif191:
  else173_2:
  endif173:
  else170_1:
  endif170:
    CALL EQ_STRING VGV_TAKE_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else192_1
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 60.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB194:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 60.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB195:
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 90.0 VLV_DEG_12
    MOVEF_F 20.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB198:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer199
	DATA8 nos199
	DATA8 busy199
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer199 nos199
	JR_EQ8 0 nos199 motornotbusy199
  motorwaiting199:
	OUTPUT_TEST layer199 nos199 busy199
	JR_EQ8 busy199 0 motornotbusy199
	SLEEP
	JR motorwaiting199
  motornotbusy199:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 40.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB200:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 40.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB201:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB202:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer203
	DATA8 nos203
	DATA8 busy203
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer203 nos203
	JR_EQ8 0 nos203 motornotbusy203
  motorwaiting203:
	OUTPUT_TEST layer203 nos203 busy203
	JR_EQ8 busy203 0 motornotbusy203
	SLEEP
	JR motorwaiting203
  motornotbusy203:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 40.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB204:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 40.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB205:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB206:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB207:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 90.0 VLV_DEG_12
    MOVEF_F 20.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'False' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB208:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB209:
    DATA32 milliseconds210
	MOVEF_32 1000.0 milliseconds210
	DATA32 timer210
	TIMER_WAIT milliseconds210 timer210
	TIMER_READY timer210
    WRITE32 ENDSUB_F_STOP_0:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB211:
    JR endif192
  else192_1:
    CALL EQ_STRING VGV_TAKE_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else192_2
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 60.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB213:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 60.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB214:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 90.0 VLV_DEG_12
    MOVEF_F 20.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB217:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer218
	DATA8 nos218
	DATA8 busy218
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer218 nos218
	JR_EQ8 0 nos218 motornotbusy218
  motorwaiting218:
	OUTPUT_TEST layer218 nos218 busy218
	JR_EQ8 busy218 0 motornotbusy218
	SLEEP
	JR motorwaiting218
  motornotbusy218:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 40.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB219:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 40.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB220:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB221:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer222
	DATA8 nos222
	DATA8 busy222
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer222 nos222
	JR_EQ8 0 nos222 motornotbusy222
  motorwaiting222:
	OUTPUT_TEST layer222 nos222 busy222
	JR_EQ8 busy222 0 motornotbusy222
	SLEEP
	JR motorwaiting222
  motornotbusy222:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 40.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB223:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 40.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB224:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB225:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB226:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_12
    MOVEF_F 90.0 VLV_DEG_12
    MOVEF_F 20.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'False' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB227:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB228:
    DATA32 milliseconds229
	MOVEF_32 1000.0 milliseconds229
	DATA32 timer229
	TIMER_WAIT milliseconds229 timer229
	TIMER_READY timer229
    WRITE32 ENDSUB_F_STOP_0:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB230:
  else192_2:
  endif192:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 100.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB231:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 360.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'False' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB234:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB235:
    MOVEF_F 1000.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB236:
    MOVEF_F 40.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 120.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB237:
    MOVEF_F 185.0 VLV_DEG_11
    MOVEF_F 40.0 VLV_POWER_11
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB238:
    MOVEF_F 40.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 120.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB239:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB240 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB240:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB241:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 160.0 else243_1
    JR endif243
  else243_1:
    JR_LTEQF VGV_R 80.0 else243_2
    DATA8 layer244
	DATA8 no244
	DATA8 mode8244
	
	MOVEF_8 VGV_RIGHT_SENSOR no244
	SUB8 no244 1 no244
	DIV8 no244 4 layer244
	MATH MOD8 no244 4 no244

	MOVEF_8 2.0 mode8244
	
	INPUT_DEVICE READY_RAW layer244 no244 0 mode8244 0
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB245:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer247
	DATA8 no247
	DATA8 mode8247
	
	MOVEF_8 VGV_RIGHT_SENSOR no247
	SUB8 no247 1 no247
	DIV8 no247 4 layer247
	MATH MOD8 no247 4 no247

	MOVEF_8 1.0 mode8247
	
	INPUT_DEVICE READY_RAW layer247 no247 0 mode8247 0
    JR_LTEQF VGV_G 80.0 else248_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif248
  else248_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB251:
  else248_2:
  endif248:
    JR endif243
  else243_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else243_3
    DATA8 layer253
	DATA8 no253
	DATA8 mode8253
	
	MOVEF_8 VGV_RIGHT_SENSOR no253
	SUB8 no253 1 no253
	DIV8 no253 4 layer253
	MATH MOD8 no253 4 no253

	MOVEF_8 4.0 mode8253
	
	INPUT_DEVICE READY_RAW layer253 no253 0 mode8253 0
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB254:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    DATA8 layer256
	DATA8 no256
	DATA8 mode8256
	
	MOVEF_8 VGV_RIGHT_SENSOR no256
	SUB8 no256 1 no256
	DIV8 no256 4 layer256
	MATH MOD8 no256 4 no256

	MOVEF_8 1.0 mode8256
	
	INPUT_DEVICE READY_RAW layer256 no256 0 mode8256 0
    JR_LTEQF VGV_W 45.0 else257_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_TAKE_CHEM_IN_YELLOW
  else257_1:
  endif257:
  else243_3:
  endif243:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_12
    MOVEF_F 255.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB258:
    MOVEF_F 500.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB259:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 260.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB260:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB261:
    MOVEF_F 500.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB262:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else263_1
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 80.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB265:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB266:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB267:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB268:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 50.0 else270_1
    DATA8 layer271
	DATA8 no271
	DATA8 mode8271
	
	MOVEF_8 VGV_LEFT_SENSOR no271
	SUB8 no271 1 no271
	DIV8 no271 4 layer271
	MATH MOD8 no271 4 no271

	MOVEF_8 2.0 mode8271
	
	INPUT_DEVICE READY_RAW layer271 no271 0 mode8271 0
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB272:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer274
	DATA8 no274
	DATA8 mode8274
	
	MOVEF_8 VGV_LEFT_SENSOR no274
	SUB8 no274 1 no274
	DIV8 no274 4 layer274
	MATH MOD8 no274 4 no274

	MOVEF_8 1.0 mode8274
	
	INPUT_DEVICE READY_RAW layer274 no274 0 mode8274 0
    JR_LTEQF VGV_G 70.0 else275_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif275
  else275_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 50.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB278:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 50.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB279:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB280:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB281:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 100.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB282:
  else275_2:
  endif275:
    JR endif270
  else270_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else270_2
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 70.0 else285_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB286:
  else285_1:
  endif285:
  else270_2:
  endif270:
    JR endif263
  else263_1:
    MOVEF_F 165.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB287:
  else263_2:
  endif263:
    MOVEF_F 100.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB288:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB289:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    DATA8 flag291
	CP_GTF F.0 95.0 flag291
	SELECTF flag291 F.0 95.0 VGV_A
  while292:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 300.0 endwhile292
  whilebody292:
    MOVEF_F VGV_A VLV_A_4
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB295:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 300.0 whilebody292
  endwhile292:
    MULF 40.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF 40.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds302
	MOVEF_32 1000.0 milliseconds302
	DATA32 timer302
	TIMER_WAIT milliseconds302 timer302
	TIMER_READY timer302
    WRITE32 ENDSUB_F_STOP_0:CALLSUB303 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB303:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 160.0 else305_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif305
  else305_1:
    JR_LTEQF VGV_R 80.0 else305_2
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'fire' VGV_OBEJCT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB308:
    JR endif305
  else305_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else305_3
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB310:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 70.0 else312_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 80.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB313:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 80.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB314:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB315:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer316
	DATA8 nos316
	DATA8 busy316
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer316 nos316
	JR_EQ8 0 nos316 motornotbusy316
  motorwaiting316:
	OUTPUT_TEST layer316 nos316 busy316
	JR_EQ8 busy316 0 motornotbusy316
	SLEEP
	JR motorwaiting316
  motornotbusy316:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_12
    MOVEF_F 160.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB317:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer318
	DATA8 nos318
	DATA8 busy318
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer318 nos318
	JR_EQ8 0 nos318 motornotbusy318
  motorwaiting318:
	OUTPUT_TEST layer318 nos318 busy318
	JR_EQ8 busy318 0 motornotbusy318
	SLEEP
	JR motorwaiting318
  motornotbusy318:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 160.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB320 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB320:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB321:
    MOVEF_F 1000.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB322:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB323:
  else312_1:
  endif312:
  else305_3:
  endif305:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 240.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB325:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 105.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB326:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB327:
    MOVEF_F 1200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB328:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB329:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 120.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB330 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB330:
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else331_1
    MOVEF_F 175.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB333:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 15.0 VLV_MIN_POWER_13
    MOVEF_F 120.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB334:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB335:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB336:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 80.0 else338_1
    DATA8 layer339
	DATA8 no339
	DATA8 mode8339
	
	MOVEF_8 VGV_LEFT_SENSOR no339
	SUB8 no339 1 no339
	DIV8 no339 4 layer339
	MATH MOD8 no339 4 no339

	MOVEF_8 2.0 mode8339
	
	INPUT_DEVICE READY_RAW layer339 no339 0 mode8339 0
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB340:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer342
	DATA8 no342
	DATA8 mode8342
	
	MOVEF_8 VGV_LEFT_SENSOR no342
	SUB8 no342 1 no342
	DIV8 no342 4 layer342
	MATH MOD8 no342 4 no342

	MOVEF_8 1.0 mode8342
	
	INPUT_DEVICE READY_RAW layer342 no342 0 mode8342 0
    JR_LTEQF VGV_G 80.0 else343_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif343
  else343_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 50.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB346:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 50.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB347:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB348:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB349:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 100.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB350 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB350:
  else343_2:
  endif343:
    JR endif338
  else338_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else338_2
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB352:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 90.0 else357_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 50.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB358:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 50.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB359:
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB362:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer363
	DATA8 nos363
	DATA8 busy363
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer363 nos363
	JR_EQ8 0 nos363 motornotbusy363
  motorwaiting363:
	OUTPUT_TEST layer363 nos363 busy363
	JR_EQ8 busy363 0 motornotbusy363
	SLEEP
	JR motorwaiting363
  motornotbusy363:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 50.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB364:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 50.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB365:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB366:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer367
	DATA8 nos367
	DATA8 busy367
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer367 nos367
	JR_EQ8 0 nos367 motornotbusy367
  motorwaiting367:
	OUTPUT_TEST layer367 nos367 busy367
	JR_EQ8 busy367 0 motornotbusy367
	SLEEP
	JR motorwaiting367
  motornotbusy367:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 55.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB368:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 15.0 VLV_MIN_POWER_13
    MOVEF_F 55.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB369:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB370:
    MOVEF_F 300.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB371:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 105.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB372:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB373:
    MOVEF_F 300.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB374:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 110.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB375:
  else357_1:
  endif357:
  else338_2:
  endif338:
    CALL EQ_STRING VGV_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or377
    CALL EQ_STRING VGV_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else376_1
  or377:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 80.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB380 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB380:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 70.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB381:
    JR endif376
  else376_1:
    MOVEF_F 80.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB382:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 70.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB383:
  else376_2:
  endif376:
    JR endif331
  else331_1:
    MOVEF_F 450.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB384:
  else331_2:
  endif331:
    STRINGS DUPLICATE 'False' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VGV_IS_ON_SECOND_BLUE
    WRITE32 ENDSUB_F_STOP_0:CALLSUB385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB385:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB386:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 60.0 else388_1
    DATA8 layer389
	DATA8 no389
	DATA8 mode8389
	
	MOVEF_8 VGV_LEFT_SENSOR no389
	SUB8 no389 1 no389
	DIV8 no389 4 layer389
	MATH MOD8 no389 4 no389

	MOVEF_8 2.0 mode8389
	
	INPUT_DEVICE READY_RAW layer389 no389 0 mode8389 0
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB390:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer392
	DATA8 no392
	DATA8 mode8392
	
	MOVEF_8 VGV_LEFT_SENSOR no392
	SUB8 no392 1 no392
	DIV8 no392 4 layer392
	MATH MOD8 no392 4 no392

	MOVEF_8 1.0 mode8392
	
	INPUT_DEVICE READY_RAW layer392 no392 0 mode8392 0
    JR_LTEQF VGV_G 100.0 else393_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif393
  else393_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB396:
  else393_2:
  endif393:
    JR endif388
  else388_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else388_2
    MOVEF_F 500.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB398:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 80.0 else403_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 145.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB404:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 145.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB405:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB406:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB407:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 360.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB409:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer410
	DATA8 nos410
	DATA8 busy410
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer410 nos410
	JR_EQ8 0 nos410 motornotbusy410
  motorwaiting410:
	OUTPUT_TEST layer410 nos410 busy410
	JR_EQ8 busy410 0 motornotbusy410
	SLEEP
	JR motorwaiting410
  motornotbusy410:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB411:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 35.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB412:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 35.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB413:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB414:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer415
	DATA8 nos415
	DATA8 busy415
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer415 nos415
	JR_EQ8 0 nos415 motornotbusy415
  motorwaiting415:
	OUTPUT_TEST layer415 nos415 busy415
	JR_EQ8 busy415 0 motornotbusy415
	SLEEP
	JR motorwaiting415
  motornotbusy415:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB416:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 40.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB417:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 40.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB418:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB419:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB420:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 360.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB421:
  else403_1:
  endif403:
  else388_2:
  endif388:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else422_1
    STRINGS DUPLICATE 'True' VGV_IS_ON_SECOND_BLUE
    MOVEF_F 40.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 100.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB424:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB425:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_A
  while427:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 310.0 endwhile427
  whilebody427:
    MOVEF_F VGV_A VLV_A_4
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB430:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 310.0 whilebody427
  endwhile427:
    MOVEF_F 40.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB433:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB434:
  else422_1:
  endif422:
    STRINGS DUPLICATE 'none' VGV_WHITE_OBJECT
    JR_GTEQF VGV_MEN_COUNT 2.0 else435_1
    STRINGS DUPLICATE 'man' VGV_WHITE_OBJECT
    JR endif435
  else435_1:
    JR_GTEQF VGV_FIRE_COUNT 2.0 else435_2
    STRINGS DUPLICATE 'fire' VGV_WHITE_OBJECT
    JR endif435
  else435_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else435_3
    STRINGS DUPLICATE 'chem' VGV_WHITE_OBJECT
  else435_3:
  endif435:
    CALL EQ_STRING VGV_WHITE_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else437_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
  else437_1:
  endif437:
    CALL EQ_STRING VGV_WHITE_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or441
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or441
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else440_1
  or441:
    CALL EQ_STRING VGV_IS_ON_SECOND_BLUE 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else445_1
    DATA8 layer447
	DATA8 no447
	DATA8 mode8447
	
	MOVEF_8 VGV_RIGHT_SENSOR no447
	SUB8 no447 1 no447
	DIV8 no447 4 layer447
	MATH MOD8 no447 4 no447

	MOVEF_8 0.0 mode8447
	
	INPUT_DEVICE READY_RAW layer447 no447 0 mode8447 0
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 30.0 VLV_MIN_POWER_9
    MOVEF_F 50.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB448:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 30.0 VLV_MIN_POWER_13
    MOVEF_F 40.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB449:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 360.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB452:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB453:
    MOVEF_F 700.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB454:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB455:
    JR endif445
  else445_1:
    CALL EQ_STRING VGV_IS_FIRST_BLUE_OBJECT_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else456_1
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 100.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB458 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB458:
    MOVEF_F 215.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB459:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB460 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB460:
    JR endif456
  else456_1:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 75.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB461:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 75.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB462:
  else456_2:
  endif456:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB463:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 360.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB465:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB466:
    MOVEF_F 500.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB467:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB468 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB468:
  else445_2:
  endif445:
    MOVEF_F 100.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB469:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 100.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB470:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB471:
    DATA8 layer472
	DATA8 no472
	DATA8 mode8472
	
	MOVEF_8 VGV_LINE no472
	SUB8 no472 1 no472
	DIV8 no472 4 layer472
	MATH MOD8 no472 4 no472

	MOVEF_8 2.0 mode8472
	
	INPUT_DEVICE READY_RAW layer472 no472 0 mode8472 0
  while473:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 130.0 endwhile473
  whilebody473:
    MOVEF_F 30.0 VLV_POWER_10
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB476:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 130.0 whilebody473
  endwhile473:
  while479:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_EQF F.0 6.0 endwhile479
  whilebody479:
    MOVEF_F 30.0 VLV_POWER_10
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB481:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_NEQF F.0 6.0 whilebody479
  endwhile479:
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else483_1
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else483_1
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB486:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB487:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB488:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 35.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB489:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 35.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB490:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB491:
    JR endif483
  else483_1:
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else483_2
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB493:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB494:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB495:
    JR endif483
  else483_2:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else483_3
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 170.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB497:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB498:
  else483_3:
  endif483:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else499_1
    DATA8 layer501
	DATA8 no501
	DATA8 mode8501
	
	MOVEF_8 VGV_LINE no501
	SUB8 no501 1 no501
	DIV8 no501 4 layer501
	MATH MOD8 no501 4 no501

	MOVEF_8 2.0 mode8501
	
	INPUT_DEVICE READY_RAW layer501 no501 0 mode8501 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 360.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB502:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB503:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB504:
  while505:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_EQF F.0 4.0 endwhile505
  whilebody505:
    MOVEF_F 30.0 VLV_POWER_10
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB507:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_NEQF F.0 4.0 whilebody505
  endwhile505:
    MOVEF_F 250.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB509:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB510:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB511:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 360.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB513:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer514
	DATA8 nos514
	DATA8 busy514
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer514 nos514
	JR_EQ8 0 nos514 motornotbusy514
  motorwaiting514:
	OUTPUT_TEST layer514 nos514 busy514
	JR_EQ8 busy514 0 motornotbusy514
	SLEEP
	JR motorwaiting514
  motornotbusy514:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 65.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB515:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 65.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB516:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB517:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer518
	DATA8 nos518
	DATA8 busy518
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer518 nos518
	JR_EQ8 0 nos518 motornotbusy518
  motorwaiting518:
	OUTPUT_TEST layer518 nos518 busy518
	JR_EQ8 busy518 0 motornotbusy518
	SLEEP
	JR motorwaiting518
  motornotbusy518:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 40.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB519:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 40.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB520:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB521:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB522:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 177.0 'True'

	DATA8 layer526
	DATA8 nos526
	DATA8 busy526
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer526 nos526
	JR_EQ8 0 nos526 motornotbusy526
  motorwaiting526:
	OUTPUT_TEST layer526 nos526 busy526
	JR_EQ8 busy526 0 motornotbusy526
	SLEEP
	JR motorwaiting526
  motornotbusy526:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB527:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 100.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB528:
    MOVEF_F 100.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB529:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB530:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB531:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 210.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB532:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB533:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_12
    MOVEF_F 210.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB534:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB535:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 100.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB536:
    MOVEF_F 100.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB537:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB538:
  else499_1:
  endif499:
    CALL EQ_STRING VGV_WHITE_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else539_1
    DATA8 layer541
	DATA8 no541
	DATA8 mode8541
	
	MOVEF_8 VGV_LINE no541
	SUB8 no541 1 no541
	DIV8 no541 4 layer541
	MATH MOD8 no541 4 no541

	MOVEF_8 0.0 mode8541
	
	INPUT_DEVICE READY_RAW layer541 no541 0 mode8541 0
    MOVEF_F 100.0 VGV_MINUS_DEG
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else542_1
    ADDF VGV_MINUS_DEG 200.0 VGV_MINUS_DEG
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 100.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB545:
  else542_1:
  endif542:
    SUBF 420.0 VGV_MINUS_DEG VLV_DEG_11
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB547:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB548:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB549:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB550:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB551 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB551:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB552 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB552:
    STRINGS DUPLICATE 'False' VGV_CH
    DATA8 layer553
	DATA8 no553
	DATA8 mode8553
	
	MOVEF_8 VGV_RIGHT_SENSOR no553
	SUB8 no553 1 no553
	DIV8 no553 4 layer553
	MATH MOD8 no553 4 no553

	MOVEF_8 4.0 mode8553
	
	INPUT_DEVICE READY_RAW layer553 no553 0 mode8553 0
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB554:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    JR_LTEQF VGV_W 40.0 else556_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif556
  else556_1:
    DATA8 layer557
	DATA8 no557
	DATA8 mode8557
	
	MOVEF_8 VGV_RIGHT_SENSOR no557
	SUB8 no557 1 no557
	DIV8 no557 4 layer557
	MATH MOD8 no557 4 no557

	MOVEF_8 0.0 mode8557
	
	INPUT_DEVICE READY_RAW layer557 no557 0 mode8557 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 25.0 VLV_DEG_12
    MOVEF_F 20.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'False' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB559:
    MOVEF_F 500.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB560:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 F.0
    JR_NEQF F.0 12.0 else561_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif561
  else561_1:
    DATA8 layer563
	DATA8 no563
	DATA8 mode8563
	
	MOVEF_8 VGV_RIGHT_SENSOR no563
	SUB8 no563 1 no563
	DIV8 no563 4 layer563
	MATH MOD8 no563 4 no563

	MOVEF_8 4.0 mode8563
	
	INPUT_DEVICE READY_RAW layer563 no563 0 mode8563 0
    MOVEF_F 300.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB564:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    JR_LTEQF VGV_W 40.0 else566_1
    STRINGS DUPLICATE 'True' VGV_CH
  else566_1:
  endif566:
  else561_2:
  endif561:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 25.0 VLV_DEG_12
    MOVEF_F 20.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'False' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB567 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB567:
  else556_2:
  endif556:
    CALL EQ_STRING VGV_CH 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else568_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB570:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 80.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB571:
    MOVEF_F 30.0 VLV_DEG_11
    MOVEF_F -30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB572:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 80.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB573:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB574:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB575:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 20.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB576:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer577
	DATA8 nos577
	DATA8 busy577
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer577 nos577
	JR_EQ8 0 nos577 motornotbusy577
  motorwaiting577:
	OUTPUT_TEST layer577 nos577 busy577
	JR_EQ8 busy577 0 motornotbusy577
	SLEEP
	JR motorwaiting577
  motornotbusy577:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 35.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB578:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 35.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB579:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB580:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer581
	DATA8 nos581
	DATA8 busy581
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer581 nos581
	JR_EQ8 0 nos581 motornotbusy581
  motorwaiting581:
	OUTPUT_TEST layer581 nos581 busy581
	JR_EQ8 busy581 0 motornotbusy581
	SLEEP
	JR motorwaiting581
  motornotbusy581:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB582:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 35.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB583:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 35.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB584:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB585:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB586:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 90.0 VLV_DEG_12
    MOVEF_F 20.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB588:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB589 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB589:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB590:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_12
    MOVEF_F 490.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB591:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB592:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 120.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB593:
    JR endif568
  else568_1:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 230.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB595:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer596
	DATA8 nos596
	DATA8 busy596
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer596 nos596
	JR_EQ8 0 nos596 motornotbusy596
  motorwaiting596:
	OUTPUT_TEST layer596 nos596 busy596
	JR_EQ8 busy596 0 motornotbusy596
	SLEEP
	JR motorwaiting596
  motornotbusy596:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB597:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 60.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB598:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 60.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB599:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB600:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 70.0 VLV_DEG_12
    MOVEF_F 25.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'False' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB601:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer602
	DATA8 nos602
	DATA8 busy602
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer602 nos602
	JR_EQ8 0 nos602 motornotbusy602
  motorwaiting602:
	OUTPUT_TEST layer602 nos602 busy602
	JR_EQ8 busy602 0 motornotbusy602
	SLEEP
	JR motorwaiting602
  motornotbusy602:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_12
    MOVEF_F 230.0 VLV_DEG_12
    MOVEF_F 20.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB604:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_12
    MOVEF_F 80.0 VLV_DEG_12
    MOVEF_F 20.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB605:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 130.0 VLV_DEG_12
    MOVEF_F 20.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB606:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 170.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB607:
  else568_2:
  endif568:
    JR endif539
  else539_1:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else539_2
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 55.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB609:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 55.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB610:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB611 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB611:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_12
    MOVEF_F 360.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB612:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 140.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB613:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB614:
  else539_2:
  endif539:
    MOVEF_F 200.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB615:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB616:
  while617:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 600.0 endwhile617
  whilebody617:
    MOVEF_F 471.0 VLV_A_4
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB620:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 600.0 whilebody617
  endwhile617:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB623 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB623:
    JR endif440
  else440_1:
    CALL EQ_STRING VGV_IS_ON_SECOND_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else624_1
    MOVEF_F 40.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 100.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB626 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB626:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB627:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_A
  while629:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 310.0 endwhile629
  whilebody629:
    MOVEF_F VGV_A VLV_A_4
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB632 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB632:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 310.0 whilebody629
  endwhile629:
    MOVEF_F 40.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB635:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB636 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB636:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB637 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB637:
  else624_1:
  endif624:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 100.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB638 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB638:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB639 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB639:
    DATA8 layer640
	DATA8 no640
	DATA8 mode8640
	
	MOVEF_8 VGV_LINE no640
	SUB8 no640 1 no640
	DIV8 no640 4 layer640
	MATH MOD8 no640 4 no640

	MOVEF_8 0.0 mode8640
	
	INPUT_DEVICE READY_RAW layer640 no640 0 mode8640 0
  while641:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 330.0 endwhile641
  whilebody641:
    MOVEF_F VGV_A VLV_A_4
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB644:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 330.0 whilebody641
  endwhile641:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB647:
    MOVEF_F VLV_PERCENT_14 VGV_P
  while648:
    JR_LTEQF VGV_P 20.0 endwhile648
  whilebody648:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB649 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB649:
    MOVEF_F VLV_PERCENT_14 VGV_P
    MOVEF_F VGV_A VLV_A_4
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB650 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB650:
    JR_GTF VGV_P 20.0 whilebody648
  endwhile648:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB651 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB651:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 200.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'False' VLV_ZAME_12
    STRINGS DUPLICATE 'Fales' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB652:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB655 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB655:
    MOVEF_F VLV_PERCENT_14 VGV_P
  while656:
    JR_GTEQF VGV_P 20.0 endwhile656
  whilebody656:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB657:
    MOVEF_F VLV_PERCENT_14 VGV_P
    JR_LTF VGV_P 20.0 whilebody656
  endwhile656:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer659
	DATA8 nos659
	DATA8 busy659
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer659 nos659
	JR_EQ8 0 nos659 motornotbusy659
  motorwaiting659:
	OUTPUT_TEST layer659 nos659 busy659
	JR_EQ8 busy659 0 motornotbusy659
	SLEEP
	JR motorwaiting659
  motornotbusy659:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB660:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB661 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB661:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB662:
  while663:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 200.0 endwhile663
  whilebody663:
    MOVEF_F -100.0 VLV_L_3
    WRITE32 ENDSUB_F_LINE_SLOW_1:CALLSUB666 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_SLOW_1
CALLSUB666:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 200.0 whilebody663
  endwhile663:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB669:
    MOVEF_F VLV_PERCENT_14 VGV_P
  while670:
    JR_LTEQF VGV_P 10.0 endwhile670
  whilebody670:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB671 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB671:
    MOVEF_F VLV_PERCENT_14 VGV_P
    MOVEF_F -100.0 VLV_L_3
    WRITE32 ENDSUB_F_LINE_SLOW_1:CALLSUB672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_SLOW_1
CALLSUB672:
    JR_GTF VGV_P 10.0 whilebody670
  endwhile670:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB673 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB673:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_12
    MOVEF_F 380.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB674:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 42.0 VLV_DEG_9
    MOVEF_F 1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB675 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB675:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 42.0 VLV_DEG_13
    MOVEF_F 1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB676:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB677 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB677:
  else440_2:
  endif440:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer678
	DATA8 nos678
	DATA8 busy678
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer678 nos678
	JR_EQ8 0 nos678 motornotbusy678
  motorwaiting678:
	OUTPUT_TEST layer678 nos678 busy678
	JR_EQ8 busy678 0 motornotbusy678
	SLEEP
	JR motorwaiting678
  motornotbusy678:
    CALL EQ_STRING VGV_START 'left' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else679_1
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:CALLSUB681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FROM_PROTECTED_TO_FINISH_1
CALLSUB681:
    STRINGS DUPLICATE VGV_RED_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_BROWN_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB682:
    STRINGS DUPLICATE VGV_WHITE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_YELLOW_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB683:
    STRINGS DUPLICATE VGV_BLUE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_GREEN_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'False' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB684 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB684:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB685 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB685:
    MOVEF_F 1500.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB686:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB687 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB687:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 210.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB688:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_12
    MOVEF_F 150.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB689:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB690 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB690:
    MOVEF_F 2000.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB691 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB691:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB692 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB692:
    JR endif679
  else679_1:
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:CALLSUB693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FROM_PROTECTED_TO_FINISH_1
CALLSUB693:
  else679_2:
  endif679:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB694 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB694:
    STRINGS DUPLICATE 'True' VLV_TO_DELAY_15
    WRITE32 ENDSUB_F_SHOW_TIME_1:CALLSUB695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SHOW_TIME_1
CALLSUB695:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_MOVEMENT_INIT_1:
    MULF VLV_POWER_1 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF VLV_POWER_1 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
RETSUB_F_MOVEMENT_INIT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVEMENT_INIT_1:
SUB_F_LINE_1:
    JR_NEQF VLV_L_2 -100.0 else700_1
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf704
    DATA8 flag704
    DIVF F.1 F.2 tmpf704
    CP_EQF 0.0 F.2 flag704
    SELECTF flag704 0.0 tmpf704 F.0

    MULF F.0 150.0 VLV_L_2
  else700_1:
  endif700:
    SUBF VLV_L_2 50.0 VLV_ERR_2
    SUBF VLV_ERR_2 VGV_LAST_ERR VLV_DIFF_2
    MULF VLV_ERR_2 1.0 F.0
    MULF VLV_DIFF_2 7.0 F.1
    ADDF F.0 F.1 VLV_DELTA_2
    SUBF 80.0 VLV_DELTA_2 VLV_LEFT_POWER_2
    ADDF 80.0 VLV_DELTA_2 VLV_RIGHT_POWER_2
    MULF VLV_LEFT_POWER_2 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_2 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_2 VGV_LAST_ERR
    DATA32 milliseconds717
	MOVEF_32 5.0 milliseconds717
	DATA32 timer717
	TIMER_WAIT milliseconds717 timer717
	TIMER_READY timer717
RETSUB_F_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_1:
SUB_F_LINE_SLOW_1:
    JR_NEQF VLV_L_3 -100.0 else718_1
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf722
    DATA8 flag722
    DIVF F.1 F.2 tmpf722
    CP_EQF 0.0 F.2 flag722
    SELECTF flag722 0.0 tmpf722 F.0

    MULF F.0 150.0 VLV_L_3
  else718_1:
  endif718:
    SUBF VLV_L_3 50.0 VLV_ERR_3
    SUBF VLV_ERR_3 VGV_LAST_ERR VLV_DIFF_3
    MULF VLV_ERR_3 0.5 F.0
    MULF VLV_DIFF_3 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_3
    SUBF 30.0 VLV_DELTA_3 VLV_LEFT_POWER_3
    ADDF 30.0 VLV_DELTA_3 VLV_RIGHT_POWER_3
    MULF VLV_LEFT_POWER_3 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_3 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_3 VGV_LAST_ERR
    DATA32 milliseconds735
	MOVEF_32 5.0 milliseconds735
	DATA32 timer735
	TIMER_WAIT milliseconds735 timer735
	TIMER_READY timer735
RETSUB_F_LINE_SLOW_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_SLOW_1:
SUB_F_ULTRA_LINE_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VLV_L_4
    SUBF VLV_L_4 VLV_A_4 VLV_ERR_4
    SUBF VLV_ERR_4 VGV_LAST_ERR VLV_DIFF_4
    MULF VLV_ERR_4 0.8 F.0
    MULF VLV_DIFF_4 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_4
    SUBF 40.0 VLV_DELTA_4 VLV_LEFT_POWER_4
    ADDF 40.0 VLV_DELTA_4 VLV_RIGHT_POWER_4
    MULF VLV_LEFT_POWER_4 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_4 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_4 VGV_LAST_ERR
RETSUB_F_ULTRA_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRA_LINE_1:
SUB_F_DELAY_1:
    DATA32 milliseconds748
	MOVEF_32 VLV_TIME_6 milliseconds748
	DATA32 timer748
	TIMER_WAIT milliseconds748 timer748
	TIMER_READY timer748
RETSUB_F_DELAY_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_1:
SUB_F_RESET_0:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 2
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_STOP_0:
    OUTPUT_POWER 0 3 0
	OUTPUT_STOP 0 3 1
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_SPEEDUP_4:
    MOVEF_F 15.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB752 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB752:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB753:
    MOVEF_F 0.0 VLV_L_9
  while754:
    JR_GTEQF VLV_L_9 VLV_DEG_9 endwhile754
  whilebody754:
    DATAF tmpf755
    DATA8 flag755
    DIVF VLV_L_9 VLV_DEG_9 tmpf755
    CP_EQF 0.0 VLV_DEG_9 flag755
    SELECTF flag755 0.0 tmpf755 VLV_P_9

    SUBF VLV_BASE_POWER_9 VLV_MIN_POWER_9 F.1
    MULF F.1 VLV_P_9 F.0
    ADDF F.0 VLV_MIN_POWER_9 VLV_POWER_9
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_9 VLV_L_9
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_9 VLV_R_9
    SUBF VLV_L_9 VLV_R_9 F.0
    MULF F.0 VLV_P_9 VLV_DELTA_9
    SUBF VLV_POWER_9 VLV_DELTA_9 VLV_LEFT_POWER_9
    ADDF VLV_POWER_9 VLV_DELTA_9 VLV_RIGHT_POWER_9
    MULF VLV_LEFT_POWER_9 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_9 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_9 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_9 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    JR_LTF VLV_L_9 VLV_DEG_9 whilebody754
  endwhile754:
RETSUB_F_SPEEDUP_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPEEDUP_4:
SUB_F_SYNC_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_10
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_10
    SUBF VLV_L_10 VLV_R_10 VLV_ERR_10
    SUBF VLV_ERR_10 VGV_LAST_ERR VLV_DIFF_10
    MULF VLV_ERR_10 1.0 F.0
    MULF VLV_DIFF_10 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_10
    SUBF VLV_POWER_10 VLV_DELTA_10 VLV_LEFT_POWER_10
    ADDF VLV_POWER_10 VLV_DELTA_10 VLV_RIGHT_POWER_10
    MULF VLV_LEFT_POWER_10 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_10 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_10 VGV_LAST_ERR
RETSUB_F_SYNC_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SYNC_1:
SUB_F_FORWARD_DEG_2:
    MOVEF_F VLV_POWER_11 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB790:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB791 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB791:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_11
  while794:
    MATH ABS VLV_L_11 F.0
    MATH ABS VLV_DEG_11 F.1
    JR_GTEQF F.0 F.1 endwhile794
  whilebody794:
    MOVEF_F VLV_POWER_11 VLV_POWER_10
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB797 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB797:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_11
    MATH ABS VLV_L_11 F.0
    MATH ABS VLV_DEG_11 F.1
    JR_LTF F.0 F.1 whilebody794
  endwhile794:
RETSUB_F_FORWARD_DEG_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FORWARD_DEG_2:
SUB_F_MOVE_MOTOR_7:
    MOVEF_F VLV_DEG_12 VLV_NORMAL_DEG_12
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_12
    MOVEF_F 0.0 VLV_ZAME_DEG_12
    CALL EQ_STRING VLV_ACCELERATION_12 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else802_1
    DATAF tmpf804
    DATA8 flag804
    DIVF VLV_DEG_12 2.0 tmpf804
    CP_EQF 0.0 2.0 flag804
    SELECTF flag804 0.0 tmpf804 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag806
	CP_LTF F.0 120.0 flag806
	SELECTF flag806 F.0 120.0 VLV_ACCELERATION_DEG_12
    SUBF VLV_NORMAL_DEG_12 VLV_ACCELERATION_DEG_12 VLV_NORMAL_DEG_12
  else802_1:
  endif802:
    CALL EQ_STRING VLV_ZAME_12 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else808_1
    DATAF tmpf810
    DATA8 flag810
    DIVF VLV_DEG_12 2.0 tmpf810
    CP_EQF 0.0 2.0 flag810
    SELECTF flag810 0.0 tmpf810 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag812
	CP_LTF F.0 120.0 flag812
	SELECTF flag812 F.0 120.0 VLV_ZAME_DEG_12
    SUBF VLV_NORMAL_DEG_12 VLV_ZAME_DEG_12 VLV_NORMAL_DEG_12
  else808_1:
  endif808:
    CALL EQ_STRING VLV_ACCELERATION_12 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else814_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_12
    MOVEF_F 0.0 VLV_M_12
  while817:
    JR_GTEQF VLV_M_12 VLV_ACCELERATION_DEG_12 endwhile817
  whilebody817:
    DATAF tmpf818
    DATA8 flag818
    DIVF VLV_M_12 VLV_ACCELERATION_DEG_12 tmpf818
    CP_EQF 0.0 VLV_ACCELERATION_DEG_12 flag818
    SELECTF flag818 0.0 tmpf818 VLV_P_12

    SUBF VLV_MAX_POWER_12 10.0 F.1
    MULF F.1 VLV_P_12 F.0
    ADDF F.0 10.0 VLV_POWER_12
    MULF VLV_POWER_12 VLV_FORWARD_12 F.0
    CALL MOTOR.START VLV_MOTOR_12 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_12 F.0
    MULF F.0 VLV_FORWARD_12 VLV_M_12
    DATA32 milliseconds826
	MOVEF_32 10.0 milliseconds826
	DATA32 timer826
	TIMER_WAIT milliseconds826 timer826
	TIMER_READY timer826
    JR_LTF VLV_M_12 VLV_ACCELERATION_DEG_12 whilebody817
  endwhile817:
  else814_1:
  endif814:
    JR_LTEQF VLV_NORMAL_DEG_12 0.0 else827_1
    MULF VLV_MAX_POWER_12 VLV_FORWARD_12 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_12 F.0 0.0 VLV_NORMAL_DEG_12 0.0 'False' 

	DATA8 layer829
	DATA8 nos829
	DATA8 busy829
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_12 layer829 nos829
	JR_EQ8 0 nos829 motornotbusy829
  motorwaiting829:
	OUTPUT_TEST layer829 nos829 busy829
	JR_EQ8 busy829 0 motornotbusy829
	SLEEP
	JR motorwaiting829
  motornotbusy829:
  else827_1:
  endif827:
    CALL EQ_STRING VLV_ZAME_12 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else830_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_12
    MOVEF_F 0.0 VLV_M_12
  while833:
    JR_GTEQF VLV_M_12 VLV_ZAME_DEG_12 endwhile833
  whilebody833:
    DATAF tmpf834
    DATA8 flag834
    DIVF VLV_M_12 VLV_ZAME_DEG_12 tmpf834
    CP_EQF 0.0 VLV_ZAME_DEG_12 flag834
    SELECTF flag834 0.0 tmpf834 F.0

    SUBF 1.0 F.0 VLV_P_12
    SUBF VLV_MAX_POWER_12 10.0 F.1
    MULF F.1 VLV_P_12 F.0
    ADDF F.0 10.0 VLV_POWER_12
    MULF VLV_POWER_12 VLV_FORWARD_12 F.0
    CALL MOTOR.START VLV_MOTOR_12 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_12 F.0
    MULF F.0 VLV_FORWARD_12 VLV_M_12
    DATA32 milliseconds843
	MOVEF_32 10.0 milliseconds843
	DATA32 timer843
	TIMER_WAIT milliseconds843 timer843
	TIMER_READY timer843
    JR_LTF VLV_M_12 VLV_ZAME_DEG_12 whilebody833
  endwhile833:
  else830_1:
  endif830:
    CALL EQ_STRING VLV_TO_STOP_12 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else844_1
    CALL MOTOR.STOP VLV_MOTOR_12 'True'
  else844_1:
  endif844:
RETSUB_F_MOVE_MOTOR_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_MOTOR_7:
SUB_F_ZAME_4:
    MOVEF_F VLV_BASE_POWER_13 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB847 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB847:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB848 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB848:
    MOVEF_F 0.0 VLV_L_13
  while849:
    JR_GTEQF VLV_L_13 VLV_DEG_13 endwhile849
  whilebody849:
    DATAF tmpf850
    DATA8 flag850
    DIVF VLV_L_13 VLV_DEG_13 tmpf850
    CP_EQF 0.0 VLV_DEG_13 flag850
    SELECTF flag850 0.0 tmpf850 VLV_P_13

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_13 VLV_L_13
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_13 VLV_R_13
    SUBF VLV_L_13 VLV_R_13 F.0
    SUBF 1.0 VLV_P_13 F.1
    MULF F.0 F.1 VLV_DELTA_13
    SUBF VLV_BASE_POWER_13 VLV_MIN_POWER_13 F.1
    SUBF 1.0 VLV_P_13 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_13 VLV_POWER_13
    SUBF VLV_POWER_13 VLV_DELTA_13 VLV_LEFT_POWER_13
    ADDF VLV_POWER_13 VLV_DELTA_13 VLV_RIGHT_POWER_13
    MULF VLV_LEFT_POWER_13 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_13 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_13 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_13 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds872
	MOVEF_32 10.0 milliseconds872
	DATA32 timer872
	TIMER_WAIT milliseconds872 timer872
	TIMER_READY timer872
    JR_LTF VLV_L_13 VLV_DEG_13 whilebody849
  endwhile849:
RETSUB_F_ZAME_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAME_4:
SUB_F_READ_PERCENT_1:
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf876
    DATA8 flag876
    DIVF F.1 F.2 tmpf876
    CP_EQF 0.0 F.2 flag876
    SELECTF flag876 0.0 tmpf876 F.0

    MULF F.0 100.0 VLV_PERCENT_14
RETSUB_F_READ_PERCENT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_READ_PERCENT_1:
SUB_F_SHOW_TIME_1:
    TIMER_READ timeMC9tmp
	SUB32 timeMC9tmp timeMC9 timeMC9tmp
	MOVE32_F timeMC9tmp VLV_MILLISECOND_15
    DATAF tmpf879
    DATA8 flag879
    DIVF VLV_MILLISECOND_15 1000.0 tmpf879
    CP_EQF 0.0 1000.0 flag879
    SELECTF flag879 0.0 tmpf879 F.0

    MATH FLOOR F.0 VLV_SECONDS_15
    DATAF tmpf881
    DATA8 flag881
    DIVF VLV_SECONDS_15 60.0 tmpf881
    CP_EQF 0.0 60.0 flag881
    SELECTF flag881 0.0 tmpf881 F.0

    MATH FLOOR F.0 VLV_MINUTES_15
    MATH MOD VLV_SECONDS_15 60.0 VLV_SECONDS_15
    STRINGS VALUE_FORMATTED VLV_MINUTES_15 '%g' 99 S.1
    CALL TEXT.APPEND S.1 ':' S.0
    STRINGS VALUE_FORMATTED VLV_SECONDS_15 '%g' 99 S.1
    CALL TEXT.APPEND S.0 S.1 VLV_TEXT_15
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 VLV_TEXT_15
    CALL EQ_STRING VLV_TO_DELAY_15 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else890_1
    MOVEF_F 100000.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB892 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB892:
  else890_1:
  endif890:
RETSUB_F_SHOW_TIME_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SHOW_TIME_1:
SUB_F_OPEN_CUBES_1:
    MULF 50.0 VLV_COEF_16 F.0
    CALL MOTOR.START VGV_WATER_MOTOR F.0
    DATA32 milliseconds895
	MOVEF_32 700.0 milliseconds895
	DATA32 timer895
	TIMER_WAIT milliseconds895 timer895
	TIMER_READY timer895
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
RETSUB_F_OPEN_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_1:
SUB_F_CLOSE_CUBES_1:
    MULF -50.0 VLV_COEF_17 F.0
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR F.0 0.0 90.0 0.0 'True' 

	DATA8 layer898
	DATA8 nos898
	DATA8 busy898
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer898 nos898
	JR_EQ8 0 nos898 motornotbusy898
  motorwaiting898:
	OUTPUT_TEST layer898 nos898 busy898
	JR_EQ8 busy898 0 motornotbusy898
	SLEEP
	JR motorwaiting898
  motornotbusy898:
RETSUB_F_CLOSE_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_1:
SUB_F_DELIVER_LONG_1:
    CALL EQ_STRING VLV_IS_INVERTED_18 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else899_1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOT_18
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_18
    MOVEF_F 1.0 VLV_COEF_18
    JR endif899
  else899_1:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOT_18
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_18
    MOVEF_F -1.0 VLV_COEF_18
  else899_2:
  endif899:
    JR_NEQF VGV_CUBES_COUNT 2.0 else901_1
    MOVEF_F VLV_COEF_18 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB902 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB902:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_12
    MOVEF_F VLV_FORWARD_18 VLV_FORWARD_12
    MOVEF_F 270.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB903 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB903:
    MOVEF_F 200.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB904 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB904:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_12
    MULF VLV_FORWARD_18 -1.0 VLV_FORWARD_12
    MOVEF_F 120.0 VLV_DEG_12
    MOVEF_F 20.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB906 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB906:
    MOVEF_F VLV_COEF_18 VLV_COEF_17
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB907 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB907:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_12
    MULF VLV_FORWARD_18 -1.0 VLV_FORWARD_12
    MOVEF_F 145.0 VLV_DEG_12
    MOVEF_F 20.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB909 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB909:
    MOVEF_F 1.0 VGV_CUBES_COUNT
    JR endif901
  else901_1:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_12
    MOVEF_F VLV_FORWARD_18 VLV_FORWARD_12
    MOVEF_F 360.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB910 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB910:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB911 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB911:
    MOVEF_F 700.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB912 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB912:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB913 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB913:
    MOVEF_F VLV_COEF_18 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB914 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB914:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 45.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB915 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB915:
    MOVEF_F 30.0 VLV_BASE_POWER_13
    MOVEF_F 20.0 VLV_MIN_POWER_13
    MOVEF_F 45.0 VLV_DEG_13
    MOVEF_F -1.0 VLV_COEF_13
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB916 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB916:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB917 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB917:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_12
    MULF VLV_FORWARD_18 -1.0 VLV_FORWARD_12
    MOVEF_F 360.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB919 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB919:
    MOVEF_F 0.0 VGV_CUBES_COUNT
  else901_2:
  endif901:
RETSUB_F_DELIVER_LONG_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_LONG_1:
SUB_F_DELIVER_NEAR_2:
    CALL EQ_STRING VLV_IS_INVERTED_19 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else920_1
    MOVEF_F 1.0 VLV_COEF_19
    JR endif920
  else920_1:
    MOVEF_F -1.0 VLV_COEF_19
  else920_2:
  endif920:
    MOVEF_F 0.0 VLV_MINUS_DEG_19
    MOVEF_F VLV_COEF_19 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB922 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB922:
    JR_NEQF VGV_CUBES_COUNT 2.0 else923_1
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 30.0 VLV_MIN_POWER_9
    MOVEF_F 40.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB924 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB924:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB925 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB925:
    MOVEF_F VLV_COEF_19 VLV_COEF_17
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB926 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB926:
    MOVEF_F 30.0 VLV_BASE_POWER_9
    MOVEF_F 30.0 VLV_MIN_POWER_9
    MOVEF_F 100.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB927 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB927:
    MOVEF_F 1.0 VGV_CUBES_COUNT
    MOVEF_F 40.0 VLV_MINUS_DEG_19
  else923_1:
  endif923:
RETSUB_F_DELIVER_NEAR_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_NEAR_2:
SUB_F_MOVE_TO_NEXT_ZONE_1:
    SUBF 180.0 VLV_MINUS_DEG_20 VLV_DEG_20
    WRITE32 ENDSUB_F_RESET_0:CALLSUB929 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB929:
    MOVEF_F -30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB930:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB931 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB931:
    MOVEF_F VLV_PERCENT_14 VLV_P_20
  while932:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 VLV_DEG_20 or933
    JR_LTEQF VLV_P_20 20.0 endwhile932
  or933:
  whilebody932:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB936 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB936:
    MOVEF_F VLV_PERCENT_14 VLV_P_20
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 VLV_DEG_20 whilebody932
    JR_GTF VLV_P_20 20.0 whilebody932
  endwhile932:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB939 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB939:
RETSUB_F_MOVE_TO_NEXT_ZONE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_TO_NEXT_ZONE_1:
SUB_F_DELIVER_GROUP_4:
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    CALL EQ_STRING VLV_LONG_21 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else940_1
    STRINGS DUPLICATE VLV_IS_INVERTED_21 VLV_IS_INVERTED_18
    WRITE32 ENDSUB_F_DELIVER_LONG_1:CALLSUB942 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_LONG_1
CALLSUB942:
  else940_1:
  endif940:
    CALL EQ_STRING VLV_NEAR_21 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else943_1
    STRINGS DUPLICATE VLV_IS_INVERTED_21 VLV_IS_INVERTED_19
    WRITE32 ENDSUB_F_DELIVER_NEAR_2:CALLSUB945 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_NEAR_2
CALLSUB945:
    MOVEF_F VLV_MINUS_DEG_19 VLV_MINUS_DEG_21
  else943_1:
  endif943:
    CALL EQ_STRING VLV_SHOULD_MOVE_BACKWARD_21 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else946_1
    MOVEF_F VLV_MINUS_DEG_21 VLV_MINUS_DEG_20
    WRITE32 ENDSUB_F_MOVE_TO_NEXT_ZONE_1:CALLSUB948 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_TO_NEXT_ZONE_1
CALLSUB948:
  else946_1:
  endif946:
RETSUB_F_DELIVER_GROUP_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_GROUP_4:
SUB_F_FROM_PROTECTED_TO_FINISH_1:
    CALL EQ_STRING VLV_IS_INVERTED_22 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else949_1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR1_22
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR2_22
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD1_22
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD2_22
    JR endif949
  else949_1:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR1_22
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR2_22
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD1_22
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD2_22
  else949_2:
  endif949:
    MOVEF_F 50.0 VLV_BASE_POWER_9
    MOVEF_F 20.0 VLV_MIN_POWER_9
    MOVEF_F 100.0 VLV_DEG_9
    MOVEF_F -1.0 VLV_COEF_9
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB951 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB951:
    CALL MOTOR.STOP VLV_MOTOR1_22 'True'
    STRINGS DUPLICATE VLV_MOTOR2_22 VLV_MOTOR_12
    MULF VLV_FORWARD2_22 -1.0 VLV_FORWARD_12
    MOVEF_F 340.0 VLV_DEG_12
    MOVEF_F 50.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'False' VLV_ZAME_12
    STRINGS DUPLICATE 'False' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB954 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB954:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB955 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB955:
    MOVEF_F 1700.0 VLV_TIME_6
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB956 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB956:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB957 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB957:
    STRINGS DUPLICATE VLV_MOTOR2_22 VLV_MOTOR_12
    MOVEF_F VLV_FORWARD2_22 VLV_FORWARD_12
    MOVEF_F 410.0 VLV_DEG_12
    MOVEF_F 50.0 VLV_MAX_POWER_12
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_12
    STRINGS DUPLICATE 'True' VLV_ZAME_12
    STRINGS DUPLICATE 'True' VLV_TO_STOP_12
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB958 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB958:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB959 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB959:
    MULF 80.0 VLV_FORWARD1_22 F.0
    CALL MOTOR.START VLV_MOTOR1_22 F.0
    MULF 90.0 VLV_FORWARD2_22 F.0
    CALL MOTOR.START VLV_MOTOR2_22 F.0
  while964:
    CALL MOTOR.GETCOUNT VLV_MOTOR1_22 F.1
    MULF F.1 VLV_FORWARD1_22 F.0
    JR_GTEQF F.0 800.0 endwhile964
  whilebody964:
    CALL MOTOR.GETCOUNT VLV_MOTOR1_22 F.1
    MULF F.1 VLV_FORWARD1_22 F.0
    JR_LTF F.0 800.0 whilebody964
  endwhile964:
    MULF 50.0 VLV_FORWARD1_22 F.0
    CALL MOTOR.START VLV_MOTOR1_22 F.0
    MULF 50.0 VLV_FORWARD2_22 F.0
    CALL MOTOR.START VLV_MOTOR2_22 F.0
    DATA32 milliseconds973
	MOVEF_32 1200.0 milliseconds973
	DATA32 timer973
	TIMER_WAIT milliseconds973 timer973
	TIMER_READY timer973
    WRITE32 ENDSUB_F_STOP_0:CALLSUB974 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB974:
RETSUB_F_FROM_PROTECTED_TO_FINISH_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall NE_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 flag 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
isequal:
	STRINGS DUPLICATE 'False' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'True' result
	RETURN
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
