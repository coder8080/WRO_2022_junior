DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_7
DATAF VLV_MIN_POWER_7
DATAF VLV_DEG_7
DATAF VLV_ACCELERATION_7
DATAF VLV_ZAME_7
DATAS VLV_MOTOR_12 252
DATAF VLV_FORWARD_12
DATAF VLV_BASE_POWER_12
DATAF VLV_MIN_POWER_12
DATAF VLV_DEG_12
DATAF VLV_ACCELERATION_12
DATAF VLV_ZAME_12
DATAF VLV_BASE_POWER_10
DATAF VLV_MIN_POWER_10
DATAF VLV_DEG_10
DATAF VLV_ACCELERATION_10
DATAF VLV_ZAME_10
DATAS VLV_MOTOR_11 252
DATAF VLV_FORWARD_11
DATAF VLV_BASE_POWER_11
DATAF VLV_MIN_POWER_11
DATAF VLV_DEG_11
DATAF VLV_ACCELERATION_11
DATAF VLV_ZAME_11
DATAF VLV_U_3
DATAF VLV_BASE_POWER_3
DATAF VLV_MIN_POWER_3
DATAF VLV_DEGREES_3
DATAF VLV_ZAMED_DEGREES_3
DATAF VLV_BASE_POWER_8
DATAF VLV_MIN_POWER_8
DATAF VLV_DEG_8
DATAF VLV_ACCELERATION_8
DATAF VLV_ZAME_8
DATAF VLV_POWER_4
DATAF VLV_BASE_POWER_9
DATAF VLV_MIN_POWER_9
DATAF VLV_DEG_9
DATAF VLV_ACCELERATION_9
DATAF VLV_ZAME_9
DATAF VLV_POWER_5
DATAF VLV_POWER_1
DATAF VLV_U_1
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAF VGV_RIGHT_FORWARD
DATAF VGV_LEFT_FORWARD
DATAS VGV_NOT_INVERSED_MOTOR 252
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_MOTORS 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_LINE_SENSOR
DATAF VGV_ULTRASONIC
DATAF VGV_A
DATAF VGV_P
DATAF VGV_D
DATAF VGV_LASTERROR
DATAF VGV_INTEGRAL
DATAF VGV_P_U
DATAF VGV_D_U
DATAF VGV_DEG
DATAF VGV_B
DATAF VGV_W
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_MEN_COUNT
DATAS VGV_CHEM 252
DATAF VGV_FIRE_COUNT
DATAS VGV_IS_CHEM_ON_RIGHT 252
DATAS VGV_IS_CHEM_ON_LEFT 252
DATAF VGV_CUBES_COUNT
DATAF VGV_WATER_STATE
DATAS VGV_OBJECT 252
DATAS VGV_UP_WATER 252
DATAS VGV_1_WATER 252
DATAS VGV_2_WATER 252
DATAS VGV_COLOR 252
ARRAY16 VGV_VALUES 2
DATAF VGV_RED
DATAF VGV_GREEN
DATAF VGV_BLUE
DATAF VGV_Z
DATAF VGV_NOWERROR
DATAF VGV_DIF
DATAF VGV_DERIVATIVE
DATAF VGV_UP
DATAF VGV_R_C
DATAF VGV_L_C
DATAF VGV_DIFF
DATAF VGV_R_P
DATAF VGV_L_P
DATAF VLV_V_1
DATAF VLV_NOWERROR_1
DATAF VLV_DIF_1
DATAF VLV_INTEGRAL_1
DATAF VLV_DERIVATIVE_1
DATAF VLV_UP_1
DATAF VLV_LASTERROR_1
DATAF VLV_NORMAL_DEGREES_3
DATAF VLV_C_3
DATAF VLV_MINUS_3
DATAF VLV_POWER_3
DATAF VLV_R_C_4
DATAF VLV_L_C_4
DATAF VLV_DIFF_4
DATAF VLV_R_P_4
DATAF VLV_L_P_4
DATAF VLV_R_C_5
DATAF VLV_L_C_5
DATAF VLV_DIFF_5
DATAF VLV_R_P_5
DATAF VLV_L_P_5
DATAF VLV_NORMAL_DEGREES_7
DATAF VLV_C_7
DATAF VLV_P_7
DATAF VLV_POWER_7
DATAF VLV_DELTA_7
DATAF VLV_LEFT_POWER_7
DATAF VLV_RIGHT_POWER_7
DATAF VLV_NORMAL_DEG_8
DATAF VLV_C_8
DATAF VLV_P_8
DATAF VLV_POWER_8
DATAF VLV_R_8
DATAF VLV_DELTA_8
DATAF VLV_LEFT_POWER_8
DATAF VLV_RIGHT_POWER_8
DATAF VLV_NORMAL_DEG_9
DATAF VLV_R_9
DATAF VLV_P_9
DATAF VLV_POWER_9
DATAF VLV_L_9
DATAF VLV_DELTA_9
DATAF VLV_RIGHT_POWER_9
DATAF VLV_LEFT_POWER_9
DATAF VLV_NORMAL_DEGREES_10
DATAF VLV_C_10
DATAF VLV_P_10
DATAF VLV_POWER_10
DATAF VLV_DELTA_10
DATAF VLV_LEFT_POWER_10
DATAF VLV_RIGHT_POWER_10
DATAF VLV_NORMAL_DEG_11
DATAF VLV_C_11
DATAF VLV_P_11
DATAF VLV_POWER_11
DATAF VLV_NORMAL_DEG_12
DATAF VLV_C_12
DATAF VLV_POWER_12
DATAF VLV_P_12

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_7
    MOVEF_F 0.0 VLV_MIN_POWER_7
    MOVEF_F 0.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    STRINGS DUPLICATE '' VLV_MOTOR_12
    MOVEF_F 0.0 VLV_FORWARD_12
    MOVEF_F 0.0 VLV_BASE_POWER_12
    MOVEF_F 0.0 VLV_MIN_POWER_12
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_ACCELERATION_12
    MOVEF_F 0.0 VLV_ZAME_12
    MOVEF_F 0.0 VLV_BASE_POWER_10
    MOVEF_F 0.0 VLV_MIN_POWER_10
    MOVEF_F 0.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_ACCELERATION_10
    MOVEF_F 0.0 VLV_ZAME_10
    STRINGS DUPLICATE '' VLV_MOTOR_11
    MOVEF_F 0.0 VLV_FORWARD_11
    MOVEF_F 0.0 VLV_BASE_POWER_11
    MOVEF_F 0.0 VLV_MIN_POWER_11
    MOVEF_F 0.0 VLV_DEG_11
    MOVEF_F 0.0 VLV_ACCELERATION_11
    MOVEF_F 0.0 VLV_ZAME_11
    MOVEF_F 0.0 VLV_U_3
    MOVEF_F 0.0 VLV_BASE_POWER_3
    MOVEF_F 0.0 VLV_MIN_POWER_3
    MOVEF_F 0.0 VLV_DEGREES_3
    MOVEF_F 0.0 VLV_ZAMED_DEGREES_3
    MOVEF_F 0.0 VLV_BASE_POWER_8
    MOVEF_F 0.0 VLV_MIN_POWER_8
    MOVEF_F 0.0 VLV_DEG_8
    MOVEF_F 0.0 VLV_ACCELERATION_8
    MOVEF_F 0.0 VLV_ZAME_8
    MOVEF_F 0.0 VLV_POWER_4
    MOVEF_F 0.0 VLV_BASE_POWER_9
    MOVEF_F 0.0 VLV_MIN_POWER_9
    MOVEF_F 0.0 VLV_DEG_9
    MOVEF_F 0.0 VLV_ACCELERATION_9
    MOVEF_F 0.0 VLV_ZAME_9
    MOVEF_F 0.0 VLV_POWER_5
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_U_1
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    STRINGS DUPLICATE '' VGV_UP_WATER
    STRINGS DUPLICATE '' VGV_1_WATER
    STRINGS DUPLICATE '' VGV_2_WATER
    STRINGS DUPLICATE '' VGV_COLOR
    CALL ARRAYCREATE_FLOAT VGV_VALUES
    MOVEF_F 0.0 VGV_RED
    MOVEF_F 0.0 VGV_GREEN
    MOVEF_F 0.0 VGV_BLUE
    MOVEF_F 0.0 VGV_Z
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VLV_V_1
    MOVEF_F 0.0 VLV_NOWERROR_1
    MOVEF_F 0.0 VLV_DIF_1
    MOVEF_F 0.0 VLV_INTEGRAL_1
    MOVEF_F 0.0 VLV_DERIVATIVE_1
    MOVEF_F 0.0 VLV_UP_1
    MOVEF_F 0.0 VLV_LASTERROR_1
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_3
    MOVEF_F 0.0 VLV_C_3
    MOVEF_F 0.0 VLV_MINUS_3
    MOVEF_F 0.0 VLV_POWER_3
    MOVEF_F 0.0 VLV_R_C_4
    MOVEF_F 0.0 VLV_L_C_4
    MOVEF_F 0.0 VLV_DIFF_4
    MOVEF_F 0.0 VLV_R_P_4
    MOVEF_F 0.0 VLV_L_P_4
    MOVEF_F 0.0 VLV_R_C_5
    MOVEF_F 0.0 VLV_L_C_5
    MOVEF_F 0.0 VLV_DIFF_5
    MOVEF_F 0.0 VLV_R_P_5
    MOVEF_F 0.0 VLV_L_P_5
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_7
    MOVEF_F 0.0 VLV_C_7
    MOVEF_F 0.0 VLV_P_7
    MOVEF_F 0.0 VLV_POWER_7
    MOVEF_F 0.0 VLV_DELTA_7
    MOVEF_F 0.0 VLV_LEFT_POWER_7
    MOVEF_F 0.0 VLV_RIGHT_POWER_7
    MOVEF_F 0.0 VLV_NORMAL_DEG_8
    MOVEF_F 0.0 VLV_C_8
    MOVEF_F 0.0 VLV_P_8
    MOVEF_F 0.0 VLV_POWER_8
    MOVEF_F 0.0 VLV_R_8
    MOVEF_F 0.0 VLV_DELTA_8
    MOVEF_F 0.0 VLV_LEFT_POWER_8
    MOVEF_F 0.0 VLV_RIGHT_POWER_8
    MOVEF_F 0.0 VLV_NORMAL_DEG_9
    MOVEF_F 0.0 VLV_R_9
    MOVEF_F 0.0 VLV_P_9
    MOVEF_F 0.0 VLV_POWER_9
    MOVEF_F 0.0 VLV_L_9
    MOVEF_F 0.0 VLV_DELTA_9
    MOVEF_F 0.0 VLV_RIGHT_POWER_9
    MOVEF_F 0.0 VLV_LEFT_POWER_9
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_10
    MOVEF_F 0.0 VLV_C_10
    MOVEF_F 0.0 VLV_P_10
    MOVEF_F 0.0 VLV_POWER_10
    MOVEF_F 0.0 VLV_DELTA_10
    MOVEF_F 0.0 VLV_LEFT_POWER_10
    MOVEF_F 0.0 VLV_RIGHT_POWER_10
    MOVEF_F 0.0 VLV_NORMAL_DEG_11
    MOVEF_F 0.0 VLV_C_11
    MOVEF_F 0.0 VLV_P_11
    MOVEF_F 0.0 VLV_POWER_11
    MOVEF_F 0.0 VLV_NORMAL_DEG_12
    MOVEF_F 0.0 VLV_C_12
    MOVEF_F 0.0 VLV_POWER_12
    MOVEF_F 0.0 VLV_P_12
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    MOVE8_8 0 STACKPOINTER
    MOVEF_F 0.0 VLV_BASE_POWER_7
    MOVEF_F 0.0 VLV_MIN_POWER_7
    MOVEF_F 0.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    STRINGS DUPLICATE '' VLV_MOTOR_12
    MOVEF_F 0.0 VLV_FORWARD_12
    MOVEF_F 0.0 VLV_BASE_POWER_12
    MOVEF_F 0.0 VLV_MIN_POWER_12
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_ACCELERATION_12
    MOVEF_F 0.0 VLV_ZAME_12
    MOVEF_F 0.0 VLV_BASE_POWER_10
    MOVEF_F 0.0 VLV_MIN_POWER_10
    MOVEF_F 0.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_ACCELERATION_10
    MOVEF_F 0.0 VLV_ZAME_10
    STRINGS DUPLICATE '' VLV_MOTOR_11
    MOVEF_F 0.0 VLV_FORWARD_11
    MOVEF_F 0.0 VLV_BASE_POWER_11
    MOVEF_F 0.0 VLV_MIN_POWER_11
    MOVEF_F 0.0 VLV_DEG_11
    MOVEF_F 0.0 VLV_ACCELERATION_11
    MOVEF_F 0.0 VLV_ZAME_11
    MOVEF_F 0.0 VLV_U_3
    MOVEF_F 0.0 VLV_BASE_POWER_3
    MOVEF_F 0.0 VLV_MIN_POWER_3
    MOVEF_F 0.0 VLV_DEGREES_3
    MOVEF_F 0.0 VLV_ZAMED_DEGREES_3
    MOVEF_F 0.0 VLV_BASE_POWER_8
    MOVEF_F 0.0 VLV_MIN_POWER_8
    MOVEF_F 0.0 VLV_DEG_8
    MOVEF_F 0.0 VLV_ACCELERATION_8
    MOVEF_F 0.0 VLV_ZAME_8
    MOVEF_F 0.0 VLV_POWER_4
    MOVEF_F 0.0 VLV_BASE_POWER_9
    MOVEF_F 0.0 VLV_MIN_POWER_9
    MOVEF_F 0.0 VLV_DEG_9
    MOVEF_F 0.0 VLV_ACCELERATION_9
    MOVEF_F 0.0 VLV_ZAME_9
    MOVEF_F 0.0 VLV_POWER_5
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_U_1
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    STRINGS DUPLICATE '' VGV_UP_WATER
    STRINGS DUPLICATE '' VGV_1_WATER
    STRINGS DUPLICATE '' VGV_2_WATER
    STRINGS DUPLICATE '' VGV_COLOR
    CALL ARRAYSTORE_FLOAT 0.0 0.0 VGV_VALUES
    MOVEF_F 0.0 VGV_RED
    MOVEF_F 0.0 VGV_GREEN
    MOVEF_F 0.0 VGV_BLUE
    MOVEF_F 0.0 VGV_Z
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE 'B' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 1.0 VGV_LINE_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 1.0 VGV_P
    MOVEF_F 6.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 1.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE 'False' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 2.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_UP_WATER
    STRINGS DUPLICATE 'True' VGV_1_WATER
    STRINGS DUPLICATE 'True' VGV_2_WATER
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_LINE_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 0.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_RIGHT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_LEFT_SENSOR no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 1.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    DATA8 layer5
	DATA8 no5
	DATA8 mode85
	
	MOVEF_8 VGV_ULTRASONIC no5
	SUB8 no5 1 no5
	DIV8 no5 4 layer5
	MATH MOD8 no5 4 no5

	MOVEF_8 0.0 mode85
	
	INPUT_DEVICE READY_RAW layer5 no5 0 mode85 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else6_1
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 1.0 'Low battery'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB10:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB11 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB11:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB12:
  else6_1:
  endif6:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB13 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB13:
ENDTHREAD:
    RETURN
SUB_F_LINE_0:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF 20.0 F.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf18
    DATA8 flag18
    DIVF F.0 10.0 tmpf18
    CP_EQF 0.0 10.0 flag18
    SELECTF flag18 0.0 tmpf18 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_LINE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_0:
SUB_F_STOP_0:
    CALL MOTOR.STOP VGV_MOTORS 'True'
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_DELAY_0:
    DATA32 milliseconds28
	MOVEF_32 300.0 milliseconds28
	DATA32 timer28
	TIMER_WAIT milliseconds28 timer28
	TIMER_READY timer28
RETSUB_F_DELAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_0:
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_CLOSE_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -10.0 0.0 70.0 0.0 'True' 

	DATA8 layer30
	DATA8 nos30
	DATA8 busy30
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer30 nos30
	JR_EQ8 0 nos30 motornotbusy30
  motorwaiting30:
	OUTPUT_TEST layer30 nos30 busy30
	JR_EQ8 busy30 0 motornotbusy30
	SLEEP
	JR motorwaiting30
  motornotbusy30:
RETSUB_F_CLOSE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_0:
SUB_F_OPEN_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 10.0 0.0 70.0 0.0 'True' 

	DATA8 layer31
	DATA8 nos31
	DATA8 busy31
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer31 nos31
	JR_EQ8 0 nos31 motornotbusy31
  motorwaiting31:
	OUTPUT_TEST layer31 nos31 busy31
	JR_EQ8 busy31 0 motornotbusy31
	SLEEP
	JR motorwaiting31
  motornotbusy31:
RETSUB_F_OPEN_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_0:
SUB_F_TAKE_CUBES_0:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds33
	MOVEF_32 500.0 milliseconds33
	DATA32 timer33
	TIMER_WAIT milliseconds33 timer33
	TIMER_READY timer33
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer37
	DATA8 nos37
	DATA8 busy37
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer37 nos37
	JR_EQ8 0 nos37 motornotbusy37
  motorwaiting37:
	OUTPUT_TEST layer37 nos37 busy37
	JR_EQ8 busy37 0 motornotbusy37
	SLEEP
	JR motorwaiting37
  motornotbusy37:
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR -20.0 0.0 360.0 0.0 'True' 

	DATA8 layer38
	DATA8 nos38
	DATA8 busy38
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer38 nos38
	JR_EQ8 0 nos38 motornotbusy38
  motorwaiting38:
	OUTPUT_TEST layer38 nos38 busy38
	JR_EQ8 busy38 0 motornotbusy38
	SLEEP
	JR motorwaiting38
  motornotbusy38:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds42
	MOVEF_32 700.0 milliseconds42
	DATA32 timer42
	TIMER_WAIT milliseconds42 timer42
	TIMER_READY timer42
    WRITE32 ENDSUB_F_STOP_0:CALLSUB43 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB43:
    MOVEF_F 229.0 VLV_U_3
    MOVEF_F 50.0 VLV_BASE_POWER_3
    MOVEF_F 20.0 VLV_MIN_POWER_3
    MOVEF_F 930.0 VLV_DEGREES_3
    MOVEF_F 200.0 VLV_ZAMED_DEGREES_3
    WRITE32 ENDSUB_F_ULTRASONIC_ZAMED_5:CALLSUB44 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_ZAMED_5
CALLSUB44:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer45
	DATA8 nos45
	DATA8 busy45
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer45 nos45
	JR_EQ8 0 nos45 motornotbusy45
  motorwaiting45:
	OUTPUT_TEST layer45 nos45 busy45
	JR_EQ8 busy45 0 motornotbusy45
	SLEEP
	JR motorwaiting45
  motornotbusy45:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB46 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB46:
RETSUB_F_TAKE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_0:
SUB_F_TAKE_CUBES_INVERSED_0:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds48
	MOVEF_32 500.0 milliseconds48
	DATA32 timer48
	TIMER_WAIT milliseconds48 timer48
	TIMER_READY timer48
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer52
	DATA8 nos52
	DATA8 busy52
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer52 nos52
	JR_EQ8 0 nos52 motornotbusy52
  motorwaiting52:
	OUTPUT_TEST layer52 nos52 busy52
	JR_EQ8 busy52 0 motornotbusy52
	SLEEP
	JR motorwaiting52
  motornotbusy52:
    MULF -100.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds55
	MOVEF_32 3000.0 milliseconds55
	DATA32 timer55
	TIMER_WAIT milliseconds55 timer55
	TIMER_READY timer55
    WRITE32 ENDSUB_F_STOP_0:CALLSUB56 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB56:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds60
	MOVEF_32 1000.0 milliseconds60
	DATA32 timer60
	TIMER_WAIT milliseconds60 timer60
	TIMER_READY timer60
    WRITE32 ENDSUB_F_STOP_0:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB61:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 20.0 VLV_MIN_POWER_7
    MOVEF_F 930.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 200.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB63 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB63:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB64 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB64:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer65
	DATA8 nos65
	DATA8 busy65
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer65 nos65
	JR_EQ8 0 nos65 motornotbusy65
  motorwaiting65:
	OUTPUT_TEST layer65 nos65 busy65
	JR_EQ8 busy65 0 motornotbusy65
	SLEEP
	JR motorwaiting65
  motornotbusy65:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB66:
RETSUB_F_TAKE_CUBES_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_INVERSED_0:
SUB_F_TAKE_LONG_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer68
	DATA8 nos68
	DATA8 busy68
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer68 nos68
	JR_EQ8 0 nos68 motornotbusy68
  motorwaiting68:
	OUTPUT_TEST layer68 nos68 busy68
	JR_EQ8 busy68 0 motornotbusy68
	SLEEP
	JR motorwaiting68
  motornotbusy68:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds72
	MOVEF_32 1000.0 milliseconds72
	DATA32 timer72
	TIMER_WAIT milliseconds72 timer72
	TIMER_READY timer72
    WRITE32 ENDSUB_F_STOP_0:CALLSUB73 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB73:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB74 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB74:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer77
	DATA8 nos77
	DATA8 busy77
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer77 nos77
	JR_EQ8 0 nos77 motornotbusy77
  motorwaiting77:
	OUTPUT_TEST layer77 nos77 busy77
	JR_EQ8 busy77 0 motornotbusy77
	SLEEP
	JR motorwaiting77
  motornotbusy77:
    JR_NEQF VGV_CUBES_COUNT 2.0 else78_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB79 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB79:
  else78_1:
  endif78:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer82
	DATA8 nos82
	DATA8 busy82
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer82 nos82
	JR_EQ8 0 nos82 motornotbusy82
  motorwaiting82:
	OUTPUT_TEST layer82 nos82 busy82
	JR_EQ8 busy82 0 motornotbusy82
	SLEEP
	JR motorwaiting82
  motornotbusy82:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer84
	DATA8 nos84
	DATA8 busy84
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer84 nos84
	JR_EQ8 0 nos84 motornotbusy84
  motorwaiting84:
	OUTPUT_TEST layer84 nos84 busy84
	JR_EQ8 busy84 0 motornotbusy84
	SLEEP
	JR motorwaiting84
  motornotbusy84:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_0:
SUB_F_TAKE_LONG_INVERSED_0:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer86
	DATA8 nos86
	DATA8 busy86
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer86 nos86
	JR_EQ8 0 nos86 motornotbusy86
  motorwaiting86:
	OUTPUT_TEST layer86 nos86 busy86
	JR_EQ8 busy86 0 motornotbusy86
	SLEEP
	JR motorwaiting86
  motornotbusy86:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds90
	MOVEF_32 1000.0 milliseconds90
	DATA32 timer90
	TIMER_WAIT milliseconds90 timer90
	TIMER_READY timer90
    WRITE32 ENDSUB_F_STOP_0:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB91:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB92:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer95
	DATA8 nos95
	DATA8 busy95
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer95 nos95
	JR_EQ8 0 nos95 motornotbusy95
  motorwaiting95:
	OUTPUT_TEST layer95 nos95 busy95
	JR_EQ8 busy95 0 motornotbusy95
	SLEEP
	JR motorwaiting95
  motornotbusy95:
    JR_NEQF VGV_CUBES_COUNT 2.0 else96_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB97:
  else96_1:
  endif96:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 95.0 'True'

	DATA8 layer100
	DATA8 nos100
	DATA8 busy100
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer100 nos100
	JR_EQ8 0 nos100 motornotbusy100
  motorwaiting100:
	OUTPUT_TEST layer100 nos100 busy100
	JR_EQ8 busy100 0 motornotbusy100
	SLEEP
	JR motorwaiting100
  motornotbusy100:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 365.0 0.0 'True' 

	DATA8 layer102
	DATA8 nos102
	DATA8 busy102
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer102 nos102
	JR_EQ8 0 nos102 motornotbusy102
  motorwaiting102:
	OUTPUT_TEST layer102 nos102 busy102
	JR_EQ8 busy102 0 motornotbusy102
	SLEEP
	JR motorwaiting102
  motornotbusy102:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_INVERSED_0:
SUB_F_TAKE_NEAR_0:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer104
	DATA8 nos104
	DATA8 busy104
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer104 nos104
	JR_EQ8 0 nos104 motornotbusy104
  motorwaiting104:
	OUTPUT_TEST layer104 nos104 busy104
	JR_EQ8 busy104 0 motornotbusy104
	SLEEP
	JR motorwaiting104
  motornotbusy104:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer106
	DATA8 nos106
	DATA8 busy106
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer106 nos106
	JR_EQ8 0 nos106 motornotbusy106
  motorwaiting106:
	OUTPUT_TEST layer106 nos106 busy106
	JR_EQ8 busy106 0 motornotbusy106
	SLEEP
	JR motorwaiting106
  motornotbusy106:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB107:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    MULF 20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer110
	DATA8 nos110
	DATA8 busy110
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer110 nos110
	JR_EQ8 0 nos110 motornotbusy110
  motorwaiting110:
	OUTPUT_TEST layer110 nos110 busy110
	JR_EQ8 busy110 0 motornotbusy110
	SLEEP
	JR motorwaiting110
  motornotbusy110:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB111:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer114
	DATA8 nos114
	DATA8 busy114
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer114 nos114
	JR_EQ8 0 nos114 motornotbusy114
  motorwaiting114:
	OUTPUT_TEST layer114 nos114 busy114
	JR_EQ8 busy114 0 motornotbusy114
	SLEEP
	JR motorwaiting114
  motornotbusy114:
    JR_NEQF VGV_CUBES_COUNT 2.0 else115_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB116:
  else115_1:
  endif115:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer119
	DATA8 nos119
	DATA8 busy119
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer119 nos119
	JR_EQ8 0 nos119 motornotbusy119
  motorwaiting119:
	OUTPUT_TEST layer119 nos119 busy119
	JR_EQ8 busy119 0 motornotbusy119
	SLEEP
	JR motorwaiting119
  motornotbusy119:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer121
	DATA8 nos121
	DATA8 busy121
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer121 nos121
	JR_EQ8 0 nos121 motornotbusy121
  motorwaiting121:
	OUTPUT_TEST layer121 nos121 busy121
	JR_EQ8 busy121 0 motornotbusy121
	SLEEP
	JR motorwaiting121
  motornotbusy121:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer123
	DATA8 nos123
	DATA8 busy123
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer123 nos123
	JR_EQ8 0 nos123 motornotbusy123
  motorwaiting123:
	OUTPUT_TEST layer123 nos123 busy123
	JR_EQ8 busy123 0 motornotbusy123
	SLEEP
	JR motorwaiting123
  motornotbusy123:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB124:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer127
	DATA8 nos127
	DATA8 busy127
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer127 nos127
	JR_EQ8 0 nos127 motornotbusy127
  motorwaiting127:
	OUTPUT_TEST layer127 nos127 busy127
	JR_EQ8 busy127 0 motornotbusy127
	SLEEP
	JR motorwaiting127
  motornotbusy127:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_0:
SUB_F_TAKE_NEAR_INVERSED_0:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer129
	DATA8 nos129
	DATA8 busy129
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer129 nos129
	JR_EQ8 0 nos129 motornotbusy129
  motorwaiting129:
	OUTPUT_TEST layer129 nos129 busy129
	JR_EQ8 busy129 0 motornotbusy129
	SLEEP
	JR motorwaiting129
  motornotbusy129:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer131
	DATA8 nos131
	DATA8 busy131
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer131 nos131
	JR_EQ8 0 nos131 motornotbusy131
  motorwaiting131:
	OUTPUT_TEST layer131 nos131 busy131
	JR_EQ8 busy131 0 motornotbusy131
	SLEEP
	JR motorwaiting131
  motornotbusy131:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB132:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    MULF 20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer135
	DATA8 nos135
	DATA8 busy135
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer135 nos135
	JR_EQ8 0 nos135 motornotbusy135
  motorwaiting135:
	OUTPUT_TEST layer135 nos135 busy135
	JR_EQ8 busy135 0 motornotbusy135
	SLEEP
	JR motorwaiting135
  motornotbusy135:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB136:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer139
	DATA8 nos139
	DATA8 busy139
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer139 nos139
	JR_EQ8 0 nos139 motornotbusy139
  motorwaiting139:
	OUTPUT_TEST layer139 nos139 busy139
	JR_EQ8 busy139 0 motornotbusy139
	SLEEP
	JR motorwaiting139
  motornotbusy139:
    JR_NEQF VGV_CUBES_COUNT 2.0 else140_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB141:
  else140_1:
  endif140:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer144
	DATA8 nos144
	DATA8 busy144
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer144 nos144
	JR_EQ8 0 nos144 motornotbusy144
  motorwaiting144:
	OUTPUT_TEST layer144 nos144 busy144
	JR_EQ8 busy144 0 motornotbusy144
	SLEEP
	JR motorwaiting144
  motornotbusy144:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer146
	DATA8 nos146
	DATA8 busy146
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer146 nos146
	JR_EQ8 0 nos146 motornotbusy146
  motorwaiting146:
	OUTPUT_TEST layer146 nos146 busy146
	JR_EQ8 busy146 0 motornotbusy146
	SLEEP
	JR motorwaiting146
  motornotbusy146:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer148
	DATA8 nos148
	DATA8 busy148
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer148 nos148
	JR_EQ8 0 nos148 motornotbusy148
  motorwaiting148:
	OUTPUT_TEST layer148 nos148 busy148
	JR_EQ8 busy148 0 motornotbusy148
	SLEEP
	JR motorwaiting148
  motornotbusy148:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB149:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer152
	DATA8 nos152
	DATA8 busy152
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer152 nos152
	JR_EQ8 0 nos152 motornotbusy152
  motorwaiting152:
	OUTPUT_TEST layer152 nos152 busy152
	JR_EQ8 busy152 0 motornotbusy152
	SLEEP
	JR motorwaiting152
  motornotbusy152:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_INVERSED_0:
SUB_F_TAKE_BOTH_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer154
	DATA8 nos154
	DATA8 busy154
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer154 nos154
	JR_EQ8 0 nos154 motornotbusy154
  motorwaiting154:
	OUTPUT_TEST layer154 nos154 busy154
	JR_EQ8 busy154 0 motornotbusy154
	SLEEP
	JR motorwaiting154
  motornotbusy154:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer157
	DATA8 nos157
	DATA8 busy157
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer157 nos157
	JR_EQ8 0 nos157 motornotbusy157
  motorwaiting157:
	OUTPUT_TEST layer157 nos157 busy157
	JR_EQ8 busy157 0 motornotbusy157
	SLEEP
	JR motorwaiting157
  motornotbusy157:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB158:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer161
	DATA8 nos161
	DATA8 busy161
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer161 nos161
	JR_EQ8 0 nos161 motornotbusy161
  motorwaiting161:
	OUTPUT_TEST layer161 nos161 busy161
	JR_EQ8 busy161 0 motornotbusy161
	SLEEP
	JR motorwaiting161
  motornotbusy161:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB162:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer165
	DATA8 nos165
	DATA8 busy165
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer165 nos165
	JR_EQ8 0 nos165 motornotbusy165
  motorwaiting165:
	OUTPUT_TEST layer165 nos165 busy165
	JR_EQ8 busy165 0 motornotbusy165
	SLEEP
	JR motorwaiting165
  motornotbusy165:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer167
	DATA8 nos167
	DATA8 busy167
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer167 nos167
	JR_EQ8 0 nos167 motornotbusy167
  motorwaiting167:
	OUTPUT_TEST layer167 nos167 busy167
	JR_EQ8 busy167 0 motornotbusy167
	SLEEP
	JR motorwaiting167
  motornotbusy167:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer170
	DATA8 nos170
	DATA8 busy170
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer170 nos170
	JR_EQ8 0 nos170 motornotbusy170
  motorwaiting170:
	OUTPUT_TEST layer170 nos170 busy170
	JR_EQ8 busy170 0 motornotbusy170
	SLEEP
	JR motorwaiting170
  motornotbusy170:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB171:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer174
	DATA8 nos174
	DATA8 busy174
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer174 nos174
	JR_EQ8 0 nos174 motornotbusy174
  motorwaiting174:
	OUTPUT_TEST layer174 nos174 busy174
	JR_EQ8 busy174 0 motornotbusy174
	SLEEP
	JR motorwaiting174
  motornotbusy174:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer176
	DATA8 nos176
	DATA8 busy176
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer176 nos176
	JR_EQ8 0 nos176 motornotbusy176
  motorwaiting176:
	OUTPUT_TEST layer176 nos176 busy176
	JR_EQ8 busy176 0 motornotbusy176
	SLEEP
	JR motorwaiting176
  motornotbusy176:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer178
	DATA8 nos178
	DATA8 busy178
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer178 nos178
	JR_EQ8 0 nos178 motornotbusy178
  motorwaiting178:
	OUTPUT_TEST layer178 nos178 busy178
	JR_EQ8 busy178 0 motornotbusy178
	SLEEP
	JR motorwaiting178
  motornotbusy178:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer181
	DATA8 nos181
	DATA8 busy181
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer181 nos181
	JR_EQ8 0 nos181 motornotbusy181
  motorwaiting181:
	OUTPUT_TEST layer181 nos181 busy181
	JR_EQ8 busy181 0 motornotbusy181
	SLEEP
	JR motorwaiting181
  motornotbusy181:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_0:
SUB_F_TAKE_BOTH_INVERSED_0:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer183
	DATA8 nos183
	DATA8 busy183
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer183 nos183
	JR_EQ8 0 nos183 motornotbusy183
  motorwaiting183:
	OUTPUT_TEST layer183 nos183 busy183
	JR_EQ8 busy183 0 motornotbusy183
	SLEEP
	JR motorwaiting183
  motornotbusy183:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer186
	DATA8 nos186
	DATA8 busy186
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer186 nos186
	JR_EQ8 0 nos186 motornotbusy186
  motorwaiting186:
	OUTPUT_TEST layer186 nos186 busy186
	JR_EQ8 busy186 0 motornotbusy186
	SLEEP
	JR motorwaiting186
  motornotbusy186:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB187:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer190
	DATA8 nos190
	DATA8 busy190
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer190 nos190
	JR_EQ8 0 nos190 motornotbusy190
  motorwaiting190:
	OUTPUT_TEST layer190 nos190 busy190
	JR_EQ8 busy190 0 motornotbusy190
	SLEEP
	JR motorwaiting190
  motornotbusy190:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB191:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer194
	DATA8 nos194
	DATA8 busy194
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer194 nos194
	JR_EQ8 0 nos194 motornotbusy194
  motorwaiting194:
	OUTPUT_TEST layer194 nos194 busy194
	JR_EQ8 busy194 0 motornotbusy194
	SLEEP
	JR motorwaiting194
  motornotbusy194:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer196
	DATA8 nos196
	DATA8 busy196
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer196 nos196
	JR_EQ8 0 nos196 motornotbusy196
  motorwaiting196:
	OUTPUT_TEST layer196 nos196 busy196
	JR_EQ8 busy196 0 motornotbusy196
	SLEEP
	JR motorwaiting196
  motornotbusy196:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer199
	DATA8 nos199
	DATA8 busy199
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer199 nos199
	JR_EQ8 0 nos199 motornotbusy199
  motorwaiting199:
	OUTPUT_TEST layer199 nos199 busy199
	JR_EQ8 busy199 0 motornotbusy199
	SLEEP
	JR motorwaiting199
  motornotbusy199:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB200:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer203
	DATA8 nos203
	DATA8 busy203
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer203 nos203
	JR_EQ8 0 nos203 motornotbusy203
  motorwaiting203:
	OUTPUT_TEST layer203 nos203 busy203
	JR_EQ8 busy203 0 motornotbusy203
	SLEEP
	JR motorwaiting203
  motornotbusy203:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer205
	DATA8 nos205
	DATA8 busy205
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer205 nos205
	JR_EQ8 0 nos205 motornotbusy205
  motorwaiting205:
	OUTPUT_TEST layer205 nos205 busy205
	JR_EQ8 busy205 0 motornotbusy205
	SLEEP
	JR motorwaiting205
  motornotbusy205:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer207
	DATA8 nos207
	DATA8 busy207
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer207 nos207
	JR_EQ8 0 nos207 motornotbusy207
  motorwaiting207:
	OUTPUT_TEST layer207 nos207 busy207
	JR_EQ8 busy207 0 motornotbusy207
	SLEEP
	JR motorwaiting207
  motornotbusy207:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer210
	DATA8 nos210
	DATA8 busy210
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer210 nos210
	JR_EQ8 0 nos210 motornotbusy210
  motorwaiting210:
	OUTPUT_TEST layer210 nos210 busy210
	JR_EQ8 busy210 0 motornotbusy210
	SLEEP
	JR motorwaiting210
  motornotbusy210:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_INVERSED_0:
SUB_F_TAKE_NEAR_DOUBLE_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer212
	DATA8 nos212
	DATA8 busy212
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer212 nos212
	JR_EQ8 0 nos212 motornotbusy212
  motorwaiting212:
	OUTPUT_TEST layer212 nos212 busy212
	JR_EQ8 busy212 0 motornotbusy212
	SLEEP
	JR motorwaiting212
  motornotbusy212:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer214
	DATA8 nos214
	DATA8 busy214
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer214 nos214
	JR_EQ8 0 nos214 motornotbusy214
  motorwaiting214:
	OUTPUT_TEST layer214 nos214 busy214
	JR_EQ8 busy214 0 motornotbusy214
	SLEEP
	JR motorwaiting214
  motornotbusy214:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer217
	DATA8 nos217
	DATA8 busy217
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer217 nos217
	JR_EQ8 0 nos217 motornotbusy217
  motorwaiting217:
	OUTPUT_TEST layer217 nos217 busy217
	JR_EQ8 busy217 0 motornotbusy217
	SLEEP
	JR motorwaiting217
  motornotbusy217:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB218:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer221
	DATA8 nos221
	DATA8 busy221
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer221 nos221
	JR_EQ8 0 nos221 motornotbusy221
  motorwaiting221:
	OUTPUT_TEST layer221 nos221 busy221
	JR_EQ8 busy221 0 motornotbusy221
	SLEEP
	JR motorwaiting221
  motornotbusy221:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB222:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer225
	DATA8 nos225
	DATA8 busy225
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer225 nos225
	JR_EQ8 0 nos225 motornotbusy225
  motorwaiting225:
	OUTPUT_TEST layer225 nos225 busy225
	JR_EQ8 busy225 0 motornotbusy225
	SLEEP
	JR motorwaiting225
  motornotbusy225:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB226:
RETSUB_F_TAKE_NEAR_DOUBLE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_0:
SUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer228
	DATA8 nos228
	DATA8 busy228
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer228 nos228
	JR_EQ8 0 nos228 motornotbusy228
  motorwaiting228:
	OUTPUT_TEST layer228 nos228 busy228
	JR_EQ8 busy228 0 motornotbusy228
	SLEEP
	JR motorwaiting228
  motornotbusy228:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer230
	DATA8 nos230
	DATA8 busy230
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer230 nos230
	JR_EQ8 0 nos230 motornotbusy230
  motorwaiting230:
	OUTPUT_TEST layer230 nos230 busy230
	JR_EQ8 busy230 0 motornotbusy230
	SLEEP
	JR motorwaiting230
  motornotbusy230:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer233
	DATA8 nos233
	DATA8 busy233
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer233 nos233
	JR_EQ8 0 nos233 motornotbusy233
  motorwaiting233:
	OUTPUT_TEST layer233 nos233 busy233
	JR_EQ8 busy233 0 motornotbusy233
	SLEEP
	JR motorwaiting233
  motornotbusy233:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB234:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer237
	DATA8 nos237
	DATA8 busy237
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer237 nos237
	JR_EQ8 0 nos237 motornotbusy237
  motorwaiting237:
	OUTPUT_TEST layer237 nos237 busy237
	JR_EQ8 busy237 0 motornotbusy237
	SLEEP
	JR motorwaiting237
  motornotbusy237:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB238:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer241
	DATA8 nos241
	DATA8 busy241
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer241 nos241
	JR_EQ8 0 nos241 motornotbusy241
  motorwaiting241:
	OUTPUT_TEST layer241 nos241 busy241
	JR_EQ8 busy241 0 motornotbusy241
	SLEEP
	JR motorwaiting241
  motornotbusy241:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB242:
RETSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer244
	DATA8 nos244
	DATA8 busy244
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer244 nos244
	JR_EQ8 0 nos244 motornotbusy244
  motorwaiting244:
	OUTPUT_TEST layer244 nos244 busy244
	JR_EQ8 busy244 0 motornotbusy244
	SLEEP
	JR motorwaiting244
  motornotbusy244:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer246
	DATA8 nos246
	DATA8 busy246
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer246 nos246
	JR_EQ8 0 nos246 motornotbusy246
  motorwaiting246:
	OUTPUT_TEST layer246 nos246 busy246
	JR_EQ8 busy246 0 motornotbusy246
	SLEEP
	JR motorwaiting246
  motornotbusy246:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer249
	DATA8 nos249
	DATA8 busy249
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer249 nos249
	JR_EQ8 0 nos249 motornotbusy249
  motorwaiting249:
	OUTPUT_TEST layer249 nos249 busy249
	JR_EQ8 busy249 0 motornotbusy249
	SLEEP
	JR motorwaiting249
  motornotbusy249:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB250:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer253
	DATA8 nos253
	DATA8 busy253
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer253 nos253
	JR_EQ8 0 nos253 motornotbusy253
  motorwaiting253:
	OUTPUT_TEST layer253 nos253 busy253
	JR_EQ8 busy253 0 motornotbusy253
	SLEEP
	JR motorwaiting253
  motornotbusy253:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB254:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer257
	DATA8 nos257
	DATA8 busy257
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer257 nos257
	JR_EQ8 0 nos257 motornotbusy257
  motorwaiting257:
	OUTPUT_TEST layer257 nos257 busy257
	JR_EQ8 busy257 0 motornotbusy257
	SLEEP
	JR motorwaiting257
  motornotbusy257:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB258:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer260
	DATA8 nos260
	DATA8 busy260
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer260 nos260
	JR_EQ8 0 nos260 motornotbusy260
  motorwaiting260:
	OUTPUT_TEST layer260 nos260 busy260
	JR_EQ8 busy260 0 motornotbusy260
	SLEEP
	JR motorwaiting260
  motornotbusy260:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer262
	DATA8 nos262
	DATA8 busy262
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer262 nos262
	JR_EQ8 0 nos262 motornotbusy262
  motorwaiting262:
	OUTPUT_TEST layer262 nos262 busy262
	JR_EQ8 busy262 0 motornotbusy262
	SLEEP
	JR motorwaiting262
  motornotbusy262:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer265
	DATA8 nos265
	DATA8 busy265
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer265 nos265
	JR_EQ8 0 nos265 motornotbusy265
  motorwaiting265:
	OUTPUT_TEST layer265 nos265 busy265
	JR_EQ8 busy265 0 motornotbusy265
	SLEEP
	JR motorwaiting265
  motornotbusy265:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB266:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer269
	DATA8 nos269
	DATA8 busy269
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer269 nos269
	JR_EQ8 0 nos269 motornotbusy269
  motorwaiting269:
	OUTPUT_TEST layer269 nos269 busy269
	JR_EQ8 busy269 0 motornotbusy269
	SLEEP
	JR motorwaiting269
  motornotbusy269:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB270:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer273
	DATA8 nos273
	DATA8 busy273
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer273 nos273
	JR_EQ8 0 nos273 motornotbusy273
  motorwaiting273:
	OUTPUT_TEST layer273 nos273 busy273
	JR_EQ8 busy273 0 motornotbusy273
	SLEEP
	JR motorwaiting273
  motornotbusy273:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB274:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
SUB_F_FINISH_AFTER_NEAR_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds278
	MOVEF_32 1500.0 milliseconds278
	DATA32 timer278
	TIMER_WAIT milliseconds278 timer278
	TIMER_READY timer278
    WRITE32 ENDSUB_F_STOP_0:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB279:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer281
	DATA8 nos281
	DATA8 busy281
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer281 nos281
	JR_EQ8 0 nos281 motornotbusy281
  motorwaiting281:
	OUTPUT_TEST layer281 nos281 busy281
	JR_EQ8 busy281 0 motornotbusy281
	SLEEP
	JR motorwaiting281
  motornotbusy281:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer283
	DATA8 nos283
	DATA8 busy283
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer283 nos283
	JR_EQ8 0 nos283 motornotbusy283
  motorwaiting283:
	OUTPUT_TEST layer283 nos283 busy283
	JR_EQ8 busy283 0 motornotbusy283
	SLEEP
	JR motorwaiting283
  motornotbusy283:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds287
	MOVEF_32 1500.0 milliseconds287
	DATA32 timer287
	TIMER_WAIT milliseconds287 timer287
	TIMER_READY timer287
    WRITE32 ENDSUB_F_STOP_0:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB288:
RETSUB_F_FINISH_AFTER_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_0:
SUB_F_FINISH_AFTER_NEAR_INVERSED_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds292
	MOVEF_32 1500.0 milliseconds292
	DATA32 timer292
	TIMER_WAIT milliseconds292 timer292
	TIMER_READY timer292
    WRITE32 ENDSUB_F_STOP_0:CALLSUB293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB293:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer295
	DATA8 nos295
	DATA8 busy295
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer295 nos295
	JR_EQ8 0 nos295 motornotbusy295
  motorwaiting295:
	OUTPUT_TEST layer295 nos295 busy295
	JR_EQ8 busy295 0 motornotbusy295
	SLEEP
	JR motorwaiting295
  motornotbusy295:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer297
	DATA8 nos297
	DATA8 busy297
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer297 nos297
	JR_EQ8 0 nos297 motornotbusy297
  motorwaiting297:
	OUTPUT_TEST layer297 nos297 busy297
	JR_EQ8 busy297 0 motornotbusy297
	SLEEP
	JR motorwaiting297
  motornotbusy297:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds301
	MOVEF_32 3000.0 milliseconds301
	DATA32 timer301
	TIMER_WAIT milliseconds301 timer301
	TIMER_READY timer301
    WRITE32 ENDSUB_F_STOP_0:CALLSUB302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB302:
RETSUB_F_FINISH_AFTER_NEAR_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:
SUB_F_GO_FORWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 25.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 25.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_0:
SUB_F_GO_BACKWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 0.5 VGV_DIFF
    SUBF -25.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF -25.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_BACKWARD_0:
SUB_F_MAIN_0:
    DATA8 layer327
	DATA8 no327
	DATA8 mode8327
	
	MOVEF_8 VGV_LINE_SENSOR no327
	SUB8 no327 1 no327
	DIV8 no327 4 layer327
	MATH MOD8 no327 4 no327

	MOVEF_8 4.0 mode8327
	
	INPUT_DEVICE READY_RAW layer327 no327 0 mode8327 0
    DATA8 layer328
	DATA8 no328	
	MOVEF_8 VGV_LINE_SENSOR no328
	SUB8 no328 1 no328
	DIV8 no328 4 layer328
	MATH MOD8 no328 4 no328 
	INPUT_READY layer328 no328
    STRINGS DUPLICATE 'unknown' VGV_COLOR
    CALL SENSOR.READRAW VGV_LINE_SENSOR 3.0 VGV_VALUES
    CALL ARRAYGET_FLOAT 0.0 VGV_RED VGV_VALUES
    CALL ARRAYGET_FLOAT 1.0 VGV_GREEN VGV_VALUES
    CALL ARRAYGET_FLOAT 2.0 VGV_BLUE VGV_VALUES
    JR_GTEQF VGV_RED 40.0 else333_1
    JR_GTEQF VGV_GREEN 40.0 else333_1
    JR_GTEQF VGV_BLUE 40.0 else333_1
    STRINGS DUPLICATE 'brown' VGV_COLOR
    JR endif333
  else333_1:
    JR_LTEQF VGV_RED 90.0 else333_2
    JR_LTEQF VGV_GREEN 90.0 else333_2
    JR_LTEQF VGV_BLUE 90.0 else333_2
    STRINGS DUPLICATE 'white' VGV_COLOR
    JR endif333
  else333_2:
    JR_LTEQF VGV_RED 70.0 else333_3
    JR_GTEQF VGV_GREEN 40.0 else333_3
    STRINGS DUPLICATE 'red' VGV_COLOR
    JR endif333
  else333_3:
    JR_LTEQF VGV_RED 70.0 else333_4
    JR_LTEQF VGV_GREEN 40.0 else333_4
    STRINGS DUPLICATE 'yellow' VGV_COLOR
    JR endif333
  else333_4:
    JR_GTEQF VGV_BLUE 50.0 else333_5
    STRINGS DUPLICATE 'green' VGV_COLOR
    JR endif333
  else333_5:
    JR_LTEQF VGV_BLUE 50.0 else333_6
    STRINGS DUPLICATE 'blue' VGV_COLOR
  else333_6:
  endif333:
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 VGV_COLOR
    DATA32 milliseconds336
	MOVEF_32 2000.0 milliseconds336
	DATA32 timer336
	TIMER_WAIT milliseconds336 timer336
	TIMER_READY timer336
    CALL EQ_STRING VGV_COLOR 'green' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or338
    CALL EQ_STRING VGV_COLOR 'yellow' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or338
    CALL EQ_STRING VGV_COLOR 'red' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else337_1
  or338:
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 185.0 VLV_DEG_8
    MOVEF_F 70.0 VLV_ACCELERATION_8
    MOVEF_F 70.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_ROTATE_RIGHT_ACCELERATION_5:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTATE_RIGHT_ACCELERATION_5
CALLSUB342:
    TIMER_READ timeMC1
    WRITE32 ENDSUB_F_RESET_0:CALLSUB344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB344:
  while345:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 4500.0 endwhile345
  whilebody345:
    MOVEF_F 40.0 VLV_POWER_4
    WRITE32 ENDSUB_F_GO_FORWARD_NEW_1:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_NEW_1
CALLSUB347:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 4500.0 whilebody345
  endwhile345:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB349:
    DATA8 layer350
	DATA8 no350
	DATA8 mode8350
	
	MOVEF_8 VGV_LINE_SENSOR no350
	SUB8 no350 1 no350
	DIV8 no350 4 layer350
	MATH MOD8 no350 4 no350

	MOVEF_8 0.0 mode8350
	
	INPUT_DEVICE READY_RAW layer350 no350 0 mode8350 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 15.0 VLV_MIN_POWER_12
    MOVEF_F 200.0 VLV_DEG_12
    MOVEF_F 80.0 VLV_ACCELERATION_12
    MOVEF_F 80.0 VLV_ZAME_12
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB351:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB352:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_11
    MOVEF_F 20.0 VLV_BASE_POWER_11
    MOVEF_F 15.0 VLV_MIN_POWER_11
    MOVEF_F 165.0 VLV_DEG_11
    MOVEF_F 70.0 VLV_ACCELERATION_11
    MOVEF_F 70.0 VLV_ZAME_11
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB353:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB354:
    DATA8 layer355
	DATA8 no355	
	MOVEF_8 VGV_LINE_SENSOR no355
	SUB8 no355 1 no355
	DIV8 no355 4 layer355
	MATH MOD8 no355 4 no355 
	INPUT_READY layer355 no355
    WRITE32 ENDSUB_F_RESET_0:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB356:
  while357:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 110.0 or358
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 11.0 endwhile357
  or358:
  whilebody357:
    MOVEF_F 30.0 VLV_POWER_4
    WRITE32 ENDSUB_F_GO_FORWARD_NEW_1:CALLSUB361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_NEW_1
CALLSUB361:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 110.0 whilebody357
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 11.0 whilebody357
  endwhile357:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB364:
    JR endif337
  else337_1:
    DATA8 layer365
	DATA8 no365
	DATA8 mode8365
	
	MOVEF_8 VGV_LINE_SENSOR no365
	SUB8 no365 1 no365
	DIV8 no365 4 layer365
	MATH MOD8 no365 4 no365

	MOVEF_8 0.0 mode8365
	
	INPUT_DEVICE READY_RAW layer365 no365 0 mode8365 0
    MOVEF_F 20.0 VLV_BASE_POWER_9
    MOVEF_F 10.0 VLV_MIN_POWER_9
    MOVEF_F 185.0 VLV_DEG_9
    MOVEF_F 70.0 VLV_ACCELERATION_9
    MOVEF_F 70.0 VLV_ZAME_9
    WRITE32 ENDSUB_F_ROTATE_LEFT_ACCELERATION_5:CALLSUB366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTATE_LEFT_ACCELERATION_5
CALLSUB366:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB367:
    MULF VGV_LEFT_FORWARD -40.0 F.0
    MULF VGV_RIGHT_FORWARD -40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds371
	MOVEF_32 4500.0 milliseconds371
	DATA32 timer371
	TIMER_WAIT milliseconds371 timer371
	TIMER_READY timer371
    WRITE32 ENDSUB_F_STOP_0:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB372:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_11
    MOVEF_F 20.0 VLV_BASE_POWER_11
    MOVEF_F 15.0 VLV_MIN_POWER_11
    MOVEF_F 360.0 VLV_DEG_11
    MOVEF_F 100.0 VLV_ACCELERATION_11
    MOVEF_F 100.0 VLV_ZAME_11
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB373:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB374:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB375:
    DATA8 layer376
	DATA8 no376	
	MOVEF_8 VGV_LINE_SENSOR no376
	SUB8 no376 1 no376
	DIV8 no376 4 layer376
	MATH MOD8 no376 4 no376 
	INPUT_READY layer376 no376
  while377:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 11.0 endwhile377
  whilebody377:
    MOVEF_F 20.0 VLV_POWER_5
    WRITE32 ENDSUB_F_GO_BACKWARD_NEW_1:CALLSUB379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_NEW_1
CALLSUB379:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 11.0 whilebody377
  endwhile377:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB381:
  else337_2:
  endif337:
    MOVEF_F 30.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 350.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 300.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB382:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB383:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 15.0 VLV_MIN_POWER_12
    MOVEF_F 360.0 VLV_DEG_12
    MOVEF_F 100.0 VLV_ACCELERATION_12
    MOVEF_F 100.0 VLV_ZAME_12
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB384:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB385:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 165.0 0.0 'True' 

	DATA8 layer386
	DATA8 nos386
	DATA8 busy386
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer386 nos386
	JR_EQ8 0 nos386 motornotbusy386
  motorwaiting386:
	OUTPUT_TEST layer386 nos386 busy386
	JR_EQ8 busy386 0 motornotbusy386
	SLEEP
	JR motorwaiting386
  motornotbusy386:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds390
	MOVEF_32 2000.0 milliseconds390
	DATA32 timer390
	TIMER_WAIT milliseconds390 timer390
	TIMER_READY timer390
    WRITE32 ENDSUB_F_STOP_0:CALLSUB391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB391:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 7.0 0.0 'True' 

	DATA8 layer393
	DATA8 nos393
	DATA8 busy393
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer393 nos393
	JR_EQ8 0 nos393 motornotbusy393
  motorwaiting393:
	OUTPUT_TEST layer393 nos393 busy393
	JR_EQ8 busy393 0 motornotbusy393
	SLEEP
	JR motorwaiting393
  motornotbusy393:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB394:
    TIMER_READ timeMC1
  while396:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 4500.0 endwhile396
  whilebody396:
    MOVEF_F 30.0 VLV_POWER_4
    WRITE32 ENDSUB_F_GO_FORWARD_NEW_1:CALLSUB398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_NEW_1
CALLSUB398:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 4500.0 whilebody396
  endwhile396:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB400:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 10.0 VLV_MIN_POWER_10
    MOVEF_F 10.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_ACCELERATION_10
    MOVEF_F 0.0 VLV_ZAME_10
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB401:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB402:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer403
	DATA8 nos403
	DATA8 busy403
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer403 nos403
	JR_EQ8 0 nos403 motornotbusy403
  motorwaiting403:
	OUTPUT_TEST layer403 nos403 busy403
	JR_EQ8 busy403 0 motornotbusy403
	SLEEP
	JR motorwaiting403
  motornotbusy403:
    MULF VGV_LEFT_FORWARD -40.0 F.0
    MULF VGV_RIGHT_FORWARD -40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds407
	MOVEF_32 4500.0 milliseconds407
	DATA32 timer407
	TIMER_WAIT milliseconds407 timer407
	TIMER_READY timer407
    WRITE32 ENDSUB_F_STOP_0:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB408:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_11
    MOVEF_F 20.0 VLV_BASE_POWER_11
    MOVEF_F 15.0 VLV_MIN_POWER_11
    MOVEF_F 370.0 VLV_DEG_11
    MOVEF_F 100.0 VLV_ACCELERATION_11
    MOVEF_F 100.0 VLV_ZAME_11
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB409:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB410:
  while411:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 700.0 endwhile411
  whilebody411:
    MOVEF_F 20.0 VLV_POWER_4
    WRITE32 ENDSUB_F_GO_FORWARD_NEW_1:CALLSUB413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_NEW_1
CALLSUB413:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 700.0 whilebody411
  endwhile411:
  while415:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile415
  whilebody415:
    MOVEF_F 20.0 VLV_POWER_4
    WRITE32 ENDSUB_F_GO_FORWARD_NEW_1:CALLSUB417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_NEW_1
CALLSUB417:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody415
  endwhile415:
  while419:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile419
  whilebody419:
    MOVEF_F 20.0 VLV_POWER_4
    WRITE32 ENDSUB_F_GO_FORWARD_NEW_1:CALLSUB421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_NEW_1
CALLSUB421:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody419
  endwhile419:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB423 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB423:
    MOVEF_F 30.0 VLV_BASE_POWER_7
    MOVEF_F 30.0 VLV_MIN_POWER_7
    MOVEF_F 590.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB424:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB425:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB426:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer427
	DATA8 nos427
	DATA8 busy427
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer427 nos427
	JR_EQ8 0 nos427 motornotbusy427
  motorwaiting427:
	OUTPUT_TEST layer427 nos427 busy427
	JR_EQ8 busy427 0 motornotbusy427
	SLEEP
	JR motorwaiting427
  motornotbusy427:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB428:
    DATA8 layer429
	DATA8 no429
	DATA8 mode8429
	
	MOVEF_8 VGV_RIGHT_SENSOR no429
	SUB8 no429 1 no429
	DIV8 no429 4 layer429
	MATH MOD8 no429 4 no429

	MOVEF_8 0.0 mode8429
	
	INPUT_DEVICE READY_RAW layer429 no429 0 mode8429 0
    WRITE32 ENDSUB_F_RESET_0:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB430:
  while431:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile431
  whilebody431:
    MOVEF_F 20.0 VLV_POWER_5
    WRITE32 ENDSUB_F_GO_BACKWARD_NEW_1:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_NEW_1
CALLSUB433:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody431
  endwhile431:
  while435:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile435
  whilebody435:
    MOVEF_F 20.0 VLV_POWER_5
    WRITE32 ENDSUB_F_GO_BACKWARD_NEW_1:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_NEW_1
CALLSUB437:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody435
  endwhile435:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB439:
    CALL MOTOR.START VGV_GRABBER_MOTOR 50.0
    DATA32 milliseconds441
	MOVEF_32 2000.0 milliseconds441
	DATA32 timer441
	TIMER_WAIT milliseconds441 timer441
	TIMER_READY timer441
    CALL MOTOR.STOP VGV_GRABBER_MOTOR 'True'
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 10.0 VLV_MIN_POWER_10
    MOVEF_F 560.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_ACCELERATION_10
    MOVEF_F 100.0 VLV_ZAME_10
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB443:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB444:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 360.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_ACCELERATION_12
    MOVEF_F 0.0 VLV_ZAME_12
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB445:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB446:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds450
	MOVEF_32 3000.0 milliseconds450
	DATA32 timer450
	TIMER_WAIT milliseconds450 timer450
	TIMER_READY timer450
    WRITE32 ENDSUB_F_STOP_0:CALLSUB451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB451:
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 15.0 VLV_MIN_POWER_7
    MOVEF_F 280.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 100.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB452:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB453:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_Z
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_Z '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds458
	MOVEF_32 1000.0 milliseconds458
	DATA32 timer458
	TIMER_WAIT milliseconds458 timer458
	TIMER_READY timer458
    JR_NEQF VGV_Z 0.0 else459_1
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_ACCELERATION_10
    MOVEF_F 0.0 VLV_ZAME_10
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB460 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB460:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB461:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_12
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 370.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_ACCELERATION_12
    MOVEF_F 0.0 VLV_ZAME_12
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB462:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB463:
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 15.0 VLV_MIN_POWER_7
    MOVEF_F 210.0 VLV_DEG_7
    MOVEF_F 100.0 VLV_ACCELERATION_7
    MOVEF_F 100.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB464:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB465:
    CALL MOTOR.START VGV_WATER_MOTOR -50.0
    DATA32 milliseconds467
	MOVEF_32 1000.0 milliseconds467
	DATA32 timer467
	TIMER_WAIT milliseconds467 timer467
	TIMER_READY timer467
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 210.0 VLV_DEG_10
    MOVEF_F 100.0 VLV_ACCELERATION_10
    MOVEF_F 100.0 VLV_ZAME_10
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB469:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB470:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_11
    MOVEF_F 20.0 VLV_BASE_POWER_11
    MOVEF_F 20.0 VLV_MIN_POWER_11
    MOVEF_F 370.0 VLV_DEG_11
    MOVEF_F 0.0 VLV_ACCELERATION_11
    MOVEF_F 0.0 VLV_ZAME_11
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB471:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds475
	MOVEF_32 1000.0 milliseconds475
	DATA32 timer475
	TIMER_WAIT milliseconds475 timer475
	TIMER_READY timer475
    WRITE32 ENDSUB_F_STOP_0:CALLSUB476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB476:
    JR endif459
  else459_1:
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 15.0 VLV_MIN_POWER_7
    MOVEF_F 160.0 VLV_DEG_7
    MOVEF_F 60.0 VLV_ACCELERATION_7
    MOVEF_F 60.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB477 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB477:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB478:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_Z
    JR_NEQF VGV_Z 0.0 else480_1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_11
    MOVEF_F 20.0 VLV_BASE_POWER_11
    MOVEF_F 20.0 VLV_MIN_POWER_11
    MOVEF_F 140.0 VLV_DEG_11
    MOVEF_F 0.0 VLV_ACCELERATION_11
    MOVEF_F 0.0 VLV_ZAME_11
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB481:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB482:
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 20.0 VLV_MIN_POWER_7
    MOVEF_F 230.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB483:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB484:
    CALL MOTOR.START VGV_WATER_MOTOR -50.0
    DATA32 milliseconds486
	MOVEF_32 1000.0 milliseconds486
	DATA32 timer486
	TIMER_WAIT milliseconds486 timer486
	TIMER_READY timer486
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 230.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_ACCELERATION_10
    MOVEF_F 0.0 VLV_ZAME_10
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB488:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB489:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_12
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 140.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_ACCELERATION_12
    MOVEF_F 0.0 VLV_ZAME_12
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB490:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB491:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds495
	MOVEF_32 3000.0 milliseconds495
	DATA32 timer495
	TIMER_WAIT milliseconds495 timer495
	TIMER_READY timer495
    WRITE32 ENDSUB_F_STOP_0:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB496:
    JR endif480
  else480_1:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB497:
    TIMER_READ timeMC1
  while499:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 5000.0 endwhile499
  whilebody499:
    MOVEF_F 30.0 VLV_POWER_4
    WRITE32 ENDSUB_F_GO_FORWARD_NEW_1:CALLSUB501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_NEW_1
CALLSUB501:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 5000.0 whilebody499
  endwhile499:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB503:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_ACCELERATION_10
    MOVEF_F 0.0 VLV_ZAME_10
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB504:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB505:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_12
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_12
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 370.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_ACCELERATION_12
    MOVEF_F 0.0 VLV_ZAME_12
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB506:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB507:
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 15.0 VLV_MIN_POWER_7
    MOVEF_F 210.0 VLV_DEG_7
    MOVEF_F 100.0 VLV_ACCELERATION_7
    MOVEF_F 100.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB508:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB509:
    CALL MOTOR.START VGV_WATER_MOTOR -50.0
    DATA32 milliseconds511
	MOVEF_32 1000.0 milliseconds511
	DATA32 timer511
	TIMER_WAIT milliseconds511 timer511
	TIMER_READY timer511
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 210.0 VLV_DEG_10
    MOVEF_F 100.0 VLV_ACCELERATION_10
    MOVEF_F 100.0 VLV_ZAME_10
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB513:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB514:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_11
    MOVEF_F 20.0 VLV_BASE_POWER_11
    MOVEF_F 20.0 VLV_MIN_POWER_11
    MOVEF_F 370.0 VLV_DEG_11
    MOVEF_F 0.0 VLV_ACCELERATION_11
    MOVEF_F 0.0 VLV_ZAME_11
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB515:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds519
	MOVEF_32 5000.0 milliseconds519
	DATA32 timer519
	TIMER_WAIT milliseconds519 timer519
	TIMER_READY timer519
    WRITE32 ENDSUB_F_STOP_0:CALLSUB520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB520:
  else480_2:
  endif480:
  else459_2:
  endif459:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB521:
    CALL EQ_STRING VGV_COLOR 'brown' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else522_1
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 30.0 'True'

	DATA8 layer526
	DATA8 nos526
	DATA8 busy526
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer526 nos526
	JR_EQ8 0 nos526 motornotbusy526
  motorwaiting526:
	OUTPUT_TEST layer526 nos526 busy526
	JR_EQ8 busy526 0 motornotbusy526
	SLEEP
	JR motorwaiting526
  motornotbusy526:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB527:
    JR endif522
  else522_1:
    CALL EQ_STRING VGV_COLOR 'white' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else522_2
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 20.0 VLV_MIN_POWER_7
    MOVEF_F 600.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB529:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB530:
    JR endif522
  else522_2:
    CALL EQ_STRING VGV_COLOR 'blue' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else522_3
    WRITE32 ENDSUB_F_RESET_0:CALLSUB532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB532:
    TIMER_READ timeMC1
  while534:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 5000.0 endwhile534
  whilebody534:
    MOVEF_F 30.0 VLV_POWER_4
    WRITE32 ENDSUB_F_GO_FORWARD_NEW_1:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_NEW_1
CALLSUB536:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 5000.0 whilebody534
  endwhile534:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB538:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 30.0 'True'

	DATA8 layer541
	DATA8 nos541
	DATA8 busy541
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer541 nos541
	JR_EQ8 0 nos541 motornotbusy541
  motorwaiting541:
	OUTPUT_TEST layer541 nos541 busy541
	JR_EQ8 busy541 0 motornotbusy541
	SLEEP
	JR motorwaiting541
  motornotbusy541:
    JR endif522
  else522_3:
    CALL EQ_STRING VGV_COLOR 'red' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else522_4
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_11
    MOVEF_F 20.0 VLV_BASE_POWER_11
    MOVEF_F 20.0 VLV_MIN_POWER_11
    MOVEF_F 365.0 VLV_DEG_11
    MOVEF_F 0.0 VLV_ACCELERATION_11
    MOVEF_F 0.0 VLV_ZAME_11
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB543:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB544 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB544:
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 20.0 VLV_MIN_POWER_7
    MOVEF_F 430.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB545:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB546 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB546:
    JR endif522
  else522_4:
    CALL EQ_STRING VGV_COLOR 'yellow' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else522_5
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_11
    MOVEF_F 20.0 VLV_BASE_POWER_11
    MOVEF_F 20.0 VLV_MIN_POWER_11
    MOVEF_F 170.0 VLV_DEG_11
    MOVEF_F 0.0 VLV_ACCELERATION_11
    MOVEF_F 0.0 VLV_ZAME_11
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB548:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB549:
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 20.0 VLV_MIN_POWER_7
    MOVEF_F 850.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB550:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB551 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB551:
    JR endif522
  else522_5:
    CALL EQ_STRING VGV_COLOR 'green' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else522_6
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_11
    MOVEF_F 20.0 VLV_BASE_POWER_11
    MOVEF_F 20.0 VLV_MIN_POWER_11
    MOVEF_F 100.0 VLV_DEG_11
    MOVEF_F 0.0 VLV_ACCELERATION_11
    MOVEF_F 0.0 VLV_ZAME_11
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB553 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB553:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB554:
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 20.0 VLV_MIN_POWER_7
    MOVEF_F 1300.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB555 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB555:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB556 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB556:
  else522_6:
  endif522:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_ULTRASONIC_POWER_2:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VLV_V_1
    SUBF VLV_V_1 VLV_U_1 VLV_NOWERROR_1
    SUBF VGV_LASTERROR VLV_NOWERROR_1 VLV_DIF_1
    ADDF VGV_INTEGRAL VLV_NOWERROR_1 F.0
    DATAF tmpf561
    DATA8 flag561
    DIVF F.0 10.0 tmpf561
    CP_EQF 0.0 10.0 flag561
    SELECTF flag561 0.0 tmpf561 VLV_INTEGRAL_1

    SUBF VLV_NOWERROR_1 VGV_LASTERROR VLV_DERIVATIVE_1
    MULF VLV_NOWERROR_1 VGV_P_U F.0
    MULF VLV_INTEGRAL_1 VGV_D_U F.1
    ADDF F.0 F.1 VLV_UP_1
    ADDF VLV_POWER_1 VLV_UP_1 F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF VLV_POWER_1 VLV_UP_1 F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VLV_NOWERROR_1 VLV_LASTERROR_1
RETSUB_F_ULTRASONIC_POWER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_POWER_2:
SUB_F_AFTER_ACTION_0:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB572:
    DATA32 milliseconds573
	MOVEF_32 300.0 milliseconds573
	DATA32 timer573
	TIMER_WAIT milliseconds573 timer573
	TIMER_READY timer573
RETSUB_F_AFTER_ACTION_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_AFTER_ACTION_0:
SUB_F_ULTRASONIC_ZAMED_5:
    SUBF VLV_DEGREES_3 VLV_ZAMED_DEGREES_3 VLV_NORMAL_DEGREES_3
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while576:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VLV_NORMAL_DEGREES_3 endwhile576
  whilebody576:
    MOVEF_F VLV_BASE_POWER_3 VLV_POWER_1
    MOVEF_F VLV_U_3 VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB578:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VLV_NORMAL_DEGREES_3 whilebody576
  endwhile576:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_3
  while582:
    JR_GTEQF VLV_C_3 VLV_ZAMED_DEGREES_3 endwhile582
  whilebody582:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.1
    DATAF tmpf584
    DATA8 flag584
    DIVF F.1 VLV_ZAMED_DEGREES_3 tmpf584
    CP_EQF 0.0 VLV_ZAMED_DEGREES_3 flag584
    SELECTF flag584 0.0 tmpf584 F.0

    MULF F.0 VLV_BASE_POWER_3 VLV_MINUS_3
    SUBF VLV_BASE_POWER_3 VLV_MINUS_3 VLV_POWER_3
    JR_GTEQF VLV_POWER_3 VLV_MIN_POWER_3 else587_1
    MOVEF_F VLV_MIN_POWER_3 VLV_POWER_3
  else587_1:
  endif587:
    MOVEF_F VLV_POWER_3 VLV_POWER_1
    MOVEF_F VLV_U_3 VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB588:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_3
    JR_LTF VLV_C_3 VLV_ZAMED_DEGREES_3 whilebody582
  endwhile582:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB590:
RETSUB_F_ULTRASONIC_ZAMED_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_ZAMED_5:
SUB_F_GO_FORWARD_NEW_1:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_C_4
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_C_4
    SUBF VLV_R_C_4 VLV_L_C_4 F.0
    MULF F.0 1.0 VLV_DIFF_4
    SUBF VLV_POWER_4 VLV_DIFF_4 F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_P_4
    ADDF VLV_POWER_4 VLV_DIFF_4 F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_P_4
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VLV_R_P_4
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VLV_L_P_4
RETSUB_F_GO_FORWARD_NEW_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_NEW_1:
SUB_F_GO_BACKWARD_NEW_1:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_C_5
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_C_5
    SUBF VLV_R_C_5 VLV_L_C_5 F.0
    MULF F.0 0.5 VLV_DIFF_5
    MULF -1.0 VLV_POWER_5 F.1
    SUBF F.1 VLV_DIFF_5 F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_P_5
    MULF -1.0 VLV_POWER_5 F.1
    ADDF F.1 VLV_DIFF_5 F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_P_5
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VLV_R_P_5
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VLV_L_P_5
RETSUB_F_GO_BACKWARD_NEW_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_BACKWARD_NEW_1:
SUB_F_RESET_0:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_MOVE_FORWARD_ACCELERATION_5:
    SUBF VLV_DEG_7 VLV_ACCELERATION_7 F.0
    SUBF F.0 VLV_ZAME_7 VLV_NORMAL_DEGREES_7
    WRITE32 ENDSUB_F_RESET_0:CALLSUB621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB621:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_7
  while623:
    JR_GTEQF VLV_C_7 VLV_ACCELERATION_7 endwhile623
  whilebody623:
    DATAF tmpf624
    DATA8 flag624
    DIVF VLV_C_7 VLV_ACCELERATION_7 tmpf624
    CP_EQF 0.0 VLV_ACCELERATION_7 flag624
    SELECTF flag624 0.0 tmpf624 VLV_P_7

    SUBF VLV_BASE_POWER_7 VLV_MIN_POWER_7 F.1
    MULF VLV_P_7 F.1 F.0
    ADDF F.0 VLV_MIN_POWER_7 VLV_POWER_7
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_P_7 VLV_DELTA_7
    SUBF VLV_POWER_7 VLV_DELTA_7 VLV_LEFT_POWER_7
    ADDF VLV_POWER_7 VLV_DELTA_7 VLV_RIGHT_POWER_7
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_7 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_7 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_7
    JR_LTF VLV_C_7 VLV_ACCELERATION_7 whilebody623
  endwhile623:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB640 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB640:
    MOVEF_F 0.0 VLV_C_7
  while641:
    JR_GTEQF VLV_C_7 VLV_NORMAL_DEGREES_7 endwhile641
  whilebody641:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 1.0 VLV_DELTA_7
    SUBF VLV_BASE_POWER_7 VLV_DELTA_7 VLV_LEFT_POWER_7
    ADDF VLV_BASE_POWER_7 VLV_DELTA_7 VLV_RIGHT_POWER_7
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_7 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_7 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_7
    JR_LTF VLV_C_7 VLV_NORMAL_DEGREES_7 whilebody641
  endwhile641:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB654:
    MOVEF_F 0.0 VLV_C_7
  while655:
    JR_GTEQF VLV_C_7 VLV_ZAME_7 endwhile655
  whilebody655:
    DATAF tmpf656
    DATA8 flag656
    DIVF VLV_C_7 VLV_ZAME_7 tmpf656
    CP_EQF 0.0 VLV_ZAME_7 flag656
    SELECTF flag656 0.0 tmpf656 VLV_P_7

    SUBF VLV_BASE_POWER_7 VLV_MIN_POWER_7 F.1
    SUBF 1.0 VLV_P_7 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_7 VLV_POWER_7
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    SUBF 1.0 VLV_P_7 F.1
    MULF F.0 F.1 VLV_DELTA_7
    SUBF VLV_POWER_7 VLV_DELTA_7 VLV_LEFT_POWER_7
    ADDF VLV_POWER_7 VLV_DELTA_7 VLV_RIGHT_POWER_7
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_7 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_7 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_7
    JR_LTF VLV_C_7 VLV_ZAME_7 whilebody655
  endwhile655:
RETSUB_F_MOVE_FORWARD_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:
SUB_F_ROTATE_RIGHT_ACCELERATION_5:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB674:
    SUBF VLV_DEG_8 VLV_ACCELERATION_8 F.0
    SUBF F.0 VLV_ZAME_8 VLV_NORMAL_DEG_8
    MOVEF_F 0.0 VLV_C_8
  while677:
    JR_GTEQF VLV_C_8 VLV_ACCELERATION_8 endwhile677
  whilebody677:
    DATAF tmpf678
    DATA8 flag678
    DIVF VLV_C_8 VLV_ACCELERATION_8 tmpf678
    CP_EQF 0.0 VLV_ACCELERATION_8 flag678
    SELECTF flag678 0.0 tmpf678 VLV_P_8

    SUBF VLV_BASE_POWER_8 VLV_MIN_POWER_8 F.1
    MULF VLV_P_8 F.1 F.0
    ADDF F.0 VLV_MIN_POWER_8 VLV_POWER_8
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 -1.0 VLV_R_8
    SUBF VLV_C_8 VLV_R_8 F.0
    MULF F.0 VLV_P_8 VLV_DELTA_8
    SUBF VLV_POWER_8 VLV_DELTA_8 VLV_LEFT_POWER_8
    ADDF VLV_POWER_8 VLV_DELTA_8 VLV_RIGHT_POWER_8
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_8 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_8 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds693
	MOVEF_32 10.0 milliseconds693
	DATA32 timer693
	TIMER_WAIT milliseconds693 timer693
	TIMER_READY timer693
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_C_8
    JR_LTF VLV_C_8 VLV_ACCELERATION_8 whilebody677
  endwhile677:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB696 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB696:
    MOVEF_F 0.0 VLV_C_8
  while697:
    JR_GTEQF VLV_C_8 VLV_NORMAL_DEG_8 endwhile697
  whilebody697:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_C_8
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 -1.0 VLV_R_8
    SUBF VLV_C_8 VLV_R_8 F.0
    MULF F.0 1.0 VLV_DELTA_8
    SUBF VLV_BASE_POWER_8 VLV_DELTA_8 VLV_LEFT_POWER_8
    ADDF VLV_BASE_POWER_8 VLV_DELTA_8 VLV_RIGHT_POWER_8
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_8 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_8 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    JR_LTF VLV_C_8 VLV_NORMAL_DEG_8 whilebody697
  endwhile697:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB711 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB711:
    MOVEF_F 0.0 VLV_C_8
  while712:
    JR_GTEQF VLV_C_8 VLV_ZAME_8 endwhile712
  whilebody712:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 -1.0 VLV_R_8
    DATAF tmpf716
    DATA8 flag716
    DIVF VLV_C_8 VLV_ZAME_8 tmpf716
    CP_EQF 0.0 VLV_ZAME_8 flag716
    SELECTF flag716 0.0 tmpf716 VLV_P_8

    SUBF VLV_C_8 VLV_R_8 F.0
    SUBF 1.0 VLV_P_8 F.1
    MULF F.0 F.1 VLV_DELTA_8
    SUBF 1.0 VLV_P_8 F.1
    SUBF VLV_BASE_POWER_8 VLV_MIN_POWER_8 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_8 VLV_POWER_8
    SUBF VLV_POWER_8 VLV_DELTA_8 VLV_LEFT_POWER_8
    ADDF VLV_POWER_8 VLV_DELTA_8 VLV_RIGHT_POWER_8
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_8 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_8 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds730
	MOVEF_32 10.0 milliseconds730
	DATA32 timer730
	TIMER_WAIT milliseconds730 timer730
	TIMER_READY timer730
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_C_8
    JR_LTF VLV_C_8 VLV_ZAME_8 whilebody712
  endwhile712:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB733:
RETSUB_F_ROTATE_RIGHT_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ROTATE_RIGHT_ACCELERATION_5:
SUB_F_ROTATE_LEFT_ACCELERATION_5:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB734:
    SUBF VLV_DEG_9 VLV_ACCELERATION_9 F.0
    SUBF F.0 VLV_ZAME_9 VLV_NORMAL_DEG_9
    MOVEF_F 0.0 VLV_R_9
  while737:
    JR_GTEQF VLV_R_9 VLV_ACCELERATION_9 endwhile737
  whilebody737:
    DATAF tmpf738
    DATA8 flag738
    DIVF VLV_R_9 VLV_ACCELERATION_9 tmpf738
    CP_EQF 0.0 VLV_ACCELERATION_9 flag738
    SELECTF flag738 0.0 tmpf738 VLV_P_9

    SUBF VLV_BASE_POWER_9 VLV_MIN_POWER_9 F.1
    MULF VLV_P_9 F.1 F.0
    ADDF F.0 VLV_MIN_POWER_9 VLV_POWER_9
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 -1.0 VLV_L_9
    SUBF VLV_R_9 VLV_L_9 F.0
    MULF F.0 VLV_P_9 VLV_DELTA_9
    SUBF VLV_POWER_9 VLV_DELTA_9 VLV_RIGHT_POWER_9
    ADDF VLV_POWER_9 VLV_DELTA_9 VLV_LEFT_POWER_9
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_9 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_9 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds753
	MOVEF_32 10.0 milliseconds753
	DATA32 timer753
	TIMER_WAIT milliseconds753 timer753
	TIMER_READY timer753
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_9
    JR_LTF VLV_R_9 VLV_ACCELERATION_9 whilebody737
  endwhile737:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB756 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB756:
    MOVEF_F 0.0 VLV_R_9
  while757:
    JR_GTEQF VLV_R_9 VLV_NORMAL_DEG_9 endwhile757
  whilebody757:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 -1.0 VLV_L_9
    SUBF VLV_R_9 VLV_L_9 F.0
    MULF F.0 1.0 VLV_DELTA_9
    SUBF VLV_BASE_POWER_9 VLV_DELTA_9 VLV_RIGHT_POWER_9
    ADDF VLV_BASE_POWER_9 VLV_DELTA_9 VLV_LEFT_POWER_9
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_9 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_9 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_9
    JR_LTF VLV_R_9 VLV_NORMAL_DEG_9 whilebody757
  endwhile757:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB771 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB771:
    MOVEF_F 0.0 VLV_R_9
  while772:
    JR_GTEQF VLV_R_9 VLV_ZAME_9 endwhile772
  whilebody772:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 -1.0 VLV_L_9
    DATAF tmpf776
    DATA8 flag776
    DIVF VLV_R_9 VLV_ZAME_9 tmpf776
    CP_EQF 0.0 VLV_ZAME_9 flag776
    SELECTF flag776 0.0 tmpf776 VLV_P_9

    SUBF VLV_R_9 VLV_L_9 F.0
    SUBF 1.0 VLV_P_9 F.1
    MULF F.0 F.1 VLV_DELTA_9
    SUBF 1.0 VLV_P_9 F.1
    SUBF VLV_BASE_POWER_9 VLV_MIN_POWER_9 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_9 VLV_POWER_9
    SUBF VLV_POWER_9 VLV_DELTA_9 VLV_RIGHT_POWER_9
    ADDF VLV_POWER_9 VLV_DELTA_9 VLV_LEFT_POWER_9
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_9 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_9 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds790
	MOVEF_32 10.0 milliseconds790
	DATA32 timer790
	TIMER_WAIT milliseconds790 timer790
	TIMER_READY timer790
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_9
    JR_LTF VLV_R_9 VLV_ZAME_9 whilebody772
  endwhile772:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB793 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB793:
RETSUB_F_ROTATE_LEFT_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ROTATE_LEFT_ACCELERATION_5:
SUB_F_MOVE_BACKWARD_ACCELERATION_5:
    SUBF VLV_DEG_10 VLV_ACCELERATION_10 F.0
    SUBF F.0 VLV_ZAME_10 VLV_NORMAL_DEGREES_10
    WRITE32 ENDSUB_F_RESET_0:CALLSUB796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB796:
    MOVEF_F 0.0 VLV_C_10
  while797:
    JR_GTEQF VLV_C_10 VLV_ACCELERATION_10 endwhile797
  whilebody797:
    DATAF tmpf798
    DATA8 flag798
    DIVF VLV_C_10 VLV_ACCELERATION_10 tmpf798
    CP_EQF 0.0 VLV_ACCELERATION_10 flag798
    SELECTF flag798 0.0 tmpf798 VLV_P_10

    SUBF VLV_BASE_POWER_10 VLV_MIN_POWER_10 F.1
    MULF VLV_P_10 F.1 F.0
    ADDF F.0 VLV_MIN_POWER_10 VLV_POWER_10
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.4
    MULF F.4 VGV_RIGHT_FORWARD F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_P_10 F.0
    MULF F.0 -1.0 VLV_DELTA_10
    SUBF VLV_POWER_10 VLV_DELTA_10 VLV_LEFT_POWER_10
    ADDF VLV_POWER_10 VLV_DELTA_10 VLV_RIGHT_POWER_10
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_10 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_10 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_10
    JR_LTF VLV_C_10 VLV_ACCELERATION_10 whilebody797
  endwhile797:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB818 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB818:
    MOVEF_F 0.0 VLV_C_10
  while819:
    JR_GTEQF VLV_C_10 VLV_NORMAL_DEGREES_10 endwhile819
  whilebody819:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 -1.0 VLV_DELTA_10
    SUBF VLV_BASE_POWER_10 VLV_DELTA_10 VLV_LEFT_POWER_10
    ADDF VLV_BASE_POWER_10 VLV_DELTA_10 VLV_RIGHT_POWER_10
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_10 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_10 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_10
    JR_LTF VLV_C_10 VLV_NORMAL_DEGREES_10 whilebody819
  endwhile819:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB835:
    MOVEF_F 0.0 VLV_C_10
  while836:
    JR_GTEQF VLV_C_10 VLV_ZAME_10 endwhile836
  whilebody836:
    DATAF tmpf837
    DATA8 flag837
    DIVF VLV_C_10 VLV_ZAME_10 tmpf837
    CP_EQF 0.0 VLV_ZAME_10 flag837
    SELECTF flag837 0.0 tmpf837 VLV_P_10

    SUBF VLV_BASE_POWER_10 VLV_MIN_POWER_10 F.1
    SUBF 1.0 VLV_P_10 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_10 VLV_POWER_10
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.4
    MULF F.4 VGV_RIGHT_FORWARD F.3
    SUBF F.2 F.3 F.1
    SUBF 1.0 VLV_P_10 F.2
    MULF F.1 F.2 F.0
    MULF F.0 -1.0 VLV_DELTA_10
    SUBF VLV_POWER_10 VLV_DELTA_10 VLV_LEFT_POWER_10
    ADDF VLV_POWER_10 VLV_DELTA_10 VLV_RIGHT_POWER_10
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_10 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_10 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_10
    JR_LTF VLV_C_10 VLV_ZAME_10 whilebody836
  endwhile836:
RETSUB_F_MOVE_BACKWARD_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:
SUB_F_MOTOR_FORWARD_ACCELERATION_7:
    SUBF VLV_DEG_11 VLV_ACCELERATION_11 F.0
    SUBF F.0 VLV_ZAME_11 VLV_NORMAL_DEG_11
    CALL MOTOR.RESETCOUNT VLV_MOTOR_11
    MOVEF_F 0.0 VLV_C_11
  while862:
    JR_GTEQF VLV_C_11 VLV_ACCELERATION_11 endwhile862
  whilebody862:
    DATAF tmpf863
    DATA8 flag863
    DIVF VLV_C_11 VLV_ACCELERATION_11 tmpf863
    CP_EQF 0.0 VLV_ACCELERATION_11 flag863
    SELECTF flag863 0.0 tmpf863 VLV_P_11

    SUBF VLV_BASE_POWER_11 VLV_MIN_POWER_11 F.1
    MULF F.1 VLV_P_11 F.0
    ADDF F.0 VLV_MIN_POWER_11 VLV_POWER_11
    MATH FLOOR VLV_POWER_11 F.0
    MULF F.0 VLV_FORWARD_11 VLV_POWER_11
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_POWER_11 '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    CALL MOTOR.START VLV_MOTOR_11 VLV_POWER_11
    CALL MOTOR.GETCOUNT VLV_MOTOR_11 F.0
    MULF F.0 VLV_FORWARD_11 VLV_C_11
    DATA32 milliseconds877
	MOVEF_32 10.0 milliseconds877
	DATA32 timer877
	TIMER_WAIT milliseconds877 timer877
	TIMER_READY timer877
    JR_LTF VLV_C_11 VLV_ACCELERATION_11 whilebody862
  endwhile862:
    MULF VLV_BASE_POWER_11 VLV_FORWARD_11 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_11 F.0 0.0 VLV_NORMAL_DEG_11 0.0 'False' 

	DATA8 layer879
	DATA8 nos879
	DATA8 busy879
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_11 layer879 nos879
	JR_EQ8 0 nos879 motornotbusy879
  motorwaiting879:
	OUTPUT_TEST layer879 nos879 busy879
	JR_EQ8 busy879 0 motornotbusy879
	SLEEP
	JR motorwaiting879
  motornotbusy879:
    CALL MOTOR.RESETCOUNT VLV_MOTOR_11
    MOVEF_F 0.0 VLV_C_11
  while881:
    JR_GTEQF VLV_C_11 VLV_ZAME_11 endwhile881
  whilebody881:
    DATAF tmpf882
    DATA8 flag882
    DIVF VLV_C_11 VLV_ZAME_11 tmpf882
    CP_EQF 0.0 VLV_ZAME_11 flag882
    SELECTF flag882 0.0 tmpf882 VLV_P_11

    SUBF VLV_BASE_POWER_11 VLV_MIN_POWER_11 F.1
    SUBF 1.0 VLV_P_11 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_11 VLV_POWER_11
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_POWER_11 '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    MULF VLV_POWER_11 VLV_FORWARD_11 F.0
    CALL MOTOR.START VLV_MOTOR_11 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_11 F.0
    MULF F.0 VLV_FORWARD_11 VLV_C_11
    DATA32 milliseconds896
	MOVEF_32 10.0 milliseconds896
	DATA32 timer896
	TIMER_WAIT milliseconds896 timer896
	TIMER_READY timer896
    JR_LTF VLV_C_11 VLV_ZAME_11 whilebody881
  endwhile881:
RETSUB_F_MOTOR_FORWARD_ACCELERATION_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:
SUB_F_MOTOR_BACKWARD_ACCELERATION_7:
    SUBF VLV_DEG_12 VLV_ACCELERATION_12 F.0
    SUBF F.0 VLV_ZAME_12 VLV_NORMAL_DEG_12
    CALL MOTOR.RESETCOUNT VLV_MOTOR_12
    MOVEF_F 0.0 VLV_C_12
  while900:
    JR_GTEQF VLV_C_12 VLV_ACCELERATION_12 endwhile900
  whilebody900:
    DATAF tmpf901
    DATA8 flag901
    DIVF VLV_C_12 VLV_ACCELERATION_12 tmpf901
    CP_EQF 0.0 VLV_ACCELERATION_12 flag901
    SELECTF flag901 0.0 tmpf901 F.1

    SUBF VLV_BASE_POWER_12 VLV_MIN_POWER_12 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_12 VLV_POWER_12
    MULF VLV_FORWARD_12 VLV_POWER_12 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VLV_MOTOR_12 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_12 F.1
    MULF F.1 VLV_FORWARD_12 F.0
    MULF F.0 -1.0 VLV_C_12
    DATA32 milliseconds911
	MOVEF_32 10.0 milliseconds911
	DATA32 timer911
	TIMER_WAIT milliseconds911 timer911
	TIMER_READY timer911
    JR_LTF VLV_C_12 VLV_ACCELERATION_12 whilebody900
  endwhile900:
    MULF VLV_FORWARD_12 VLV_BASE_POWER_12 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_12 F.0 0.0 VLV_NORMAL_DEG_12 0.0 'False' 

	DATA8 layer914
	DATA8 nos914
	DATA8 busy914
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_12 layer914 nos914
	JR_EQ8 0 nos914 motornotbusy914
  motorwaiting914:
	OUTPUT_TEST layer914 nos914 busy914
	JR_EQ8 busy914 0 motornotbusy914
	SLEEP
	JR motorwaiting914
  motornotbusy914:
    CALL MOTOR.RESETCOUNT VLV_MOTOR_12
    MOVEF_F 0.0 VLV_C_12
  while916:
    JR_GTEQF VLV_C_12 VLV_ZAME_12 endwhile916
  whilebody916:
    DATAF tmpf917
    DATA8 flag917
    DIVF VLV_C_12 VLV_ZAME_12 tmpf917
    CP_EQF 0.0 VLV_ZAME_12 flag917
    SELECTF flag917 0.0 tmpf917 VLV_P_12

    SUBF VLV_BASE_POWER_12 VLV_MIN_POWER_12 F.1
    SUBF 1.0 VLV_P_12 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_12 VLV_POWER_12
    MULF VLV_FORWARD_12 VLV_POWER_12 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VLV_MOTOR_12 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_12 F.1
    MULF F.1 VLV_FORWARD_12 F.0
    MULF F.0 -1.0 VLV_C_12
    DATA32 milliseconds928
	MOVEF_32 10.0 milliseconds928
	DATA32 timer928
	TIMER_WAIT milliseconds928 timer928
	TIMER_READY timer928
    JR_LTF VLV_C_12 VLV_ZAME_12 whilebody916
  endwhile916:
RETSUB_F_MOTOR_BACKWARD_ACCELERATION_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:
}
subcall ARRAYSTORE_FLOAT   // FFFV
{
	IN_F index
	IN_F value	
	IN_16 handle
	
	DATA32 index32
	DATA32 len	
	MOVEF_32 index index32

	ARRAY SIZE handle len
	JR_LT32 index32 0 negativeindex
	JR_LT32 index32 len arraybigenough

increasesize:	
	DATA32 doublelen
	ADD32 len len doublelen
	ARRAY RESIZE handle doublelen
writeloop:	
	ARRAY_WRITE handle len 0.0
	ADD32 len 1 len
	JR_LT32 len doublelen writeloop
	JR_GTEQ32 index32 len increasesize
	
arraybigenough:
	ARRAY_WRITE handle index32 value
negativeindex:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
