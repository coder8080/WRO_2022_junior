lv_base_power_12 = 0
lv_min_power_12 = 0
lv_deg_12 = 0
lv_coef_12 = 0
lv_base_power_17 = 0
lv_min_power_17 = 0
lv_deg_17 = 0
lv_coef_17 = 0
lv_motor_16 = ""
lv_forward_16 = 0
lv_deg_16 = 0
lv_max_power_16 = 0
lv_acceleration_16 = ""
lv_zame_16 = ""
lv_to_stop_16 = ""
lv_time_2 = 0
lv_port_5 = 0
lv_mode_5 = 0
lv_d_5 = 0
lv_result_5 = 0
lv_text_6 = ""
lv_power_1 = 0
lv_percent_7 = 0
lv_l_9 = 0
lv_l_8 = 0
lv_power_14 = 0
lv_coef_19 = 0
lv_coef_20 = 0
lv_is_inverted_21 = ""
lv_is_inverted_22 = ""
lv_minus_deg_22 = 0
lv_minus_deg_23 = 0
lv_is_inverted_25 = ""
lv_motor1_25 = ""
lv_motor2_25 = ""
lv_forward1_25 = 0
lv_forward2_25 = 0
lv_coef_25 = 0
lv_deg_15 = 0
lv_power_15 = 0
gv_c = 0
gv_p = 0
lv_cur_8 = 0
lv_cur_9 = 0
lv_minus_deg_24 = 0
lv_motor1_26 = ""
lv_motor2_26 = ""
lv_forward1_26 = 0
lv_forward2_26 = 0
lv_coef_26 = 0
lv_motor1_27 = ""
lv_motor2_27 = ""
lv_forward1_27 = 0
lv_forward2_27 = 0
lv_coef_27 = 0
lv_p_27 = 0
lv_motor1_28 = ""
lv_motor2_28 = ""
lv_forward1_28 = 0
lv_forward2_28 = 0
lv_coef_28 = 0
gv_line = 0
gv_left_sensor = 0
gv_right_sensor = 0
gv_ultrasonic = 0
gv_left_motor = ""
gv_right_motor = ""
gv_not_inverted_motor = ""
gv_motors = ""
gv_left_forward = 0
gv_right_forward = 0
gv_grabber_motor = ""
gv_water_motor = ""
gv_left_max = 0
gv_left_min = 0
gv_last_err = 0
gv_last_motor_err = 0
gv_brown = ""
gv_red = ""
gv_yellow = ""
gv_green = ""
gv_blue = ""
gv_white = ""
gv_brown_man = ""
gv_red_man = ""
gv_yellow_man = ""
gv_green_man = ""
gv_blue_man = ""
gv_white_man = ""
gv_water_state = 0
gv_fire_count = 0
gv_men_count = 0
gv_chem = ""
gv_take_chem_in_yellow = ""
gv_cubes_count = 0
gv_r = 0
gv_g = 0
gv_b = 0
gv_w = 0
gv_color1 = ""
gv_color2 = ""
gv_opened = ""
gv_ultra = 0
gv_d1 = 0
gv_d2 = 0
gv_d3 = 0
gv_line = 1
gv_left_sensor = 2
gv_right_sensor = 3
gv_ultrasonic = 4
gv_left_motor = "A"
gv_right_motor = "B"
gv_not_inverted_motor = "B"
gv_motors = gv_left_motor + gv_right_motor
gv_left_forward = - 1
gv_right_forward = 1
gv_grabber_motor = "C"
gv_water_motor = "D"
gv_left_max = 37
gv_left_min = 4
gv_last_err = 0
gv_last_motor_err = 0
gv_brown = "False"
gv_red = "False"
gv_yellow = "False"
gv_green = "False"
gv_blue = "False"
gv_white = "False"
gv_brown_man = "False"
gv_red_man = "False"
gv_yellow_man = "False"
gv_green_man = "False"
gv_blue_man = "False"
gv_white_man = "False"
gv_water_state = 0
gv_fire_count = 0
gv_men_count = 0
gv_chem = "False"
gv_take_chem_in_yellow = "False"
gv_cubes_count = 2
gv_r = 0
gv_g = 0
gv_b = 0
gv_w = 0
gv_color1 = "none"
gv_color2 = "none"
Sensor.SetMode ( gv_line , 0 )
Sensor.SetMode ( gv_left_sensor , 0 )
Sensor.SetMode ( gv_right_sensor , 0 )
Sensor.SetMode ( gv_ultrasonic , 0 )
If EV3.BatteryVoltage < 8 Then
f_beep_0 ()
Speaker.Wait ()
f_beep_0 ()
EndIf
f_main_0 ()
Sub f_beep_0
Speaker.Tone ( 100 , 500 , 200 )
EndSub
Sub f_kick_water_0
If gv_water_state = 0 Then
Motor.Start ( gv_water_motor , 50 )
Program.Delay ( 500 )
Motor.Stop ( gv_water_motor , "True" )
Motor.Move ( gv_water_motor , - 50 , 20 , "True" )
gv_water_state = 1
Else
Motor.Start ( gv_water_motor , - 50 )
Program.Delay ( 500 )
Motor.Stop ( gv_water_motor , "True" )
Motor.Move ( gv_water_motor , 50 , 20 , "True" )
EndIf
EndSub
Sub f_prepare_grabber_0
Motor.Start ( gv_grabber_motor , - 20 )
lv_time_2 = 1000
f_delay_1 ()
Motor.Stop ( gv_grabber_motor , "True" )
Motor.Move ( gv_grabber_motor , 50 , 50 , "True" )
EndSub
Sub f_main_0
Thread.Run = f_prepare_grabber_0
gv_opened = "none"
f_reset_0 ()
MotorB.StartSpeed ( 40 * gv_right_forward )
MotorA.StartSpeed ( 35 * gv_left_forward )
While MotorA.GetTacho () * gv_left_forward < 440
EndWhile
f_stop_0 ()
lv_motor_16 = gv_right_motor
lv_forward_16 = gv_right_forward * - 1
lv_deg_16 = 180
lv_max_power_16 = 40
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_motor_16 = gv_left_motor
lv_forward_16 = gv_left_forward
lv_deg_16 = 50
lv_max_power_16 = 40
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
MotorB.StartPower ( - 80 * gv_right_forward )
lv_time_2 = 2000
f_delay_1 ()
f_stop_0 ()
MotorA.StartPower ( - 80 * gv_left_forward )
lv_time_2 = 1000
f_delay_1 ()
f_stop_0 ()
lv_base_power_12 = 30
lv_min_power_12 = 30
lv_deg_12 = 140
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
lv_time_2 = 500
f_delay_1 ()
gv_ultra = Sensor.ReadRawValue ( gv_ultrasonic , 0 )
If gv_ultra < 250 Then
gv_opened = "right"
f_beep_0 ()
Else
gv_opened = "left"
EndIf
lv_motor_16 = gv_left_motor
lv_forward_16 = gv_left_forward
lv_deg_16 = 400
lv_max_power_16 = 20
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_motor_16 = gv_right_motor
lv_forward_16 = gv_right_forward
lv_deg_16 = 400
lv_max_power_16 = 20
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 50
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
gv_c = 0
lv_port_5 = gv_left_sensor
lv_mode_5 = 0
lv_d_5 = 200
f_read_mode_4 ()
gv_c = lv_result_5
If gv_c = 4 Then
gv_color1 = "green"
ElseIf gv_c = 5 Or gv_c = 6 Then
gv_color1 = "yellow"
ElseIf gv_c > 6 And gv_c < 11 Then
gv_color1 = "red"
ElseIf gv_c = 2 Or gv_c = 3 Then
gv_color1 = "blue"
ElseIf gv_c = 14 Then
gv_color1 = "white"
Else
gv_color1 = "black"
EndIf
lv_text_6 = Text.Append ( gv_c , " " ) + gv_color1
f_text_to_screen_1 ()
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 410
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
lv_port_5 = gv_left_sensor
lv_mode_5 = 0
lv_d_5 = 200
f_read_mode_4 ()
gv_c = lv_result_5
If gv_c = 4 Then
gv_color2 = "green"
ElseIf gv_c = 5 Or gv_c = 6 Then
gv_color2 = "yellow"
ElseIf gv_c > 6 And gv_c < 11 Then
gv_color2 = "red"
ElseIf gv_c = 2 Or gv_c = 3 Then
gv_color2 = "blue"
ElseIf gv_c = 14 Then
gv_color2 = "white"
Else
gv_color2 = "black"
EndIf
lv_text_6 = Text.Append ( gv_c , " " ) + gv_color2
f_text_to_screen_1 ()
lv_power_1 = 50
f_movement_init_1 ()
lv_time_2 = 2000
f_delay_1 ()
f_stop_0 ()
lv_motor_16 = gv_left_motor
lv_forward_16 = gv_left_forward * - 1
lv_deg_16 = 360
lv_max_power_16 = 30
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_power_1 = - 40
f_movement_init_1 ()
lv_time_2 = 500
f_delay_1 ()
f_stop_0 ()
lv_base_power_12 = 30
lv_min_power_12 = 30
lv_deg_12 = 415
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
lv_time_2 = 200
f_delay_1 ()
lv_motor_16 = gv_left_motor
lv_forward_16 = gv_left_forward * - 1
lv_deg_16 = 360
lv_max_power_16 = 30
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
Motor.Move ( gv_grabber_motor , 50 , 210 , "True" )
lv_power_1 = - 40
f_movement_init_1 ()
lv_time_2 = 1500
f_delay_1 ()
f_stop_0 ()
lv_base_power_12 = 30
lv_min_power_12 = 30
lv_deg_12 = 900
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
Motor.Start ( gv_grabber_motor , 30 )
lv_time_2 = 2000
f_delay_1 ()
Motor.Stop ( gv_grabber_motor , "True" )
If gv_opened = "right" Then
lv_power_1 = - 40
f_movement_init_1 ()
lv_time_2 = 3000
f_delay_1 ()
f_stop_0 ()
lv_motor_16 = gv_left_motor
lv_forward_16 = gv_left_forward
lv_deg_16 = 220
lv_max_power_16 = 20
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_motor_16 = gv_right_motor
lv_forward_16 = gv_right_forward * - 1
lv_deg_16 = 160
lv_max_power_16 = 20
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_power_1 = - 40
f_movement_init_1 ()
lv_time_2 = 2000
f_delay_1 ()
f_stop_0 ()
f_reset_0 ()
MotorA.StartPower ( 60 * gv_left_forward )
MotorB.StartPower ( 50 * gv_right_forward )
f_reset_0 ()
While MotorA.GetTacho () * gv_left_forward < 950
EndWhile
f_read_percent_1 ()
gv_p = lv_percent_7
While gv_p < 40
f_read_percent_1 ()
gv_p = lv_percent_7
EndWhile
While gv_p > 20
f_read_percent_1 ()
gv_p = lv_percent_7
EndWhile
f_stop_0 ()
lv_time_2 = 200
f_delay_1 ()
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 50
lv_coef_12 = - 1
f_speedup_4 ()
f_stop_0 ()
lv_time_2 = 200
f_delay_1 ()
lv_motor_16 = gv_right_motor
lv_forward_16 = gv_right_forward
lv_deg_16 = 360
lv_max_power_16 = 20
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_power_1 = - 30
f_movement_init_1 ()
lv_time_2 = 1500
f_delay_1 ()
f_stop_0 ()
f_read_percent_1 ()
gv_p = lv_percent_7
f_reset_0 ()
lv_power_1 = 30
f_movement_init_1 ()
While Motor.GetCount ( gv_left_motor ) * gv_left_forward < 450 Or gv_p > 10
f_read_percent_1 ()
gv_p = lv_percent_7
lv_l_9 = gv_p
f_line_slow_1 ()
EndWhile
f_stop_0 ()
lv_motor_16 = gv_right_motor
lv_forward_16 = gv_right_forward
lv_deg_16 = 375
lv_max_power_16 = 30
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 120
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
Else
f_stop_0 ()
Motor.Stop ( gv_motors , "True" )
Motor.MoveSync ( gv_motors , gv_left_forward * - 20 , gv_right_forward * 20 , 375 , "True" )
lv_power_1 = - 40
f_movement_init_1 ()
lv_time_2 = 2000
f_delay_1 ()
f_stop_0 ()
lv_motor_16 = gv_right_motor
lv_forward_16 = gv_right_forward
lv_deg_16 = 220
lv_max_power_16 = 20
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_motor_16 = gv_left_motor
lv_forward_16 = gv_left_forward * - 1
lv_deg_16 = 160
lv_max_power_16 = 20
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_power_1 = - 40
f_movement_init_1 ()
lv_time_2 = 2000
f_delay_1 ()
f_stop_0 ()
f_reset_0 ()
MotorA.StartPower ( 70 * gv_left_forward )
MotorB.StartPower ( 80 * gv_right_forward )
f_reset_0 ()
While MotorA.GetTacho () * gv_left_forward < 950
EndWhile
f_read_percent_1 ()
gv_p = lv_percent_7
While gv_p < 40
f_read_percent_1 ()
gv_p = lv_percent_7
EndWhile
While gv_p > 20
f_read_percent_1 ()
gv_p = lv_percent_7
EndWhile
f_stop_0 ()
lv_time_2 = 200
f_delay_1 ()
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 30
lv_coef_12 = - 1
f_speedup_4 ()
f_stop_0 ()
lv_time_2 = 200
f_delay_1 ()
lv_motor_16 = gv_left_motor
lv_forward_16 = gv_left_forward
lv_deg_16 = 360
lv_max_power_16 = 30
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_power_1 = - 30
f_movement_init_1 ()
lv_time_2 = 1500
f_delay_1 ()
f_stop_0 ()
f_reset_0 ()
lv_power_1 = 30
f_movement_init_1 ()
f_read_percent_1 ()
gv_p = lv_percent_7
While Motor.GetCount ( gv_left_motor ) * gv_left_forward < 450 Or gv_p > 10
f_read_percent_1 ()
gv_p = lv_percent_7
lv_l_9 = gv_p
f_line_slow_1 ()
EndWhile
f_stop_0 ()
lv_motor_16 = gv_left_motor
lv_forward_16 = gv_left_forward
lv_deg_16 = 375
lv_max_power_16 = 30
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 200
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
EndIf
f_kick_water_0 ()
f_kick_water_0 ()
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 200
lv_coef_12 = - 1
f_speedup_4 ()
f_stop_0 ()
lv_motor_16 = gv_left_motor
lv_forward_16 = gv_left_forward * - 1
lv_deg_16 = 360
lv_max_power_16 = 20
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_power_1 = - 40
f_movement_init_1 ()
lv_time_2 = 3000
f_delay_1 ()
f_stop_0 ()
lv_motor_16 = gv_right_motor
lv_forward_16 = gv_right_forward
lv_deg_16 = 220
lv_max_power_16 = 20
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_motor_16 = gv_left_motor
lv_forward_16 = gv_left_forward * - 1
lv_deg_16 = 160
lv_max_power_16 = 20
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
f_reset_0 ()
MotorA.StartPower ( 50 * gv_left_forward )
MotorB.StartPower ( 60 * gv_right_forward )
gv_p = Sensor.ReadPercent ( gv_line )
While gv_p > 10 Or MotorA.GetTacho () * gv_left_forward < 200
gv_p = Sensor.ReadPercent ( gv_line )
EndWhile
f_reset_0 ()
f_beep_0 ()
While MotorA.GetTacho () * gv_left_forward < 500
EndWhile
f_stop_0 ()
lv_motor_16 = gv_right_motor
lv_forward_16 = gv_right_forward * - 1
lv_deg_16 = 180
lv_max_power_16 = 30
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_motor_16 = gv_left_motor
lv_forward_16 = gv_left_forward
lv_deg_16 = 50
lv_max_power_16 = 30
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
MotorB.StartPower ( - 80 * gv_right_forward )
lv_time_2 = 2000
f_delay_1 ()
f_stop_0 ()
MotorA.StartPower ( - 80 * gv_left_forward )
lv_time_2 = 1000
f_delay_1 ()
f_stop_0 ()
gv_d1 = 380
gv_d2 = 120
gv_d3 = 60
If gv_color1 = "black" Then
lv_motor_16 = gv_left_motor
lv_forward_16 = gv_left_forward
lv_deg_16 = 100
lv_max_power_16 = 20
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 110
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , - 20 , gv_d1 , "True" )
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = gv_d3
lv_coef_12 = - 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , 20 , gv_d2 , "True" )
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 110 - gv_d3
lv_coef_12 = - 1
f_speedup_4 ()
f_stop_0 ()
Motor.Start ( gv_left_motor , gv_left_forward * - 80 )
lv_time_2 = 2500
f_delay_1 ()
f_stop_0 ()
ElseIf gv_color1 = "white" Then
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 600
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
lv_motor_16 = gv_left_motor
lv_forward_16 = gv_left_forward
lv_deg_16 = 100
lv_max_power_16 = 20
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
f_stop_0 ()
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = gv_d3
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , - 20 , gv_d1 , "True" )
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = gv_d3
lv_coef_12 = - 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , 20 , gv_d2 , "True" )
lv_motor_16 = gv_left_motor
lv_forward_16 = gv_left_forward * - 1
lv_deg_16 = 100
lv_max_power_16 = 20
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 560
lv_coef_12 = - 1
f_speedup_4 ()
lv_power_1 = - 30
f_movement_init_1 ()
lv_time_2 = 1000
f_delay_1 ()
f_stop_0 ()
ElseIf gv_color1 = "red" Then
lv_motor_16 = gv_right_motor
lv_forward_16 = gv_right_forward
lv_deg_16 = 340
lv_max_power_16 = 25
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_base_power_12 = 30
lv_min_power_12 = 30
lv_deg_12 = 500 + gv_d3
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , - 20 , gv_d1 , "True" )
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = gv_d3
lv_coef_12 = - 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , 20 , gv_d2 , "True" )
lv_base_power_12 = 30
lv_min_power_12 = 30
lv_deg_12 = 500
lv_coef_12 = - 1
f_speedup_4 ()
f_stop_0 ()
Motor.Start ( gv_right_motor , gv_right_forward * - 80 )
lv_time_2 = 2500
f_delay_1 ()
f_stop_0 ()
ElseIf gv_color1 = "yellow" Then
lv_motor_16 = gv_right_motor
lv_forward_16 = gv_right_forward
lv_deg_16 = 200
lv_max_power_16 = 30
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_base_power_12 = 30
lv_min_power_12 = 30
lv_deg_12 = 850 + gv_d3
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , - 20 , gv_d1 , "True" )
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = gv_d3
lv_coef_12 = - 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , 20 , gv_d2 , "True" )
lv_base_power_12 = 30
lv_min_power_12 = 30
lv_deg_12 = 850
lv_coef_12 = - 1
f_speedup_4 ()
f_stop_0 ()
MotorB.StartPower ( - 80 * gv_right_forward )
lv_time_2 = 2500
f_delay_1 ()
f_stop_0 ()
ElseIf gv_color1 = "green" Then
lv_motor_16 = gv_right_motor
lv_forward_16 = gv_right_forward
lv_deg_16 = 120
lv_max_power_16 = 20
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_base_power_12 = 30
lv_min_power_12 = 30
lv_deg_12 = 1200 + gv_d3
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , - 20 , gv_d1 , "True" )
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = gv_d3
lv_coef_12 = - 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , 20 , gv_d2 , "True" )
lv_base_power_12 = 30
lv_min_power_12 = 30
lv_deg_12 = 1190
lv_coef_12 = - 1
f_speedup_4 ()
f_stop_0 ()
MotorB.StartPower ( - 80 * gv_right_forward )
lv_time_2 = 2500
f_delay_1 ()
f_stop_0 ()
ElseIf gv_color1 = "blue" Then
lv_base_power_12 = 30
lv_min_power_12 = 30
lv_deg_12 = 1100 + gv_d3
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , - 20 , gv_d1 , "True" )
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = gv_d3
lv_coef_12 = - 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , 20 , gv_d2 , "True" )
lv_base_power_12 = 30
lv_min_power_12 = 30
lv_deg_12 = 1050
lv_coef_12 = - 1
f_speedup_4 ()
lv_power_1 = - 30
f_movement_init_1 ()
lv_time_2 = 1000
f_delay_1 ()
f_stop_0 ()
EndIf
If gv_color2 = "black" Then
Motor.Move ( gv_grabber_motor , - 20 , gv_d2 , "True" )
ElseIf gv_color2 = "white" Then
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 600
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , - 20 , gv_d2 , "True" )
ElseIf gv_color2 = "red" Then
lv_motor_16 = gv_right_motor
lv_forward_16 = gv_right_forward
lv_deg_16 = 340
lv_max_power_16 = 25
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 500
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , - 20 , gv_d2 , "True" )
ElseIf gv_color2 = "yellow" Then
lv_motor_16 = gv_right_motor
lv_forward_16 = gv_right_forward
lv_deg_16 = 200
lv_max_power_16 = 30
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 850 + gv_d3
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , - 20 , gv_d2 , "True" )
ElseIf gv_color2 = "green" Then
lv_motor_16 = gv_right_motor
lv_forward_16 = gv_right_forward
lv_deg_16 = 120
lv_max_power_16 = 20
lv_acceleration_16 = "False"
lv_zame_16 = "False"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_base_power_12 = 30
lv_min_power_12 = 30
lv_deg_12 = 1200 + gv_d3
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , - 20 , gv_d2 , "True" )
ElseIf gv_color2 = "blue" Then
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 1100 + gv_d3
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , - 20 , gv_d2 , "True" )
EndIf
EndSub
Sub f_movement_init_1
MotorA.StartPower ( lv_power_1 * gv_left_forward )
MotorB.StartPower ( lv_power_1 * gv_right_forward )
EndSub
Sub f_delay_1
Program.Delay ( lv_time_2 )
EndSub
Sub f_reset_0
MotorA.ResetCount ()
MotorB.ResetCount ()
EndSub
Sub f_stop_0
MotorAB.OffAndBrake ()
EndSub
Sub f_read_mode_4
lv_current_mode_5 = Sensor.GetMode ( lv_port_5 )
If lv_current_mode_5 <> lv_mode_5 Then
Sensor.SetMode ( lv_port_5 , lv_mode_5 )
Sensor.Wait ( lv_port_5 )
EndIf
If lv_d_5 > 0 Then
lv_time_2 = lv_d_5
f_delay_1 ()
EndIf
lv_result_5 = Sensor.ReadRawValue ( lv_port_5 , 0 )
Sensor.SetMode ( lv_port_5 , 1 )
EndSub
Sub f_text_to_screen_1
LCD.StopUpdate ()
LCD.Clear ()
LCD.Text ( 1 , 0 , 0 , 2 , lv_text_6 )
LCD.Update ()
EndSub
Sub f_read_percent_1
If Sensor.GetMode ( gv_line ) <> 0 Then
Sensor.SetMode ( gv_line , 0 )
Sensor.Wait ( gv_line )
EndIf
lv_percent_7 = ( Sensor.ReadPercent ( gv_line ) - gv_left_min ) / ( gv_left_max - gv_left_min ) * 100
EndSub
Sub f_line_1
lv_cur_8 = 0
If lv_l_8 = - 100 Then
f_read_percent_1 ()
lv_cur_8 = lv_percent_7
Else
lv_cur_8 = lv_l_8
EndIf
lv_err_8 = lv_cur_8 - 50
lv_diff_8 = lv_err_8 - gv_last_err
lv_delta_8 = lv_err_8 * 1 + lv_diff_8 * 7
lv_left_power_8 = 80 - lv_delta_8
lv_right_power_8 = 80 + lv_delta_8
MotorA.SetPower ( lv_left_power_8 * gv_left_forward )
MotorB.SetPower ( lv_right_power_8 * gv_right_forward )
gv_last_err = lv_err_8
Program.Delay ( 5 )
EndSub
Sub f_line_slow_1
lv_cur_9 = 0
If lv_l_9 = - 100 Then
f_read_percent_1 ()
lv_cur_9 = lv_percent_7
Else
lv_cur_9 = lv_l_9
EndIf
lv_err_9 = lv_cur_9 - 50
lv_diff_9 = lv_err_9 - gv_last_err
lv_delta_9 = lv_err_9 * 0.5 + lv_diff_9 * 0
lv_left_power_9 = 30 - lv_delta_9
lv_right_power_9 = 30 + lv_delta_9
MotorA.SetPower ( lv_left_power_9 * gv_left_forward )
MotorB.SetPower ( lv_right_power_9 * gv_right_forward )
gv_last_err = lv_err_9
Program.Delay ( 5 )
EndSub
Sub f_speedup_4
lv_power_1 = 15
f_movement_init_1 ()
f_reset_0 ()
Time.Reset2 ()
lv_l_12 = 0
While lv_l_12 < lv_deg_12
If Time.Get2 () > 1000 And lv_l_12 < 20 Then
f_beep_0 ()
lv_min_power_12 = lv_min_power_12 + 5
Time.Reset2 ()
EndIf
lv_p_12 = lv_l_12 / lv_deg_12
lv_power_12 = ( lv_base_power_12 - lv_min_power_12 ) * lv_p_12 + lv_min_power_12
lv_l_12 = MotorA.GetTacho () * gv_left_forward * lv_coef_12
lv_r_12 = MotorB.GetTacho () * gv_right_forward * lv_coef_12
lv_delta_12 = ( lv_l_12 - lv_r_12 ) * lv_p_12
lv_left_power_12 = lv_power_12 - lv_delta_12
lv_right_power_12 = lv_power_12 + lv_delta_12
MotorA.SetPower ( lv_left_power_12 * gv_left_forward * lv_coef_12 )
MotorB.SetPower ( lv_right_power_12 * gv_right_forward * lv_coef_12 )
EndWhile
EndSub
Sub f_sync_1
lv_l_14 = MotorA.GetTacho () * gv_left_forward
lv_r_14 = MotorB.GetTacho () * gv_right_forward
lv_err_14 = lv_l_14 - lv_r_14
lv_diff_14 = lv_err_14 - gv_last_err
lv_delta_14 = lv_err_14 * 1 + lv_diff_14 * 0
lv_left_power_14 = lv_power_14 - lv_delta_14
lv_right_power_14 = lv_power_14 + lv_delta_14
MotorA.SetPower ( lv_left_power_14 * gv_left_forward )
MotorB.Setpower ( lv_right_power_14 * gv_right_forward )
gv_last_err = lv_err_14
EndSub
Sub f_forward_deg_2
lv_power_1 = lv_power_15
f_movement_init_1 ()
f_reset_0 ()
lv_l_15 = MotorA.GetTacho () * gv_left_forward
While Math.Abs ( lv_l_15 ) < Math.Abs ( lv_deg_15 )
lv_power_14 = lv_power_15
f_sync_1 ()
lv_l_15 = MotorA.GetTacho () * gv_left_forward
EndWhile
EndSub
Sub f_move_motor_7
lv_normal_deg_16 = lv_deg_16
lv_acceleration_deg_16 = 0
lv_zame_deg_16 = 0
If lv_acceleration_16 = "True" Then
lv_acceleration_deg_16 = Math.Min ( Math.Floor ( lv_deg_16 / 2 ) , 120 )
lv_normal_deg_16 = lv_normal_deg_16 - lv_acceleration_deg_16
EndIf
If lv_zame_16 = "True" Then
lv_zame_deg_16 = Math.Min ( Math.Floor ( lv_deg_16 / 2 ) , 120 )
lv_normal_deg_16 = lv_normal_deg_16 - lv_zame_deg_16
EndIf
If lv_acceleration_16 = "True" Then
Motor.ResetCount ( lv_motor_16 )
lv_m_16 = 0
lv_min_power_16 = 10
Time.Reset1 ()
While lv_m_16 < lv_acceleration_deg_16
If Time.Get1 () > 700 And lv_m_16 < 20 Then
f_beep_0 ()
lv_min_power_16 = lv_min_power_16 + 5
lv_acceleration_deg_16 = lv_acceleration_deg_16
Time.Reset1 ()
EndIf
lv_p_16 = lv_m_16 / lv_acceleration_deg_16
lv_power_16 = ( lv_max_power_16 - lv_min_power_16 ) * lv_p_16 + lv_min_power_16
Motor.Start ( lv_motor_16 , lv_power_16 * lv_forward_16 )
lv_m_16 = Motor.GetCount ( lv_motor_16 ) * lv_forward_16
Program.Delay ( 10 )
EndWhile
EndIf
If lv_normal_deg_16 > 0 Then
Motor.Move ( lv_motor_16 , lv_max_power_16 * lv_forward_16 , lv_normal_deg_16 , "False" )
EndIf
If lv_zame_16 = "True" Then
Motor.ResetCount ( lv_motor_16 )
lv_m_16 = 0
While lv_m_16 < lv_zame_deg_16
lv_p_16 = 1 - ( lv_m_16 / lv_zame_deg_16 )
lv_power_16 = ( lv_max_power_16 - 10 ) * lv_p_16 + 10
Motor.Start ( lv_motor_16 , lv_power_16 * lv_forward_16 )
lv_m_16 = Motor.GetCount ( lv_motor_16 ) * lv_forward_16
Program.Delay ( 10 )
EndWhile
EndIf
If lv_to_stop_16 = "True" Then
Motor.Stop ( lv_motor_16 , "True" )
EndIf
EndSub
Sub f_zame_4
lv_power_1 = lv_base_power_17
f_movement_init_1 ()
f_reset_0 ()
lv_l_17 = 0
While lv_l_17 < lv_deg_17
lv_p_17 = lv_l_17 / lv_deg_17
lv_l_17 = MotorA.GetTacho () * gv_left_forward * lv_coef_17
lv_r_17 = MotorB.GetTacho () * gv_right_forward * lv_coef_17
lv_delta_17 = ( lv_l_17 - lv_r_17 ) * ( 1 - lv_p_17 )
lv_power_17 = ( lv_base_power_17 - lv_min_power_17 ) * ( 1 - lv_p_17 ) + lv_min_power_17
lv_left_power_17 = lv_power_17 - lv_delta_17
lv_right_power_17 = lv_power_17 + lv_delta_17
MotorA.SetPower ( lv_left_power_17 * gv_left_forward * lv_coef_17 )
MotorB.SetPower ( lv_right_power_17 * gv_right_forward * lv_coef_17 )
Program.Delay ( 10 )
EndWhile
EndSub
Sub f_open_cubes_1
Motor.Start ( gv_water_motor , 50 * lv_coef_19 )
Program.Delay ( 500 )
Motor.Stop ( gv_water_motor , "True" )
EndSub
Sub f_close_cubes_1
Motor.Move ( gv_water_motor , - 30 * lv_coef_20 , 90 , "True" )
EndSub
Sub f_deliver_long_1
If lv_is_inverted_21 = "False" Then
lv_mot_21 = gv_right_motor
lv_forward_21 = gv_right_forward
lv_coef_21 = 1
Else
lv_mot_21 = gv_left_motor
lv_forward_21 = gv_left_forward
lv_coef_21 = - 1
EndIf
If gv_cubes_count = 2 Then
lv_coef_19 = lv_coef_21
f_open_cubes_1 ()
lv_motor_16 = lv_mot_21
lv_forward_16 = lv_forward_21
lv_deg_16 = 270
lv_max_power_16 = 30
lv_acceleration_16 = "True"
lv_zame_16 = "True"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_time_2 = 200
f_delay_1 ()
lv_motor_16 = lv_mot_21
lv_forward_16 = lv_forward_21 * - 1
lv_deg_16 = 120
lv_max_power_16 = 20
lv_acceleration_16 = "True"
lv_zame_16 = "True"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_coef_20 = lv_coef_21
f_close_cubes_1 ()
lv_motor_16 = lv_mot_21
lv_forward_16 = lv_forward_21 * - 1
lv_deg_16 = 265 - 120
lv_max_power_16 = 20
lv_acceleration_16 = "True"
lv_zame_16 = "True"
lv_to_stop_16 = "True"
f_move_motor_7 ()
gv_cubes_count = 1
Else
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 30
lv_coef_12 = 1
f_speedup_4 ()
f_stop_0 ()
lv_motor_16 = lv_mot_21
lv_forward_16 = lv_forward_21
lv_deg_16 = 360
lv_max_power_16 = 30
lv_acceleration_16 = "True"
lv_zame_16 = "True"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_power_1 = 30
f_movement_init_1 ()
lv_time_2 = 300
f_delay_1 ()
f_stop_0 ()
lv_coef_19 = lv_coef_21
f_open_cubes_1 ()
lv_base_power_12 = 30
lv_min_power_12 = 20
lv_deg_12 = 45
lv_coef_12 = - 1
f_speedup_4 ()
lv_base_power_17 = 30
lv_min_power_17 = 20
lv_deg_17 = 45
lv_coef_17 = - 1
f_zame_4 ()
f_stop_0 ()
lv_motor_16 = lv_mot_21
lv_forward_16 = lv_forward_21 * - 1
lv_deg_16 = 360
lv_max_power_16 = 30
lv_acceleration_16 = "True"
lv_zame_16 = "True"
lv_to_stop_16 = "True"
f_move_motor_7 ()
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = 30
lv_coef_12 = - 1
f_speedup_4 ()
gv_cubes_count = 0
EndIf
EndSub
Sub f_deliver_near_2
If lv_is_inverted_22 = "False" Then
lv_coef_22 = 1
Else
lv_coef_22 = - 1
EndIf
lv_minus_deg_22 = 0
lv_coef_19 = lv_coef_22
f_open_cubes_1 ()
If gv_cubes_count = 2 Then
lv_base_power_12 = 30
lv_min_power_12 = 30
lv_deg_12 = 45
lv_coef_12 = - 1
f_speedup_4 ()
f_stop_0 ()
lv_coef_20 = lv_coef_22
f_close_cubes_1 ()
gv_cubes_count = 1
lv_minus_deg_22 = 45
EndIf
f_stop_0 ()
gv_cubes_count = gv_cubes_count - 1
EndSub
Sub f_move_to_next_zone_1
f_stop_0 ()
lv_deg_23 = 205 - lv_minus_deg_23
lv_base_power_12 = 20
lv_min_power_12 = 20
lv_deg_12 = lv_deg_23
lv_coef_12 = - 1
f_speedup_4 ()
f_stop_0 ()
EndSub
Sub f_get_motors_6
If lv_is_inverted_25 = "False" Then
lv_motor1_25 = gv_left_motor
lv_motor2_25 = gv_right_motor
lv_forward1_25 = gv_left_forward
lv_forward2_25 = gv_right_forward
lv_coef_25 = 1
Else
lv_motor1_25 = gv_right_motor
lv_motor2_25 = gv_left_motor
lv_forward1_25 = gv_right_forward
lv_forward2_25 = gv_left_forward
lv_coef_25 = - 1
EndIf
EndSub
