DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERSED_MOTOR 252
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_MOTORS 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_LINE_SENSOR
DATAF VGV_ULTRASONIC
DATAF VGV_RIGHT_FORWARD
DATAF VGV_LEFT_FORWARD
DATAF VGV_A
DATAF VGV_P
DATAF VGV_D
DATAF VGV_LASTERROR
DATAF VGV_NOWERROR
DATAF VGV_DIF
DATAF VGV_INTEGRAL
DATAF VGV_DERIVATIVE
DATAF VGV_UP
DATAF VGV_P_U
DATAF VGV_D_U
DATAF VGV_DEG
DATAS VGV_IS_CHEM_ON_RIGHT 252
DATAS VGV_IS_CHEM_ON_LEFT 252
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_CHEM 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_CUBES_COUNT
DATAF VGV_WATER_STATE
DATAS VGV_OBJECT 252
DATAF VGV_B
DATAF VGV_W
DATAS VGV_START_FROM_RIGHT 252
DATAF VGV_C
DATAF VGV_G
DATAF VGV_R_C
DATAF VGV_L_C
DATAF VGV_DIFF
DATAF VGV_R_P
DATAF VGV_L_P
DATAF VGV_I
DATAS VGV_TAKE_RED_RIGHT 252
DATAS VGV_TAKE_RED_LEFT 252
DATAF VGV_CHEM_BACK
DATAF VGV_NO_BACK
DATAF VGV_ULTRA
DATAF VGV_T
DATAF VGV_MINS
DATAF VGV_SECS
DATAS VGV_STR 252

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VGV_I
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_T
    MOVEF_F 0.0 VGV_MINS
    MOVEF_F 0.0 VGV_SECS
    STRINGS DUPLICATE '' VGV_STR
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VGV_I
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_T
    MOVEF_F 0.0 VGV_MINS
    MOVEF_F 0.0 VGV_SECS
    STRINGS DUPLICATE '' VGV_STR
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 1.0 VGV_LINE_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 1.0 VGV_P
    MOVEF_F 6.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 1.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 2.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE_SENSOR no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_RIGHT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_LEFT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 1.0 'Low battery'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB10:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB11 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB11:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB12:
ENDTHREAD:
    RETURN
SUB_F_LINE_0:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF 20.0 F.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf17
    DATA8 flag17
    DIVF F.0 10.0 tmpf17
    CP_EQF 0.0 10.0 flag17
    SELECTF flag17 0.0 tmpf17 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_LINE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_0:
SUB_F_ULTRASONIC_SLOW_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf30
    DATA8 flag30
    DIVF F.0 10.0 tmpf30
    CP_EQF 0.0 10.0 flag30
    SELECTF flag30 0.0 tmpf30 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 20.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 20.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SLOW_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SLOW_0:
SUB_F_ULTRASONIC_FAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf45
    DATA8 flag45
    DIVF F.0 10.0 tmpf45
    CP_EQF 0.0 10.0 flag45
    SELECTF flag45 0.0 tmpf45 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 30.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 30.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_FAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_FAST_0:
SUB_F_ULTRASONIC_SUPERFAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf60
    DATA8 flag60
    DIVF F.0 10.0 tmpf60
    CP_EQF 0.0 10.0 flag60
    SELECTF flag60 0.0 tmpf60 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 80.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 80.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SUPERFAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SUPERFAST_0:
SUB_F_STOP_0:
    CALL MOTOR.STOP VGV_MOTORS 'True'
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_STOP_RIGHT_0:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
RETSUB_F_STOP_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_RIGHT_0:
SUB_F_DELAY_0:
    DATA32 milliseconds73
	MOVEF_32 300.0 milliseconds73
	DATA32 timer73
	TIMER_WAIT milliseconds73 timer73
	TIMER_READY timer73
RETSUB_F_DELAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_0:
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_LEFT_0:
    MOVEF_F 280.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB75:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB76:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for78:
    JR_GTF VGV_I 20.0 endfor78
  forbody78:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds82
	MOVEF_32 10.0 milliseconds82
	DATA32 timer82
	TIMER_WAIT milliseconds82 timer82
	TIMER_READY timer82
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody78
  endfor78:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 360.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer88
	DATA8 nos88
	DATA8 busy88
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer88 nos88
	JR_EQ8 0 nos88 motornotbusy88
  motorwaiting88:
	OUTPUT_TEST layer88 nos88 busy88
	JR_EQ8 busy88 0 motornotbusy88
	SLEEP
	JR motorwaiting88
  motornotbusy88:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer89
	DATA8 nos89
	DATA8 busy89
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer89 nos89
	JR_EQ8 0 nos89 motornotbusy89
  motorwaiting89:
	OUTPUT_TEST layer89 nos89 busy89
	JR_EQ8 busy89 0 motornotbusy89
	SLEEP
	JR motorwaiting89
  motornotbusy89:
    MOVEF_F 70.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB90:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer91
	DATA8 nos91
	DATA8 busy91
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer91 nos91
	JR_EQ8 0 nos91 motornotbusy91
  motorwaiting91:
	OUTPUT_TEST layer91 nos91 busy91
	JR_EQ8 busy91 0 motornotbusy91
	SLEEP
	JR motorwaiting91
  motornotbusy91:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB92:
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB93:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for95:
    JR_GTF VGV_I 20.0 endfor95
  forbody95:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds98
	MOVEF_32 10.0 milliseconds98
	DATA32 timer98
	TIMER_WAIT milliseconds98 timer98
	TIMER_READY timer98
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody95
  endfor95:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 350.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer104
	DATA8 nos104
	DATA8 busy104
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer104 nos104
	JR_EQ8 0 nos104 motornotbusy104
  motorwaiting104:
	OUTPUT_TEST layer104 nos104 busy104
	JR_EQ8 busy104 0 motornotbusy104
	SLEEP
	JR motorwaiting104
  motornotbusy104:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB105:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB106:
    MOVEF_F 280.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB107:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB108:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB109:
RETSUB_F_TAKE_CHEM_ON_LEFT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_0:
SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for111:
    JR_GTF VGV_I 20.0 endfor111
  forbody111:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds117
	MOVEF_32 30.0 milliseconds117
	DATA32 timer117
	TIMER_WAIT milliseconds117 timer117
	TIMER_READY timer117
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody111
  endfor111:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 170.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer123
	DATA8 nos123
	DATA8 busy123
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer123 nos123
	JR_EQ8 0 nos123 motornotbusy123
  motorwaiting123:
	OUTPUT_TEST layer123 nos123 busy123
	JR_EQ8 busy123 0 motornotbusy123
	SLEEP
	JR motorwaiting123
  motornotbusy123:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB124:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer125
	DATA8 nos125
	DATA8 busy125
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer125 nos125
	JR_EQ8 0 nos125 motornotbusy125
  motorwaiting125:
	OUTPUT_TEST layer125 nos125 busy125
	JR_EQ8 busy125 0 motornotbusy125
	SLEEP
	JR motorwaiting125
  motornotbusy125:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for127:
    JR_GTF VGV_I 20.0 endfor127
  forbody127:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds130
	MOVEF_32 10.0 milliseconds130
	DATA32 timer130
	TIMER_WAIT milliseconds130 timer130
	TIMER_READY timer130
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody127
  endfor127:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer136
	DATA8 nos136
	DATA8 busy136
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer136 nos136
	JR_EQ8 0 nos136 motornotbusy136
  motorwaiting136:
	OUTPUT_TEST layer136 nos136 busy136
	JR_EQ8 busy136 0 motornotbusy136
	SLEEP
	JR motorwaiting136
  motornotbusy136:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB137:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer138
	DATA8 nos138
	DATA8 busy138
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer138 nos138
	JR_EQ8 0 nos138 motornotbusy138
  motorwaiting138:
	OUTPUT_TEST layer138 nos138 busy138
	JR_EQ8 busy138 0 motornotbusy138
	SLEEP
	JR motorwaiting138
  motornotbusy138:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB139:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB140:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for142:
    JR_GTF VGV_I 20.0 endfor142
  forbody142:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds146
	MOVEF_32 10.0 milliseconds146
	DATA32 timer146
	TIMER_WAIT milliseconds146 timer146
	TIMER_READY timer146
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody142
  endfor142:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer152
	DATA8 nos152
	DATA8 busy152
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer152 nos152
	JR_EQ8 0 nos152 motornotbusy152
  motorwaiting152:
	OUTPUT_TEST layer152 nos152 busy152
	JR_EQ8 busy152 0 motornotbusy152
	SLEEP
	JR motorwaiting152
  motornotbusy152:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB153:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB154:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for156:
    JR_GTF VGV_I 20.0 endfor156
  forbody156:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds160
	MOVEF_32 30.0 milliseconds160
	DATA32 timer160
	TIMER_WAIT milliseconds160 timer160
	TIMER_READY timer160
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody156
  endfor156:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 170.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer166
	DATA8 nos166
	DATA8 busy166
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer166 nos166
	JR_EQ8 0 nos166 motornotbusy166
  motorwaiting166:
	OUTPUT_TEST layer166 nos166 busy166
	JR_EQ8 busy166 0 motornotbusy166
	SLEEP
	JR motorwaiting166
  motornotbusy166:
RETSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for168:
    JR_GTF VGV_I 20.0 endfor168
  forbody168:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds174
	MOVEF_32 30.0 milliseconds174
	DATA32 timer174
	TIMER_WAIT milliseconds174 timer174
	TIMER_READY timer174
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody168
  endfor168:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer180
	DATA8 nos180
	DATA8 busy180
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer180 nos180
	JR_EQ8 0 nos180 motornotbusy180
  motorwaiting180:
	OUTPUT_TEST layer180 nos180 busy180
	JR_EQ8 busy180 0 motornotbusy180
	SLEEP
	JR motorwaiting180
  motornotbusy180:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB181:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer182
	DATA8 nos182
	DATA8 busy182
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer182 nos182
	JR_EQ8 0 nos182 motornotbusy182
  motorwaiting182:
	OUTPUT_TEST layer182 nos182 busy182
	JR_EQ8 busy182 0 motornotbusy182
	SLEEP
	JR motorwaiting182
  motornotbusy182:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for184:
    JR_GTF VGV_I 20.0 endfor184
  forbody184:
    MULF VGV_I VGV_LEFT_FORWARD F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds187
	MOVEF_32 10.0 milliseconds187
	DATA32 timer187
	TIMER_WAIT milliseconds187 timer187
	TIMER_READY timer187
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody184
  endfor184:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer193
	DATA8 nos193
	DATA8 busy193
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer193 nos193
	JR_EQ8 0 nos193 motornotbusy193
  motorwaiting193:
	OUTPUT_TEST layer193 nos193 busy193
	JR_EQ8 busy193 0 motornotbusy193
	SLEEP
	JR motorwaiting193
  motornotbusy193:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB194:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer195
	DATA8 nos195
	DATA8 busy195
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer195 nos195
	JR_EQ8 0 nos195 motornotbusy195
  motorwaiting195:
	OUTPUT_TEST layer195 nos195 busy195
	JR_EQ8 busy195 0 motornotbusy195
	SLEEP
	JR motorwaiting195
  motornotbusy195:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB196:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB197:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for199:
    JR_GTF VGV_I 20.0 endfor199
  forbody199:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds203
	MOVEF_32 10.0 milliseconds203
	DATA32 timer203
	TIMER_WAIT milliseconds203 timer203
	TIMER_READY timer203
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody199
  endfor199:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer209
	DATA8 nos209
	DATA8 busy209
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer209 nos209
	JR_EQ8 0 nos209 motornotbusy209
  motorwaiting209:
	OUTPUT_TEST layer209 nos209 busy209
	JR_EQ8 busy209 0 motornotbusy209
	SLEEP
	JR motorwaiting209
  motornotbusy209:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB210:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB211:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for213:
    JR_GTF VGV_I 20.0 endfor213
  forbody213:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds217
	MOVEF_32 30.0 milliseconds217
	DATA32 timer217
	TIMER_WAIT milliseconds217 timer217
	TIMER_READY timer217
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody213
  endfor213:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer223
	DATA8 nos223
	DATA8 busy223
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer223 nos223
	JR_EQ8 0 nos223 motornotbusy223
  motorwaiting223:
	OUTPUT_TEST layer223 nos223 busy223
	JR_EQ8 busy223 0 motornotbusy223
	SLEEP
	JR motorwaiting223
  motornotbusy223:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else224_1
    CALL MOTOR.START VGV_WATER_MOTOR -30.0
    DATA32 milliseconds226
	MOVEF_32 1500.0 milliseconds226
	DATA32 timer226
	TIMER_WAIT milliseconds226 timer226
	TIMER_READY timer226
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif224
  else224_1:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds229
	MOVEF_32 1500.0 milliseconds229
	DATA32 timer229
	TIMER_WAIT milliseconds229 timer229
	TIMER_READY timer229
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
  else224_2:
  endif224:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_UPDATE_DISPLAY_0:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_OBJECT
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.1
    CALL TEXT.APPEND 'Red: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.1
    CALL TEXT.APPEND 'White: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 75.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_UPDATE_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UPDATE_DISPLAY_0:
SUB_F_RESET_VALUES_0:
    STRINGS DUPLICATE 'None' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
RETSUB_F_RESET_VALUES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_VALUES_0:
SUB_F_CLOSE_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -10.0 0.0 70.0 0.0 'True' 

	DATA8 layer241
	DATA8 nos241
	DATA8 busy241
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer241 nos241
	JR_EQ8 0 nos241 motornotbusy241
  motorwaiting241:
	OUTPUT_TEST layer241 nos241 busy241
	JR_EQ8 busy241 0 motornotbusy241
	SLEEP
	JR motorwaiting241
  motornotbusy241:
RETSUB_F_CLOSE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_0:
SUB_F_OPEN_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 10.0 0.0 70.0 0.0 'True' 

	DATA8 layer242
	DATA8 nos242
	DATA8 busy242
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer242 nos242
	JR_EQ8 0 nos242 motornotbusy242
  motorwaiting242:
	OUTPUT_TEST layer242 nos242 busy242
	JR_EQ8 busy242 0 motornotbusy242
	SLEEP
	JR motorwaiting242
  motornotbusy242:
RETSUB_F_OPEN_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_0:
SUB_F_TAKE_CUBES_0:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB243:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB244:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer247
	DATA8 nos247
	DATA8 busy247
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer247 nos247
	JR_EQ8 0 nos247 motornotbusy247
  motorwaiting247:
	OUTPUT_TEST layer247 nos247 busy247
	JR_EQ8 busy247 0 motornotbusy247
	SLEEP
	JR motorwaiting247
  motornotbusy247:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB248:
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR -20.0 0.0 360.0 0.0 'True' 

	DATA8 layer249
	DATA8 nos249
	DATA8 busy249
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer249 nos249
	JR_EQ8 0 nos249 motornotbusy249
  motorwaiting249:
	OUTPUT_TEST layer249 nos249 busy249
	JR_EQ8 busy249 0 motornotbusy249
	SLEEP
	JR motorwaiting249
  motornotbusy249:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds253
	MOVEF_32 1000.0 milliseconds253
	DATA32 timer253
	TIMER_WAIT milliseconds253 timer253
	TIMER_READY timer253
    WRITE32 ENDSUB_F_STOP_0:CALLSUB254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB254:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 227.0 VGV_A
  while256:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 930.0 endwhile256
  whilebody256:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB258:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 930.0 whilebody256
  endwhile256:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB260:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer261
	DATA8 nos261
	DATA8 busy261
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer261 nos261
	JR_EQ8 0 nos261 motornotbusy261
  motorwaiting261:
	OUTPUT_TEST layer261 nos261 busy261
	JR_EQ8 busy261 0 motornotbusy261
	SLEEP
	JR motorwaiting261
  motornotbusy261:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB262:
RETSUB_F_TAKE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_0:
SUB_F_TAKE_LONG_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer264
	DATA8 nos264
	DATA8 busy264
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer264 nos264
	JR_EQ8 0 nos264 motornotbusy264
  motorwaiting264:
	OUTPUT_TEST layer264 nos264 busy264
	JR_EQ8 busy264 0 motornotbusy264
	SLEEP
	JR motorwaiting264
  motornotbusy264:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer267
	DATA8 nos267
	DATA8 busy267
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer267 nos267
	JR_EQ8 0 nos267 motornotbusy267
  motorwaiting267:
	OUTPUT_TEST layer267 nos267 busy267
	JR_EQ8 busy267 0 motornotbusy267
	SLEEP
	JR motorwaiting267
  motornotbusy267:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB268:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer271
	DATA8 nos271
	DATA8 busy271
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer271 nos271
	JR_EQ8 0 nos271 motornotbusy271
  motorwaiting271:
	OUTPUT_TEST layer271 nos271 busy271
	JR_EQ8 busy271 0 motornotbusy271
	SLEEP
	JR motorwaiting271
  motornotbusy271:
    JR_NEQF VGV_CUBES_COUNT 2.0 else272_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB273:
  else272_1:
  endif272:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 38.0 'True'

	DATA8 layer276
	DATA8 nos276
	DATA8 busy276
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer276 nos276
	JR_EQ8 0 nos276 motornotbusy276
  motorwaiting276:
	OUTPUT_TEST layer276 nos276 busy276
	JR_EQ8 busy276 0 motornotbusy276
	SLEEP
	JR motorwaiting276
  motornotbusy276:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer278
	DATA8 nos278
	DATA8 busy278
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer278 nos278
	JR_EQ8 0 nos278 motornotbusy278
  motorwaiting278:
	OUTPUT_TEST layer278 nos278 busy278
	JR_EQ8 busy278 0 motornotbusy278
	SLEEP
	JR motorwaiting278
  motornotbusy278:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_0:
SUB_F_TAKE_NEAR_0:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer280
	DATA8 nos280
	DATA8 busy280
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer280 nos280
	JR_EQ8 0 nos280 motornotbusy280
  motorwaiting280:
	OUTPUT_TEST layer280 nos280 busy280
	JR_EQ8 busy280 0 motornotbusy280
	SLEEP
	JR motorwaiting280
  motornotbusy280:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer282
	DATA8 nos282
	DATA8 busy282
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer282 nos282
	JR_EQ8 0 nos282 motornotbusy282
  motorwaiting282:
	OUTPUT_TEST layer282 nos282 busy282
	JR_EQ8 busy282 0 motornotbusy282
	SLEEP
	JR motorwaiting282
  motornotbusy282:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB283:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    MULF 20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer286
	DATA8 nos286
	DATA8 busy286
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer286 nos286
	JR_EQ8 0 nos286 motornotbusy286
  motorwaiting286:
	OUTPUT_TEST layer286 nos286 busy286
	JR_EQ8 busy286 0 motornotbusy286
	SLEEP
	JR motorwaiting286
  motornotbusy286:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB287:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer290
	DATA8 nos290
	DATA8 busy290
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer290 nos290
	JR_EQ8 0 nos290 motornotbusy290
  motorwaiting290:
	OUTPUT_TEST layer290 nos290 busy290
	JR_EQ8 busy290 0 motornotbusy290
	SLEEP
	JR motorwaiting290
  motornotbusy290:
    JR_NEQF VGV_CUBES_COUNT 2.0 else291_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB292:
  else291_1:
  endif291:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer295
	DATA8 nos295
	DATA8 busy295
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer295 nos295
	JR_EQ8 0 nos295 motornotbusy295
  motorwaiting295:
	OUTPUT_TEST layer295 nos295 busy295
	JR_EQ8 busy295 0 motornotbusy295
	SLEEP
	JR motorwaiting295
  motornotbusy295:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer297
	DATA8 nos297
	DATA8 busy297
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer297 nos297
	JR_EQ8 0 nos297 motornotbusy297
  motorwaiting297:
	OUTPUT_TEST layer297 nos297 busy297
	JR_EQ8 busy297 0 motornotbusy297
	SLEEP
	JR motorwaiting297
  motornotbusy297:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer299
	DATA8 nos299
	DATA8 busy299
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer299 nos299
	JR_EQ8 0 nos299 motornotbusy299
  motorwaiting299:
	OUTPUT_TEST layer299 nos299 busy299
	JR_EQ8 busy299 0 motornotbusy299
	SLEEP
	JR motorwaiting299
  motornotbusy299:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB300:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer303
	DATA8 nos303
	DATA8 busy303
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer303 nos303
	JR_EQ8 0 nos303 motornotbusy303
  motorwaiting303:
	OUTPUT_TEST layer303 nos303 busy303
	JR_EQ8 busy303 0 motornotbusy303
	SLEEP
	JR motorwaiting303
  motornotbusy303:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_0:
SUB_F_TAKE_BOTH_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer305
	DATA8 nos305
	DATA8 busy305
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer305 nos305
	JR_EQ8 0 nos305 motornotbusy305
  motorwaiting305:
	OUTPUT_TEST layer305 nos305 busy305
	JR_EQ8 busy305 0 motornotbusy305
	SLEEP
	JR motorwaiting305
  motornotbusy305:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer308
	DATA8 nos308
	DATA8 busy308
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer308 nos308
	JR_EQ8 0 nos308 motornotbusy308
  motorwaiting308:
	OUTPUT_TEST layer308 nos308 busy308
	JR_EQ8 busy308 0 motornotbusy308
	SLEEP
	JR motorwaiting308
  motornotbusy308:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB309:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer312
	DATA8 nos312
	DATA8 busy312
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer312 nos312
	JR_EQ8 0 nos312 motornotbusy312
  motorwaiting312:
	OUTPUT_TEST layer312 nos312 busy312
	JR_EQ8 busy312 0 motornotbusy312
	SLEEP
	JR motorwaiting312
  motornotbusy312:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB313:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer316
	DATA8 nos316
	DATA8 busy316
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer316 nos316
	JR_EQ8 0 nos316 motornotbusy316
  motorwaiting316:
	OUTPUT_TEST layer316 nos316 busy316
	JR_EQ8 busy316 0 motornotbusy316
	SLEEP
	JR motorwaiting316
  motornotbusy316:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer318
	DATA8 nos318
	DATA8 busy318
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer318 nos318
	JR_EQ8 0 nos318 motornotbusy318
  motorwaiting318:
	OUTPUT_TEST layer318 nos318 busy318
	JR_EQ8 busy318 0 motornotbusy318
	SLEEP
	JR motorwaiting318
  motornotbusy318:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer321
	DATA8 nos321
	DATA8 busy321
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer321 nos321
	JR_EQ8 0 nos321 motornotbusy321
  motorwaiting321:
	OUTPUT_TEST layer321 nos321 busy321
	JR_EQ8 busy321 0 motornotbusy321
	SLEEP
	JR motorwaiting321
  motornotbusy321:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB322:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer325
	DATA8 nos325
	DATA8 busy325
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer325 nos325
	JR_EQ8 0 nos325 motornotbusy325
  motorwaiting325:
	OUTPUT_TEST layer325 nos325 busy325
	JR_EQ8 busy325 0 motornotbusy325
	SLEEP
	JR motorwaiting325
  motornotbusy325:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer327
	DATA8 nos327
	DATA8 busy327
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer327 nos327
	JR_EQ8 0 nos327 motornotbusy327
  motorwaiting327:
	OUTPUT_TEST layer327 nos327 busy327
	JR_EQ8 busy327 0 motornotbusy327
	SLEEP
	JR motorwaiting327
  motornotbusy327:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer329
	DATA8 nos329
	DATA8 busy329
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer329 nos329
	JR_EQ8 0 nos329 motornotbusy329
  motorwaiting329:
	OUTPUT_TEST layer329 nos329 busy329
	JR_EQ8 busy329 0 motornotbusy329
	SLEEP
	JR motorwaiting329
  motornotbusy329:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer332
	DATA8 nos332
	DATA8 busy332
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer332 nos332
	JR_EQ8 0 nos332 motornotbusy332
  motorwaiting332:
	OUTPUT_TEST layer332 nos332 busy332
	JR_EQ8 busy332 0 motornotbusy332
	SLEEP
	JR motorwaiting332
  motornotbusy332:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_0:
SUB_F_TAKE_NEAR_DOUBLE_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer334
	DATA8 nos334
	DATA8 busy334
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer334 nos334
	JR_EQ8 0 nos334 motornotbusy334
  motorwaiting334:
	OUTPUT_TEST layer334 nos334 busy334
	JR_EQ8 busy334 0 motornotbusy334
	SLEEP
	JR motorwaiting334
  motornotbusy334:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer336
	DATA8 nos336
	DATA8 busy336
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer336 nos336
	JR_EQ8 0 nos336 motornotbusy336
  motorwaiting336:
	OUTPUT_TEST layer336 nos336 busy336
	JR_EQ8 busy336 0 motornotbusy336
	SLEEP
	JR motorwaiting336
  motornotbusy336:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer339
	DATA8 nos339
	DATA8 busy339
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer339 nos339
	JR_EQ8 0 nos339 motornotbusy339
  motorwaiting339:
	OUTPUT_TEST layer339 nos339 busy339
	JR_EQ8 busy339 0 motornotbusy339
	SLEEP
	JR motorwaiting339
  motornotbusy339:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB340:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer343
	DATA8 nos343
	DATA8 busy343
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer343 nos343
	JR_EQ8 0 nos343 motornotbusy343
  motorwaiting343:
	OUTPUT_TEST layer343 nos343 busy343
	JR_EQ8 busy343 0 motornotbusy343
	SLEEP
	JR motorwaiting343
  motornotbusy343:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB344:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer347
	DATA8 nos347
	DATA8 busy347
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer347 nos347
	JR_EQ8 0 nos347 motornotbusy347
  motorwaiting347:
	OUTPUT_TEST layer347 nos347 busy347
	JR_EQ8 busy347 0 motornotbusy347
	SLEEP
	JR motorwaiting347
  motornotbusy347:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB348:
RETSUB_F_TAKE_NEAR_DOUBLE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer350
	DATA8 nos350
	DATA8 busy350
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer350 nos350
	JR_EQ8 0 nos350 motornotbusy350
  motorwaiting350:
	OUTPUT_TEST layer350 nos350 busy350
	JR_EQ8 busy350 0 motornotbusy350
	SLEEP
	JR motorwaiting350
  motornotbusy350:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer352
	DATA8 nos352
	DATA8 busy352
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer352 nos352
	JR_EQ8 0 nos352 motornotbusy352
  motorwaiting352:
	OUTPUT_TEST layer352 nos352 busy352
	JR_EQ8 busy352 0 motornotbusy352
	SLEEP
	JR motorwaiting352
  motornotbusy352:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer355
	DATA8 nos355
	DATA8 busy355
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer355 nos355
	JR_EQ8 0 nos355 motornotbusy355
  motorwaiting355:
	OUTPUT_TEST layer355 nos355 busy355
	JR_EQ8 busy355 0 motornotbusy355
	SLEEP
	JR motorwaiting355
  motornotbusy355:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB356:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer359
	DATA8 nos359
	DATA8 busy359
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer359 nos359
	JR_EQ8 0 nos359 motornotbusy359
  motorwaiting359:
	OUTPUT_TEST layer359 nos359 busy359
	JR_EQ8 busy359 0 motornotbusy359
	SLEEP
	JR motorwaiting359
  motornotbusy359:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB360:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer363
	DATA8 nos363
	DATA8 busy363
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer363 nos363
	JR_EQ8 0 nos363 motornotbusy363
  motorwaiting363:
	OUTPUT_TEST layer363 nos363 busy363
	JR_EQ8 busy363 0 motornotbusy363
	SLEEP
	JR motorwaiting363
  motornotbusy363:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB364:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
SUB_F_FINISH_AFTER_NEAR_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds368
	MOVEF_32 1500.0 milliseconds368
	DATA32 timer368
	TIMER_WAIT milliseconds368 timer368
	TIMER_READY timer368
    WRITE32 ENDSUB_F_STOP_0:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB369:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer371
	DATA8 nos371
	DATA8 busy371
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer371 nos371
	JR_EQ8 0 nos371 motornotbusy371
  motorwaiting371:
	OUTPUT_TEST layer371 nos371 busy371
	JR_EQ8 busy371 0 motornotbusy371
	SLEEP
	JR motorwaiting371
  motornotbusy371:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer373
	DATA8 nos373
	DATA8 busy373
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer373 nos373
	JR_EQ8 0 nos373 motornotbusy373
  motorwaiting373:
	OUTPUT_TEST layer373 nos373 busy373
	JR_EQ8 busy373 0 motornotbusy373
	SLEEP
	JR motorwaiting373
  motornotbusy373:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds377
	MOVEF_32 1000.0 milliseconds377
	DATA32 timer377
	TIMER_WAIT milliseconds377 timer377
	TIMER_READY timer377
    WRITE32 ENDSUB_F_STOP_0:CALLSUB378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB378:
RETSUB_F_FINISH_AFTER_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_0:
SUB_F_GO_FORWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_0:
SUB_F_GO_BACKWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF -20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF -20.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_BACKWARD_0:
SUB_F_MOVE_FORWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while405:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile405
  whilebody405:
    WRITE32 ENDSUB_F_GO_FORWARD_0:CALLSUB407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_0
CALLSUB407:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody405
  endwhile405:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB409:
RETSUB_F_MOVE_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_0:
SUB_F_MOVE_BACKWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while412:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_LTEQF F.0 F.1 endwhile412
  whilebody412:
    WRITE32 ENDSUB_F_GO_BACKWARD_0:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_0
CALLSUB415:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_GTF F.0 F.1 whilebody412
  endwhile412:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB418:
RETSUB_F_MOVE_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_0:
SUB_F_MAIN_0:
    TIMER_READ timeMC9
    STRINGS DUPLICATE 'False' VGV_START_FROM_RIGHT
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else420_1
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 53.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds425
	MOVEF_32 2000.0 milliseconds425
	DATA32 timer425
	TIMER_WAIT milliseconds425 timer425
	TIMER_READY timer425
    WRITE32 ENDSUB_F_STOP_0:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB426:
    MULF VGV_RIGHT_FORWARD -30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds429
	MOVEF_32 1000.0 milliseconds429
	DATA32 timer429
	TIMER_WAIT milliseconds429 timer429
	TIMER_READY timer429
    WRITE32 ENDSUB_F_STOP_0:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB430:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB431:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 200.0 0.0 'True' 

	DATA8 layer433
	DATA8 nos433
	DATA8 busy433
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer433 nos433
	JR_EQ8 0 nos433 motornotbusy433
  motorwaiting433:
	OUTPUT_TEST layer433 nos433 busy433
	JR_EQ8 busy433 0 motornotbusy433
	SLEEP
	JR motorwaiting433
  motornotbusy433:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB434:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer436
	DATA8 nos436
	DATA8 busy436
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer436 nos436
	JR_EQ8 0 nos436 motornotbusy436
  motorwaiting436:
	OUTPUT_TEST layer436 nos436 busy436
	JR_EQ8 busy436 0 motornotbusy436
	SLEEP
	JR motorwaiting436
  motornotbusy436:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB437:
  else420_1:
  endif420:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB438:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 80.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    MOVEF_F 1200.0 VGV_DEG
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else443_1
    MOVEF_F 1100.0 VGV_DEG
  else443_1:
  endif443:
  while445:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile445
  whilebody445:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody445
  endwhile445:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 55.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while451:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile451
  whilebody451:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody451
  endwhile451:
  while454:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile454
  whilebody454:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody454
  endwhile454:
    WRITE32 ENDSUB_F_STOP_RIGHT_0:CALLSUB457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_RIGHT_0
CALLSUB457:
    MOVEF_F 95.0 VGV_A
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB458 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB458:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer460
	DATA8 nos460
	DATA8 busy460
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer460 nos460
	JR_EQ8 0 nos460 motornotbusy460
  motorwaiting460:
	OUTPUT_TEST layer460 nos460 busy460
	JR_EQ8 busy460 0 motornotbusy460
	SLEEP
	JR motorwaiting460
  motornotbusy460:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB461:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 240.0 0.0 'True' 

	DATA8 layer463
	DATA8 nos463
	DATA8 busy463
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer463 nos463
	JR_EQ8 0 nos463 motornotbusy463
  motorwaiting463:
	OUTPUT_TEST layer463 nos463 busy463
	JR_EQ8 busy463 0 motornotbusy463
	SLEEP
	JR motorwaiting463
  motornotbusy463:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while465:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile465
  whilebody465:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB467:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody465
  endwhile465:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB469:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB470:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    MOVEF_F 500.0 VGV_C
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB472:
    JR_LTEQF VGV_B 80.0 else473_1
    DATA8 layer474
	DATA8 no474
	DATA8 mode8474
	
	MOVEF_8 VGV_RIGHT_SENSOR no474
	SUB8 no474 1 no474
	DIV8 no474 4 layer474
	MATH MOD8 no474 4 no474

	MOVEF_8 2.0 mode8474
	
	INPUT_DEVICE READY_RAW layer474 no474 0 mode8474 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer476
	DATA8 no476
	DATA8 mode8476
	
	MOVEF_8 VGV_RIGHT_SENSOR no476
	SUB8 no476 1 no476
	DIV8 no476 4 layer476
	MATH MOD8 no476 4 no476

	MOVEF_8 1.0 mode8476
	
	INPUT_DEVICE READY_RAW layer476 no476 0 mode8476 0
    JR_LTEQF VGV_G 100.0 else477_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB478:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif477
  else477_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB479:
    STRINGS DUPLICATE 'True' VGV_BROWN
    MOVEF_F 95.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB480:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB481:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB482:
  else477_2:
  endif477:
    JR endif473
  else473_1:
    JR_LTEQF VGV_B 5.0 else473_2
    DATA8 layer483
	DATA8 no483
	DATA8 mode8483
	
	MOVEF_8 VGV_RIGHT_SENSOR no483
	SUB8 no483 1 no483
	DIV8 no483 4 layer483
	MATH MOD8 no483 4 no483

	MOVEF_8 4.0 mode8483
	
	INPUT_DEVICE READY_RAW layer483 no483 0 mode8483 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    DATA8 layer485
	DATA8 no485
	DATA8 mode8485
	
	MOVEF_8 VGV_RIGHT_SENSOR no485
	SUB8 no485 1 no485
	DIV8 no485 4 layer485
	MATH MOD8 no485 4 no485

	MOVEF_8 1.0 mode8485
	
	INPUT_DEVICE READY_RAW layer485 no485 0 mode8485 0
    STRINGS DUPLICATE 'None' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB486:
    JR_LTEQF VGV_W 29.0 else487_1
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB488:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB489:
  else487_1:
  endif487:
  else473_2:
  endif473:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB490:
    DATA8 layer491
	DATA8 no491
	DATA8 mode8491
	
	MOVEF_8 VGV_LINE_SENSOR no491
	SUB8 no491 1 no491
	DIV8 no491 4 layer491
	MATH MOD8 no491 4 no491

	MOVEF_8 2.0 mode8491
	
	INPUT_DEVICE READY_RAW layer491 no491 0 mode8491 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    WRITE32 ENDSUB_F_STOP_0:CALLSUB493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB493:
  while494:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C or495
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 5.0 endwhile494
  or495:
  whilebody494:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB498:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody494
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 5.0 whilebody494
  endwhile494:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB501:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB502:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB503:
    MOVEF_F 350.0 VGV_C
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else504_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB506:
    MOVEF_F 90.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB507:
    ADDF VGV_C 110.0 VGV_C
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB509:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB511:
    JR_LTEQF VGV_B 80.0 else512_1
    DATA8 layer513
	DATA8 no513
	DATA8 mode8513
	
	MOVEF_8 VGV_RIGHT_SENSOR no513
	SUB8 no513 1 no513
	DIV8 no513 4 layer513
	MATH MOD8 no513 4 no513

	MOVEF_8 2.0 mode8513
	
	INPUT_DEVICE READY_RAW layer513 no513 0 mode8513 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer515
	DATA8 no515
	DATA8 mode8515
	
	MOVEF_8 VGV_RIGHT_SENSOR no515
	SUB8 no515 1 no515
	DIV8 no515 4 layer515
	MATH MOD8 no515 4 no515

	MOVEF_8 1.0 mode8515
	
	INPUT_DEVICE READY_RAW layer515 no515 0 mode8515 0
    JR_LTEQF VGV_G 100.0 else516_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB517:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif516
  else516_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB518:
    STRINGS DUPLICATE 'True' VGV_BROWN
    MOVEF_F 40.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB519:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB520:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB521:
  else516_2:
  endif516:
    JR endif512
  else512_1:
    JR_GTF VGV_B 12.0 or522
    JR_GTEQF VGV_B 16.0 else512_2
  or522:
    DATA8 layer523
	DATA8 no523
	DATA8 mode8523
	
	MOVEF_8 VGV_RIGHT_SENSOR no523
	SUB8 no523 1 no523
	DIV8 no523 4 layer523
	MATH MOD8 no523 4 no523

	MOVEF_8 4.0 mode8523
	
	INPUT_DEVICE READY_RAW layer523 no523 0 mode8523 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB525:
    DATA8 layer526
	DATA8 no526
	DATA8 mode8526
	
	MOVEF_8 VGV_RIGHT_SENSOR no526
	SUB8 no526 1 no526
	DIV8 no526 4 layer526
	MATH MOD8 no526 4 no526

	MOVEF_8 1.0 mode8526
	
	INPUT_DEVICE READY_RAW layer526 no526 0 mode8526 0
    JR_GTF VGV_W 55.0 or528
    JR_GTEQF VGV_W 15.0 else527_1
  or528:
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB529:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB530:
  else527_1:
  endif527:
  else512_2:
  endif512:
  else504_1:
  endif504:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB531:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while533:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile533
  whilebody533:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB535:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody533
  endwhile533:
    MOVEF_F 1.0 VGV_P_U
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else537_1
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    JR endif537
  else537_1:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  else537_2:
  endif537:
    DATA32 milliseconds545
	MOVEF_32 1000.0 milliseconds545
	DATA32 timer545
	TIMER_WAIT milliseconds545 timer545
	TIMER_READY timer545
    WRITE32 ENDSUB_F_STOP_0:CALLSUB546 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB546:
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_LEFT
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB547:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB549:
    JR_LTEQF VGV_B 85.0 else550_1
    DATA8 layer551
	DATA8 no551
	DATA8 mode8551
	
	MOVEF_8 VGV_RIGHT_SENSOR no551
	SUB8 no551 1 no551
	DIV8 no551 4 layer551
	MATH MOD8 no551 4 no551

	MOVEF_8 2.0 mode8551
	
	INPUT_DEVICE READY_RAW layer551 no551 0 mode8551 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB552 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB552:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer554
	DATA8 no554
	DATA8 mode8554
	
	MOVEF_8 VGV_RIGHT_SENSOR no554
	SUB8 no554 1 no554
	DIV8 no554 4 layer554
	MATH MOD8 no554 4 no554

	MOVEF_8 1.0 mode8554
	
	INPUT_DEVICE READY_RAW layer554 no554 0 mode8554 0
    JR_LTEQF VGV_G 100.0 else555_1
    STRINGS DUPLICATE 'R: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB556 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB556:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif555
  else555_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB557:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB558:
  else555_2:
  endif555:
    JR endif550
  else550_1:
    JR_LTEQF VGV_B 10.0 else550_2
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB559:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_RIGHT
  else550_2:
  endif550:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB560:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else561_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB563 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB563:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB565:
    JR_LTEQF VGV_B 90.0 else566_1
    DATA8 layer567
	DATA8 no567
	DATA8 mode8567
	
	MOVEF_8 VGV_LEFT_SENSOR no567
	SUB8 no567 1 no567
	DIV8 no567 4 layer567
	MATH MOD8 no567 4 no567

	MOVEF_8 2.0 mode8567
	
	INPUT_DEVICE READY_RAW layer567 no567 0 mode8567 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB568:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer570
	DATA8 no570
	DATA8 mode8570
	
	MOVEF_8 VGV_LEFT_SENSOR no570
	SUB8 no570 1 no570
	DIV8 no570 4 layer570
	MATH MOD8 no570 4 no570

	MOVEF_8 1.0 mode8570
	
	INPUT_DEVICE READY_RAW layer570 no570 0 mode8570 0
    JR_LTEQF VGV_G 100.0 else571_1
    STRINGS DUPLICATE 'L: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB572:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif571
  else571_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB573:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB574:
  else571_2:
  endif571:
    JR endif566
  else566_1:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 30.0 0.0 'True' 

	DATA8 layer576
	DATA8 nos576
	DATA8 busy576
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer576 nos576
	JR_EQ8 0 nos576 motornotbusy576
  motorwaiting576:
	OUTPUT_TEST layer576 nos576 busy576
	JR_EQ8 busy576 0 motornotbusy576
	SLEEP
	JR motorwaiting576
  motornotbusy576:
    DATA32 milliseconds577
	MOVEF_32 500.0 milliseconds577
	DATA32 timer577
	TIMER_WAIT milliseconds577 timer577
	TIMER_READY timer577
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds584
	MOVEF_32 500.0 milliseconds584
	DATA32 timer584
	TIMER_WAIT milliseconds584 timer584
	TIMER_READY timer584
    JR_LTEQF VGV_B 28.0 else585_1
    WRITE32 ENDSUB_F_STOP_0:CALLSUB586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB586:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB587 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB587:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_LEFT
  else585_1:
  endif585:
  else566_2:
  endif566:
  else561_1:
  endif561:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB588:
    MOVEF_F 145.0 VGV_CHEM_BACK
    MOVEF_F 135.0 VGV_NO_BACK
    CALL EQ_STRING VGV_TAKE_RED_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else589_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for592:
    JR_GTF VGV_I 20.0 endfor592
  forbody592:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds598
	MOVEF_32 30.0 milliseconds598
	DATA32 timer598
	TIMER_WAIT milliseconds598 timer598
	TIMER_READY timer598
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody592
  endfor592:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer604
	DATA8 nos604
	DATA8 busy604
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer604 nos604
	JR_EQ8 0 nos604 motornotbusy604
  motorwaiting604:
	OUTPUT_TEST layer604 nos604 busy604
	JR_EQ8 busy604 0 motornotbusy604
	SLEEP
	JR motorwaiting604
  motornotbusy604:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB605:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer607
	DATA8 nos607
	DATA8 busy607
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer607 nos607
	JR_EQ8 0 nos607 motornotbusy607
  motorwaiting607:
	OUTPUT_TEST layer607 nos607 busy607
	JR_EQ8 busy607 0 motornotbusy607
	SLEEP
	JR motorwaiting607
  motornotbusy607:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB608:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer609
	DATA8 nos609
	DATA8 busy609
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer609 nos609
	JR_EQ8 0 nos609 motornotbusy609
  motorwaiting609:
	OUTPUT_TEST layer609 nos609 busy609
	JR_EQ8 busy609 0 motornotbusy609
	SLEEP
	JR motorwaiting609
  motornotbusy609:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for611:
    JR_GTF VGV_I 20.0 endfor611
  forbody611:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds615
	MOVEF_32 20.0 milliseconds615
	DATA32 timer615
	TIMER_WAIT milliseconds615 timer615
	TIMER_READY timer615
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody611
  endfor611:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer621
	DATA8 nos621
	DATA8 busy621
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer621 nos621
	JR_EQ8 0 nos621 motornotbusy621
  motorwaiting621:
	OUTPUT_TEST layer621 nos621 busy621
	JR_EQ8 busy621 0 motornotbusy621
	SLEEP
	JR motorwaiting621
  motornotbusy621:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB622:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer623
	DATA8 nos623
	DATA8 busy623
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer623 nos623
	JR_EQ8 0 nos623 motornotbusy623
  motorwaiting623:
	OUTPUT_TEST layer623 nos623 busy623
	JR_EQ8 busy623 0 motornotbusy623
	SLEEP
	JR motorwaiting623
  motornotbusy623:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB624:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for626:
    JR_GTF VGV_I 20.0 endfor626
  forbody626:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds632
	MOVEF_32 20.0 milliseconds632
	DATA32 timer632
	TIMER_WAIT milliseconds632 timer632
	TIMER_READY timer632
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody626
  endfor626:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer638
	DATA8 nos638
	DATA8 busy638
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer638 nos638
	JR_EQ8 0 nos638 motornotbusy638
  motorwaiting638:
	OUTPUT_TEST layer638 nos638 busy638
	JR_EQ8 busy638 0 motornotbusy638
	SLEEP
	JR motorwaiting638
  motornotbusy638:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB639 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB639:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB640 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB640:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer642
	DATA8 nos642
	DATA8 busy642
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer642 nos642
	JR_EQ8 0 nos642 motornotbusy642
  motorwaiting642:
	OUTPUT_TEST layer642 nos642 busy642
	JR_EQ8 busy642 0 motornotbusy642
	SLEEP
	JR motorwaiting642
  motornotbusy642:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB643:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds647
	MOVEF_32 1500.0 milliseconds647
	DATA32 timer647
	TIMER_WAIT milliseconds647 timer647
	TIMER_READY timer647
    WRITE32 ENDSUB_F_STOP_0:CALLSUB648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB648:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB649 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB649:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for651:
    JR_GTF VGV_I 20.0 endfor651
  forbody651:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds657
	MOVEF_32 20.0 milliseconds657
	DATA32 timer657
	TIMER_WAIT milliseconds657 timer657
	TIMER_READY timer657
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody651
  endfor651:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer663
	DATA8 nos663
	DATA8 busy663
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer663 nos663
	JR_EQ8 0 nos663 motornotbusy663
  motorwaiting663:
	OUTPUT_TEST layer663 nos663 busy663
	JR_EQ8 busy663 0 motornotbusy663
	SLEEP
	JR motorwaiting663
  motornotbusy663:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB664:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB665:
    JR endif589
  else589_1:
    CALL EQ_STRING VGV_TAKE_RED_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else589_2
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for668:
    JR_GTF VGV_I 20.0 endfor668
  forbody668:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds674
	MOVEF_32 30.0 milliseconds674
	DATA32 timer674
	TIMER_WAIT milliseconds674 timer674
	TIMER_READY timer674
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody668
  endfor668:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer680
	DATA8 nos680
	DATA8 busy680
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer680 nos680
	JR_EQ8 0 nos680 motornotbusy680
  motorwaiting680:
	OUTPUT_TEST layer680 nos680 busy680
	JR_EQ8 busy680 0 motornotbusy680
	SLEEP
	JR motorwaiting680
  motornotbusy680:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB681:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer683
	DATA8 nos683
	DATA8 busy683
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer683 nos683
	JR_EQ8 0 nos683 motornotbusy683
  motorwaiting683:
	OUTPUT_TEST layer683 nos683 busy683
	JR_EQ8 busy683 0 motornotbusy683
	SLEEP
	JR motorwaiting683
  motornotbusy683:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB684 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB684:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer685
	DATA8 nos685
	DATA8 busy685
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer685 nos685
	JR_EQ8 0 nos685 motornotbusy685
  motorwaiting685:
	OUTPUT_TEST layer685 nos685 busy685
	JR_EQ8 busy685 0 motornotbusy685
	SLEEP
	JR motorwaiting685
  motornotbusy685:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for687:
    JR_GTF VGV_I 20.0 endfor687
  forbody687:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds691
	MOVEF_32 20.0 milliseconds691
	DATA32 timer691
	TIMER_WAIT milliseconds691 timer691
	TIMER_READY timer691
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody687
  endfor687:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer697
	DATA8 nos697
	DATA8 busy697
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer697 nos697
	JR_EQ8 0 nos697 motornotbusy697
  motorwaiting697:
	OUTPUT_TEST layer697 nos697 busy697
	JR_EQ8 busy697 0 motornotbusy697
	SLEEP
	JR motorwaiting697
  motornotbusy697:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB698:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer699
	DATA8 nos699
	DATA8 busy699
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer699 nos699
	JR_EQ8 0 nos699 motornotbusy699
  motorwaiting699:
	OUTPUT_TEST layer699 nos699 busy699
	JR_EQ8 busy699 0 motornotbusy699
	SLEEP
	JR motorwaiting699
  motornotbusy699:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB700:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for702:
    JR_GTF VGV_I 20.0 endfor702
  forbody702:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds708
	MOVEF_32 20.0 milliseconds708
	DATA32 timer708
	TIMER_WAIT milliseconds708 timer708
	TIMER_READY timer708
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody702
  endfor702:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer714
	DATA8 nos714
	DATA8 busy714
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer714 nos714
	JR_EQ8 0 nos714 motornotbusy714
  motorwaiting714:
	OUTPUT_TEST layer714 nos714 busy714
	JR_EQ8 busy714 0 motornotbusy714
	SLEEP
	JR motorwaiting714
  motornotbusy714:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB715:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB716 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB716:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer718
	DATA8 nos718
	DATA8 busy718
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer718 nos718
	JR_EQ8 0 nos718 motornotbusy718
  motorwaiting718:
	OUTPUT_TEST layer718 nos718 busy718
	JR_EQ8 busy718 0 motornotbusy718
	SLEEP
	JR motorwaiting718
  motornotbusy718:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB719:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds723
	MOVEF_32 1000.0 milliseconds723
	DATA32 timer723
	TIMER_WAIT milliseconds723 timer723
	TIMER_READY timer723
    WRITE32 ENDSUB_F_STOP_0:CALLSUB724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB724:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB725:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for727:
    JR_GTF VGV_I 20.0 endfor727
  forbody727:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds733
	MOVEF_32 20.0 milliseconds733
	DATA32 timer733
	TIMER_WAIT milliseconds733 timer733
	TIMER_READY timer733
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody727
  endfor727:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer739
	DATA8 nos739
	DATA8 busy739
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer739 nos739
	JR_EQ8 0 nos739 motornotbusy739
  motorwaiting739:
	OUTPUT_TEST layer739 nos739 busy739
	JR_EQ8 busy739 0 motornotbusy739
	SLEEP
	JR motorwaiting739
  motornotbusy739:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB740:
    JR endif589
  else589_2:
    MOVEF_F VGV_NO_BACK VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB741 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB741:
  else589_3:
  endif589:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer744
	DATA8 nos744
	DATA8 busy744
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer744 nos744
	JR_EQ8 0 nos744 motornotbusy744
  motorwaiting744:
	OUTPUT_TEST layer744 nos744 busy744
	JR_EQ8 busy744 0 motornotbusy744
	SLEEP
	JR motorwaiting744
  motornotbusy744:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB745:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB746:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds750
	MOVEF_32 700.0 milliseconds750
	DATA32 timer750
	TIMER_WAIT milliseconds750 timer750
	TIMER_READY timer750
    WRITE32 ENDSUB_F_STOP_0:CALLSUB751 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB751:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    ADDF F.0 5.0 VGV_A
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 430.0 'True'

	DATA8 layer756
	DATA8 nos756
	DATA8 busy756
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer756 nos756
	JR_EQ8 0 nos756 motornotbusy756
  motorwaiting756:
	OUTPUT_TEST layer756 nos756 busy756
	JR_EQ8 busy756 0 motornotbusy756
	SLEEP
	JR motorwaiting756
  motornotbusy756:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while758:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile758
  whilebody758:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB760:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody758
  endwhile758:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA8 layer766
	DATA8 no766
	DATA8 mode8766
	
	MOVEF_8 VGV_LINE_SENSOR no766
	SUB8 no766 1 no766
	DIV8 no766 4 layer766
	MATH MOD8 no766 4 no766

	MOVEF_8 0.0 mode8766
	
	INPUT_DEVICE READY_RAW layer766 no766 0 mode8766 0
  while767:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 or768
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 220.0 endwhile767
  or768:
  whilebody767:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 whilebody767
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 220.0 whilebody767
  endwhile767:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB773 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB773:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB774:
    MOVEF_F 92.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB775 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB775:
    DATA8 layer776
	DATA8 no776
	DATA8 mode8776
	
	MOVEF_8 VGV_LINE_SENSOR no776
	SUB8 no776 1 no776
	DIV8 no776 4 layer776
	MATH MOD8 no776 4 no776

	MOVEF_8 0.0 mode8776
	
	INPUT_DEVICE READY_RAW layer776 no776 0 mode8776 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB777:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB779 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB779:
    JR_LTEQF VGV_B 45.0 else780_1
    DATA8 layer781
	DATA8 no781
	DATA8 mode8781
	
	MOVEF_8 VGV_LEFT_SENSOR no781
	SUB8 no781 1 no781
	DIV8 no781 4 layer781
	MATH MOD8 no781 4 no781

	MOVEF_8 2.0 mode8781
	
	INPUT_DEVICE READY_RAW layer781 no781 0 mode8781 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB782 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB782:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer784
	DATA8 no784
	DATA8 mode8784
	
	MOVEF_8 VGV_LEFT_SENSOR no784
	SUB8 no784 1 no784
	DIV8 no784 4 layer784
	MATH MOD8 no784 4 no784

	MOVEF_8 1.0 mode8784
	
	INPUT_DEVICE READY_RAW layer784 no784 0 mode8784 0
    JR_LTEQF VGV_G 100.0 else785_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB786 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB786:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif785
  else785_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB787 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB787:
    MOVEF_F 100.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB788 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB788:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB789:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB790:
  else785_2:
  endif785:
    JR endif780
  else780_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds795
	MOVEF_32 1000.0 milliseconds795
	DATA32 timer795
	TIMER_WAIT milliseconds795 timer795
	TIMER_READY timer795
    JR_GTEQF VGV_ULTRA 85.0 else796_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB797 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB797:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB798 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB798:
  else796_1:
  endif796:
  else780_2:
  endif780:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB799:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB800:
    SUBF VGV_A 0.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while803:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 250.0 endwhile803
  whilebody803:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB805:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 250.0 whilebody803
  endwhile803:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds810
	MOVEF_32 2000.0 milliseconds810
	DATA32 timer810
	TIMER_WAIT milliseconds810 timer810
	TIMER_READY timer810
    WRITE32 ENDSUB_F_STOP_0:CALLSUB811 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB811:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB812 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB812:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB814 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB814:
    JR_LTEQF VGV_B 55.0 else815_1
    DATA8 layer816
	DATA8 no816
	DATA8 mode8816
	
	MOVEF_8 VGV_LEFT_SENSOR no816
	SUB8 no816 1 no816
	DIV8 no816 4 layer816
	MATH MOD8 no816 4 no816

	MOVEF_8 2.0 mode8816
	
	INPUT_DEVICE READY_RAW layer816 no816 0 mode8816 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB817 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB817:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer819
	DATA8 no819
	DATA8 mode8819
	
	MOVEF_8 VGV_LEFT_SENSOR no819
	SUB8 no819 1 no819
	DIV8 no819 4 layer819
	MATH MOD8 no819 4 no819

	MOVEF_8 1.0 mode8819
	
	INPUT_DEVICE READY_RAW layer819 no819 0 mode8819 0
    JR_LTEQF VGV_G 70.0 else820_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB821 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB821:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif820
  else820_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB822 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB822:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB823 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB823:
  else820_2:
  endif820:
    JR endif815
  else815_1:
    JR_LTEQF VGV_B 15.0 else815_2
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds828
	MOVEF_32 1000.0 milliseconds828
	DATA32 timer828
	TIMER_WAIT milliseconds828 timer828
	TIMER_READY timer828
    JR_GTEQF VGV_ULTRA 85.0 else829_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB830 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB830:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB831 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB831:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for833:
    JR_GTF VGV_I 20.0 endfor833
  forbody833:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds837
	MOVEF_32 30.0 milliseconds837
	DATA32 timer837
	TIMER_WAIT milliseconds837 timer837
	TIMER_READY timer837
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody833
  endfor833:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer843
	DATA8 nos843
	DATA8 busy843
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer843 nos843
	JR_EQ8 0 nos843 motornotbusy843
  motorwaiting843:
	OUTPUT_TEST layer843 nos843 busy843
	JR_EQ8 busy843 0 motornotbusy843
	SLEEP
	JR motorwaiting843
  motornotbusy843:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB844 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB844:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer845
	DATA8 nos845
	DATA8 busy845
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer845 nos845
	JR_EQ8 0 nos845 motornotbusy845
  motorwaiting845:
	OUTPUT_TEST layer845 nos845 busy845
	JR_EQ8 busy845 0 motornotbusy845
	SLEEP
	JR motorwaiting845
  motornotbusy845:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer848
	DATA8 nos848
	DATA8 busy848
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer848 nos848
	JR_EQ8 0 nos848 motornotbusy848
  motorwaiting848:
	OUTPUT_TEST layer848 nos848 busy848
	JR_EQ8 busy848 0 motornotbusy848
	SLEEP
	JR motorwaiting848
  motornotbusy848:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB849 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB849:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer850
	DATA8 nos850
	DATA8 busy850
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer850 nos850
	JR_EQ8 0 nos850 motornotbusy850
  motorwaiting850:
	OUTPUT_TEST layer850 nos850 busy850
	JR_EQ8 busy850 0 motornotbusy850
	SLEEP
	JR motorwaiting850
  motornotbusy850:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB851 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB851:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer854
	DATA8 nos854
	DATA8 busy854
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer854 nos854
	JR_EQ8 0 nos854 motornotbusy854
  motorwaiting854:
	OUTPUT_TEST layer854 nos854 busy854
	JR_EQ8 busy854 0 motornotbusy854
	SLEEP
	JR motorwaiting854
  motornotbusy854:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB855 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB855:
    DATA32 milliseconds856
	MOVEF_32 1000.0 milliseconds856
	DATA32 timer856
	TIMER_WAIT milliseconds856 timer856
	TIMER_READY timer856
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for858:
    JR_GTF VGV_I 20.0 endfor858
  forbody858:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds861
	MOVEF_32 30.0 milliseconds861
	DATA32 timer861
	TIMER_WAIT milliseconds861 timer861
	TIMER_READY timer861
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody858
  endfor858:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer867
	DATA8 nos867
	DATA8 busy867
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer867 nos867
	JR_EQ8 0 nos867 motornotbusy867
  motorwaiting867:
	OUTPUT_TEST layer867 nos867 busy867
	JR_EQ8 busy867 0 motornotbusy867
	SLEEP
	JR motorwaiting867
  motornotbusy867:
    MULF 30.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds870
	MOVEF_32 1000.0 milliseconds870
	DATA32 timer870
	TIMER_WAIT milliseconds870 timer870
	TIMER_READY timer870
    WRITE32 ENDSUB_F_STOP_0:CALLSUB871 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB871:
  else829_1:
  endif829:
  else815_2:
  endif815:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB872 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB872:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer874
	DATA8 nos874
	DATA8 busy874
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer874 nos874
	JR_EQ8 0 nos874 motornotbusy874
  motorwaiting874:
	OUTPUT_TEST layer874 nos874 busy874
	JR_EQ8 busy874 0 motornotbusy874
	SLEEP
	JR motorwaiting874
  motornotbusy874:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 104.0 0.0 'True' 

	DATA8 layer876
	DATA8 nos876
	DATA8 busy876
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer876 nos876
	JR_EQ8 0 nos876 motornotbusy876
  motorwaiting876:
	OUTPUT_TEST layer876 nos876 busy876
	JR_EQ8 busy876 0 motornotbusy876
	SLEEP
	JR motorwaiting876
  motornotbusy876:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 102.0 VGV_A
  while878:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 100.0 endwhile878
  whilebody878:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB880 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB880:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 100.0 whilebody878
  endwhile878:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while885:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 6.0 endwhile885
  whilebody885:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 6.0 whilebody885
  endwhile885:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB888 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB888:
    DATA8 layer889
	DATA8 no889
	DATA8 mode8889
	
	MOVEF_8 VGV_LINE_SENSOR no889
	SUB8 no889 1 no889
	DIV8 no889 4 layer889
	MATH MOD8 no889 4 no889

	MOVEF_8 0.0 mode8889
	
	INPUT_DEVICE READY_RAW layer889 no889 0 mode8889 0
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else890_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB892 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB892:
    MOVEF_F 110.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB893 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB893:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB894 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB894:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else896_1
    DATA8 layer897
	DATA8 no897
	DATA8 mode8897
	
	MOVEF_8 VGV_LEFT_SENSOR no897
	SUB8 no897 1 no897
	DIV8 no897 4 layer897
	MATH MOD8 no897 4 no897

	MOVEF_8 2.0 mode8897
	
	INPUT_DEVICE READY_RAW layer897 no897 0 mode8897 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB898 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB898:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer900
	DATA8 no900
	DATA8 mode8900
	
	MOVEF_8 VGV_LEFT_SENSOR no900
	SUB8 no900 1 no900
	DIV8 no900 4 layer900
	MATH MOD8 no900 4 no900

	MOVEF_8 1.0 mode8900
	
	INPUT_DEVICE READY_RAW layer900 no900 0 mode8900 0
    JR_LTEQF VGV_G 100.0 else901_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB902 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB902:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif901
  else901_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB903 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB903:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB904 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB904:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB905 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB905:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB906 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB906:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB907 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB907:
  else901_2:
  endif901:
    JR endif896
  else896_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else909_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB910 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB910:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB911 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB911:
  else909_1:
  endif909:
  else896_2:
  endif896:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB912 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB912:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB913 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB913:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB914 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB914:
    JR endif890
  else890_1:
    MOVEF_F 60.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB915 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB915:
  else890_2:
  endif890:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB916 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB916:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else918_1
    DATA8 layer919
	DATA8 no919
	DATA8 mode8919
	
	MOVEF_8 VGV_LEFT_SENSOR no919
	SUB8 no919 1 no919
	DIV8 no919 4 layer919
	MATH MOD8 no919 4 no919

	MOVEF_8 2.0 mode8919
	
	INPUT_DEVICE READY_RAW layer919 no919 0 mode8919 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB920 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB920:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer922
	DATA8 no922
	DATA8 mode8922
	
	MOVEF_8 VGV_LEFT_SENSOR no922
	SUB8 no922 1 no922
	DIV8 no922 4 layer922
	MATH MOD8 no922 4 no922

	MOVEF_8 1.0 mode8922
	
	INPUT_DEVICE READY_RAW layer922 no922 0 mode8922 0
    JR_LTEQF VGV_G 70.0 else923_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB924 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB924:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif923
  else923_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB925 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB925:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB926 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB926:
  else923_2:
  endif923:
    JR endif918
  else918_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else928_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB929 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB929:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB930:
  else928_1:
  endif928:
  else918_2:
  endif918:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB931 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB931:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer934
	DATA8 nos934
	DATA8 busy934
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer934 nos934
	JR_EQ8 0 nos934 motornotbusy934
  motorwaiting934:
	OUTPUT_TEST layer934 nos934 busy934
	JR_EQ8 busy934 0 motornotbusy934
	SLEEP
	JR motorwaiting934
  motornotbusy934:
    ADDF VGV_A 7.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while937:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 310.0 endwhile937
  whilebody937:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB939 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB939:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 310.0 whilebody937
  endwhile937:
    MOVEF_F 120.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB941 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB941:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else942_1
    DATA8 layer944
	DATA8 no944
	DATA8 mode8944
	
	MOVEF_8 VGV_LEFT_SENSOR no944
	SUB8 no944 1 no944
	DIV8 no944 4 layer944
	MATH MOD8 no944 4 no944

	MOVEF_8 1.0 mode8944
	
	INPUT_DEVICE READY_RAW layer944 no944 0 mode8944 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB945 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB945:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB947 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB947:
    JR_LTEQF VGV_B 55.0 else948_1
    DATA8 layer949
	DATA8 no949
	DATA8 mode8949
	
	MOVEF_8 VGV_LEFT_SENSOR no949
	SUB8 no949 1 no949
	DIV8 no949 4 layer949
	MATH MOD8 no949 4 no949

	MOVEF_8 2.0 mode8949
	
	INPUT_DEVICE READY_RAW layer949 no949 0 mode8949 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB950 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB950:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer952
	DATA8 no952
	DATA8 mode8952
	
	MOVEF_8 VGV_LEFT_SENSOR no952
	SUB8 no952 1 no952
	DIV8 no952 4 layer952
	MATH MOD8 no952 4 no952

	MOVEF_8 1.0 mode8952
	
	INPUT_DEVICE READY_RAW layer952 no952 0 mode8952 0
    JR_LTEQF VGV_G 70.0 else953_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB954 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB954:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif953
  else953_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB955 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB955:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB956 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB956:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB957 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB957:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB958 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB958:
  else953_2:
  endif953:
    JR endif948
  else948_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else960_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB961 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB961:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB962 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB962:
  else960_1:
  endif960:
  else948_2:
  endif948:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB963:
  else942_1:
  endif942:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB964 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB964:
    DATA8 layer965
	DATA8 no965
	DATA8 mode8965
	
	MOVEF_8 VGV_LINE_SENSOR no965
	SUB8 no965 1 no965
	DIV8 no965 4 layer965
	MATH MOD8 no965 4 no965

	MOVEF_8 0.0 mode8965
	
	INPUT_DEVICE READY_RAW layer965 no965 0 mode8965 0
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'False'

	DATA8 layer968
	DATA8 nos968
	DATA8 busy968
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer968 nos968
	JR_EQ8 0 nos968 motornotbusy968
  motorwaiting968:
	OUTPUT_TEST layer968 nos968 busy968
	JR_EQ8 busy968 0 motornotbusy968
	SLEEP
	JR motorwaiting968
  motornotbusy968:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while972:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile972
  whilebody972:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody972
  endwhile972:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB975 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB975:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 200.0 0.0 'False' 

	DATA8 layer977
	DATA8 nos977
	DATA8 busy977
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer977 nos977
	JR_EQ8 0 nos977 motornotbusy977
  motorwaiting977:
	OUTPUT_TEST layer977 nos977 busy977
	JR_EQ8 busy977 0 motornotbusy977
	SLEEP
	JR motorwaiting977
  motornotbusy977:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
  while980:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile980
  whilebody980:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody980
  endwhile980:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer984
	DATA8 nos984
	DATA8 busy984
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer984 nos984
	JR_EQ8 0 nos984 motornotbusy984
  motorwaiting984:
	OUTPUT_TEST layer984 nos984 busy984
	JR_EQ8 busy984 0 motornotbusy984
	SLEEP
	JR motorwaiting984
  motornotbusy984:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB985 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB985:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while987:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile987
  whilebody987:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB989 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB989:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody987
  endwhile987:
  while991:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 5.0 endwhile991
  whilebody991:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB993 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB993:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 5.0 whilebody991
  endwhile991:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB995 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB995:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer998
	DATA8 nos998
	DATA8 busy998
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer998 nos998
	JR_EQ8 0 nos998 motornotbusy998
  motorwaiting998:
	OUTPUT_TEST layer998 nos998 busy998
	JR_EQ8 busy998 0 motornotbusy998
	SLEEP
	JR motorwaiting998
  motornotbusy998:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB999 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB999:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1000 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1000:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1003
	DATA8 nos1003
	DATA8 busy1003
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1003 nos1003
	JR_EQ8 0 nos1003 motornotbusy1003
  motorwaiting1003:
	OUTPUT_TEST layer1003 nos1003 busy1003
	JR_EQ8 busy1003 0 motornotbusy1003
	SLEEP
	JR motorwaiting1003
  motornotbusy1003:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1004 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1004:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1005 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1005:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 25.0 'False'

	DATA8 layer1008
	DATA8 nos1008
	DATA8 busy1008
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1008 nos1008
	JR_EQ8 0 nos1008 motornotbusy1008
  motorwaiting1008:
	OUTPUT_TEST layer1008 nos1008 busy1008
	JR_EQ8 busy1008 0 motornotbusy1008
	SLEEP
	JR motorwaiting1008
  motornotbusy1008:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1010:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile1010
  whilebody1010:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF F.0 17.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf1016
    DATA8 flag1016
    DIVF F.0 10.0 tmpf1016
    CP_EQF 0.0 10.0 flag1016
    SELECTF flag1016 0.0 tmpf1016 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody1010
  endwhile1010:
    MOVEF_F 135.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1026 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1026:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1027 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1027:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1028 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1028:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1030 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1030:
    JR_LTEQF VGV_B 140.0 else1031_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1032 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1032:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif1031
  else1031_1:
    JR_LTEQF VGV_B 80.0 else1031_2
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'FIre' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1033 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1033:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1034 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1034:
    JR endif1031
  else1031_2:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1036_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'True' VGV_CHEM
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1037 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1037:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1038 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1038:
  else1036_1:
  endif1036:
  else1031_3:
  endif1031:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1039 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1039:
    MOVEF_F 710.0 VGV_C
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or1041
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1040_1
  or1041:
    MOVEF_F 180.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1044 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1044:
    MOVEF_F 504.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1046:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 120.0 endwhile1046
  whilebody1046:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB1048 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB1048:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 120.0 whilebody1046
  endwhile1046:
    MOVEF_F 225.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1050 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1050:
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1051_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1053 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1053:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1055 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1055:
    JR_LTEQF VGV_B 50.0 else1056_1
    DATA8 layer1057
	DATA8 no1057
	DATA8 mode81057
	
	MOVEF_8 VGV_LEFT_SENSOR no1057
	SUB8 no1057 1 no1057
	DIV8 no1057 4 layer1057
	MATH MOD8 no1057 4 no1057

	MOVEF_8 2.0 mode81057
	
	INPUT_DEVICE READY_RAW layer1057 no1057 0 mode81057 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1058 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1058:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1060
	DATA8 no1060
	DATA8 mode81060
	
	MOVEF_8 VGV_LEFT_SENSOR no1060
	SUB8 no1060 1 no1060
	DIV8 no1060 4 layer1060
	MATH MOD8 no1060 4 no1060

	MOVEF_8 1.0 mode81060
	
	INPUT_DEVICE READY_RAW layer1060 no1060 0 mode81060 0
    JR_LTEQF VGV_G 100.0 else1061_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1062 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1062:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif1061
  else1061_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1063 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1063:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1064 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1064:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1065 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1065:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1066 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1066:
  else1061_2:
  endif1061:
    JR endif1056
  else1056_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1068_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1069 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1069:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer1072
	DATA8 nos1072
	DATA8 busy1072
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1072 nos1072
	JR_EQ8 0 nos1072 motornotbusy1072
  motorwaiting1072:
	OUTPUT_TEST layer1072 nos1072 busy1072
	JR_EQ8 busy1072 0 motornotbusy1072
	SLEEP
	JR motorwaiting1072
  motornotbusy1072:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1073 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1073:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer1074
	DATA8 nos1074
	DATA8 busy1074
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1074 nos1074
	JR_EQ8 0 nos1074 motornotbusy1074
  motorwaiting1074:
	OUTPUT_TEST layer1074 nos1074 busy1074
	JR_EQ8 busy1074 0 motornotbusy1074
	SLEEP
	JR motorwaiting1074
  motornotbusy1074:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1076:
    JR_GTF VGV_I 20.0 endfor1076
  forbody1076:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1079
	MOVEF_32 10.0 milliseconds1079
	DATA32 timer1079
	TIMER_WAIT milliseconds1079 timer1079
	TIMER_READY timer1079
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1076
  endfor1076:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1085
	DATA8 nos1085
	DATA8 busy1085
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1085 nos1085
	JR_EQ8 0 nos1085 motornotbusy1085
  motorwaiting1085:
	OUTPUT_TEST layer1085 nos1085 busy1085
	JR_EQ8 busy1085 0 motornotbusy1085
	SLEEP
	JR motorwaiting1085
  motornotbusy1085:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1086 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1086:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer1087
	DATA8 nos1087
	DATA8 busy1087
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1087 nos1087
	JR_EQ8 0 nos1087 motornotbusy1087
  motorwaiting1087:
	OUTPUT_TEST layer1087 nos1087 busy1087
	JR_EQ8 busy1087 0 motornotbusy1087
	SLEEP
	JR motorwaiting1087
  motornotbusy1087:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1088 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1088:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1089 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1089:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1091:
    JR_GTF VGV_I 20.0 endfor1091
  forbody1091:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1095
	MOVEF_32 10.0 milliseconds1095
	DATA32 timer1095
	TIMER_WAIT milliseconds1095 timer1095
	TIMER_READY timer1095
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1091
  endfor1091:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1101
	DATA8 nos1101
	DATA8 busy1101
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1101 nos1101
	JR_EQ8 0 nos1101 motornotbusy1101
  motorwaiting1101:
	OUTPUT_TEST layer1101 nos1101 busy1101
	JR_EQ8 busy1101 0 motornotbusy1101
	SLEEP
	JR motorwaiting1101
  motornotbusy1101:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1102:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1103:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer1106
	DATA8 nos1106
	DATA8 busy1106
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1106 nos1106
	JR_EQ8 0 nos1106 motornotbusy1106
  motorwaiting1106:
	OUTPUT_TEST layer1106 nos1106 busy1106
	JR_EQ8 busy1106 0 motornotbusy1106
	SLEEP
	JR motorwaiting1106
  motornotbusy1106:
  else1068_1:
  endif1068:
  else1056_2:
  endif1056:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1107:
  else1051_1:
  endif1051:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1108_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1110:
    MOVEF_F 160.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1111:
    DATA8 layer1112
	DATA8 no1112
	DATA8 mode81112
	
	MOVEF_8 VGV_LEFT_SENSOR no1112
	SUB8 no1112 1 no1112
	DIV8 no1112 4 layer1112
	MATH MOD8 no1112 4 no1112

	MOVEF_8 1.0 mode81112
	
	INPUT_DEVICE READY_RAW layer1112 no1112 0 mode81112 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1113:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1115:
    JR_LTEQF VGV_B 40.0 else1116_1
    DATA8 layer1117
	DATA8 no1117
	DATA8 mode81117
	
	MOVEF_8 VGV_LEFT_SENSOR no1117
	SUB8 no1117 1 no1117
	DIV8 no1117 4 layer1117
	MATH MOD8 no1117 4 no1117

	MOVEF_8 2.0 mode81117
	
	INPUT_DEVICE READY_RAW layer1117 no1117 0 mode81117 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1118:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1120
	DATA8 no1120
	DATA8 mode81120
	
	MOVEF_8 VGV_LEFT_SENSOR no1120
	SUB8 no1120 1 no1120
	DIV8 no1120 4 layer1120
	MATH MOD8 no1120 4 no1120

	MOVEF_8 1.0 mode81120
	
	INPUT_DEVICE READY_RAW layer1120 no1120 0 mode81120 0
    JR_LTEQF VGV_G 50.0 else1121_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1122:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif1121
  else1121_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1123:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1124:
  else1121_2:
  endif1121:
    JR endif1116
  else1116_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1126_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1127:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB1128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB1128:
  else1126_1:
  endif1126:
  else1116_2:
  endif1116:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1129:
    MOVEF_F 160.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1130:
  else1108_1:
  endif1108:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 165.0 'True'

	DATA8 layer1133
	DATA8 nos1133
	DATA8 busy1133
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1133 nos1133
	JR_EQ8 0 nos1133 motornotbusy1133
  motorwaiting1133:
	OUTPUT_TEST layer1133 nos1133 busy1133
	JR_EQ8 busy1133 0 motornotbusy1133
	SLEEP
	JR motorwaiting1133
  motornotbusy1133:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1134:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1135:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 380.0 'True'

	DATA8 layer1138
	DATA8 nos1138
	DATA8 busy1138
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1138 nos1138
	JR_EQ8 0 nos1138 motornotbusy1138
  motorwaiting1138:
	OUTPUT_TEST layer1138 nos1138 busy1138
	JR_EQ8 busy1138 0 motornotbusy1138
	SLEEP
	JR motorwaiting1138
  motornotbusy1138:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1139:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1140:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1143
	DATA8 nos1143
	DATA8 busy1143
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1143 nos1143
	JR_EQ8 0 nos1143 motornotbusy1143
  motorwaiting1143:
	OUTPUT_TEST layer1143 nos1143 busy1143
	JR_EQ8 busy1143 0 motornotbusy1143
	SLEEP
	JR motorwaiting1143
  motornotbusy1143:
    JR endif1040
  else1040_1:
    MOVEF_F 200.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1144:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 370.0 'True'

	DATA8 layer1147
	DATA8 nos1147
	DATA8 busy1147
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1147 nos1147
	JR_EQ8 0 nos1147 motornotbusy1147
  motorwaiting1147:
	OUTPUT_TEST layer1147 nos1147 busy1147
	JR_EQ8 busy1147 0 motornotbusy1147
	SLEEP
	JR motorwaiting1147
  motornotbusy1147:
    SUBF VGV_C 220.0 VGV_C
  else1040_2:
  endif1040:
    MOVEF_F 474.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1150:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile1150
  whilebody1150:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB1152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB1152:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody1150
  endwhile1150:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1154:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1155:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1156_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 115.0 0.0 'True' 

	DATA8 layer1158
	DATA8 nos1158
	DATA8 busy1158
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1158 nos1158
	JR_EQ8 0 nos1158 motornotbusy1158
  motorwaiting1158:
	OUTPUT_TEST layer1158 nos1158 busy1158
	JR_EQ8 busy1158 0 motornotbusy1158
	SLEEP
	JR motorwaiting1158
  motornotbusy1158:
  else1156_1:
  endif1156:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1159:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1162
	DATA8 nos1162
	DATA8 busy1162
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1162 nos1162
	JR_EQ8 0 nos1162 motornotbusy1162
  motorwaiting1162:
	OUTPUT_TEST layer1162 nos1162 busy1162
	JR_EQ8 busy1162 0 motornotbusy1162
	SLEEP
	JR motorwaiting1162
  motornotbusy1162:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1163:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1164_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer1166
	DATA8 nos1166
	DATA8 busy1166
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1166 nos1166
	JR_EQ8 0 nos1166 motornotbusy1166
  motorwaiting1166:
	OUTPUT_TEST layer1166 nos1166 busy1166
	JR_EQ8 busy1166 0 motornotbusy1166
	SLEEP
	JR motorwaiting1166
  motornotbusy1166:
  else1164_1:
  endif1164:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1169
	DATA8 nos1169
	DATA8 busy1169
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1169 nos1169
	JR_EQ8 0 nos1169 motornotbusy1169
  motorwaiting1169:
	OUTPUT_TEST layer1169 nos1169 busy1169
	JR_EQ8 busy1169 0 motornotbusy1169
	SLEEP
	JR motorwaiting1169
  motornotbusy1169:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 60.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1173
	MOVEF_32 1200.0 milliseconds1173
	DATA32 timer1173
	TIMER_WAIT milliseconds1173 timer1173
	TIMER_READY timer1173
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1174:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 220.0 'True'

	DATA8 layer1177
	DATA8 nos1177
	DATA8 busy1177
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1177 nos1177
	JR_EQ8 0 nos1177 motornotbusy1177
  motorwaiting1177:
	OUTPUT_TEST layer1177 nos1177 busy1177
	JR_EQ8 busy1177 0 motornotbusy1177
	SLEEP
	JR motorwaiting1177
  motornotbusy1177:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1179
	DATA8 nos1179
	DATA8 busy1179
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1179 nos1179
	JR_EQ8 0 nos1179 motornotbusy1179
  motorwaiting1179:
	OUTPUT_TEST layer1179 nos1179 busy1179
	JR_EQ8 busy1179 0 motornotbusy1179
	SLEEP
	JR motorwaiting1179
  motornotbusy1179:
    MOVEF_F 107.0 VGV_A
    TIMER_READ timeMC1
  while1181:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 4500.0 endwhile1181
  whilebody1181:
    WRITE32 ENDSUB_F_ULTRASONIC_SUPERFAST_0:CALLSUB1183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SUPERFAST_0
CALLSUB1183:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 4500.0 whilebody1181
  endwhile1181:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1185:
    WRITE32 ENDSUB_F_TAKE_CUBES_0:CALLSUB1186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_0
CALLSUB1186:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1189
	DATA8 nos1189
	DATA8 busy1189
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1189 nos1189
	JR_EQ8 0 nos1189 motornotbusy1189
  motorwaiting1189:
	OUTPUT_TEST layer1189 nos1189 busy1189
	JR_EQ8 busy1189 0 motornotbusy1189
	SLEEP
	JR motorwaiting1189
  motornotbusy1189:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1190_1
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1190_1
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB1193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB1193:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1194:
    JR endif1190
  else1190_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1190_2
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1190_2
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1199
	DATA8 nos1199
	DATA8 busy1199
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1199 nos1199
	JR_EQ8 0 nos1199 motornotbusy1199
  motorwaiting1199:
	OUTPUT_TEST layer1199 nos1199 busy1199
	JR_EQ8 busy1199 0 motornotbusy1199
	SLEEP
	JR motorwaiting1199
  motornotbusy1199:
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB1200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB1200:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1201:
    JR endif1190
  else1190_2:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1190_3
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1190_3
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:CALLSUB1204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_LONG_0
CALLSUB1204:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1205:
    JR endif1190
  else1190_3:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1206_1
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1206_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1209:
    JR endif1206
  else1206_1:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1206_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1211:
    JR endif1206
  else1206_2:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1206_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1213:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1216
	DATA8 nos1216
	DATA8 busy1216
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1216 nos1216
	JR_EQ8 0 nos1216 motornotbusy1216
  motorwaiting1216:
	OUTPUT_TEST layer1216 nos1216 busy1216
	JR_EQ8 busy1216 0 motornotbusy1216
	SLEEP
	JR motorwaiting1216
  motornotbusy1216:
    JR endif1206
  else1206_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1219
	DATA8 nos1219
	DATA8 busy1219
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1219 nos1219
	JR_EQ8 0 nos1219 motornotbusy1219
  motorwaiting1219:
	OUTPUT_TEST layer1219 nos1219 busy1219
	JR_EQ8 busy1219 0 motornotbusy1219
	SLEEP
	JR motorwaiting1219
  motornotbusy1219:
  else1206_4:
  endif1206:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1220_1
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1220_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1223:
    JR endif1220
  else1220_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1220_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1225:
    JR endif1220
  else1220_2:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1220_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1227:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1230
	DATA8 nos1230
	DATA8 busy1230
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1230 nos1230
	JR_EQ8 0 nos1230 motornotbusy1230
  motorwaiting1230:
	OUTPUT_TEST layer1230 nos1230 busy1230
	JR_EQ8 busy1230 0 motornotbusy1230
	SLEEP
	JR motorwaiting1230
  motornotbusy1230:
    JR endif1220
  else1220_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1233
	DATA8 nos1233
	DATA8 busy1233
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1233 nos1233
	JR_EQ8 0 nos1233 motornotbusy1233
  motorwaiting1233:
	OUTPUT_TEST layer1233 nos1233 busy1233
	JR_EQ8 busy1233 0 motornotbusy1233
	SLEEP
	JR motorwaiting1233
  motornotbusy1233:
  else1220_4:
  endif1220:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1234_1
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1234_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1237:
    JR endif1234
  else1234_1:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1234_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1239:
    JR endif1234
  else1234_2:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1234_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1241:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1244
	DATA8 nos1244
	DATA8 busy1244
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1244 nos1244
	JR_EQ8 0 nos1244 motornotbusy1244
  motorwaiting1244:
	OUTPUT_TEST layer1244 nos1244 busy1244
	JR_EQ8 busy1244 0 motornotbusy1244
	SLEEP
	JR motorwaiting1244
  motornotbusy1244:
    JR endif1234
  else1234_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1247
	DATA8 nos1247
	DATA8 busy1247
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1247 nos1247
	JR_EQ8 0 nos1247 motornotbusy1247
  motorwaiting1247:
	OUTPUT_TEST layer1247 nos1247 busy1247
	JR_EQ8 busy1247 0 motornotbusy1247
	SLEEP
	JR motorwaiting1247
  motornotbusy1247:
  else1234_4:
  endif1234:
    MULF -15.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1249
	DATA8 nos1249
	DATA8 busy1249
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1249 nos1249
	JR_EQ8 0 nos1249 motornotbusy1249
  motorwaiting1249:
	OUTPUT_TEST layer1249 nos1249 busy1249
	JR_EQ8 busy1249 0 motornotbusy1249
	SLEEP
	JR motorwaiting1249
  motornotbusy1249:
    MULF VGV_LEFT_FORWARD -25.0 F.0
    MULF VGV_RIGHT_FORWARD -25.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1253
	MOVEF_32 1500.0 milliseconds1253
	DATA32 timer1253
	TIMER_WAIT milliseconds1253 timer1253
	TIMER_READY timer1253
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1254:
  else1190_4:
  endif1190:
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1255_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 55.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1261:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 1200.0 endwhile1261
  whilebody1261:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 1200.0 whilebody1261
  endwhile1261:
  while1264:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 25.0 endwhile1264
  whilebody1264:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 25.0 whilebody1264
  endwhile1264:
  while1267:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile1267
  whilebody1267:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody1267
  endwhile1267:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1270:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1271:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 365.0 0.0 'True' 

	DATA8 layer1273
	DATA8 nos1273
	DATA8 busy1273
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1273 nos1273
	JR_EQ8 0 nos1273 motornotbusy1273
  motorwaiting1273:
	OUTPUT_TEST layer1273 nos1273 busy1273
	JR_EQ8 busy1273 0 motornotbusy1273
	SLEEP
	JR motorwaiting1273
  motornotbusy1273:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1277:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1280
	DATA8 nos1280
	DATA8 busy1280
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1280 nos1280
	JR_EQ8 0 nos1280 motornotbusy1280
  motorwaiting1280:
	OUTPUT_TEST layer1280 nos1280 busy1280
	JR_EQ8 busy1280 0 motornotbusy1280
	SLEEP
	JR motorwaiting1280
  motornotbusy1280:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 300.0 0.0 'True' 

	DATA8 layer1282
	DATA8 nos1282
	DATA8 busy1282
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1282 nos1282
	JR_EQ8 0 nos1282 motornotbusy1282
  motorwaiting1282:
	OUTPUT_TEST layer1282 nos1282 busy1282
	JR_EQ8 busy1282 0 motornotbusy1282
	SLEEP
	JR motorwaiting1282
  motornotbusy1282:
    MULF VGV_LEFT_FORWARD 55.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1286
	MOVEF_32 4000.0 milliseconds1286
	DATA32 timer1286
	TIMER_WAIT milliseconds1286 timer1286
	TIMER_READY timer1286
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1287:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 20.0 'True'

	DATA8 layer1290
	DATA8 nos1290
	DATA8 busy1290
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1290 nos1290
	JR_EQ8 0 nos1290 motornotbusy1290
  motorwaiting1290:
	OUTPUT_TEST layer1290 nos1290 busy1290
	JR_EQ8 busy1290 0 motornotbusy1290
	SLEEP
	JR motorwaiting1290
  motornotbusy1290:
  else1255_1:
  endif1255:
    TIMER_READ timeMC9tmp
	SUB32 timeMC9tmp timeMC9 timeMC9tmp
	MOVE32_F timeMC9tmp VGV_T
    DATAF tmpf1292
    DATA8 flag1292
    DIVF VGV_T 60000.0 tmpf1292
    CP_EQF 0.0 60000.0 flag1292
    SELECTF flag1292 0.0 tmpf1292 F.0

    MATH FLOOR F.0 VGV_MINS
    MATH MOD VGV_T 60000.0 F.1
    DATAF tmpf1295
    DATA8 flag1295
    DIVF F.1 1000.0 tmpf1295
    CP_EQF 0.0 1000.0 flag1295
    SELECTF flag1295 0.0 tmpf1295 F.0

    MATH FLOOR F.0 VGV_SECS
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MINS '%g' 99 S.1
    CALL TEXT.APPEND S.1 ':' S.0
    STRINGS VALUE_FORMATTED VGV_SECS '%g' 99 S.1
    CALL TEXT.APPEND S.0 S.1 VGV_STR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_STR
    DATA32 milliseconds1303
	MOVEF_32 100000000.0 milliseconds1303
	DATA32 timer1303
	TIMER_WAIT milliseconds1303 timer1303
	TIMER_READY timer1303
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
