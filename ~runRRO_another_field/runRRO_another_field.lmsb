DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_5
DATAF VLV_MIN_POWER_5
DATAF VLV_DEG_5
DATAF VLV_ACCELERATION_5
DATAF VLV_ZAME_5
DATAS VLV_MOTOR_8 252
DATAF VLV_FORWARD_8
DATAF VLV_BASE_POWER_8
DATAF VLV_MIN_POWER_8
DATAF VLV_DEG_8
DATAF VLV_ACCELERATION_8
DATAF VLV_ZAME_8
DATAF VLV_BASE_POWER_6
DATAF VLV_MIN_POWER_6
DATAF VLV_DEG_6
DATAF VLV_ACCELERATION_6
DATAF VLV_ZAME_6
DATAS VLV_MOTOR_7 252
DATAF VLV_FORWARD_7
DATAF VLV_BASE_POWER_7
DATAF VLV_MIN_POWER_7
DATAF VLV_DEG_7
DATAF VLV_ACCELERATION_7
DATAF VLV_ZAME_7
DATAF VLV_U_3
DATAF VLV_BASE_POWER_3
DATAF VLV_MIN_POWER_3
DATAF VLV_DEGREES_3
DATAF VLV_ZAMED_DEGREES_3
DATAF VLV_POWER_1
DATAF VLV_U_1
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAF VGV_RIGHT_FORWARD
DATAF VGV_LEFT_FORWARD
DATAS VGV_NOT_INVERSED_MOTOR 252
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_MOTORS 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_LINE_SENSOR
DATAF VGV_ULTRASONIC
DATAF VGV_A
DATAF VGV_P
DATAF VGV_D
DATAF VGV_LASTERROR
DATAF VGV_INTEGRAL
DATAF VGV_P_U
DATAF VGV_D_U
DATAF VGV_DEG
DATAF VGV_B
DATAF VGV_W
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_MEN_COUNT
DATAS VGV_CHEM 252
DATAF VGV_FIRE_COUNT
DATAS VGV_IS_CHEM_ON_RIGHT 252
DATAS VGV_IS_CHEM_ON_LEFT 252
DATAF VGV_CUBES_COUNT
DATAF VGV_WATER_STATE
DATAS VGV_OBJECT 252
DATAF VGV_NOWERROR
DATAF VGV_DIF
DATAF VGV_DERIVATIVE
DATAF VGV_UP
DATAF VGV_R_C
DATAF VGV_L_C
DATAF VGV_DIFF
DATAF VGV_R_P
DATAF VGV_L_P
DATAF VLV_V_1
DATAF VLV_NOWERROR_1
DATAF VLV_DIF_1
DATAF VLV_INTEGRAL_1
DATAF VLV_DERIVATIVE_1
DATAF VLV_UP_1
DATAF VLV_LASTERROR_1
DATAF VLV_NORMAL_DEGREES_3
DATAF VLV_C_3
DATAF VLV_MINUS_3
DATAF VLV_POWER_3
DATAF VLV_NORMAL_DEGREES_5
DATAF VLV_C_5
DATAF VLV_P_5
DATAF VLV_POWER_5
DATAF VLV_DELTA_5
DATAF VLV_LEFT_POWER_5
DATAF VLV_RIGHT_POWER_5
DATAF VLV_NORMAL_DEGREES_6
DATAF VLV_C_6
DATAF VLV_P_6
DATAF VLV_POWER_6
DATAF VLV_DELTA_6
DATAF VLV_LEFT_POWER_6
DATAF VLV_RIGHT_POWER_6
DATAF VLV_NORMAL_DEG_7
DATAF VLV_C_7
DATAF VLV_P_7
DATAF VLV_POWER_7
DATAF VLV_NORMAL_DEG_8
DATAF VLV_C_8
DATAF VLV_POWER_8
DATAF VLV_P_8

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_5
    MOVEF_F 0.0 VLV_MIN_POWER_5
    MOVEF_F 0.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    STRINGS DUPLICATE '' VLV_MOTOR_8
    MOVEF_F 0.0 VLV_FORWARD_8
    MOVEF_F 0.0 VLV_BASE_POWER_8
    MOVEF_F 0.0 VLV_MIN_POWER_8
    MOVEF_F 0.0 VLV_DEG_8
    MOVEF_F 0.0 VLV_ACCELERATION_8
    MOVEF_F 0.0 VLV_ZAME_8
    MOVEF_F 0.0 VLV_BASE_POWER_6
    MOVEF_F 0.0 VLV_MIN_POWER_6
    MOVEF_F 0.0 VLV_DEG_6
    MOVEF_F 0.0 VLV_ACCELERATION_6
    MOVEF_F 0.0 VLV_ZAME_6
    STRINGS DUPLICATE '' VLV_MOTOR_7
    MOVEF_F 0.0 VLV_FORWARD_7
    MOVEF_F 0.0 VLV_BASE_POWER_7
    MOVEF_F 0.0 VLV_MIN_POWER_7
    MOVEF_F 0.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    MOVEF_F 0.0 VLV_U_3
    MOVEF_F 0.0 VLV_BASE_POWER_3
    MOVEF_F 0.0 VLV_MIN_POWER_3
    MOVEF_F 0.0 VLV_DEGREES_3
    MOVEF_F 0.0 VLV_ZAMED_DEGREES_3
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_U_1
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VLV_V_1
    MOVEF_F 0.0 VLV_NOWERROR_1
    MOVEF_F 0.0 VLV_DIF_1
    MOVEF_F 0.0 VLV_INTEGRAL_1
    MOVEF_F 0.0 VLV_DERIVATIVE_1
    MOVEF_F 0.0 VLV_UP_1
    MOVEF_F 0.0 VLV_LASTERROR_1
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_3
    MOVEF_F 0.0 VLV_C_3
    MOVEF_F 0.0 VLV_MINUS_3
    MOVEF_F 0.0 VLV_POWER_3
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_5
    MOVEF_F 0.0 VLV_C_5
    MOVEF_F 0.0 VLV_P_5
    MOVEF_F 0.0 VLV_POWER_5
    MOVEF_F 0.0 VLV_DELTA_5
    MOVEF_F 0.0 VLV_LEFT_POWER_5
    MOVEF_F 0.0 VLV_RIGHT_POWER_5
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_6
    MOVEF_F 0.0 VLV_C_6
    MOVEF_F 0.0 VLV_P_6
    MOVEF_F 0.0 VLV_POWER_6
    MOVEF_F 0.0 VLV_DELTA_6
    MOVEF_F 0.0 VLV_LEFT_POWER_6
    MOVEF_F 0.0 VLV_RIGHT_POWER_6
    MOVEF_F 0.0 VLV_NORMAL_DEG_7
    MOVEF_F 0.0 VLV_C_7
    MOVEF_F 0.0 VLV_P_7
    MOVEF_F 0.0 VLV_POWER_7
    MOVEF_F 0.0 VLV_NORMAL_DEG_8
    MOVEF_F 0.0 VLV_C_8
    MOVEF_F 0.0 VLV_POWER_8
    MOVEF_F 0.0 VLV_P_8
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    MOVEF_F 0.0 VLV_BASE_POWER_5
    MOVEF_F 0.0 VLV_MIN_POWER_5
    MOVEF_F 0.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    STRINGS DUPLICATE '' VLV_MOTOR_8
    MOVEF_F 0.0 VLV_FORWARD_8
    MOVEF_F 0.0 VLV_BASE_POWER_8
    MOVEF_F 0.0 VLV_MIN_POWER_8
    MOVEF_F 0.0 VLV_DEG_8
    MOVEF_F 0.0 VLV_ACCELERATION_8
    MOVEF_F 0.0 VLV_ZAME_8
    MOVEF_F 0.0 VLV_BASE_POWER_6
    MOVEF_F 0.0 VLV_MIN_POWER_6
    MOVEF_F 0.0 VLV_DEG_6
    MOVEF_F 0.0 VLV_ACCELERATION_6
    MOVEF_F 0.0 VLV_ZAME_6
    STRINGS DUPLICATE '' VLV_MOTOR_7
    MOVEF_F 0.0 VLV_FORWARD_7
    MOVEF_F 0.0 VLV_BASE_POWER_7
    MOVEF_F 0.0 VLV_MIN_POWER_7
    MOVEF_F 0.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    MOVEF_F 0.0 VLV_U_3
    MOVEF_F 0.0 VLV_BASE_POWER_3
    MOVEF_F 0.0 VLV_MIN_POWER_3
    MOVEF_F 0.0 VLV_DEGREES_3
    MOVEF_F 0.0 VLV_ZAMED_DEGREES_3
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_U_1
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE 'B' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 1.0 VGV_LINE_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 1.0 VGV_P
    MOVEF_F 6.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 1.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE 'False' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 2.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE_SENSOR no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_RIGHT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_LEFT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 1.0 'Low battery'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB10:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB11 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB11:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB12:
ENDTHREAD:
    RETURN
SUB_F_LINE_0:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF 20.0 F.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf17
    DATA8 flag17
    DIVF F.0 10.0 tmpf17
    CP_EQF 0.0 10.0 flag17
    SELECTF flag17 0.0 tmpf17 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_LINE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_0:
SUB_F_ULTRASONIC_SLOW_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf30
    DATA8 flag30
    DIVF F.0 10.0 tmpf30
    CP_EQF 0.0 10.0 flag30
    SELECTF flag30 0.0 tmpf30 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 20.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 20.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SLOW_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SLOW_0:
SUB_F_ULTRASONIC_FAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf45
    DATA8 flag45
    DIVF F.0 10.0 tmpf45
    CP_EQF 0.0 10.0 flag45
    SELECTF flag45 0.0 tmpf45 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 30.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 30.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_FAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_FAST_0:
SUB_F_ULTRASONIC_SUPERFAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf60
    DATA8 flag60
    DIVF F.0 10.0 tmpf60
    CP_EQF 0.0 10.0 flag60
    SELECTF flag60 0.0 tmpf60 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 80.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 80.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SUPERFAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SUPERFAST_0:
SUB_F_STOP_0:
    CALL MOTOR.STOP VGV_MOTORS 'True'
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_STOP_RIGHT_0:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
RETSUB_F_STOP_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_RIGHT_0:
SUB_F_DELAY_0:
    DATA32 milliseconds73
	MOVEF_32 300.0 milliseconds73
	DATA32 timer73
	TIMER_WAIT milliseconds73 timer73
	TIMER_READY timer73
RETSUB_F_DELAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_0:
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_LEFT_0:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 280.0 VLV_DEG_5
    MOVEF_F 100.0 VLV_ACCELERATION_5
    MOVEF_F 100.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB75:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB76:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 370.0 VLV_DEG_8
    MOVEF_F 100.0 VLV_ACCELERATION_8
    MOVEF_F 100.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB77:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB78:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 162.0 0.0 'True' 

	DATA8 layer79
	DATA8 nos79
	DATA8 busy79
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer79 nos79
	JR_EQ8 0 nos79 motornotbusy79
  motorwaiting79:
	OUTPUT_TEST layer79 nos79 busy79
	JR_EQ8 busy79 0 motornotbusy79
	SLEEP
	JR motorwaiting79
  motornotbusy79:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 70.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB80 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB80:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB81:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer82
	DATA8 nos82
	DATA8 busy82
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer82 nos82
	JR_EQ8 0 nos82 motornotbusy82
  motorwaiting82:
	OUTPUT_TEST layer82 nos82 busy82
	JR_EQ8 busy82 0 motornotbusy82
	SLEEP
	JR motorwaiting82
  motornotbusy82:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB83:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 90.0 VLV_DEG_6
    MOVEF_F 0.0 VLV_ACCELERATION_6
    MOVEF_F 70.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB84 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB84:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB85 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB85:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 370.0 VLV_DEG_7
    MOVEF_F 100.0 VLV_ACCELERATION_7
    MOVEF_F 100.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB86:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB87:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 280.0 VLV_DEG_6
    MOVEF_F 100.0 VLV_ACCELERATION_6
    MOVEF_F 100.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB88:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB89:
RETSUB_F_TAKE_CHEM_ON_LEFT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_0:
SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 170.0 VLV_DEG_6
    MOVEF_F 70.0 VLV_ACCELERATION_6
    MOVEF_F 70.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB90:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB91:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer92
	DATA8 nos92
	DATA8 busy92
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer92 nos92
	JR_EQ8 0 nos92 motornotbusy92
  motorwaiting92:
	OUTPUT_TEST layer92 nos92 busy92
	JR_EQ8 busy92 0 motornotbusy92
	SLEEP
	JR motorwaiting92
  motornotbusy92:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 160.0 VLV_DEG_7
    MOVEF_F 70.0 VLV_ACCELERATION_7
    MOVEF_F 70.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB93:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB94:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 50.0 0.0 'True' 

	DATA8 layer95
	DATA8 nos95
	DATA8 busy95
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer95 nos95
	JR_EQ8 0 nos95 motornotbusy95
  motorwaiting95:
	OUTPUT_TEST layer95 nos95 busy95
	JR_EQ8 busy95 0 motornotbusy95
	SLEEP
	JR motorwaiting95
  motornotbusy95:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB96:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 160.0 VLV_DEG_8
    MOVEF_F 70.0 VLV_ACCELERATION_8
    MOVEF_F 70.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB97:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB98:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 170.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB99 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB99:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB100:
RETSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 170.0 VLV_DEG_6
    MOVEF_F 70.0 VLV_ACCELERATION_6
    MOVEF_F 70.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB101:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB102:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer103
	DATA8 nos103
	DATA8 busy103
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer103 nos103
	JR_EQ8 0 nos103 motornotbusy103
  motorwaiting103:
	OUTPUT_TEST layer103 nos103 busy103
	JR_EQ8 busy103 0 motornotbusy103
	SLEEP
	JR motorwaiting103
  motornotbusy103:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 160.0 VLV_DEG_7
    MOVEF_F 70.0 VLV_ACCELERATION_7
    MOVEF_F 70.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB104:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB105:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer106
	DATA8 nos106
	DATA8 busy106
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer106 nos106
	JR_EQ8 0 nos106 motornotbusy106
  motorwaiting106:
	OUTPUT_TEST layer106 nos106 busy106
	JR_EQ8 busy106 0 motornotbusy106
	SLEEP
	JR motorwaiting106
  motornotbusy106:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB107:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 160.0 VLV_DEG_8
    MOVEF_F 70.0 VLV_ACCELERATION_8
    MOVEF_F 70.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB108:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB109:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 170.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB110:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB111:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else112_1
    CALL MOTOR.START VGV_WATER_MOTOR -30.0
    DATA32 milliseconds114
	MOVEF_32 1500.0 milliseconds114
	DATA32 timer114
	TIMER_WAIT milliseconds114 timer114
	TIMER_READY timer114
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 30.0 0.0 40.0 0.0 'True' 

	DATA8 layer116
	DATA8 nos116
	DATA8 busy116
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer116 nos116
	JR_EQ8 0 nos116 motornotbusy116
  motorwaiting116:
	OUTPUT_TEST layer116 nos116 busy116
	JR_EQ8 busy116 0 motornotbusy116
	SLEEP
	JR motorwaiting116
  motornotbusy116:
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif112
  else112_1:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds118
	MOVEF_32 2000.0 milliseconds118
	DATA32 timer118
	TIMER_WAIT milliseconds118 timer118
	TIMER_READY timer118
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -30.0 0.0 40.0 0.0 'True' 

	DATA8 layer120
	DATA8 nos120
	DATA8 busy120
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer120 nos120
	JR_EQ8 0 nos120 motornotbusy120
  motorwaiting120:
	OUTPUT_TEST layer120 nos120 busy120
	JR_EQ8 busy120 0 motornotbusy120
	SLEEP
	JR motorwaiting120
  motornotbusy120:
  else112_2:
  endif112:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_UPDATE_DISPLAY_0:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_OBJECT
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.1
    CALL TEXT.APPEND 'Red: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.1
    CALL TEXT.APPEND 'White: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 75.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_UPDATE_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UPDATE_DISPLAY_0:
SUB_F_RESET_VALUES_0:
    STRINGS DUPLICATE 'None' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
RETSUB_F_RESET_VALUES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_VALUES_0:
SUB_F_CLOSE_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -10.0 0.0 70.0 0.0 'True' 

	DATA8 layer131
	DATA8 nos131
	DATA8 busy131
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer131 nos131
	JR_EQ8 0 nos131 motornotbusy131
  motorwaiting131:
	OUTPUT_TEST layer131 nos131 busy131
	JR_EQ8 busy131 0 motornotbusy131
	SLEEP
	JR motorwaiting131
  motornotbusy131:
RETSUB_F_CLOSE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_0:
SUB_F_OPEN_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 10.0 0.0 70.0 0.0 'True' 

	DATA8 layer132
	DATA8 nos132
	DATA8 busy132
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer132 nos132
	JR_EQ8 0 nos132 motornotbusy132
  motorwaiting132:
	OUTPUT_TEST layer132 nos132 busy132
	JR_EQ8 busy132 0 motornotbusy132
	SLEEP
	JR motorwaiting132
  motornotbusy132:
RETSUB_F_OPEN_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_0:
SUB_F_TAKE_CUBES_0:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds134
	MOVEF_32 500.0 milliseconds134
	DATA32 timer134
	TIMER_WAIT milliseconds134 timer134
	TIMER_READY timer134
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer138
	DATA8 nos138
	DATA8 busy138
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer138 nos138
	JR_EQ8 0 nos138 motornotbusy138
  motorwaiting138:
	OUTPUT_TEST layer138 nos138 busy138
	JR_EQ8 busy138 0 motornotbusy138
	SLEEP
	JR motorwaiting138
  motornotbusy138:
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR -20.0 0.0 360.0 0.0 'True' 

	DATA8 layer139
	DATA8 nos139
	DATA8 busy139
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer139 nos139
	JR_EQ8 0 nos139 motornotbusy139
  motorwaiting139:
	OUTPUT_TEST layer139 nos139 busy139
	JR_EQ8 busy139 0 motornotbusy139
	SLEEP
	JR motorwaiting139
  motornotbusy139:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds143
	MOVEF_32 700.0 milliseconds143
	DATA32 timer143
	TIMER_WAIT milliseconds143 timer143
	TIMER_READY timer143
    WRITE32 ENDSUB_F_STOP_0:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB144:
    MOVEF_F 229.0 VLV_U_3
    MOVEF_F 50.0 VLV_BASE_POWER_3
    MOVEF_F 20.0 VLV_MIN_POWER_3
    MOVEF_F 930.0 VLV_DEGREES_3
    MOVEF_F 200.0 VLV_ZAMED_DEGREES_3
    WRITE32 ENDSUB_F_ULTRASONIC_ZAMED_5:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_ZAMED_5
CALLSUB145:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 180.0 0.0 'True' 

	DATA8 layer147
	DATA8 nos147
	DATA8 busy147
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer147 nos147
	JR_EQ8 0 nos147 motornotbusy147
  motorwaiting147:
	OUTPUT_TEST layer147 nos147 busy147
	JR_EQ8 busy147 0 motornotbusy147
	SLEEP
	JR motorwaiting147
  motornotbusy147:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 180.0 0.0 'True' 

	DATA8 layer149
	DATA8 nos149
	DATA8 busy149
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer149 nos149
	JR_EQ8 0 nos149 motornotbusy149
  motorwaiting149:
	OUTPUT_TEST layer149 nos149 busy149
	JR_EQ8 busy149 0 motornotbusy149
	SLEEP
	JR motorwaiting149
  motornotbusy149:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds153
	MOVEF_32 1000.0 milliseconds153
	DATA32 timer153
	TIMER_WAIT milliseconds153 timer153
	TIMER_READY timer153
    WRITE32 ENDSUB_F_STOP_0:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB154:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer155
	DATA8 nos155
	DATA8 busy155
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer155 nos155
	JR_EQ8 0 nos155 motornotbusy155
  motorwaiting155:
	OUTPUT_TEST layer155 nos155 busy155
	JR_EQ8 busy155 0 motornotbusy155
	SLEEP
	JR motorwaiting155
  motornotbusy155:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB156:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer159
	DATA8 nos159
	DATA8 busy159
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer159 nos159
	JR_EQ8 0 nos159 motornotbusy159
  motorwaiting159:
	OUTPUT_TEST layer159 nos159 busy159
	JR_EQ8 busy159 0 motornotbusy159
	SLEEP
	JR motorwaiting159
  motornotbusy159:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB160:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 180.0 0.0 'True' 

	DATA8 layer162
	DATA8 nos162
	DATA8 busy162
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer162 nos162
	JR_EQ8 0 nos162 motornotbusy162
  motorwaiting162:
	OUTPUT_TEST layer162 nos162 busy162
	JR_EQ8 busy162 0 motornotbusy162
	SLEEP
	JR motorwaiting162
  motornotbusy162:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 180.0 0.0 'True' 

	DATA8 layer164
	DATA8 nos164
	DATA8 busy164
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer164 nos164
	JR_EQ8 0 nos164 motornotbusy164
  motorwaiting164:
	OUTPUT_TEST layer164 nos164 busy164
	JR_EQ8 busy164 0 motornotbusy164
	SLEEP
	JR motorwaiting164
  motornotbusy164:
RETSUB_F_TAKE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_0:
SUB_F_TAKE_LONG_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer166
	DATA8 nos166
	DATA8 busy166
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer166 nos166
	JR_EQ8 0 nos166 motornotbusy166
  motorwaiting166:
	OUTPUT_TEST layer166 nos166 busy166
	JR_EQ8 busy166 0 motornotbusy166
	SLEEP
	JR motorwaiting166
  motornotbusy166:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer169
	DATA8 nos169
	DATA8 busy169
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer169 nos169
	JR_EQ8 0 nos169 motornotbusy169
  motorwaiting169:
	OUTPUT_TEST layer169 nos169 busy169
	JR_EQ8 busy169 0 motornotbusy169
	SLEEP
	JR motorwaiting169
  motornotbusy169:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB170:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer173
	DATA8 nos173
	DATA8 busy173
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer173 nos173
	JR_EQ8 0 nos173 motornotbusy173
  motorwaiting173:
	OUTPUT_TEST layer173 nos173 busy173
	JR_EQ8 busy173 0 motornotbusy173
	SLEEP
	JR motorwaiting173
  motornotbusy173:
    JR_NEQF VGV_CUBES_COUNT 2.0 else174_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB175:
  else174_1:
  endif174:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 38.0 'True'

	DATA8 layer178
	DATA8 nos178
	DATA8 busy178
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer178 nos178
	JR_EQ8 0 nos178 motornotbusy178
  motorwaiting178:
	OUTPUT_TEST layer178 nos178 busy178
	JR_EQ8 busy178 0 motornotbusy178
	SLEEP
	JR motorwaiting178
  motornotbusy178:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer180
	DATA8 nos180
	DATA8 busy180
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer180 nos180
	JR_EQ8 0 nos180 motornotbusy180
  motorwaiting180:
	OUTPUT_TEST layer180 nos180 busy180
	JR_EQ8 busy180 0 motornotbusy180
	SLEEP
	JR motorwaiting180
  motornotbusy180:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_0:
SUB_F_TAKE_NEAR_0:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer182
	DATA8 nos182
	DATA8 busy182
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer182 nos182
	JR_EQ8 0 nos182 motornotbusy182
  motorwaiting182:
	OUTPUT_TEST layer182 nos182 busy182
	JR_EQ8 busy182 0 motornotbusy182
	SLEEP
	JR motorwaiting182
  motornotbusy182:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer184
	DATA8 nos184
	DATA8 busy184
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer184 nos184
	JR_EQ8 0 nos184 motornotbusy184
  motorwaiting184:
	OUTPUT_TEST layer184 nos184 busy184
	JR_EQ8 busy184 0 motornotbusy184
	SLEEP
	JR motorwaiting184
  motornotbusy184:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB185:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    MULF 20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer188
	DATA8 nos188
	DATA8 busy188
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer188 nos188
	JR_EQ8 0 nos188 motornotbusy188
  motorwaiting188:
	OUTPUT_TEST layer188 nos188 busy188
	JR_EQ8 busy188 0 motornotbusy188
	SLEEP
	JR motorwaiting188
  motornotbusy188:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB189:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer192
	DATA8 nos192
	DATA8 busy192
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer192 nos192
	JR_EQ8 0 nos192 motornotbusy192
  motorwaiting192:
	OUTPUT_TEST layer192 nos192 busy192
	JR_EQ8 busy192 0 motornotbusy192
	SLEEP
	JR motorwaiting192
  motornotbusy192:
    JR_NEQF VGV_CUBES_COUNT 2.0 else193_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB194:
  else193_1:
  endif193:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer197
	DATA8 nos197
	DATA8 busy197
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer197 nos197
	JR_EQ8 0 nos197 motornotbusy197
  motorwaiting197:
	OUTPUT_TEST layer197 nos197 busy197
	JR_EQ8 busy197 0 motornotbusy197
	SLEEP
	JR motorwaiting197
  motornotbusy197:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer199
	DATA8 nos199
	DATA8 busy199
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer199 nos199
	JR_EQ8 0 nos199 motornotbusy199
  motorwaiting199:
	OUTPUT_TEST layer199 nos199 busy199
	JR_EQ8 busy199 0 motornotbusy199
	SLEEP
	JR motorwaiting199
  motornotbusy199:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer201
	DATA8 nos201
	DATA8 busy201
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer201 nos201
	JR_EQ8 0 nos201 motornotbusy201
  motorwaiting201:
	OUTPUT_TEST layer201 nos201 busy201
	JR_EQ8 busy201 0 motornotbusy201
	SLEEP
	JR motorwaiting201
  motornotbusy201:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB202:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer205
	DATA8 nos205
	DATA8 busy205
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer205 nos205
	JR_EQ8 0 nos205 motornotbusy205
  motorwaiting205:
	OUTPUT_TEST layer205 nos205 busy205
	JR_EQ8 busy205 0 motornotbusy205
	SLEEP
	JR motorwaiting205
  motornotbusy205:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_0:
SUB_F_TAKE_BOTH_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer207
	DATA8 nos207
	DATA8 busy207
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer207 nos207
	JR_EQ8 0 nos207 motornotbusy207
  motorwaiting207:
	OUTPUT_TEST layer207 nos207 busy207
	JR_EQ8 busy207 0 motornotbusy207
	SLEEP
	JR motorwaiting207
  motornotbusy207:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer210
	DATA8 nos210
	DATA8 busy210
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer210 nos210
	JR_EQ8 0 nos210 motornotbusy210
  motorwaiting210:
	OUTPUT_TEST layer210 nos210 busy210
	JR_EQ8 busy210 0 motornotbusy210
	SLEEP
	JR motorwaiting210
  motornotbusy210:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB211:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer214
	DATA8 nos214
	DATA8 busy214
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer214 nos214
	JR_EQ8 0 nos214 motornotbusy214
  motorwaiting214:
	OUTPUT_TEST layer214 nos214 busy214
	JR_EQ8 busy214 0 motornotbusy214
	SLEEP
	JR motorwaiting214
  motornotbusy214:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB215:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer218
	DATA8 nos218
	DATA8 busy218
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer218 nos218
	JR_EQ8 0 nos218 motornotbusy218
  motorwaiting218:
	OUTPUT_TEST layer218 nos218 busy218
	JR_EQ8 busy218 0 motornotbusy218
	SLEEP
	JR motorwaiting218
  motornotbusy218:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer220
	DATA8 nos220
	DATA8 busy220
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer220 nos220
	JR_EQ8 0 nos220 motornotbusy220
  motorwaiting220:
	OUTPUT_TEST layer220 nos220 busy220
	JR_EQ8 busy220 0 motornotbusy220
	SLEEP
	JR motorwaiting220
  motornotbusy220:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer223
	DATA8 nos223
	DATA8 busy223
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer223 nos223
	JR_EQ8 0 nos223 motornotbusy223
  motorwaiting223:
	OUTPUT_TEST layer223 nos223 busy223
	JR_EQ8 busy223 0 motornotbusy223
	SLEEP
	JR motorwaiting223
  motornotbusy223:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB224:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer227
	DATA8 nos227
	DATA8 busy227
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer227 nos227
	JR_EQ8 0 nos227 motornotbusy227
  motorwaiting227:
	OUTPUT_TEST layer227 nos227 busy227
	JR_EQ8 busy227 0 motornotbusy227
	SLEEP
	JR motorwaiting227
  motornotbusy227:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer229
	DATA8 nos229
	DATA8 busy229
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer229 nos229
	JR_EQ8 0 nos229 motornotbusy229
  motorwaiting229:
	OUTPUT_TEST layer229 nos229 busy229
	JR_EQ8 busy229 0 motornotbusy229
	SLEEP
	JR motorwaiting229
  motornotbusy229:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer231
	DATA8 nos231
	DATA8 busy231
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer231 nos231
	JR_EQ8 0 nos231 motornotbusy231
  motorwaiting231:
	OUTPUT_TEST layer231 nos231 busy231
	JR_EQ8 busy231 0 motornotbusy231
	SLEEP
	JR motorwaiting231
  motornotbusy231:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer234
	DATA8 nos234
	DATA8 busy234
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer234 nos234
	JR_EQ8 0 nos234 motornotbusy234
  motorwaiting234:
	OUTPUT_TEST layer234 nos234 busy234
	JR_EQ8 busy234 0 motornotbusy234
	SLEEP
	JR motorwaiting234
  motornotbusy234:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_0:
SUB_F_TAKE_NEAR_DOUBLE_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer236
	DATA8 nos236
	DATA8 busy236
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer236 nos236
	JR_EQ8 0 nos236 motornotbusy236
  motorwaiting236:
	OUTPUT_TEST layer236 nos236 busy236
	JR_EQ8 busy236 0 motornotbusy236
	SLEEP
	JR motorwaiting236
  motornotbusy236:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer238
	DATA8 nos238
	DATA8 busy238
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer238 nos238
	JR_EQ8 0 nos238 motornotbusy238
  motorwaiting238:
	OUTPUT_TEST layer238 nos238 busy238
	JR_EQ8 busy238 0 motornotbusy238
	SLEEP
	JR motorwaiting238
  motornotbusy238:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer241
	DATA8 nos241
	DATA8 busy241
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer241 nos241
	JR_EQ8 0 nos241 motornotbusy241
  motorwaiting241:
	OUTPUT_TEST layer241 nos241 busy241
	JR_EQ8 busy241 0 motornotbusy241
	SLEEP
	JR motorwaiting241
  motornotbusy241:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB242:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer245
	DATA8 nos245
	DATA8 busy245
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer245 nos245
	JR_EQ8 0 nos245 motornotbusy245
  motorwaiting245:
	OUTPUT_TEST layer245 nos245 busy245
	JR_EQ8 busy245 0 motornotbusy245
	SLEEP
	JR motorwaiting245
  motornotbusy245:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB246:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer249
	DATA8 nos249
	DATA8 busy249
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer249 nos249
	JR_EQ8 0 nos249 motornotbusy249
  motorwaiting249:
	OUTPUT_TEST layer249 nos249 busy249
	JR_EQ8 busy249 0 motornotbusy249
	SLEEP
	JR motorwaiting249
  motornotbusy249:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB250:
RETSUB_F_TAKE_NEAR_DOUBLE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer252
	DATA8 nos252
	DATA8 busy252
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer252 nos252
	JR_EQ8 0 nos252 motornotbusy252
  motorwaiting252:
	OUTPUT_TEST layer252 nos252 busy252
	JR_EQ8 busy252 0 motornotbusy252
	SLEEP
	JR motorwaiting252
  motornotbusy252:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer254
	DATA8 nos254
	DATA8 busy254
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer254 nos254
	JR_EQ8 0 nos254 motornotbusy254
  motorwaiting254:
	OUTPUT_TEST layer254 nos254 busy254
	JR_EQ8 busy254 0 motornotbusy254
	SLEEP
	JR motorwaiting254
  motornotbusy254:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer257
	DATA8 nos257
	DATA8 busy257
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer257 nos257
	JR_EQ8 0 nos257 motornotbusy257
  motorwaiting257:
	OUTPUT_TEST layer257 nos257 busy257
	JR_EQ8 busy257 0 motornotbusy257
	SLEEP
	JR motorwaiting257
  motornotbusy257:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB258:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer261
	DATA8 nos261
	DATA8 busy261
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer261 nos261
	JR_EQ8 0 nos261 motornotbusy261
  motorwaiting261:
	OUTPUT_TEST layer261 nos261 busy261
	JR_EQ8 busy261 0 motornotbusy261
	SLEEP
	JR motorwaiting261
  motornotbusy261:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB262:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer265
	DATA8 nos265
	DATA8 busy265
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer265 nos265
	JR_EQ8 0 nos265 motornotbusy265
  motorwaiting265:
	OUTPUT_TEST layer265 nos265 busy265
	JR_EQ8 busy265 0 motornotbusy265
	SLEEP
	JR motorwaiting265
  motornotbusy265:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB266:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
SUB_F_FINISH_AFTER_NEAR_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds270
	MOVEF_32 1500.0 milliseconds270
	DATA32 timer270
	TIMER_WAIT milliseconds270 timer270
	TIMER_READY timer270
    WRITE32 ENDSUB_F_STOP_0:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB271:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer273
	DATA8 nos273
	DATA8 busy273
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer273 nos273
	JR_EQ8 0 nos273 motornotbusy273
  motorwaiting273:
	OUTPUT_TEST layer273 nos273 busy273
	JR_EQ8 busy273 0 motornotbusy273
	SLEEP
	JR motorwaiting273
  motornotbusy273:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer275
	DATA8 nos275
	DATA8 busy275
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer275 nos275
	JR_EQ8 0 nos275 motornotbusy275
  motorwaiting275:
	OUTPUT_TEST layer275 nos275 busy275
	JR_EQ8 busy275 0 motornotbusy275
	SLEEP
	JR motorwaiting275
  motornotbusy275:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds279
	MOVEF_32 1000.0 milliseconds279
	DATA32 timer279
	TIMER_WAIT milliseconds279 timer279
	TIMER_READY timer279
    WRITE32 ENDSUB_F_STOP_0:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB280:
RETSUB_F_FINISH_AFTER_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_0:
SUB_F_GO_FORWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 25.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 25.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_0:
SUB_F_GO_BACKWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 0.5 VGV_DIFF
    SUBF -25.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF -25.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_BACKWARD_0:
SUB_F_MOVE_FORWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while307:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile307
  whilebody307:
    WRITE32 ENDSUB_F_GO_FORWARD_0:CALLSUB309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_0
CALLSUB309:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody307
  endwhile307:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB311:
RETSUB_F_MOVE_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_0:
SUB_F_MOVE_BACKWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while314:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_LTEQF F.0 F.1 endwhile314
  whilebody314:
    WRITE32 ENDSUB_F_GO_BACKWARD_0:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_0
CALLSUB317:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_GTF F.0 F.1 whilebody314
  endwhile314:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB320 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB320:
RETSUB_F_MOVE_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_0:
SUB_F_ULTRASONIC_POWER_2:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VLV_V_1
    SUBF VLV_V_1 VLV_U_1 VLV_NOWERROR_1
    SUBF VGV_LASTERROR VLV_NOWERROR_1 VLV_DIF_1
    ADDF VGV_INTEGRAL VLV_NOWERROR_1 F.0
    DATAF tmpf325
    DATA8 flag325
    DIVF F.0 10.0 tmpf325
    CP_EQF 0.0 10.0 flag325
    SELECTF flag325 0.0 tmpf325 VLV_INTEGRAL_1

    SUBF VLV_NOWERROR_1 VGV_LASTERROR VLV_DERIVATIVE_1
    MULF VLV_NOWERROR_1 VGV_P_U F.0
    MULF VLV_INTEGRAL_1 VGV_D_U F.1
    ADDF F.0 F.1 VLV_UP_1
    ADDF VLV_POWER_1 VLV_UP_1 F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF VLV_POWER_1 VLV_UP_1 F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VLV_NOWERROR_1 VLV_LASTERROR_1
RETSUB_F_ULTRASONIC_POWER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_POWER_2:
SUB_F_AFTER_ACTION_0:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB336:
    DATA32 milliseconds337
	MOVEF_32 300.0 milliseconds337
	DATA32 timer337
	TIMER_WAIT milliseconds337 timer337
	TIMER_READY timer337
RETSUB_F_AFTER_ACTION_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_AFTER_ACTION_0:
SUB_F_ULTRASONIC_ZAMED_5:
    SUBF VLV_DEGREES_3 VLV_ZAMED_DEGREES_3 VLV_NORMAL_DEGREES_3
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while340:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VLV_NORMAL_DEGREES_3 endwhile340
  whilebody340:
    MOVEF_F VLV_BASE_POWER_3 VLV_POWER_1
    MOVEF_F VLV_U_3 VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB342:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VLV_NORMAL_DEGREES_3 whilebody340
  endwhile340:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_3
  while346:
    JR_GTEQF VLV_C_3 VLV_ZAMED_DEGREES_3 endwhile346
  whilebody346:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.1
    DATAF tmpf348
    DATA8 flag348
    DIVF F.1 VLV_ZAMED_DEGREES_3 tmpf348
    CP_EQF 0.0 VLV_ZAMED_DEGREES_3 flag348
    SELECTF flag348 0.0 tmpf348 F.0

    MULF F.0 VLV_BASE_POWER_3 VLV_MINUS_3
    SUBF VLV_BASE_POWER_3 VLV_MINUS_3 VLV_POWER_3
    JR_GTEQF VLV_POWER_3 VLV_MIN_POWER_3 else351_1
    MOVEF_F VLV_MIN_POWER_3 VLV_POWER_3
  else351_1:
  endif351:
    MOVEF_F VLV_POWER_3 VLV_POWER_1
    MOVEF_F VLV_U_3 VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB352:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_3
    JR_LTF VLV_C_3 VLV_ZAMED_DEGREES_3 whilebody346
  endwhile346:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB354:
RETSUB_F_ULTRASONIC_ZAMED_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_ZAMED_5:
SUB_F_RESET_0:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_MOVE_FORWARD_ACCELERATION_5:
    SUBF VLV_DEG_5 VLV_ACCELERATION_5 F.0
    SUBF F.0 VLV_ZAME_5 VLV_NORMAL_DEGREES_5
    WRITE32 ENDSUB_F_RESET_0:CALLSUB359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB359:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
  while361:
    JR_GTEQF VLV_C_5 VLV_ACCELERATION_5 endwhile361
  whilebody361:
    DATAF tmpf362
    DATA8 flag362
    DIVF VLV_C_5 VLV_ACCELERATION_5 tmpf362
    CP_EQF 0.0 VLV_ACCELERATION_5 flag362
    SELECTF flag362 0.0 tmpf362 VLV_P_5

    SUBF VLV_BASE_POWER_5 VLV_MIN_POWER_5 F.1
    MULF VLV_P_5 F.1 F.0
    ADDF F.0 VLV_MIN_POWER_5 VLV_POWER_5
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_P_5 VLV_DELTA_5
    SUBF VLV_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
    JR_LTF VLV_C_5 VLV_ACCELERATION_5 whilebody361
  endwhile361:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB378:
    MOVEF_F 0.0 VLV_C_5
  while379:
    JR_GTEQF VLV_C_5 VLV_NORMAL_DEGREES_5 endwhile379
  whilebody379:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 1.0 VLV_DELTA_5
    SUBF VLV_BASE_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_BASE_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
    JR_LTF VLV_C_5 VLV_NORMAL_DEGREES_5 whilebody379
  endwhile379:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB392 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB392:
    MOVEF_F 0.0 VLV_C_5
  while393:
    JR_GTEQF VLV_C_5 VLV_ZAME_5 endwhile393
  whilebody393:
    DATAF tmpf394
    DATA8 flag394
    DIVF VLV_C_5 VLV_ZAME_5 tmpf394
    CP_EQF 0.0 VLV_ZAME_5 flag394
    SELECTF flag394 0.0 tmpf394 VLV_P_5

    SUBF VLV_BASE_POWER_5 VLV_MIN_POWER_5 F.1
    SUBF 1.0 VLV_P_5 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_5 VLV_POWER_5
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    SUBF 1.0 VLV_P_5 F.1
    MULF F.0 F.1 VLV_DELTA_5
    SUBF VLV_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
    JR_LTF VLV_C_5 VLV_ZAME_5 whilebody393
  endwhile393:
RETSUB_F_MOVE_FORWARD_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:
SUB_F_MOVE_BACKWARD_ACCELERATION_5:
    SUBF VLV_DEG_6 VLV_ACCELERATION_6 F.0
    SUBF F.0 VLV_ZAME_6 VLV_NORMAL_DEGREES_6
    WRITE32 ENDSUB_F_RESET_0:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB414:
    MOVEF_F 0.0 VLV_C_6
  while415:
    JR_GTEQF VLV_C_6 VLV_ACCELERATION_6 endwhile415
  whilebody415:
    DATAF tmpf416
    DATA8 flag416
    DIVF VLV_C_6 VLV_ACCELERATION_6 tmpf416
    CP_EQF 0.0 VLV_ACCELERATION_6 flag416
    SELECTF flag416 0.0 tmpf416 VLV_P_6

    SUBF VLV_BASE_POWER_6 VLV_MIN_POWER_6 F.1
    MULF VLV_P_6 F.1 F.0
    ADDF F.0 VLV_MIN_POWER_6 VLV_POWER_6
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.4
    MULF F.4 VGV_RIGHT_FORWARD F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_P_6 F.0
    MULF F.0 -1.0 VLV_DELTA_6
    SUBF VLV_POWER_6 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF VLV_POWER_6 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_6 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_6 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_6
    JR_LTF VLV_C_6 VLV_ACCELERATION_6 whilebody415
  endwhile415:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB436:
    MOVEF_F 0.0 VLV_C_6
  while437:
    JR_GTEQF VLV_C_6 VLV_NORMAL_DEGREES_6 endwhile437
  whilebody437:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 -1.0 VLV_DELTA_6
    SUBF VLV_BASE_POWER_6 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF VLV_BASE_POWER_6 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_6 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_6 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_6
    JR_LTF VLV_C_6 VLV_NORMAL_DEGREES_6 whilebody437
  endwhile437:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB453:
    MOVEF_F 0.0 VLV_C_6
  while454:
    JR_GTEQF VLV_C_6 VLV_ZAME_6 endwhile454
  whilebody454:
    DATAF tmpf455
    DATA8 flag455
    DIVF VLV_C_6 VLV_ZAME_6 tmpf455
    CP_EQF 0.0 VLV_ZAME_6 flag455
    SELECTF flag455 0.0 tmpf455 VLV_P_6

    SUBF VLV_BASE_POWER_6 VLV_MIN_POWER_6 F.1
    SUBF 1.0 VLV_P_6 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_6 VLV_POWER_6
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.4
    MULF F.4 VGV_RIGHT_FORWARD F.3
    SUBF F.2 F.3 F.1
    SUBF 1.0 VLV_P_6 F.2
    MULF F.1 F.2 F.0
    MULF F.0 -1.0 VLV_DELTA_6
    SUBF VLV_POWER_6 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF VLV_POWER_6 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_6 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_6 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_6
    JR_LTF VLV_C_6 VLV_ZAME_6 whilebody454
  endwhile454:
RETSUB_F_MOVE_BACKWARD_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:
SUB_F_MOTOR_FORWARD_ACCELERATION_7:
    SUBF VLV_DEG_7 VLV_ACCELERATION_7 F.0
    SUBF F.0 VLV_ZAME_7 VLV_NORMAL_DEG_7
    CALL MOTOR.RESETCOUNT VLV_MOTOR_7
    MOVEF_F 0.0 VLV_C_7
  while480:
    JR_GTEQF VLV_C_7 VLV_ACCELERATION_7 endwhile480
  whilebody480:
    DATAF tmpf481
    DATA8 flag481
    DIVF VLV_C_7 VLV_ACCELERATION_7 tmpf481
    CP_EQF 0.0 VLV_ACCELERATION_7 flag481
    SELECTF flag481 0.0 tmpf481 VLV_P_7

    SUBF VLV_BASE_POWER_7 VLV_MIN_POWER_7 F.1
    MULF F.1 VLV_P_7 F.0
    ADDF F.0 VLV_MIN_POWER_7 VLV_POWER_7
    MATH FLOOR VLV_POWER_7 F.0
    MULF F.0 VLV_FORWARD_7 VLV_POWER_7
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_POWER_7 '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    CALL MOTOR.START VLV_MOTOR_7 VLV_POWER_7
    CALL MOTOR.GETCOUNT VLV_MOTOR_7 F.0
    MULF F.0 VLV_FORWARD_7 VLV_C_7
    DATA32 milliseconds495
	MOVEF_32 10.0 milliseconds495
	DATA32 timer495
	TIMER_WAIT milliseconds495 timer495
	TIMER_READY timer495
    JR_LTF VLV_C_7 VLV_ACCELERATION_7 whilebody480
  endwhile480:
    MULF VLV_BASE_POWER_7 VLV_FORWARD_7 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_7 F.0 0.0 VLV_NORMAL_DEG_7 0.0 'False' 

	DATA8 layer497
	DATA8 nos497
	DATA8 busy497
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_7 layer497 nos497
	JR_EQ8 0 nos497 motornotbusy497
  motorwaiting497:
	OUTPUT_TEST layer497 nos497 busy497
	JR_EQ8 busy497 0 motornotbusy497
	SLEEP
	JR motorwaiting497
  motornotbusy497:
    CALL MOTOR.RESETCOUNT VLV_MOTOR_7
    MOVEF_F 0.0 VLV_C_7
  while499:
    JR_GTEQF VLV_C_7 VLV_ZAME_7 endwhile499
  whilebody499:
    DATAF tmpf500
    DATA8 flag500
    DIVF VLV_C_7 VLV_ZAME_7 tmpf500
    CP_EQF 0.0 VLV_ZAME_7 flag500
    SELECTF flag500 0.0 tmpf500 VLV_P_7

    SUBF VLV_BASE_POWER_7 VLV_MIN_POWER_7 F.1
    SUBF 1.0 VLV_P_7 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_7 VLV_POWER_7
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_POWER_7 '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    MULF VLV_POWER_7 VLV_FORWARD_7 F.0
    CALL MOTOR.START VLV_MOTOR_7 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_7 F.0
    MULF F.0 VLV_FORWARD_7 VLV_C_7
    DATA32 milliseconds514
	MOVEF_32 10.0 milliseconds514
	DATA32 timer514
	TIMER_WAIT milliseconds514 timer514
	TIMER_READY timer514
    JR_LTF VLV_C_7 VLV_ZAME_7 whilebody499
  endwhile499:
RETSUB_F_MOTOR_FORWARD_ACCELERATION_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:
SUB_F_MOTOR_BACKWARD_ACCELERATION_7:
    SUBF VLV_DEG_8 VLV_ACCELERATION_8 F.0
    SUBF F.0 VLV_ZAME_8 VLV_NORMAL_DEG_8
    CALL MOTOR.RESETCOUNT VLV_MOTOR_8
    MOVEF_F 0.0 VLV_C_8
  while518:
    JR_GTEQF VLV_C_8 VLV_ACCELERATION_8 endwhile518
  whilebody518:
    DATAF tmpf519
    DATA8 flag519
    DIVF VLV_C_8 VLV_ACCELERATION_8 tmpf519
    CP_EQF 0.0 VLV_ACCELERATION_8 flag519
    SELECTF flag519 0.0 tmpf519 F.1

    SUBF VLV_BASE_POWER_8 VLV_MIN_POWER_8 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_8 VLV_POWER_8
    MULF VLV_FORWARD_8 VLV_POWER_8 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VLV_MOTOR_8 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_8 F.1
    MULF F.1 VLV_FORWARD_8 F.0
    MULF F.0 -1.0 VLV_C_8
    DATA32 milliseconds529
	MOVEF_32 10.0 milliseconds529
	DATA32 timer529
	TIMER_WAIT milliseconds529 timer529
	TIMER_READY timer529
    JR_LTF VLV_C_8 VLV_ACCELERATION_8 whilebody518
  endwhile518:
    MULF VLV_FORWARD_8 VLV_BASE_POWER_8 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_8 F.0 0.0 VLV_NORMAL_DEG_8 0.0 'False' 

	DATA8 layer532
	DATA8 nos532
	DATA8 busy532
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_8 layer532 nos532
	JR_EQ8 0 nos532 motornotbusy532
  motorwaiting532:
	OUTPUT_TEST layer532 nos532 busy532
	JR_EQ8 busy532 0 motornotbusy532
	SLEEP
	JR motorwaiting532
  motornotbusy532:
    CALL MOTOR.RESETCOUNT VLV_MOTOR_8
    MOVEF_F 0.0 VLV_C_8
  while534:
    JR_GTEQF VLV_C_8 VLV_ZAME_8 endwhile534
  whilebody534:
    DATAF tmpf535
    DATA8 flag535
    DIVF VLV_C_8 VLV_ZAME_8 tmpf535
    CP_EQF 0.0 VLV_ZAME_8 flag535
    SELECTF flag535 0.0 tmpf535 VLV_P_8

    SUBF VLV_BASE_POWER_8 VLV_MIN_POWER_8 F.1
    SUBF 1.0 VLV_P_8 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_8 VLV_POWER_8
    MULF VLV_FORWARD_8 VLV_POWER_8 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VLV_MOTOR_8 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_8 F.1
    MULF F.1 VLV_FORWARD_8 F.0
    MULF F.0 -1.0 VLV_C_8
    DATA32 milliseconds546
	MOVEF_32 10.0 milliseconds546
	DATA32 timer546
	TIMER_WAIT milliseconds546 timer546
	TIMER_READY timer546
    JR_LTF VLV_C_8 VLV_ZAME_8 whilebody534
  endwhile534:
RETSUB_F_MOTOR_BACKWARD_ACCELERATION_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
