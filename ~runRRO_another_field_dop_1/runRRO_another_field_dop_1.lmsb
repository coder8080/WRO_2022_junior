DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_4
DATAF VLV_MIN_POWER_4
DATAF VLV_DEG_4
DATAF VLV_ACCELERATION_4
DATAF VLV_ZAME_4
DATAF VLV_BASE_POWER_5
DATAF VLV_MIN_POWER_5
DATAF VLV_DEG_5
DATAF VLV_ACCELERATION_5
DATAF VLV_ZAME_5
DATAF VLV_U_2
DATAF VLV_BASE_POWER_2
DATAF VLV_MIN_POWER_2
DATAF VLV_DEGREES_2
DATAF VLV_ZAMED_DEGREES_2
DATAF VLV_POWER_1
DATAF VLV_U_1
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERSED_MOTOR 252
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_MOTORS 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_LINE_SENSOR
DATAF VGV_ULTRASONIC
DATAF VGV_RIGHT_FORWARD
DATAF VGV_LEFT_FORWARD
DATAF VGV_A
DATAF VGV_P
DATAF VGV_D
DATAF VGV_LASTERROR
DATAF VGV_NOWERROR
DATAF VGV_DIF
DATAF VGV_INTEGRAL
DATAF VGV_DERIVATIVE
DATAF VGV_UP
DATAF VGV_P_U
DATAF VGV_D_U
DATAF VGV_DEG
DATAS VGV_IS_CHEM_ON_RIGHT 252
DATAS VGV_IS_CHEM_ON_LEFT 252
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_CHEM 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_CUBES_COUNT
DATAF VGV_WATER_STATE
DATAS VGV_OBJECT 252
DATAF VGV_B
DATAF VGV_W
DATAS VGV_IS_LEFT_OPEN 252
DATAF VGV_COL
DATAF VGV_C
DATAF VGV_G
DATAF VGV_I
DATAF VGV_R_C
DATAF VGV_L_C
DATAF VGV_DIFF
DATAF VGV_R_P
DATAF VGV_L_P
DATAS VGV_TAKE_RED_RIGHT 252
DATAS VGV_TAKE_RED_LEFT 252
DATAF VGV_CHEM_BACK
DATAF VGV_NO_BACK
DATAF VGV_ULTRA
DATAF VGV_T
DATAF VGV_MINS
DATAF VGV_SECS
DATAS VGV_STR 252
DATAF VGV_N
DATAS VGV_FILENAME 252
DATAF VLV_V_1
DATAF VLV_NOWERROR_1
DATAF VLV_DIF_1
DATAF VLV_INTEGRAL_1
DATAF VLV_DERIVATIVE_1
DATAF VLV_UP_1
DATAF VLV_LASTERROR_1
DATAF VLV_NORMAL_DEGREES_2
DATAF VLV_C_2
DATAF VLV_MINUS_2
DATAF VLV_POWER_2
DATAF VLV_NORMAL_DEGREES_4
DATAF VLV_C_4
DATAF VLV_P_4
DATAF VLV_POWER_4
DATAF VLV_DELTA_4
DATAF VLV_LEFT_POWER_4
DATAF VLV_RIGHT_POWER_4
DATAF VLV_NORMAL_DEGREES_5
DATAF VLV_C_5
DATAF VLV_P_5
DATAF VLV_POWER_5
DATAF VLV_DELTA_5
DATAF VLV_LEFT_POWER_5
DATAF VLV_RIGHT_POWER_5

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_4
    MOVEF_F 0.0 VLV_MIN_POWER_4
    MOVEF_F 0.0 VLV_DEG_4
    MOVEF_F 0.0 VLV_ACCELERATION_4
    MOVEF_F 0.0 VLV_ZAME_4
    MOVEF_F 0.0 VLV_BASE_POWER_5
    MOVEF_F 0.0 VLV_MIN_POWER_5
    MOVEF_F 0.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    MOVEF_F 0.0 VLV_U_2
    MOVEF_F 0.0 VLV_BASE_POWER_2
    MOVEF_F 0.0 VLV_MIN_POWER_2
    MOVEF_F 0.0 VLV_DEGREES_2
    MOVEF_F 0.0 VLV_ZAMED_DEGREES_2
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_U_1
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_IS_LEFT_OPEN
    MOVEF_F 0.0 VGV_COL
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_T
    MOVEF_F 0.0 VGV_MINS
    MOVEF_F 0.0 VGV_SECS
    STRINGS DUPLICATE '' VGV_STR
    MOVEF_F 0.0 VGV_N
    STRINGS DUPLICATE '' VGV_FILENAME
    MOVEF_F 0.0 VLV_V_1
    MOVEF_F 0.0 VLV_NOWERROR_1
    MOVEF_F 0.0 VLV_DIF_1
    MOVEF_F 0.0 VLV_INTEGRAL_1
    MOVEF_F 0.0 VLV_DERIVATIVE_1
    MOVEF_F 0.0 VLV_UP_1
    MOVEF_F 0.0 VLV_LASTERROR_1
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_2
    MOVEF_F 0.0 VLV_C_2
    MOVEF_F 0.0 VLV_MINUS_2
    MOVEF_F 0.0 VLV_POWER_2
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_4
    MOVEF_F 0.0 VLV_C_4
    MOVEF_F 0.0 VLV_P_4
    MOVEF_F 0.0 VLV_POWER_4
    MOVEF_F 0.0 VLV_DELTA_4
    MOVEF_F 0.0 VLV_LEFT_POWER_4
    MOVEF_F 0.0 VLV_RIGHT_POWER_4
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_5
    MOVEF_F 0.0 VLV_C_5
    MOVEF_F 0.0 VLV_P_5
    MOVEF_F 0.0 VLV_POWER_5
    MOVEF_F 0.0 VLV_DELTA_5
    MOVEF_F 0.0 VLV_LEFT_POWER_5
    MOVEF_F 0.0 VLV_RIGHT_POWER_5
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    DATAS S.2 252
    MOVE8_8 0 STACKPOINTER
    MOVEF_F 0.0 VLV_BASE_POWER_4
    MOVEF_F 0.0 VLV_MIN_POWER_4
    MOVEF_F 0.0 VLV_DEG_4
    MOVEF_F 0.0 VLV_ACCELERATION_4
    MOVEF_F 0.0 VLV_ZAME_4
    MOVEF_F 0.0 VLV_BASE_POWER_5
    MOVEF_F 0.0 VLV_MIN_POWER_5
    MOVEF_F 0.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    MOVEF_F 0.0 VLV_U_2
    MOVEF_F 0.0 VLV_BASE_POWER_2
    MOVEF_F 0.0 VLV_MIN_POWER_2
    MOVEF_F 0.0 VLV_DEGREES_2
    MOVEF_F 0.0 VLV_ZAMED_DEGREES_2
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_U_1
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_IS_LEFT_OPEN
    MOVEF_F 0.0 VGV_COL
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_T
    MOVEF_F 0.0 VGV_MINS
    MOVEF_F 0.0 VGV_SECS
    STRINGS DUPLICATE '' VGV_STR
    MOVEF_F 0.0 VGV_N
    STRINGS DUPLICATE '' VGV_FILENAME
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 1.0 VGV_LINE_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 1.0 VGV_P
    MOVEF_F 6.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 1.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 2.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE_SENSOR no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_RIGHT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_LEFT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 1.0 'Low battery'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB10:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB11 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB11:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB12:
ENDTHREAD:
    RETURN
SUB_F_LINE_0:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF 20.0 F.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf17
    DATA8 flag17
    DIVF F.0 10.0 tmpf17
    CP_EQF 0.0 10.0 flag17
    SELECTF flag17 0.0 tmpf17 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_LINE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_0:
SUB_F_ULTRASONIC_SLOW_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf30
    DATA8 flag30
    DIVF F.0 10.0 tmpf30
    CP_EQF 0.0 10.0 flag30
    SELECTF flag30 0.0 tmpf30 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 20.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 20.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SLOW_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SLOW_0:
SUB_F_ULTRASONIC_FAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf45
    DATA8 flag45
    DIVF F.0 10.0 tmpf45
    CP_EQF 0.0 10.0 flag45
    SELECTF flag45 0.0 tmpf45 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 30.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 30.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_FAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_FAST_0:
SUB_F_ULTRASONIC_SUPERFAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf60
    DATA8 flag60
    DIVF F.0 10.0 tmpf60
    CP_EQF 0.0 10.0 flag60
    SELECTF flag60 0.0 tmpf60 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 80.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 80.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SUPERFAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SUPERFAST_0:
SUB_F_STOP_0:
    CALL MOTOR.STOP VGV_MOTORS 'True'
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_STOP_RIGHT_0:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
RETSUB_F_STOP_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_RIGHT_0:
SUB_F_DELAY_0:
    DATA32 milliseconds73
	MOVEF_32 300.0 milliseconds73
	DATA32 timer73
	TIMER_WAIT milliseconds73 timer73
	TIMER_READY timer73
RETSUB_F_DELAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_0:
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_LEFT_0:
    MOVEF_F 20.0 VLV_BASE_POWER_4
    MOVEF_F 10.0 VLV_MIN_POWER_4
    MOVEF_F 280.0 VLV_DEG_4
    MOVEF_F 100.0 VLV_ACCELERATION_4
    MOVEF_F 100.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB75:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB76:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB77:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for79:
    JR_GTF VGV_I 20.0 endfor79
  forbody79:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds83
	MOVEF_32 10.0 milliseconds83
	DATA32 timer83
	TIMER_WAIT milliseconds83 timer83
	TIMER_READY timer83
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody79
  endfor79:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 370.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer89
	DATA8 nos89
	DATA8 busy89
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer89 nos89
	JR_EQ8 0 nos89 motornotbusy89
  motorwaiting89:
	OUTPUT_TEST layer89 nos89 busy89
	JR_EQ8 busy89 0 motornotbusy89
	SLEEP
	JR motorwaiting89
  motornotbusy89:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer90
	DATA8 nos90
	DATA8 busy90
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer90 nos90
	JR_EQ8 0 nos90 motornotbusy90
  motorwaiting90:
	OUTPUT_TEST layer90 nos90 busy90
	JR_EQ8 busy90 0 motornotbusy90
	SLEEP
	JR motorwaiting90
  motornotbusy90:
    MOVEF_F 70.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB91:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer92
	DATA8 nos92
	DATA8 busy92
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer92 nos92
	JR_EQ8 0 nos92 motornotbusy92
  motorwaiting92:
	OUTPUT_TEST layer92 nos92 busy92
	JR_EQ8 busy92 0 motornotbusy92
	SLEEP
	JR motorwaiting92
  motornotbusy92:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB93:
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB94:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for96:
    JR_GTF VGV_I 20.0 endfor96
  forbody96:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds99
	MOVEF_32 10.0 milliseconds99
	DATA32 timer99
	TIMER_WAIT milliseconds99 timer99
	TIMER_READY timer99
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody96
  endfor96:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 360.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer105
	DATA8 nos105
	DATA8 busy105
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer105 nos105
	JR_EQ8 0 nos105 motornotbusy105
  motorwaiting105:
	OUTPUT_TEST layer105 nos105 busy105
	JR_EQ8 busy105 0 motornotbusy105
	SLEEP
	JR motorwaiting105
  motornotbusy105:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB106:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB107:
    MOVEF_F 280.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB108:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB109:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB110:
RETSUB_F_TAKE_CHEM_ON_LEFT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_0:
SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 170.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB111:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB112:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer113
	DATA8 nos113
	DATA8 busy113
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer113 nos113
	JR_EQ8 0 nos113 motornotbusy113
  motorwaiting113:
	OUTPUT_TEST layer113 nos113 busy113
	JR_EQ8 busy113 0 motornotbusy113
	SLEEP
	JR motorwaiting113
  motornotbusy113:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for115:
    JR_GTF VGV_I 20.0 endfor115
  forbody115:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds118
	MOVEF_32 10.0 milliseconds118
	DATA32 timer118
	TIMER_WAIT milliseconds118 timer118
	TIMER_READY timer118
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody115
  endfor115:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer124
	DATA8 nos124
	DATA8 busy124
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer124 nos124
	JR_EQ8 0 nos124 motornotbusy124
  motorwaiting124:
	OUTPUT_TEST layer124 nos124 busy124
	JR_EQ8 busy124 0 motornotbusy124
	SLEEP
	JR motorwaiting124
  motornotbusy124:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB125:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB126:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer127
	DATA8 nos127
	DATA8 busy127
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer127 nos127
	JR_EQ8 0 nos127 motornotbusy127
  motorwaiting127:
	OUTPUT_TEST layer127 nos127 busy127
	JR_EQ8 busy127 0 motornotbusy127
	SLEEP
	JR motorwaiting127
  motornotbusy127:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB128:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB129:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for131:
    JR_GTF VGV_I 20.0 endfor131
  forbody131:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds135
	MOVEF_32 10.0 milliseconds135
	DATA32 timer135
	TIMER_WAIT milliseconds135 timer135
	TIMER_READY timer135
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody131
  endfor131:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer141
	DATA8 nos141
	DATA8 busy141
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer141 nos141
	JR_EQ8 0 nos141 motornotbusy141
  motorwaiting141:
	OUTPUT_TEST layer141 nos141 busy141
	JR_EQ8 busy141 0 motornotbusy141
	SLEEP
	JR motorwaiting141
  motornotbusy141:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB142:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB143:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for145:
    JR_GTF VGV_I 20.0 endfor145
  forbody145:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds149
	MOVEF_32 30.0 milliseconds149
	DATA32 timer149
	TIMER_WAIT milliseconds149 timer149
	TIMER_READY timer149
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody145
  endfor145:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 170.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer155
	DATA8 nos155
	DATA8 busy155
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer155 nos155
	JR_EQ8 0 nos155 motornotbusy155
  motorwaiting155:
	OUTPUT_TEST layer155 nos155 busy155
	JR_EQ8 busy155 0 motornotbusy155
	SLEEP
	JR motorwaiting155
  motornotbusy155:
RETSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for157:
    JR_GTF VGV_I 20.0 endfor157
  forbody157:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds163
	MOVEF_32 30.0 milliseconds163
	DATA32 timer163
	TIMER_WAIT milliseconds163 timer163
	TIMER_READY timer163
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody157
  endfor157:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer169
	DATA8 nos169
	DATA8 busy169
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer169 nos169
	JR_EQ8 0 nos169 motornotbusy169
  motorwaiting169:
	OUTPUT_TEST layer169 nos169 busy169
	JR_EQ8 busy169 0 motornotbusy169
	SLEEP
	JR motorwaiting169
  motornotbusy169:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB170:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer171
	DATA8 nos171
	DATA8 busy171
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer171 nos171
	JR_EQ8 0 nos171 motornotbusy171
  motorwaiting171:
	OUTPUT_TEST layer171 nos171 busy171
	JR_EQ8 busy171 0 motornotbusy171
	SLEEP
	JR motorwaiting171
  motornotbusy171:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for173:
    JR_GTF VGV_I 20.0 endfor173
  forbody173:
    MULF VGV_I VGV_LEFT_FORWARD F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds176
	MOVEF_32 10.0 milliseconds176
	DATA32 timer176
	TIMER_WAIT milliseconds176 timer176
	TIMER_READY timer176
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody173
  endfor173:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer182
	DATA8 nos182
	DATA8 busy182
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer182 nos182
	JR_EQ8 0 nos182 motornotbusy182
  motorwaiting182:
	OUTPUT_TEST layer182 nos182 busy182
	JR_EQ8 busy182 0 motornotbusy182
	SLEEP
	JR motorwaiting182
  motornotbusy182:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB183:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer184
	DATA8 nos184
	DATA8 busy184
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer184 nos184
	JR_EQ8 0 nos184 motornotbusy184
  motorwaiting184:
	OUTPUT_TEST layer184 nos184 busy184
	JR_EQ8 busy184 0 motornotbusy184
	SLEEP
	JR motorwaiting184
  motornotbusy184:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB185:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB186:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for188:
    JR_GTF VGV_I 20.0 endfor188
  forbody188:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds192
	MOVEF_32 10.0 milliseconds192
	DATA32 timer192
	TIMER_WAIT milliseconds192 timer192
	TIMER_READY timer192
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody188
  endfor188:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer198
	DATA8 nos198
	DATA8 busy198
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer198 nos198
	JR_EQ8 0 nos198 motornotbusy198
  motorwaiting198:
	OUTPUT_TEST layer198 nos198 busy198
	JR_EQ8 busy198 0 motornotbusy198
	SLEEP
	JR motorwaiting198
  motornotbusy198:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB199:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB200:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for202:
    JR_GTF VGV_I 20.0 endfor202
  forbody202:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds206
	MOVEF_32 30.0 milliseconds206
	DATA32 timer206
	TIMER_WAIT milliseconds206 timer206
	TIMER_READY timer206
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody202
  endfor202:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer212
	DATA8 nos212
	DATA8 busy212
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer212 nos212
	JR_EQ8 0 nos212 motornotbusy212
  motorwaiting212:
	OUTPUT_TEST layer212 nos212 busy212
	JR_EQ8 busy212 0 motornotbusy212
	SLEEP
	JR motorwaiting212
  motornotbusy212:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else213_1
    CALL MOTOR.START VGV_WATER_MOTOR -30.0
    DATA32 milliseconds215
	MOVEF_32 1500.0 milliseconds215
	DATA32 timer215
	TIMER_WAIT milliseconds215 timer215
	TIMER_READY timer215
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 30.0 0.0 40.0 0.0 'True' 

	DATA8 layer217
	DATA8 nos217
	DATA8 busy217
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer217 nos217
	JR_EQ8 0 nos217 motornotbusy217
  motorwaiting217:
	OUTPUT_TEST layer217 nos217 busy217
	JR_EQ8 busy217 0 motornotbusy217
	SLEEP
	JR motorwaiting217
  motornotbusy217:
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif213
  else213_1:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds219
	MOVEF_32 2000.0 milliseconds219
	DATA32 timer219
	TIMER_WAIT milliseconds219 timer219
	TIMER_READY timer219
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -30.0 0.0 40.0 0.0 'True' 

	DATA8 layer221
	DATA8 nos221
	DATA8 busy221
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer221 nos221
	JR_EQ8 0 nos221 motornotbusy221
  motorwaiting221:
	OUTPUT_TEST layer221 nos221 busy221
	JR_EQ8 busy221 0 motornotbusy221
	SLEEP
	JR motorwaiting221
  motornotbusy221:
  else213_2:
  endif213:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_UPDATE_DISPLAY_0:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_OBJECT
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.1
    CALL TEXT.APPEND 'Red: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.1
    CALL TEXT.APPEND 'White: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 75.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_UPDATE_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UPDATE_DISPLAY_0:
SUB_F_RESET_VALUES_0:
    STRINGS DUPLICATE 'None' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
RETSUB_F_RESET_VALUES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_VALUES_0:
SUB_F_CLOSE_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -10.0 0.0 70.0 0.0 'True' 

	DATA8 layer232
	DATA8 nos232
	DATA8 busy232
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer232 nos232
	JR_EQ8 0 nos232 motornotbusy232
  motorwaiting232:
	OUTPUT_TEST layer232 nos232 busy232
	JR_EQ8 busy232 0 motornotbusy232
	SLEEP
	JR motorwaiting232
  motornotbusy232:
RETSUB_F_CLOSE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_0:
SUB_F_OPEN_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 10.0 0.0 70.0 0.0 'True' 

	DATA8 layer233
	DATA8 nos233
	DATA8 busy233
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer233 nos233
	JR_EQ8 0 nos233 motornotbusy233
  motorwaiting233:
	OUTPUT_TEST layer233 nos233 busy233
	JR_EQ8 busy233 0 motornotbusy233
	SLEEP
	JR motorwaiting233
  motornotbusy233:
RETSUB_F_OPEN_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_0:
SUB_F_TAKE_CUBES_0:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds235
	MOVEF_32 500.0 milliseconds235
	DATA32 timer235
	TIMER_WAIT milliseconds235 timer235
	TIMER_READY timer235
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer239
	DATA8 nos239
	DATA8 busy239
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer239 nos239
	JR_EQ8 0 nos239 motornotbusy239
  motorwaiting239:
	OUTPUT_TEST layer239 nos239 busy239
	JR_EQ8 busy239 0 motornotbusy239
	SLEEP
	JR motorwaiting239
  motornotbusy239:
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR -20.0 0.0 360.0 0.0 'True' 

	DATA8 layer240
	DATA8 nos240
	DATA8 busy240
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer240 nos240
	JR_EQ8 0 nos240 motornotbusy240
  motorwaiting240:
	OUTPUT_TEST layer240 nos240 busy240
	JR_EQ8 busy240 0 motornotbusy240
	SLEEP
	JR motorwaiting240
  motornotbusy240:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds244
	MOVEF_32 700.0 milliseconds244
	DATA32 timer244
	TIMER_WAIT milliseconds244 timer244
	TIMER_READY timer244
    WRITE32 ENDSUB_F_STOP_0:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB245:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 229.0 VLV_U_2
    MOVEF_F 50.0 VLV_BASE_POWER_2
    MOVEF_F 20.0 VLV_MIN_POWER_2
    MOVEF_F 930.0 VLV_DEGREES_2
    MOVEF_F 200.0 VLV_ZAMED_DEGREES_2
    WRITE32 ENDSUB_F_ULTRASONIC_ZAMED_5:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_ZAMED_5
CALLSUB247:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 180.0 0.0 'True' 

	DATA8 layer249
	DATA8 nos249
	DATA8 busy249
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer249 nos249
	JR_EQ8 0 nos249 motornotbusy249
  motorwaiting249:
	OUTPUT_TEST layer249 nos249 busy249
	JR_EQ8 busy249 0 motornotbusy249
	SLEEP
	JR motorwaiting249
  motornotbusy249:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 180.0 0.0 'True' 

	DATA8 layer251
	DATA8 nos251
	DATA8 busy251
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer251 nos251
	JR_EQ8 0 nos251 motornotbusy251
  motorwaiting251:
	OUTPUT_TEST layer251 nos251 busy251
	JR_EQ8 busy251 0 motornotbusy251
	SLEEP
	JR motorwaiting251
  motornotbusy251:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds255
	MOVEF_32 1000.0 milliseconds255
	DATA32 timer255
	TIMER_WAIT milliseconds255 timer255
	TIMER_READY timer255
    WRITE32 ENDSUB_F_STOP_0:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB256:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer257
	DATA8 nos257
	DATA8 busy257
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer257 nos257
	JR_EQ8 0 nos257 motornotbusy257
  motorwaiting257:
	OUTPUT_TEST layer257 nos257 busy257
	JR_EQ8 busy257 0 motornotbusy257
	SLEEP
	JR motorwaiting257
  motornotbusy257:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB258:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer261
	DATA8 nos261
	DATA8 busy261
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer261 nos261
	JR_EQ8 0 nos261 motornotbusy261
  motorwaiting261:
	OUTPUT_TEST layer261 nos261 busy261
	JR_EQ8 busy261 0 motornotbusy261
	SLEEP
	JR motorwaiting261
  motornotbusy261:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB262:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 180.0 0.0 'True' 

	DATA8 layer264
	DATA8 nos264
	DATA8 busy264
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer264 nos264
	JR_EQ8 0 nos264 motornotbusy264
  motorwaiting264:
	OUTPUT_TEST layer264 nos264 busy264
	JR_EQ8 busy264 0 motornotbusy264
	SLEEP
	JR motorwaiting264
  motornotbusy264:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 180.0 0.0 'True' 

	DATA8 layer266
	DATA8 nos266
	DATA8 busy266
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer266 nos266
	JR_EQ8 0 nos266 motornotbusy266
  motorwaiting266:
	OUTPUT_TEST layer266 nos266 busy266
	JR_EQ8 busy266 0 motornotbusy266
	SLEEP
	JR motorwaiting266
  motornotbusy266:
RETSUB_F_TAKE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_0:
SUB_F_TAKE_CUBES_INVERSED_0:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds268
	MOVEF_32 500.0 milliseconds268
	DATA32 timer268
	TIMER_WAIT milliseconds268 timer268
	TIMER_READY timer268
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer272
	DATA8 nos272
	DATA8 busy272
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer272 nos272
	JR_EQ8 0 nos272 motornotbusy272
  motorwaiting272:
	OUTPUT_TEST layer272 nos272 busy272
	JR_EQ8 busy272 0 motornotbusy272
	SLEEP
	JR motorwaiting272
  motornotbusy272:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer274
	DATA8 nos274
	DATA8 busy274
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer274 nos274
	JR_EQ8 0 nos274 motornotbusy274
  motorwaiting274:
	OUTPUT_TEST layer274 nos274 busy274
	JR_EQ8 busy274 0 motornotbusy274
	SLEEP
	JR motorwaiting274
  motornotbusy274:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds278
	MOVEF_32 700.0 milliseconds278
	DATA32 timer278
	TIMER_WAIT milliseconds278 timer278
	TIMER_READY timer278
    WRITE32 ENDSUB_F_STOP_0:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB279:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 20.0 VLV_BASE_POWER_4
    MOVEF_F 20.0 VLV_MIN_POWER_4
    MOVEF_F 930.0 VLV_DEG_4
    MOVEF_F 0.0 VLV_ACCELERATION_4
    MOVEF_F 200.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB281:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 200.0 0.0 'True' 

	DATA8 layer283
	DATA8 nos283
	DATA8 busy283
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer283 nos283
	JR_EQ8 0 nos283 motornotbusy283
  motorwaiting283:
	OUTPUT_TEST layer283 nos283 busy283
	JR_EQ8 busy283 0 motornotbusy283
	SLEEP
	JR motorwaiting283
  motornotbusy283:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 180.0 0.0 'True' 

	DATA8 layer285
	DATA8 nos285
	DATA8 busy285
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer285 nos285
	JR_EQ8 0 nos285 motornotbusy285
  motorwaiting285:
	OUTPUT_TEST layer285 nos285 busy285
	JR_EQ8 busy285 0 motornotbusy285
	SLEEP
	JR motorwaiting285
  motornotbusy285:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds289
	MOVEF_32 1000.0 milliseconds289
	DATA32 timer289
	TIMER_WAIT milliseconds289 timer289
	TIMER_READY timer289
    WRITE32 ENDSUB_F_STOP_0:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB290:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer291
	DATA8 nos291
	DATA8 busy291
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer291 nos291
	JR_EQ8 0 nos291 motornotbusy291
  motorwaiting291:
	OUTPUT_TEST layer291 nos291 busy291
	JR_EQ8 busy291 0 motornotbusy291
	SLEEP
	JR motorwaiting291
  motornotbusy291:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB292:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer295
	DATA8 nos295
	DATA8 busy295
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer295 nos295
	JR_EQ8 0 nos295 motornotbusy295
  motorwaiting295:
	OUTPUT_TEST layer295 nos295 busy295
	JR_EQ8 busy295 0 motornotbusy295
	SLEEP
	JR motorwaiting295
  motornotbusy295:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB296:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 180.0 0.0 'True' 

	DATA8 layer298
	DATA8 nos298
	DATA8 busy298
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer298 nos298
	JR_EQ8 0 nos298 motornotbusy298
  motorwaiting298:
	OUTPUT_TEST layer298 nos298 busy298
	JR_EQ8 busy298 0 motornotbusy298
	SLEEP
	JR motorwaiting298
  motornotbusy298:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 180.0 0.0 'True' 

	DATA8 layer300
	DATA8 nos300
	DATA8 busy300
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer300 nos300
	JR_EQ8 0 nos300 motornotbusy300
  motorwaiting300:
	OUTPUT_TEST layer300 nos300 busy300
	JR_EQ8 busy300 0 motornotbusy300
	SLEEP
	JR motorwaiting300
  motornotbusy300:
RETSUB_F_TAKE_CUBES_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_INVERSED_0:
SUB_F_TAKE_LONG_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer302
	DATA8 nos302
	DATA8 busy302
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer302 nos302
	JR_EQ8 0 nos302 motornotbusy302
  motorwaiting302:
	OUTPUT_TEST layer302 nos302 busy302
	JR_EQ8 busy302 0 motornotbusy302
	SLEEP
	JR motorwaiting302
  motornotbusy302:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer305
	DATA8 nos305
	DATA8 busy305
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer305 nos305
	JR_EQ8 0 nos305 motornotbusy305
  motorwaiting305:
	OUTPUT_TEST layer305 nos305 busy305
	JR_EQ8 busy305 0 motornotbusy305
	SLEEP
	JR motorwaiting305
  motornotbusy305:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB306 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB306:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer309
	DATA8 nos309
	DATA8 busy309
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer309 nos309
	JR_EQ8 0 nos309 motornotbusy309
  motorwaiting309:
	OUTPUT_TEST layer309 nos309 busy309
	JR_EQ8 busy309 0 motornotbusy309
	SLEEP
	JR motorwaiting309
  motornotbusy309:
    JR_NEQF VGV_CUBES_COUNT 2.0 else310_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB311:
  else310_1:
  endif310:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 38.0 'True'

	DATA8 layer314
	DATA8 nos314
	DATA8 busy314
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer314 nos314
	JR_EQ8 0 nos314 motornotbusy314
  motorwaiting314:
	OUTPUT_TEST layer314 nos314 busy314
	JR_EQ8 busy314 0 motornotbusy314
	SLEEP
	JR motorwaiting314
  motornotbusy314:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer316
	DATA8 nos316
	DATA8 busy316
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer316 nos316
	JR_EQ8 0 nos316 motornotbusy316
  motorwaiting316:
	OUTPUT_TEST layer316 nos316 busy316
	JR_EQ8 busy316 0 motornotbusy316
	SLEEP
	JR motorwaiting316
  motornotbusy316:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_0:
SUB_F_TAKE_LONG_INVERSED_0:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer318
	DATA8 nos318
	DATA8 busy318
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer318 nos318
	JR_EQ8 0 nos318 motornotbusy318
  motorwaiting318:
	OUTPUT_TEST layer318 nos318 busy318
	JR_EQ8 busy318 0 motornotbusy318
	SLEEP
	JR motorwaiting318
  motornotbusy318:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer321
	DATA8 nos321
	DATA8 busy321
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer321 nos321
	JR_EQ8 0 nos321 motornotbusy321
  motorwaiting321:
	OUTPUT_TEST layer321 nos321 busy321
	JR_EQ8 busy321 0 motornotbusy321
	SLEEP
	JR motorwaiting321
  motornotbusy321:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB322:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer325
	DATA8 nos325
	DATA8 busy325
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer325 nos325
	JR_EQ8 0 nos325 motornotbusy325
  motorwaiting325:
	OUTPUT_TEST layer325 nos325 busy325
	JR_EQ8 busy325 0 motornotbusy325
	SLEEP
	JR motorwaiting325
  motornotbusy325:
    JR_NEQF VGV_CUBES_COUNT 2.0 else326_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB327:
  else326_1:
  endif326:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 38.0 'True'

	DATA8 layer330
	DATA8 nos330
	DATA8 busy330
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer330 nos330
	JR_EQ8 0 nos330 motornotbusy330
  motorwaiting330:
	OUTPUT_TEST layer330 nos330 busy330
	JR_EQ8 busy330 0 motornotbusy330
	SLEEP
	JR motorwaiting330
  motornotbusy330:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer332
	DATA8 nos332
	DATA8 busy332
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer332 nos332
	JR_EQ8 0 nos332 motornotbusy332
  motorwaiting332:
	OUTPUT_TEST layer332 nos332 busy332
	JR_EQ8 busy332 0 motornotbusy332
	SLEEP
	JR motorwaiting332
  motornotbusy332:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_INVERSED_0:
SUB_F_TAKE_NEAR_0:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer334
	DATA8 nos334
	DATA8 busy334
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer334 nos334
	JR_EQ8 0 nos334 motornotbusy334
  motorwaiting334:
	OUTPUT_TEST layer334 nos334 busy334
	JR_EQ8 busy334 0 motornotbusy334
	SLEEP
	JR motorwaiting334
  motornotbusy334:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer336
	DATA8 nos336
	DATA8 busy336
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer336 nos336
	JR_EQ8 0 nos336 motornotbusy336
  motorwaiting336:
	OUTPUT_TEST layer336 nos336 busy336
	JR_EQ8 busy336 0 motornotbusy336
	SLEEP
	JR motorwaiting336
  motornotbusy336:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB337:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    MULF 20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer340
	DATA8 nos340
	DATA8 busy340
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer340 nos340
	JR_EQ8 0 nos340 motornotbusy340
  motorwaiting340:
	OUTPUT_TEST layer340 nos340 busy340
	JR_EQ8 busy340 0 motornotbusy340
	SLEEP
	JR motorwaiting340
  motornotbusy340:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB341 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB341:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer344
	DATA8 nos344
	DATA8 busy344
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer344 nos344
	JR_EQ8 0 nos344 motornotbusy344
  motorwaiting344:
	OUTPUT_TEST layer344 nos344 busy344
	JR_EQ8 busy344 0 motornotbusy344
	SLEEP
	JR motorwaiting344
  motornotbusy344:
    JR_NEQF VGV_CUBES_COUNT 2.0 else345_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB346:
  else345_1:
  endif345:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer349
	DATA8 nos349
	DATA8 busy349
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer349 nos349
	JR_EQ8 0 nos349 motornotbusy349
  motorwaiting349:
	OUTPUT_TEST layer349 nos349 busy349
	JR_EQ8 busy349 0 motornotbusy349
	SLEEP
	JR motorwaiting349
  motornotbusy349:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer351
	DATA8 nos351
	DATA8 busy351
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer351 nos351
	JR_EQ8 0 nos351 motornotbusy351
  motorwaiting351:
	OUTPUT_TEST layer351 nos351 busy351
	JR_EQ8 busy351 0 motornotbusy351
	SLEEP
	JR motorwaiting351
  motornotbusy351:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer353
	DATA8 nos353
	DATA8 busy353
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer353 nos353
	JR_EQ8 0 nos353 motornotbusy353
  motorwaiting353:
	OUTPUT_TEST layer353 nos353 busy353
	JR_EQ8 busy353 0 motornotbusy353
	SLEEP
	JR motorwaiting353
  motornotbusy353:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB354:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer357
	DATA8 nos357
	DATA8 busy357
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer357 nos357
	JR_EQ8 0 nos357 motornotbusy357
  motorwaiting357:
	OUTPUT_TEST layer357 nos357 busy357
	JR_EQ8 busy357 0 motornotbusy357
	SLEEP
	JR motorwaiting357
  motornotbusy357:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_0:
SUB_F_TAKE_NEAR_INVERSED_0:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer359
	DATA8 nos359
	DATA8 busy359
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer359 nos359
	JR_EQ8 0 nos359 motornotbusy359
  motorwaiting359:
	OUTPUT_TEST layer359 nos359 busy359
	JR_EQ8 busy359 0 motornotbusy359
	SLEEP
	JR motorwaiting359
  motornotbusy359:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer361
	DATA8 nos361
	DATA8 busy361
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer361 nos361
	JR_EQ8 0 nos361 motornotbusy361
  motorwaiting361:
	OUTPUT_TEST layer361 nos361 busy361
	JR_EQ8 busy361 0 motornotbusy361
	SLEEP
	JR motorwaiting361
  motornotbusy361:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB362:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    MULF 20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer365
	DATA8 nos365
	DATA8 busy365
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer365 nos365
	JR_EQ8 0 nos365 motornotbusy365
  motorwaiting365:
	OUTPUT_TEST layer365 nos365 busy365
	JR_EQ8 busy365 0 motornotbusy365
	SLEEP
	JR motorwaiting365
  motornotbusy365:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB366:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer369
	DATA8 nos369
	DATA8 busy369
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer369 nos369
	JR_EQ8 0 nos369 motornotbusy369
  motorwaiting369:
	OUTPUT_TEST layer369 nos369 busy369
	JR_EQ8 busy369 0 motornotbusy369
	SLEEP
	JR motorwaiting369
  motornotbusy369:
    JR_NEQF VGV_CUBES_COUNT 2.0 else370_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB371:
  else370_1:
  endif370:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer374
	DATA8 nos374
	DATA8 busy374
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer374 nos374
	JR_EQ8 0 nos374 motornotbusy374
  motorwaiting374:
	OUTPUT_TEST layer374 nos374 busy374
	JR_EQ8 busy374 0 motornotbusy374
	SLEEP
	JR motorwaiting374
  motornotbusy374:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer376
	DATA8 nos376
	DATA8 busy376
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer376 nos376
	JR_EQ8 0 nos376 motornotbusy376
  motorwaiting376:
	OUTPUT_TEST layer376 nos376 busy376
	JR_EQ8 busy376 0 motornotbusy376
	SLEEP
	JR motorwaiting376
  motornotbusy376:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer378
	DATA8 nos378
	DATA8 busy378
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer378 nos378
	JR_EQ8 0 nos378 motornotbusy378
  motorwaiting378:
	OUTPUT_TEST layer378 nos378 busy378
	JR_EQ8 busy378 0 motornotbusy378
	SLEEP
	JR motorwaiting378
  motornotbusy378:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB379:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer382
	DATA8 nos382
	DATA8 busy382
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer382 nos382
	JR_EQ8 0 nos382 motornotbusy382
  motorwaiting382:
	OUTPUT_TEST layer382 nos382 busy382
	JR_EQ8 busy382 0 motornotbusy382
	SLEEP
	JR motorwaiting382
  motornotbusy382:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_INVERSED_0:
SUB_F_TAKE_BOTH_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer384
	DATA8 nos384
	DATA8 busy384
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer384 nos384
	JR_EQ8 0 nos384 motornotbusy384
  motorwaiting384:
	OUTPUT_TEST layer384 nos384 busy384
	JR_EQ8 busy384 0 motornotbusy384
	SLEEP
	JR motorwaiting384
  motornotbusy384:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer387
	DATA8 nos387
	DATA8 busy387
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer387 nos387
	JR_EQ8 0 nos387 motornotbusy387
  motorwaiting387:
	OUTPUT_TEST layer387 nos387 busy387
	JR_EQ8 busy387 0 motornotbusy387
	SLEEP
	JR motorwaiting387
  motornotbusy387:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB388:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer391
	DATA8 nos391
	DATA8 busy391
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer391 nos391
	JR_EQ8 0 nos391 motornotbusy391
  motorwaiting391:
	OUTPUT_TEST layer391 nos391 busy391
	JR_EQ8 busy391 0 motornotbusy391
	SLEEP
	JR motorwaiting391
  motornotbusy391:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB392 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB392:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer395
	DATA8 nos395
	DATA8 busy395
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer395 nos395
	JR_EQ8 0 nos395 motornotbusy395
  motorwaiting395:
	OUTPUT_TEST layer395 nos395 busy395
	JR_EQ8 busy395 0 motornotbusy395
	SLEEP
	JR motorwaiting395
  motornotbusy395:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer397
	DATA8 nos397
	DATA8 busy397
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer397 nos397
	JR_EQ8 0 nos397 motornotbusy397
  motorwaiting397:
	OUTPUT_TEST layer397 nos397 busy397
	JR_EQ8 busy397 0 motornotbusy397
	SLEEP
	JR motorwaiting397
  motornotbusy397:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer400
	DATA8 nos400
	DATA8 busy400
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer400 nos400
	JR_EQ8 0 nos400 motornotbusy400
  motorwaiting400:
	OUTPUT_TEST layer400 nos400 busy400
	JR_EQ8 busy400 0 motornotbusy400
	SLEEP
	JR motorwaiting400
  motornotbusy400:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB401:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer404
	DATA8 nos404
	DATA8 busy404
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer404 nos404
	JR_EQ8 0 nos404 motornotbusy404
  motorwaiting404:
	OUTPUT_TEST layer404 nos404 busy404
	JR_EQ8 busy404 0 motornotbusy404
	SLEEP
	JR motorwaiting404
  motornotbusy404:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer406
	DATA8 nos406
	DATA8 busy406
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer406 nos406
	JR_EQ8 0 nos406 motornotbusy406
  motorwaiting406:
	OUTPUT_TEST layer406 nos406 busy406
	JR_EQ8 busy406 0 motornotbusy406
	SLEEP
	JR motorwaiting406
  motornotbusy406:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer408
	DATA8 nos408
	DATA8 busy408
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer408 nos408
	JR_EQ8 0 nos408 motornotbusy408
  motorwaiting408:
	OUTPUT_TEST layer408 nos408 busy408
	JR_EQ8 busy408 0 motornotbusy408
	SLEEP
	JR motorwaiting408
  motornotbusy408:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer411
	DATA8 nos411
	DATA8 busy411
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer411 nos411
	JR_EQ8 0 nos411 motornotbusy411
  motorwaiting411:
	OUTPUT_TEST layer411 nos411 busy411
	JR_EQ8 busy411 0 motornotbusy411
	SLEEP
	JR motorwaiting411
  motornotbusy411:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_0:
SUB_F_TAKE_BOTH_INVERSED_0:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer413
	DATA8 nos413
	DATA8 busy413
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer413 nos413
	JR_EQ8 0 nos413 motornotbusy413
  motorwaiting413:
	OUTPUT_TEST layer413 nos413 busy413
	JR_EQ8 busy413 0 motornotbusy413
	SLEEP
	JR motorwaiting413
  motornotbusy413:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer416
	DATA8 nos416
	DATA8 busy416
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer416 nos416
	JR_EQ8 0 nos416 motornotbusy416
  motorwaiting416:
	OUTPUT_TEST layer416 nos416 busy416
	JR_EQ8 busy416 0 motornotbusy416
	SLEEP
	JR motorwaiting416
  motornotbusy416:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB417:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer420
	DATA8 nos420
	DATA8 busy420
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer420 nos420
	JR_EQ8 0 nos420 motornotbusy420
  motorwaiting420:
	OUTPUT_TEST layer420 nos420 busy420
	JR_EQ8 busy420 0 motornotbusy420
	SLEEP
	JR motorwaiting420
  motornotbusy420:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB421:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer424
	DATA8 nos424
	DATA8 busy424
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer424 nos424
	JR_EQ8 0 nos424 motornotbusy424
  motorwaiting424:
	OUTPUT_TEST layer424 nos424 busy424
	JR_EQ8 busy424 0 motornotbusy424
	SLEEP
	JR motorwaiting424
  motornotbusy424:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer426
	DATA8 nos426
	DATA8 busy426
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer426 nos426
	JR_EQ8 0 nos426 motornotbusy426
  motorwaiting426:
	OUTPUT_TEST layer426 nos426 busy426
	JR_EQ8 busy426 0 motornotbusy426
	SLEEP
	JR motorwaiting426
  motornotbusy426:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer429
	DATA8 nos429
	DATA8 busy429
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer429 nos429
	JR_EQ8 0 nos429 motornotbusy429
  motorwaiting429:
	OUTPUT_TEST layer429 nos429 busy429
	JR_EQ8 busy429 0 motornotbusy429
	SLEEP
	JR motorwaiting429
  motornotbusy429:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB430:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer433
	DATA8 nos433
	DATA8 busy433
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer433 nos433
	JR_EQ8 0 nos433 motornotbusy433
  motorwaiting433:
	OUTPUT_TEST layer433 nos433 busy433
	JR_EQ8 busy433 0 motornotbusy433
	SLEEP
	JR motorwaiting433
  motornotbusy433:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer435
	DATA8 nos435
	DATA8 busy435
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer435 nos435
	JR_EQ8 0 nos435 motornotbusy435
  motorwaiting435:
	OUTPUT_TEST layer435 nos435 busy435
	JR_EQ8 busy435 0 motornotbusy435
	SLEEP
	JR motorwaiting435
  motornotbusy435:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer437
	DATA8 nos437
	DATA8 busy437
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer437 nos437
	JR_EQ8 0 nos437 motornotbusy437
  motorwaiting437:
	OUTPUT_TEST layer437 nos437 busy437
	JR_EQ8 busy437 0 motornotbusy437
	SLEEP
	JR motorwaiting437
  motornotbusy437:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer440
	DATA8 nos440
	DATA8 busy440
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer440 nos440
	JR_EQ8 0 nos440 motornotbusy440
  motorwaiting440:
	OUTPUT_TEST layer440 nos440 busy440
	JR_EQ8 busy440 0 motornotbusy440
	SLEEP
	JR motorwaiting440
  motornotbusy440:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_INVERSED_0:
SUB_F_TAKE_NEAR_DOUBLE_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer442
	DATA8 nos442
	DATA8 busy442
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer442 nos442
	JR_EQ8 0 nos442 motornotbusy442
  motorwaiting442:
	OUTPUT_TEST layer442 nos442 busy442
	JR_EQ8 busy442 0 motornotbusy442
	SLEEP
	JR motorwaiting442
  motornotbusy442:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer444
	DATA8 nos444
	DATA8 busy444
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer444 nos444
	JR_EQ8 0 nos444 motornotbusy444
  motorwaiting444:
	OUTPUT_TEST layer444 nos444 busy444
	JR_EQ8 busy444 0 motornotbusy444
	SLEEP
	JR motorwaiting444
  motornotbusy444:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer447
	DATA8 nos447
	DATA8 busy447
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer447 nos447
	JR_EQ8 0 nos447 motornotbusy447
  motorwaiting447:
	OUTPUT_TEST layer447 nos447 busy447
	JR_EQ8 busy447 0 motornotbusy447
	SLEEP
	JR motorwaiting447
  motornotbusy447:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB448:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer451
	DATA8 nos451
	DATA8 busy451
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer451 nos451
	JR_EQ8 0 nos451 motornotbusy451
  motorwaiting451:
	OUTPUT_TEST layer451 nos451 busy451
	JR_EQ8 busy451 0 motornotbusy451
	SLEEP
	JR motorwaiting451
  motornotbusy451:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB452:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer455
	DATA8 nos455
	DATA8 busy455
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer455 nos455
	JR_EQ8 0 nos455 motornotbusy455
  motorwaiting455:
	OUTPUT_TEST layer455 nos455 busy455
	JR_EQ8 busy455 0 motornotbusy455
	SLEEP
	JR motorwaiting455
  motornotbusy455:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB456:
RETSUB_F_TAKE_NEAR_DOUBLE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_0:
SUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer458
	DATA8 nos458
	DATA8 busy458
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer458 nos458
	JR_EQ8 0 nos458 motornotbusy458
  motorwaiting458:
	OUTPUT_TEST layer458 nos458 busy458
	JR_EQ8 busy458 0 motornotbusy458
	SLEEP
	JR motorwaiting458
  motornotbusy458:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer460
	DATA8 nos460
	DATA8 busy460
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer460 nos460
	JR_EQ8 0 nos460 motornotbusy460
  motorwaiting460:
	OUTPUT_TEST layer460 nos460 busy460
	JR_EQ8 busy460 0 motornotbusy460
	SLEEP
	JR motorwaiting460
  motornotbusy460:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer463
	DATA8 nos463
	DATA8 busy463
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer463 nos463
	JR_EQ8 0 nos463 motornotbusy463
  motorwaiting463:
	OUTPUT_TEST layer463 nos463 busy463
	JR_EQ8 busy463 0 motornotbusy463
	SLEEP
	JR motorwaiting463
  motornotbusy463:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB464:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer467
	DATA8 nos467
	DATA8 busy467
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer467 nos467
	JR_EQ8 0 nos467 motornotbusy467
  motorwaiting467:
	OUTPUT_TEST layer467 nos467 busy467
	JR_EQ8 busy467 0 motornotbusy467
	SLEEP
	JR motorwaiting467
  motornotbusy467:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB468 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB468:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer471
	DATA8 nos471
	DATA8 busy471
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer471 nos471
	JR_EQ8 0 nos471 motornotbusy471
  motorwaiting471:
	OUTPUT_TEST layer471 nos471 busy471
	JR_EQ8 busy471 0 motornotbusy471
	SLEEP
	JR motorwaiting471
  motornotbusy471:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB472:
RETSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer474
	DATA8 nos474
	DATA8 busy474
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer474 nos474
	JR_EQ8 0 nos474 motornotbusy474
  motorwaiting474:
	OUTPUT_TEST layer474 nos474 busy474
	JR_EQ8 busy474 0 motornotbusy474
	SLEEP
	JR motorwaiting474
  motornotbusy474:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer476
	DATA8 nos476
	DATA8 busy476
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer476 nos476
	JR_EQ8 0 nos476 motornotbusy476
  motorwaiting476:
	OUTPUT_TEST layer476 nos476 busy476
	JR_EQ8 busy476 0 motornotbusy476
	SLEEP
	JR motorwaiting476
  motornotbusy476:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer479
	DATA8 nos479
	DATA8 busy479
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer479 nos479
	JR_EQ8 0 nos479 motornotbusy479
  motorwaiting479:
	OUTPUT_TEST layer479 nos479 busy479
	JR_EQ8 busy479 0 motornotbusy479
	SLEEP
	JR motorwaiting479
  motornotbusy479:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB480:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer483
	DATA8 nos483
	DATA8 busy483
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer483 nos483
	JR_EQ8 0 nos483 motornotbusy483
  motorwaiting483:
	OUTPUT_TEST layer483 nos483 busy483
	JR_EQ8 busy483 0 motornotbusy483
	SLEEP
	JR motorwaiting483
  motornotbusy483:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB484:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer487
	DATA8 nos487
	DATA8 busy487
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer487 nos487
	JR_EQ8 0 nos487 motornotbusy487
  motorwaiting487:
	OUTPUT_TEST layer487 nos487 busy487
	JR_EQ8 busy487 0 motornotbusy487
	SLEEP
	JR motorwaiting487
  motornotbusy487:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB488:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer490
	DATA8 nos490
	DATA8 busy490
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer490 nos490
	JR_EQ8 0 nos490 motornotbusy490
  motorwaiting490:
	OUTPUT_TEST layer490 nos490 busy490
	JR_EQ8 busy490 0 motornotbusy490
	SLEEP
	JR motorwaiting490
  motornotbusy490:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer492
	DATA8 nos492
	DATA8 busy492
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer492 nos492
	JR_EQ8 0 nos492 motornotbusy492
  motorwaiting492:
	OUTPUT_TEST layer492 nos492 busy492
	JR_EQ8 busy492 0 motornotbusy492
	SLEEP
	JR motorwaiting492
  motornotbusy492:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer495
	DATA8 nos495
	DATA8 busy495
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer495 nos495
	JR_EQ8 0 nos495 motornotbusy495
  motorwaiting495:
	OUTPUT_TEST layer495 nos495 busy495
	JR_EQ8 busy495 0 motornotbusy495
	SLEEP
	JR motorwaiting495
  motornotbusy495:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB496:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer499
	DATA8 nos499
	DATA8 busy499
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer499 nos499
	JR_EQ8 0 nos499 motornotbusy499
  motorwaiting499:
	OUTPUT_TEST layer499 nos499 busy499
	JR_EQ8 busy499 0 motornotbusy499
	SLEEP
	JR motorwaiting499
  motornotbusy499:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB500:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer503
	DATA8 nos503
	DATA8 busy503
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer503 nos503
	JR_EQ8 0 nos503 motornotbusy503
  motorwaiting503:
	OUTPUT_TEST layer503 nos503 busy503
	JR_EQ8 busy503 0 motornotbusy503
	SLEEP
	JR motorwaiting503
  motornotbusy503:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB504:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
SUB_F_FINISH_AFTER_NEAR_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds508
	MOVEF_32 1500.0 milliseconds508
	DATA32 timer508
	TIMER_WAIT milliseconds508 timer508
	TIMER_READY timer508
    WRITE32 ENDSUB_F_STOP_0:CALLSUB509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB509:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer511
	DATA8 nos511
	DATA8 busy511
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer511 nos511
	JR_EQ8 0 nos511 motornotbusy511
  motorwaiting511:
	OUTPUT_TEST layer511 nos511 busy511
	JR_EQ8 busy511 0 motornotbusy511
	SLEEP
	JR motorwaiting511
  motornotbusy511:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer513
	DATA8 nos513
	DATA8 busy513
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer513 nos513
	JR_EQ8 0 nos513 motornotbusy513
  motorwaiting513:
	OUTPUT_TEST layer513 nos513 busy513
	JR_EQ8 busy513 0 motornotbusy513
	SLEEP
	JR motorwaiting513
  motornotbusy513:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds517
	MOVEF_32 1000.0 milliseconds517
	DATA32 timer517
	TIMER_WAIT milliseconds517 timer517
	TIMER_READY timer517
    WRITE32 ENDSUB_F_STOP_0:CALLSUB518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB518:
RETSUB_F_FINISH_AFTER_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_0:
SUB_F_FINISH_AFTER_NEAR_INVERSED_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds522
	MOVEF_32 1500.0 milliseconds522
	DATA32 timer522
	TIMER_WAIT milliseconds522 timer522
	TIMER_READY timer522
    WRITE32 ENDSUB_F_STOP_0:CALLSUB523 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB523:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer525
	DATA8 nos525
	DATA8 busy525
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer525 nos525
	JR_EQ8 0 nos525 motornotbusy525
  motorwaiting525:
	OUTPUT_TEST layer525 nos525 busy525
	JR_EQ8 busy525 0 motornotbusy525
	SLEEP
	JR motorwaiting525
  motornotbusy525:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer527
	DATA8 nos527
	DATA8 busy527
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer527 nos527
	JR_EQ8 0 nos527 motornotbusy527
  motorwaiting527:
	OUTPUT_TEST layer527 nos527 busy527
	JR_EQ8 busy527 0 motornotbusy527
	SLEEP
	JR motorwaiting527
  motornotbusy527:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds531
	MOVEF_32 1000.0 milliseconds531
	DATA32 timer531
	TIMER_WAIT milliseconds531 timer531
	TIMER_READY timer531
    WRITE32 ENDSUB_F_STOP_0:CALLSUB532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB532:
RETSUB_F_FINISH_AFTER_NEAR_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:
SUB_F_GO_FORWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 25.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 25.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_0:
SUB_F_GO_FORWARD_RIGHT_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 0.5 VGV_DIFF
    SUBF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 21.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_RIGHT_0:
SUB_F_GO_BACKWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 0.5 VGV_DIFF
    SUBF -25.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF -25.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_BACKWARD_0:
SUB_F_MOVE_FORWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while571:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile571
  whilebody571:
    WRITE32 ENDSUB_F_GO_FORWARD_0:CALLSUB573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_0
CALLSUB573:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody571
  endwhile571:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB575:
RETSUB_F_MOVE_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_0:
SUB_F_MOVE_BACKWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while578:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_LTEQF F.0 F.1 endwhile578
  whilebody578:
    WRITE32 ENDSUB_F_GO_BACKWARD_0:CALLSUB581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_0
CALLSUB581:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_GTF F.0 F.1 whilebody578
  endwhile578:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB584:
RETSUB_F_MOVE_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_0:
SUB_F_PLAY_MUSIC_0:
    MOVEF_F 1.0 VGV_N
  while585:
  whilebody585:
    STRINGS VALUE_FORMATTED VGV_N '%g' 99 S.0
    CALL TEXT.APPEND 'WRO_2022/files/bad_piggies_' S.0 VGV_FILENAME
    CALL SPEAKER.PLAY 100.0 VGV_FILENAME
  while589:
    CALL SPEAKER.ISBUSY S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 endwhile589
  whilebody589:
    CALL SPEAKER.ISBUSY S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 whilebody589
  endwhile589:
    ADDF VGV_N 1.0 VGV_N
    JR_NEQF VGV_N 23.0 else593_1
    MOVEF_F 1.0 VGV_N
    DATA32 milliseconds594
	MOVEF_32 1000.0 milliseconds594
	DATA32 timer594
	TIMER_WAIT milliseconds594 timer594
	TIMER_READY timer594
  else593_1:
  endif593:
    JR whilebody585
  endwhile585:
RETSUB_F_PLAY_MUSIC_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PLAY_MUSIC_0:
SUB_F_MAIN_0:
    TIMER_READ timeMC9
    STRINGS DUPLICATE 'True' VGV_IS_LEFT_OPEN
    DATA8 layer596
	DATA8 no596
	DATA8 mode8596
	
	MOVEF_8 VGV_RIGHT_SENSOR no596
	SUB8 no596 1 no596
	DIV8 no596 4 layer596
	MATH MOD8 no596 4 no596

	MOVEF_8 0.0 mode8596
	
	INPUT_DEVICE READY_RAW layer596 no596 0 mode8596 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_COL
    DATA8 layer598
	DATA8 no598
	DATA8 mode8598
	
	MOVEF_8 VGV_RIGHT_SENSOR no598
	SUB8 no598 1 no598
	DIV8 no598 4 layer598
	MATH MOD8 no598 4 no598

	MOVEF_8 1.0 mode8598
	
	INPUT_DEVICE READY_RAW layer598 no598 0 mode8598 0
    MOVEF_F 97.0 VGV_A
    JR_EQF VGV_COL 0.0 else599_1
    STRINGS DUPLICATE 'True' VGV_IS_LEFT_OPEN
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds603
	MOVEF_32 1500.0 milliseconds603
	DATA32 timer603
	TIMER_WAIT milliseconds603 timer603
	TIMER_READY timer603
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 300.0 0.0 'True' 

	DATA8 layer605
	DATA8 nos605
	DATA8 busy605
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer605 nos605
	JR_EQ8 0 nos605 motornotbusy605
  motorwaiting605:
	OUTPUT_TEST layer605 nos605 busy605
	JR_EQ8 busy605 0 motornotbusy605
	SLEEP
	JR motorwaiting605
  motornotbusy605:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB606:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 80.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    MOVEF_F 1200.0 VGV_DEG
  while611:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile611
  whilebody611:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody611
  endwhile611:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 55.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while617:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile617
  whilebody617:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody617
  endwhile617:
  while620:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile620
  whilebody620:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody620
  endwhile620:
    WRITE32 ENDSUB_F_STOP_RIGHT_0:CALLSUB623 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_RIGHT_0
CALLSUB623:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB624:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer626
	DATA8 nos626
	DATA8 busy626
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer626 nos626
	JR_EQ8 0 nos626 motornotbusy626
  motorwaiting626:
	OUTPUT_TEST layer626 nos626 busy626
	JR_EQ8 busy626 0 motornotbusy626
	SLEEP
	JR motorwaiting626
  motornotbusy626:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB627:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 235.0 0.0 'True' 

	DATA8 layer629
	DATA8 nos629
	DATA8 busy629
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer629 nos629
	JR_EQ8 0 nos629 motornotbusy629
  motorwaiting629:
	OUTPUT_TEST layer629 nos629 busy629
	JR_EQ8 busy629 0 motornotbusy629
	SLEEP
	JR motorwaiting629
  motornotbusy629:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while631:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile631
  whilebody631:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB633:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody631
  endwhile631:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB635:
    JR endif599
  else599_1:
    STRINGS DUPLICATE 'False' VGV_IS_LEFT_OPEN
    MULF VGV_LEFT_FORWARD -40.0 F.0
    MULF VGV_RIGHT_FORWARD -40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds639
	MOVEF_32 2000.0 milliseconds639
	DATA32 timer639
	TIMER_WAIT milliseconds639 timer639
	TIMER_READY timer639
    WRITE32 ENDSUB_F_STOP_0:CALLSUB640 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB640:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 420.0 0.0 'True' 

	DATA8 layer642
	DATA8 nos642
	DATA8 busy642
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer642 nos642
	JR_EQ8 0 nos642 motornotbusy642
  motorwaiting642:
	OUTPUT_TEST layer642 nos642 busy642
	JR_EQ8 busy642 0 motornotbusy642
	SLEEP
	JR motorwaiting642
  motornotbusy642:
    MULF VGV_LEFT_FORWARD 100.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    MOVEF_F 100.0 VGV_DEG
  while646:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile646
  whilebody646:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody646
  endwhile646:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while652:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile652
  whilebody652:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody652
  endwhile652:
  while655:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 15.0 endwhile655
  whilebody655:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 15.0 whilebody655
  endwhile655:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB658 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB658:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 460.0 0.0 'True' 

	DATA8 layer660
	DATA8 nos660
	DATA8 busy660
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer660 nos660
	JR_EQ8 0 nos660 motornotbusy660
  motorwaiting660:
	OUTPUT_TEST layer660 nos660 busy660
	JR_EQ8 busy660 0 motornotbusy660
	SLEEP
	JR motorwaiting660
  motornotbusy660:
    MULF VGV_LEFT_FORWARD -40.0 F.0
    MULF VGV_RIGHT_FORWARD -40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds664
	MOVEF_32 1000.0 milliseconds664
	DATA32 timer664
	TIMER_WAIT milliseconds664 timer664
	TIMER_READY timer664
    WRITE32 ENDSUB_F_STOP_0:CALLSUB665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB665:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds669
	MOVEF_32 2500.0 milliseconds669
	DATA32 timer669
	TIMER_WAIT milliseconds669 timer669
	TIMER_READY timer669
    WRITE32 ENDSUB_F_STOP_0:CALLSUB670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB670:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer672
	DATA8 nos672
	DATA8 busy672
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer672 nos672
	JR_EQ8 0 nos672 motornotbusy672
  motorwaiting672:
	OUTPUT_TEST layer672 nos672 busy672
	JR_EQ8 busy672 0 motornotbusy672
	SLEEP
	JR motorwaiting672
  motornotbusy672:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 125.0 0.0 'True' 

	DATA8 layer674
	DATA8 nos674
	DATA8 busy674
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer674 nos674
	JR_EQ8 0 nos674 motornotbusy674
  motorwaiting674:
	OUTPUT_TEST layer674 nos674 busy674
	JR_EQ8 busy674 0 motornotbusy674
	SLEEP
	JR motorwaiting674
  motornotbusy674:
    DATA32 milliseconds675
	MOVEF_32 1000.0 milliseconds675
	DATA32 timer675
	TIMER_WAIT milliseconds675 timer675
	TIMER_READY timer675
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while679:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile679
  whilebody679:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody679
  endwhile679:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while683:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 500.0 endwhile683
  whilebody683:
    MOVEF_F 20.0 VLV_POWER_1
    MOVEF_F VGV_A VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB685 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB685:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 500.0 whilebody683
  endwhile683:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB687 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB687:
  else599_2:
  endif599:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB688:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    MOVEF_F 500.0 VGV_C
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB690 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB690:
    JR_LTEQF VGV_B 80.0 else691_1
    DATA8 layer692
	DATA8 no692
	DATA8 mode8692
	
	MOVEF_8 VGV_RIGHT_SENSOR no692
	SUB8 no692 1 no692
	DIV8 no692 4 layer692
	MATH MOD8 no692 4 no692

	MOVEF_8 2.0 mode8692
	
	INPUT_DEVICE READY_RAW layer692 no692 0 mode8692 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer694
	DATA8 no694
	DATA8 mode8694
	
	MOVEF_8 VGV_RIGHT_SENSOR no694
	SUB8 no694 1 no694
	DIV8 no694 4 layer694
	MATH MOD8 no694 4 no694

	MOVEF_8 1.0 mode8694
	
	INPUT_DEVICE READY_RAW layer694 no694 0 mode8694 0
    JR_LTEQF VGV_G 100.0 else695_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB696 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB696:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif695
  else695_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB697 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB697:
    STRINGS DUPLICATE 'True' VGV_BROWN
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB698:
  else695_2:
  endif695:
    JR endif691
  else691_1:
    JR_LTEQF VGV_B 5.0 else691_2
    DATA8 layer699
	DATA8 no699
	DATA8 mode8699
	
	MOVEF_8 VGV_RIGHT_SENSOR no699
	SUB8 no699 1 no699
	DIV8 no699 4 layer699
	MATH MOD8 no699 4 no699

	MOVEF_8 4.0 mode8699
	
	INPUT_DEVICE READY_RAW layer699 no699 0 mode8699 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    DATA8 layer701
	DATA8 no701
	DATA8 mode8701
	
	MOVEF_8 VGV_RIGHT_SENSOR no701
	SUB8 no701 1 no701
	DIV8 no701 4 layer701
	MATH MOD8 no701 4 no701

	MOVEF_8 1.0 mode8701
	
	INPUT_DEVICE READY_RAW layer701 no701 0 mode8701 0
    STRINGS DUPLICATE 'None' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB702:
    JR_LTEQF VGV_W 29.0 else703_1
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB704:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB705 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB705:
  else703_1:
  endif703:
  else691_2:
  endif691:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB706 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB706:
    DATA8 layer707
	DATA8 no707
	DATA8 mode8707
	
	MOVEF_8 VGV_LINE_SENSOR no707
	SUB8 no707 1 no707
	DIV8 no707 4 layer707
	MATH MOD8 no707 4 no707

	MOVEF_8 2.0 mode8707
	
	INPUT_DEVICE READY_RAW layer707 no707 0 mode8707 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    WRITE32 ENDSUB_F_STOP_0:CALLSUB709 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB709:
  while710:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C or711
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 5.0 endwhile710
  or711:
  whilebody710:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB714:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody710
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 5.0 whilebody710
  endwhile710:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB717 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB717:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB718:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB719:
    MOVEF_F 350.0 VGV_C
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else720_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB722 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB722:
    MOVEF_F 90.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB723 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB723:
    ADDF VGV_C 110.0 VGV_C
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB725:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB727:
    JR_LTEQF VGV_B 80.0 else728_1
    DATA8 layer729
	DATA8 no729
	DATA8 mode8729
	
	MOVEF_8 VGV_RIGHT_SENSOR no729
	SUB8 no729 1 no729
	DIV8 no729 4 layer729
	MATH MOD8 no729 4 no729

	MOVEF_8 2.0 mode8729
	
	INPUT_DEVICE READY_RAW layer729 no729 0 mode8729 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer731
	DATA8 no731
	DATA8 mode8731
	
	MOVEF_8 VGV_RIGHT_SENSOR no731
	SUB8 no731 1 no731
	DIV8 no731 4 layer731
	MATH MOD8 no731 4 no731

	MOVEF_8 1.0 mode8731
	
	INPUT_DEVICE READY_RAW layer731 no731 0 mode8731 0
    JR_LTEQF VGV_G 100.0 else732_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB733:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif732
  else732_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB734:
    STRINGS DUPLICATE 'True' VGV_BROWN
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 80.0 VLV_DEG_5
    MOVEF_F 40.0 VLV_ACCELERATION_5
    MOVEF_F 40.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB735:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB736:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB737:
    MOVEF_F 20.0 VLV_BASE_POWER_4
    MOVEF_F 10.0 VLV_MIN_POWER_4
    MOVEF_F 80.0 VLV_DEG_4
    MOVEF_F 40.0 VLV_ACCELERATION_4
    MOVEF_F 40.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB738 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB738:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB739:
  else732_2:
  endif732:
    JR endif728
  else728_1:
    JR_LTEQF VGV_B 17.0 else728_2
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB740:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB741 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB741:
  else728_2:
  endif728:
  else720_1:
  endif720:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB742:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while744:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile744
  whilebody744:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB746:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody744
  endwhile744:
    MOVEF_F 1.0 VGV_P_U
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else748_1
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    JR endif748
  else748_1:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  else748_2:
  endif748:
    DATA32 milliseconds756
	MOVEF_32 1000.0 milliseconds756
	DATA32 timer756
	TIMER_WAIT milliseconds756 timer756
	TIMER_READY timer756
    WRITE32 ENDSUB_F_STOP_0:CALLSUB757 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB757:
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_LEFT
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB758 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB758:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB760:
    JR_LTEQF VGV_B 85.0 else761_1
    DATA8 layer762
	DATA8 no762
	DATA8 mode8762
	
	MOVEF_8 VGV_RIGHT_SENSOR no762
	SUB8 no762 1 no762
	DIV8 no762 4 layer762
	MATH MOD8 no762 4 no762

	MOVEF_8 2.0 mode8762
	
	INPUT_DEVICE READY_RAW layer762 no762 0 mode8762 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB763 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB763:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer765
	DATA8 no765
	DATA8 mode8765
	
	MOVEF_8 VGV_RIGHT_SENSOR no765
	SUB8 no765 1 no765
	DIV8 no765 4 layer765
	MATH MOD8 no765 4 no765

	MOVEF_8 1.0 mode8765
	
	INPUT_DEVICE READY_RAW layer765 no765 0 mode8765 0
    JR_LTEQF VGV_G 100.0 else766_1
    STRINGS DUPLICATE 'R: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB767 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB767:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif766
  else766_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB768 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB768:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB769 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB769:
  else766_2:
  endif766:
    JR endif761
  else761_1:
    JR_LTEQF VGV_B 10.0 else761_2
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB770 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB770:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_RIGHT
  else761_2:
  endif761:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB771 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB771:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else772_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB774:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB776 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB776:
    JR_LTEQF VGV_B 90.0 else777_1
    DATA8 layer778
	DATA8 no778
	DATA8 mode8778
	
	MOVEF_8 VGV_LEFT_SENSOR no778
	SUB8 no778 1 no778
	DIV8 no778 4 layer778
	MATH MOD8 no778 4 no778

	MOVEF_8 2.0 mode8778
	
	INPUT_DEVICE READY_RAW layer778 no778 0 mode8778 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB779 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB779:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer781
	DATA8 no781
	DATA8 mode8781
	
	MOVEF_8 VGV_LEFT_SENSOR no781
	SUB8 no781 1 no781
	DIV8 no781 4 layer781
	MATH MOD8 no781 4 no781

	MOVEF_8 1.0 mode8781
	
	INPUT_DEVICE READY_RAW layer781 no781 0 mode8781 0
    JR_LTEQF VGV_G 100.0 else782_1
    STRINGS DUPLICATE 'L: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB783:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif782
  else782_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB784 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB784:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB785 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB785:
  else782_2:
  endif782:
    JR endif777
  else777_1:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 30.0 0.0 'True' 

	DATA8 layer787
	DATA8 nos787
	DATA8 busy787
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer787 nos787
	JR_EQ8 0 nos787 motornotbusy787
  motorwaiting787:
	OUTPUT_TEST layer787 nos787 busy787
	JR_EQ8 busy787 0 motornotbusy787
	SLEEP
	JR motorwaiting787
  motornotbusy787:
    DATA32 milliseconds788
	MOVEF_32 500.0 milliseconds788
	DATA32 timer788
	TIMER_WAIT milliseconds788 timer788
	TIMER_READY timer788
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds795
	MOVEF_32 500.0 milliseconds795
	DATA32 timer795
	TIMER_WAIT milliseconds795 timer795
	TIMER_READY timer795
    JR_LTEQF VGV_B 28.0 else796_1
    WRITE32 ENDSUB_F_STOP_0:CALLSUB797 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB797:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB798 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB798:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_LEFT
  else796_1:
  endif796:
  else777_2:
  endif777:
  else772_1:
  endif772:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB799:
    MOVEF_F 140.0 VGV_CHEM_BACK
    MOVEF_F 130.0 VGV_NO_BACK
    CALL EQ_STRING VGV_TAKE_RED_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else800_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for803:
    JR_GTF VGV_I 20.0 endfor803
  forbody803:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds809
	MOVEF_32 30.0 milliseconds809
	DATA32 timer809
	TIMER_WAIT milliseconds809 timer809
	TIMER_READY timer809
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody803
  endfor803:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer815
	DATA8 nos815
	DATA8 busy815
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer815 nos815
	JR_EQ8 0 nos815 motornotbusy815
  motorwaiting815:
	OUTPUT_TEST layer815 nos815 busy815
	JR_EQ8 busy815 0 motornotbusy815
	SLEEP
	JR motorwaiting815
  motornotbusy815:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB816 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB816:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer818
	DATA8 nos818
	DATA8 busy818
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer818 nos818
	JR_EQ8 0 nos818 motornotbusy818
  motorwaiting818:
	OUTPUT_TEST layer818 nos818 busy818
	JR_EQ8 busy818 0 motornotbusy818
	SLEEP
	JR motorwaiting818
  motornotbusy818:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB819 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB819:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer820
	DATA8 nos820
	DATA8 busy820
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer820 nos820
	JR_EQ8 0 nos820 motornotbusy820
  motorwaiting820:
	OUTPUT_TEST layer820 nos820 busy820
	JR_EQ8 busy820 0 motornotbusy820
	SLEEP
	JR motorwaiting820
  motornotbusy820:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for822:
    JR_GTF VGV_I 20.0 endfor822
  forbody822:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds826
	MOVEF_32 20.0 milliseconds826
	DATA32 timer826
	TIMER_WAIT milliseconds826 timer826
	TIMER_READY timer826
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody822
  endfor822:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer832
	DATA8 nos832
	DATA8 busy832
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer832 nos832
	JR_EQ8 0 nos832 motornotbusy832
  motorwaiting832:
	OUTPUT_TEST layer832 nos832 busy832
	JR_EQ8 busy832 0 motornotbusy832
	SLEEP
	JR motorwaiting832
  motornotbusy832:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB833 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB833:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer834
	DATA8 nos834
	DATA8 busy834
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer834 nos834
	JR_EQ8 0 nos834 motornotbusy834
  motorwaiting834:
	OUTPUT_TEST layer834 nos834 busy834
	JR_EQ8 busy834 0 motornotbusy834
	SLEEP
	JR motorwaiting834
  motornotbusy834:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB835:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for837:
    JR_GTF VGV_I 20.0 endfor837
  forbody837:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds843
	MOVEF_32 20.0 milliseconds843
	DATA32 timer843
	TIMER_WAIT milliseconds843 timer843
	TIMER_READY timer843
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody837
  endfor837:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer849
	DATA8 nos849
	DATA8 busy849
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer849 nos849
	JR_EQ8 0 nos849 motornotbusy849
  motorwaiting849:
	OUTPUT_TEST layer849 nos849 busy849
	JR_EQ8 busy849 0 motornotbusy849
	SLEEP
	JR motorwaiting849
  motornotbusy849:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB850 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB850:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB851 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB851:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer853
	DATA8 nos853
	DATA8 busy853
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer853 nos853
	JR_EQ8 0 nos853 motornotbusy853
  motorwaiting853:
	OUTPUT_TEST layer853 nos853 busy853
	JR_EQ8 busy853 0 motornotbusy853
	SLEEP
	JR motorwaiting853
  motornotbusy853:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB854 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB854:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds858
	MOVEF_32 1500.0 milliseconds858
	DATA32 timer858
	TIMER_WAIT milliseconds858 timer858
	TIMER_READY timer858
    WRITE32 ENDSUB_F_STOP_0:CALLSUB859 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB859:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB860 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB860:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for862:
    JR_GTF VGV_I 20.0 endfor862
  forbody862:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds868
	MOVEF_32 20.0 milliseconds868
	DATA32 timer868
	TIMER_WAIT milliseconds868 timer868
	TIMER_READY timer868
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody862
  endfor862:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer874
	DATA8 nos874
	DATA8 busy874
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer874 nos874
	JR_EQ8 0 nos874 motornotbusy874
  motorwaiting874:
	OUTPUT_TEST layer874 nos874 busy874
	JR_EQ8 busy874 0 motornotbusy874
	SLEEP
	JR motorwaiting874
  motornotbusy874:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB875 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB875:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB876 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB876:
    JR endif800
  else800_1:
    CALL EQ_STRING VGV_TAKE_RED_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else800_2
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for879:
    JR_GTF VGV_I 20.0 endfor879
  forbody879:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds885
	MOVEF_32 30.0 milliseconds885
	DATA32 timer885
	TIMER_WAIT milliseconds885 timer885
	TIMER_READY timer885
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody879
  endfor879:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer891
	DATA8 nos891
	DATA8 busy891
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer891 nos891
	JR_EQ8 0 nos891 motornotbusy891
  motorwaiting891:
	OUTPUT_TEST layer891 nos891 busy891
	JR_EQ8 busy891 0 motornotbusy891
	SLEEP
	JR motorwaiting891
  motornotbusy891:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB892 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB892:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer894
	DATA8 nos894
	DATA8 busy894
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer894 nos894
	JR_EQ8 0 nos894 motornotbusy894
  motorwaiting894:
	OUTPUT_TEST layer894 nos894 busy894
	JR_EQ8 busy894 0 motornotbusy894
	SLEEP
	JR motorwaiting894
  motornotbusy894:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB895 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB895:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer896
	DATA8 nos896
	DATA8 busy896
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer896 nos896
	JR_EQ8 0 nos896 motornotbusy896
  motorwaiting896:
	OUTPUT_TEST layer896 nos896 busy896
	JR_EQ8 busy896 0 motornotbusy896
	SLEEP
	JR motorwaiting896
  motornotbusy896:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for898:
    JR_GTF VGV_I 20.0 endfor898
  forbody898:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds902
	MOVEF_32 20.0 milliseconds902
	DATA32 timer902
	TIMER_WAIT milliseconds902 timer902
	TIMER_READY timer902
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody898
  endfor898:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer908
	DATA8 nos908
	DATA8 busy908
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer908 nos908
	JR_EQ8 0 nos908 motornotbusy908
  motorwaiting908:
	OUTPUT_TEST layer908 nos908 busy908
	JR_EQ8 busy908 0 motornotbusy908
	SLEEP
	JR motorwaiting908
  motornotbusy908:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB909 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB909:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer910
	DATA8 nos910
	DATA8 busy910
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer910 nos910
	JR_EQ8 0 nos910 motornotbusy910
  motorwaiting910:
	OUTPUT_TEST layer910 nos910 busy910
	JR_EQ8 busy910 0 motornotbusy910
	SLEEP
	JR motorwaiting910
  motornotbusy910:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB911 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB911:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for913:
    JR_GTF VGV_I 20.0 endfor913
  forbody913:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds919
	MOVEF_32 20.0 milliseconds919
	DATA32 timer919
	TIMER_WAIT milliseconds919 timer919
	TIMER_READY timer919
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody913
  endfor913:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer925
	DATA8 nos925
	DATA8 busy925
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer925 nos925
	JR_EQ8 0 nos925 motornotbusy925
  motorwaiting925:
	OUTPUT_TEST layer925 nos925 busy925
	JR_EQ8 busy925 0 motornotbusy925
	SLEEP
	JR motorwaiting925
  motornotbusy925:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB926 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB926:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB927 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB927:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer929
	DATA8 nos929
	DATA8 busy929
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer929 nos929
	JR_EQ8 0 nos929 motornotbusy929
  motorwaiting929:
	OUTPUT_TEST layer929 nos929 busy929
	JR_EQ8 busy929 0 motornotbusy929
	SLEEP
	JR motorwaiting929
  motornotbusy929:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB930:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds934
	MOVEF_32 1000.0 milliseconds934
	DATA32 timer934
	TIMER_WAIT milliseconds934 timer934
	TIMER_READY timer934
    WRITE32 ENDSUB_F_STOP_0:CALLSUB935 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB935:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB936 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB936:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for938:
    JR_GTF VGV_I 20.0 endfor938
  forbody938:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds944
	MOVEF_32 20.0 milliseconds944
	DATA32 timer944
	TIMER_WAIT milliseconds944 timer944
	TIMER_READY timer944
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody938
  endfor938:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer950
	DATA8 nos950
	DATA8 busy950
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer950 nos950
	JR_EQ8 0 nos950 motornotbusy950
  motorwaiting950:
	OUTPUT_TEST layer950 nos950 busy950
	JR_EQ8 busy950 0 motornotbusy950
	SLEEP
	JR motorwaiting950
  motornotbusy950:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB951 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB951:
    JR endif800
  else800_2:
    MOVEF_F VGV_NO_BACK VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB952 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB952:
  else800_3:
  endif800:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer955
	DATA8 nos955
	DATA8 busy955
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer955 nos955
	JR_EQ8 0 nos955 motornotbusy955
  motorwaiting955:
	OUTPUT_TEST layer955 nos955 busy955
	JR_EQ8 busy955 0 motornotbusy955
	SLEEP
	JR motorwaiting955
  motornotbusy955:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB956 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB956:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB957 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB957:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds961
	MOVEF_32 700.0 milliseconds961
	DATA32 timer961
	TIMER_WAIT milliseconds961 timer961
	TIMER_READY timer961
    WRITE32 ENDSUB_F_STOP_0:CALLSUB962 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB962:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    ADDF F.0 5.0 VGV_A
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 430.0 'True'

	DATA8 layer967
	DATA8 nos967
	DATA8 busy967
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer967 nos967
	JR_EQ8 0 nos967 motornotbusy967
  motorwaiting967:
	OUTPUT_TEST layer967 nos967 busy967
	JR_EQ8 busy967 0 motornotbusy967
	SLEEP
	JR motorwaiting967
  motornotbusy967:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while969:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile969
  whilebody969:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB971 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB971:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody969
  endwhile969:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA8 layer977
	DATA8 no977
	DATA8 mode8977
	
	MOVEF_8 VGV_LINE_SENSOR no977
	SUB8 no977 1 no977
	DIV8 no977 4 layer977
	MATH MOD8 no977 4 no977

	MOVEF_8 0.0 mode8977
	
	INPUT_DEVICE READY_RAW layer977 no977 0 mode8977 0
  while978:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 or979
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 220.0 endwhile978
  or979:
  whilebody978:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 whilebody978
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 220.0 whilebody978
  endwhile978:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB984:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB985 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB985:
    MOVEF_F 92.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB986 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB986:
    DATA8 layer987
	DATA8 no987
	DATA8 mode8987
	
	MOVEF_8 VGV_LINE_SENSOR no987
	SUB8 no987 1 no987
	DIV8 no987 4 layer987
	MATH MOD8 no987 4 no987

	MOVEF_8 0.0 mode8987
	
	INPUT_DEVICE READY_RAW layer987 no987 0 mode8987 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB988 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB988:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB990 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB990:
    JR_LTEQF VGV_B 45.0 else991_1
    DATA8 layer992
	DATA8 no992
	DATA8 mode8992
	
	MOVEF_8 VGV_LEFT_SENSOR no992
	SUB8 no992 1 no992
	DIV8 no992 4 layer992
	MATH MOD8 no992 4 no992

	MOVEF_8 2.0 mode8992
	
	INPUT_DEVICE READY_RAW layer992 no992 0 mode8992 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB993 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB993:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer995
	DATA8 no995
	DATA8 mode8995
	
	MOVEF_8 VGV_LEFT_SENSOR no995
	SUB8 no995 1 no995
	DIV8 no995 4 layer995
	MATH MOD8 no995 4 no995

	MOVEF_8 1.0 mode8995
	
	INPUT_DEVICE READY_RAW layer995 no995 0 mode8995 0
    JR_LTEQF VGV_G 100.0 else996_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB997 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB997:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif996
  else996_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB998 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB998:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 100.0 VLV_DEG_5
    MOVEF_F 50.0 VLV_ACCELERATION_5
    MOVEF_F 50.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB999 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB999:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1000 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1000:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1001 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1001:
    MOVEF_F 20.0 VLV_BASE_POWER_4
    MOVEF_F 10.0 VLV_MIN_POWER_4
    MOVEF_F 100.0 VLV_DEG_4
    MOVEF_F 100.0 VLV_ACCELERATION_4
    MOVEF_F 0.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1002 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1002:
  else996_2:
  endif996:
    JR endif991
  else991_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds1007
	MOVEF_32 1000.0 milliseconds1007
	DATA32 timer1007
	TIMER_WAIT milliseconds1007 timer1007
	TIMER_READY timer1007
    JR_GTEQF VGV_ULTRA 85.0 else1008_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1009 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1009:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1010 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1010:
  else1008_1:
  endif1008:
  else991_2:
  endif991:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1011 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1011:
    CALL EQ_STRING VGV_OBJECT 'Fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1012_1
    MOVEF_F 30.0 VLV_BASE_POWER_4
    MOVEF_F 10.0 VLV_MIN_POWER_4
    MOVEF_F 115.0 VLV_DEG_4
    MOVEF_F 0.0 VLV_ACCELERATION_4
    MOVEF_F 0.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1014 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1014:
    JR endif1012
  else1012_1:
    MOVEF_F 30.0 VLV_BASE_POWER_4
    MOVEF_F 10.0 VLV_MIN_POWER_4
    MOVEF_F 115.0 VLV_DEG_4
    MOVEF_F 115.0 VLV_ACCELERATION_4
    MOVEF_F 0.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1015 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1015:
  else1012_2:
  endif1012:
    SUBF VGV_A 0.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1018:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 250.0 endwhile1018
  whilebody1018:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB1020 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB1020:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 250.0 whilebody1018
  endwhile1018:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1025
	MOVEF_32 2000.0 milliseconds1025
	DATA32 timer1025
	TIMER_WAIT milliseconds1025 timer1025
	TIMER_READY timer1025
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1026 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1026:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1027 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1027:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1029 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1029:
    JR_LTEQF VGV_B 55.0 else1030_1
    DATA8 layer1031
	DATA8 no1031
	DATA8 mode81031
	
	MOVEF_8 VGV_LEFT_SENSOR no1031
	SUB8 no1031 1 no1031
	DIV8 no1031 4 layer1031
	MATH MOD8 no1031 4 no1031

	MOVEF_8 2.0 mode81031
	
	INPUT_DEVICE READY_RAW layer1031 no1031 0 mode81031 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1032 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1032:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1034
	DATA8 no1034
	DATA8 mode81034
	
	MOVEF_8 VGV_LEFT_SENSOR no1034
	SUB8 no1034 1 no1034
	DIV8 no1034 4 layer1034
	MATH MOD8 no1034 4 no1034

	MOVEF_8 1.0 mode81034
	
	INPUT_DEVICE READY_RAW layer1034 no1034 0 mode81034 0
    JR_LTEQF VGV_G 70.0 else1035_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1036 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1036:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif1035
  else1035_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1037 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1037:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1038 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1038:
  else1035_2:
  endif1035:
    JR endif1030
  else1030_1:
    JR_LTEQF VGV_B 15.0 else1030_2
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds1043
	MOVEF_32 1000.0 milliseconds1043
	DATA32 timer1043
	TIMER_WAIT milliseconds1043 timer1043
	TIMER_READY timer1043
    JR_GTEQF VGV_ULTRA 85.0 else1044_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1045 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1045:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1046 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1046:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1048:
    JR_GTF VGV_I 20.0 endfor1048
  forbody1048:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds1052
	MOVEF_32 30.0 milliseconds1052
	DATA32 timer1052
	TIMER_WAIT milliseconds1052 timer1052
	TIMER_READY timer1052
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1048
  endfor1048:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1058
	DATA8 nos1058
	DATA8 busy1058
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1058 nos1058
	JR_EQ8 0 nos1058 motornotbusy1058
  motorwaiting1058:
	OUTPUT_TEST layer1058 nos1058 busy1058
	JR_EQ8 busy1058 0 motornotbusy1058
	SLEEP
	JR motorwaiting1058
  motornotbusy1058:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1059:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer1060
	DATA8 nos1060
	DATA8 busy1060
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1060 nos1060
	JR_EQ8 0 nos1060 motornotbusy1060
  motorwaiting1060:
	OUTPUT_TEST layer1060 nos1060 busy1060
	JR_EQ8 busy1060 0 motornotbusy1060
	SLEEP
	JR motorwaiting1060
  motornotbusy1060:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer1063
	DATA8 nos1063
	DATA8 busy1063
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1063 nos1063
	JR_EQ8 0 nos1063 motornotbusy1063
  motorwaiting1063:
	OUTPUT_TEST layer1063 nos1063 busy1063
	JR_EQ8 busy1063 0 motornotbusy1063
	SLEEP
	JR motorwaiting1063
  motornotbusy1063:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1064 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1064:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer1065
	DATA8 nos1065
	DATA8 busy1065
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1065 nos1065
	JR_EQ8 0 nos1065 motornotbusy1065
  motorwaiting1065:
	OUTPUT_TEST layer1065 nos1065 busy1065
	JR_EQ8 busy1065 0 motornotbusy1065
	SLEEP
	JR motorwaiting1065
  motornotbusy1065:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1066 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1066:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer1069
	DATA8 nos1069
	DATA8 busy1069
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1069 nos1069
	JR_EQ8 0 nos1069 motornotbusy1069
  motorwaiting1069:
	OUTPUT_TEST layer1069 nos1069 busy1069
	JR_EQ8 busy1069 0 motornotbusy1069
	SLEEP
	JR motorwaiting1069
  motornotbusy1069:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1070 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1070:
    DATA32 milliseconds1071
	MOVEF_32 1000.0 milliseconds1071
	DATA32 timer1071
	TIMER_WAIT milliseconds1071 timer1071
	TIMER_READY timer1071
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1073:
    JR_GTF VGV_I 20.0 endfor1073
  forbody1073:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds1076
	MOVEF_32 30.0 milliseconds1076
	DATA32 timer1076
	TIMER_WAIT milliseconds1076 timer1076
	TIMER_READY timer1076
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1073
  endfor1073:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1082
	DATA8 nos1082
	DATA8 busy1082
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1082 nos1082
	JR_EQ8 0 nos1082 motornotbusy1082
  motorwaiting1082:
	OUTPUT_TEST layer1082 nos1082 busy1082
	JR_EQ8 busy1082 0 motornotbusy1082
	SLEEP
	JR motorwaiting1082
  motornotbusy1082:
    MULF 30.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1085
	MOVEF_32 1000.0 milliseconds1085
	DATA32 timer1085
	TIMER_WAIT milliseconds1085 timer1085
	TIMER_READY timer1085
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1086 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1086:
  else1044_1:
  endif1044:
  else1030_2:
  endif1030:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1087 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1087:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer1089
	DATA8 nos1089
	DATA8 busy1089
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1089 nos1089
	JR_EQ8 0 nos1089 motornotbusy1089
  motorwaiting1089:
	OUTPUT_TEST layer1089 nos1089 busy1089
	JR_EQ8 busy1089 0 motornotbusy1089
	SLEEP
	JR motorwaiting1089
  motornotbusy1089:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 104.0 0.0 'True' 

	DATA8 layer1091
	DATA8 nos1091
	DATA8 busy1091
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1091 nos1091
	JR_EQ8 0 nos1091 motornotbusy1091
  motorwaiting1091:
	OUTPUT_TEST layer1091 nos1091 busy1091
	JR_EQ8 busy1091 0 motornotbusy1091
	SLEEP
	JR motorwaiting1091
  motornotbusy1091:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 102.0 VGV_A
  while1093:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 100.0 endwhile1093
  whilebody1093:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB1095 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB1095:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 100.0 whilebody1093
  endwhile1093:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1100:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 6.0 endwhile1100
  whilebody1100:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 6.0 whilebody1100
  endwhile1100:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1103:
    DATA8 layer1104
	DATA8 no1104
	DATA8 mode81104
	
	MOVEF_8 VGV_LINE_SENSOR no1104
	SUB8 no1104 1 no1104
	DIV8 no1104 4 layer1104
	MATH MOD8 no1104 4 no1104

	MOVEF_8 0.0 mode81104
	
	INPUT_DEVICE READY_RAW layer1104 no1104 0 mode81104 0
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1105_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1107:
    MOVEF_F 110.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1108:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1109:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else1111_1
    DATA8 layer1112
	DATA8 no1112
	DATA8 mode81112
	
	MOVEF_8 VGV_LEFT_SENSOR no1112
	SUB8 no1112 1 no1112
	DIV8 no1112 4 layer1112
	MATH MOD8 no1112 4 no1112

	MOVEF_8 2.0 mode81112
	
	INPUT_DEVICE READY_RAW layer1112 no1112 0 mode81112 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1113:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1115
	DATA8 no1115
	DATA8 mode81115
	
	MOVEF_8 VGV_LEFT_SENSOR no1115
	SUB8 no1115 1 no1115
	DIV8 no1115 4 layer1115
	MATH MOD8 no1115 4 no1115

	MOVEF_8 1.0 mode81115
	
	INPUT_DEVICE READY_RAW layer1115 no1115 0 mode81115 0
    JR_LTEQF VGV_G 100.0 else1116_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1117:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif1116
  else1116_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1118:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1119:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1120:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1121:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1122:
  else1116_2:
  endif1116:
    JR endif1111
  else1111_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1124_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1125:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1126:
  else1124_1:
  endif1124:
  else1111_2:
  endif1111:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1127:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1128:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1129:
    JR endif1105
  else1105_1:
    MOVEF_F 60.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1130:
  else1105_2:
  endif1105:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1131:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else1133_1
    DATA8 layer1134
	DATA8 no1134
	DATA8 mode81134
	
	MOVEF_8 VGV_LEFT_SENSOR no1134
	SUB8 no1134 1 no1134
	DIV8 no1134 4 layer1134
	MATH MOD8 no1134 4 no1134

	MOVEF_8 2.0 mode81134
	
	INPUT_DEVICE READY_RAW layer1134 no1134 0 mode81134 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1135:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1137
	DATA8 no1137
	DATA8 mode81137
	
	MOVEF_8 VGV_LEFT_SENSOR no1137
	SUB8 no1137 1 no1137
	DIV8 no1137 4 layer1137
	MATH MOD8 no1137 4 no1137

	MOVEF_8 1.0 mode81137
	
	INPUT_DEVICE READY_RAW layer1137 no1137 0 mode81137 0
    JR_LTEQF VGV_G 70.0 else1138_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1139:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif1138
  else1138_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1140:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1141:
  else1138_2:
  endif1138:
    JR endif1133
  else1133_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1143_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1144:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB1145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB1145:
  else1143_1:
  endif1143:
  else1133_2:
  endif1133:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1146:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer1149
	DATA8 nos1149
	DATA8 busy1149
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1149 nos1149
	JR_EQ8 0 nos1149 motornotbusy1149
  motorwaiting1149:
	OUTPUT_TEST layer1149 nos1149 busy1149
	JR_EQ8 busy1149 0 motornotbusy1149
	SLEEP
	JR motorwaiting1149
  motornotbusy1149:
    ADDF VGV_A 7.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1152:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 310.0 endwhile1152
  whilebody1152:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB1154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB1154:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 310.0 whilebody1152
  endwhile1152:
    MOVEF_F 120.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1156:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1157_1
    DATA8 layer1159
	DATA8 no1159
	DATA8 mode81159
	
	MOVEF_8 VGV_LEFT_SENSOR no1159
	SUB8 no1159 1 no1159
	DIV8 no1159 4 layer1159
	MATH MOD8 no1159 4 no1159

	MOVEF_8 1.0 mode81159
	
	INPUT_DEVICE READY_RAW layer1159 no1159 0 mode81159 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1160:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1162:
    JR_LTEQF VGV_B 55.0 else1163_1
    DATA8 layer1164
	DATA8 no1164
	DATA8 mode81164
	
	MOVEF_8 VGV_LEFT_SENSOR no1164
	SUB8 no1164 1 no1164
	DIV8 no1164 4 layer1164
	MATH MOD8 no1164 4 no1164

	MOVEF_8 2.0 mode81164
	
	INPUT_DEVICE READY_RAW layer1164 no1164 0 mode81164 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1165:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1167
	DATA8 no1167
	DATA8 mode81167
	
	MOVEF_8 VGV_LEFT_SENSOR no1167
	SUB8 no1167 1 no1167
	DIV8 no1167 4 layer1167
	MATH MOD8 no1167 4 no1167

	MOVEF_8 1.0 mode81167
	
	INPUT_DEVICE READY_RAW layer1167 no1167 0 mode81167 0
    JR_LTEQF VGV_G 70.0 else1168_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1169:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif1168
  else1168_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1170:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1171 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1171:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1172:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1173:
  else1168_2:
  endif1168:
    JR endif1163
  else1163_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1175_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1176:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1177:
  else1175_1:
  endif1175:
  else1163_2:
  endif1163:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1178:
  else1157_1:
  endif1157:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1179:
    DATA8 layer1180
	DATA8 no1180
	DATA8 mode81180
	
	MOVEF_8 VGV_LINE_SENSOR no1180
	SUB8 no1180 1 no1180
	DIV8 no1180 4 layer1180
	MATH MOD8 no1180 4 no1180

	MOVEF_8 0.0 mode81180
	
	INPUT_DEVICE READY_RAW layer1180 no1180 0 mode81180 0
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'False'

	DATA8 layer1183
	DATA8 nos1183
	DATA8 busy1183
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1183 nos1183
	JR_EQ8 0 nos1183 motornotbusy1183
  motorwaiting1183:
	OUTPUT_TEST layer1183 nos1183 busy1183
	JR_EQ8 busy1183 0 motornotbusy1183
	SLEEP
	JR motorwaiting1183
  motornotbusy1183:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1187:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile1187
  whilebody1187:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody1187
  endwhile1187:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1190:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 200.0 0.0 'False' 

	DATA8 layer1192
	DATA8 nos1192
	DATA8 busy1192
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1192 nos1192
	JR_EQ8 0 nos1192 motornotbusy1192
  motorwaiting1192:
	OUTPUT_TEST layer1192 nos1192 busy1192
	JR_EQ8 busy1192 0 motornotbusy1192
	SLEEP
	JR motorwaiting1192
  motornotbusy1192:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
  while1195:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile1195
  whilebody1195:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody1195
  endwhile1195:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer1199
	DATA8 nos1199
	DATA8 busy1199
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1199 nos1199
	JR_EQ8 0 nos1199 motornotbusy1199
  motorwaiting1199:
	OUTPUT_TEST layer1199 nos1199 busy1199
	JR_EQ8 busy1199 0 motornotbusy1199
	SLEEP
	JR motorwaiting1199
  motornotbusy1199:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1200:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1202:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile1202
  whilebody1202:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB1204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB1204:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody1202
  endwhile1202:
  while1206:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 5.0 endwhile1206
  whilebody1206:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB1208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB1208:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 5.0 whilebody1206
  endwhile1206:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1210:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer1213
	DATA8 nos1213
	DATA8 busy1213
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1213 nos1213
	JR_EQ8 0 nos1213 motornotbusy1213
  motorwaiting1213:
	OUTPUT_TEST layer1213 nos1213 busy1213
	JR_EQ8 busy1213 0 motornotbusy1213
	SLEEP
	JR motorwaiting1213
  motornotbusy1213:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1214:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1215:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1218
	DATA8 nos1218
	DATA8 busy1218
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1218 nos1218
	JR_EQ8 0 nos1218 motornotbusy1218
  motorwaiting1218:
	OUTPUT_TEST layer1218 nos1218 busy1218
	JR_EQ8 busy1218 0 motornotbusy1218
	SLEEP
	JR motorwaiting1218
  motornotbusy1218:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1219:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1220:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 25.0 'False'

	DATA8 layer1223
	DATA8 nos1223
	DATA8 busy1223
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1223 nos1223
	JR_EQ8 0 nos1223 motornotbusy1223
  motorwaiting1223:
	OUTPUT_TEST layer1223 nos1223 busy1223
	JR_EQ8 busy1223 0 motornotbusy1223
	SLEEP
	JR motorwaiting1223
  motornotbusy1223:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1225:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile1225
  whilebody1225:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF F.0 17.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf1231
    DATA8 flag1231
    DIVF F.0 10.0 tmpf1231
    CP_EQF 0.0 10.0 flag1231
    SELECTF flag1231 0.0 tmpf1231 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 20.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -20.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody1225
  endwhile1225:
    MOVEF_F 20.0 VLV_BASE_POWER_4
    MOVEF_F 10.0 VLV_MIN_POWER_4
    MOVEF_F 135.0 VLV_DEG_4
    MOVEF_F 0.0 VLV_ACCELERATION_4
    MOVEF_F 135.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1241:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1242:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1243:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1245:
    JR_LTEQF VGV_B 60.0 else1246_1
    DATA8 layer1247
	DATA8 no1247
	DATA8 mode81247
	
	MOVEF_8 VGV_LEFT_SENSOR no1247
	SUB8 no1247 1 no1247
	DIV8 no1247 4 layer1247
	MATH MOD8 no1247 4 no1247

	MOVEF_8 2.0 mode81247
	
	INPUT_DEVICE READY_RAW layer1247 no1247 0 mode81247 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1248:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1250
	DATA8 no1250
	DATA8 mode81250
	
	MOVEF_8 VGV_LEFT_SENSOR no1250
	SUB8 no1250 1 no1250
	DIV8 no1250 4 layer1250
	MATH MOD8 no1250 4 no1250

	MOVEF_8 1.0 mode81250
	
	INPUT_DEVICE READY_RAW layer1250 no1250 0 mode81250 0
    JR_LTEQF VGV_G 80.0 else1251_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1252:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif1251
  else1251_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'FIre' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1253:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1254:
  else1251_2:
  endif1251:
    JR endif1246
  else1246_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1256_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'True' VGV_CHEM
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1257:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1258:
    MULF 10.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 10.0 0.0 'True' 

	DATA8 layer1260
	DATA8 nos1260
	DATA8 busy1260
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1260 nos1260
	JR_EQ8 0 nos1260 motornotbusy1260
  motorwaiting1260:
	OUTPUT_TEST layer1260 nos1260 busy1260
	JR_EQ8 busy1260 0 motornotbusy1260
	SLEEP
	JR motorwaiting1260
  motornotbusy1260:
  else1256_1:
  endif1256:
  else1246_2:
  endif1246:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1261:
    MOVEF_F 710.0 VGV_C
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or1263
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1262_1
  or1263:
    MOVEF_F 20.0 VLV_BASE_POWER_4
    MOVEF_F 20.0 VLV_MIN_POWER_4
    MOVEF_F 520.0 VLV_DEG_4
    MOVEF_F 200.0 VLV_ACCELERATION_4
    MOVEF_F 200.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1266:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1267:
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1268_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1270:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1272:
    JR_LTEQF VGV_B 50.0 else1273_1
    DATA8 layer1274
	DATA8 no1274
	DATA8 mode81274
	
	MOVEF_8 VGV_LEFT_SENSOR no1274
	SUB8 no1274 1 no1274
	DIV8 no1274 4 layer1274
	MATH MOD8 no1274 4 no1274

	MOVEF_8 2.0 mode81274
	
	INPUT_DEVICE READY_RAW layer1274 no1274 0 mode81274 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1275:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1277
	DATA8 no1277
	DATA8 mode81277
	
	MOVEF_8 VGV_LEFT_SENSOR no1277
	SUB8 no1277 1 no1277
	DIV8 no1277 4 layer1277
	MATH MOD8 no1277 4 no1277

	MOVEF_8 1.0 mode81277
	
	INPUT_DEVICE READY_RAW layer1277 no1277 0 mode81277 0
    JR_LTEQF VGV_G 70.0 else1278_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1279:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif1278
  else1278_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1280:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1281:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1282:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1283:
  else1278_2:
  endif1278:
    JR endif1273
  else1273_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds1288
	MOVEF_32 3000.0 milliseconds1288
	DATA32 timer1288
	TIMER_WAIT milliseconds1288 timer1288
	TIMER_READY timer1288
    JR_GTEQF VGV_ULTRA 85.0 else1289_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1290:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer1293
	DATA8 nos1293
	DATA8 busy1293
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1293 nos1293
	JR_EQ8 0 nos1293 motornotbusy1293
  motorwaiting1293:
	OUTPUT_TEST layer1293 nos1293 busy1293
	JR_EQ8 busy1293 0 motornotbusy1293
	SLEEP
	JR motorwaiting1293
  motornotbusy1293:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1294:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer1295
	DATA8 nos1295
	DATA8 busy1295
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1295 nos1295
	JR_EQ8 0 nos1295 motornotbusy1295
  motorwaiting1295:
	OUTPUT_TEST layer1295 nos1295 busy1295
	JR_EQ8 busy1295 0 motornotbusy1295
	SLEEP
	JR motorwaiting1295
  motornotbusy1295:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1297:
    JR_GTF VGV_I 20.0 endfor1297
  forbody1297:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1300
	MOVEF_32 10.0 milliseconds1300
	DATA32 timer1300
	TIMER_WAIT milliseconds1300 timer1300
	TIMER_READY timer1300
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1297
  endfor1297:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1306
	DATA8 nos1306
	DATA8 busy1306
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1306 nos1306
	JR_EQ8 0 nos1306 motornotbusy1306
  motorwaiting1306:
	OUTPUT_TEST layer1306 nos1306 busy1306
	JR_EQ8 busy1306 0 motornotbusy1306
	SLEEP
	JR motorwaiting1306
  motornotbusy1306:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1307 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1307:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer1308
	DATA8 nos1308
	DATA8 busy1308
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1308 nos1308
	JR_EQ8 0 nos1308 motornotbusy1308
  motorwaiting1308:
	OUTPUT_TEST layer1308 nos1308 busy1308
	JR_EQ8 busy1308 0 motornotbusy1308
	SLEEP
	JR motorwaiting1308
  motornotbusy1308:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1309:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1310:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1312:
    JR_GTF VGV_I 20.0 endfor1312
  forbody1312:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1316
	MOVEF_32 10.0 milliseconds1316
	DATA32 timer1316
	TIMER_WAIT milliseconds1316 timer1316
	TIMER_READY timer1316
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1312
  endfor1312:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1322
	DATA8 nos1322
	DATA8 busy1322
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1322 nos1322
	JR_EQ8 0 nos1322 motornotbusy1322
  motorwaiting1322:
	OUTPUT_TEST layer1322 nos1322 busy1322
	JR_EQ8 busy1322 0 motornotbusy1322
	SLEEP
	JR motorwaiting1322
  motornotbusy1322:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1323:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1324 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1324:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer1327
	DATA8 nos1327
	DATA8 busy1327
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1327 nos1327
	JR_EQ8 0 nos1327 motornotbusy1327
  motorwaiting1327:
	OUTPUT_TEST layer1327 nos1327 busy1327
	JR_EQ8 busy1327 0 motornotbusy1327
	SLEEP
	JR motorwaiting1327
  motornotbusy1327:
  else1289_1:
  endif1289:
  else1273_2:
  endif1273:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1328:
  else1268_1:
  endif1268:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1329_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1331:
    MOVEF_F 20.0 VLV_BASE_POWER_4
    MOVEF_F 10.0 VLV_MIN_POWER_4
    MOVEF_F 160.0 VLV_DEG_4
    MOVEF_F 80.0 VLV_ACCELERATION_4
    MOVEF_F 80.0 VLV_ZAME_4
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1332:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1333:
    DATA8 layer1334
	DATA8 no1334
	DATA8 mode81334
	
	MOVEF_8 VGV_LEFT_SENSOR no1334
	SUB8 no1334 1 no1334
	DIV8 no1334 4 layer1334
	MATH MOD8 no1334 4 no1334

	MOVEF_8 1.0 mode81334
	
	INPUT_DEVICE READY_RAW layer1334 no1334 0 mode81334 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1335:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1337:
    JR_LTEQF VGV_B 40.0 else1338_1
    DATA8 layer1339
	DATA8 no1339
	DATA8 mode81339
	
	MOVEF_8 VGV_LEFT_SENSOR no1339
	SUB8 no1339 1 no1339
	DIV8 no1339 4 layer1339
	MATH MOD8 no1339 4 no1339

	MOVEF_8 2.0 mode81339
	
	INPUT_DEVICE READY_RAW layer1339 no1339 0 mode81339 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1340:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1342
	DATA8 no1342
	DATA8 mode81342
	
	MOVEF_8 VGV_LEFT_SENSOR no1342
	SUB8 no1342 1 no1342
	DIV8 no1342 4 layer1342
	MATH MOD8 no1342 4 no1342

	MOVEF_8 1.0 mode81342
	
	INPUT_DEVICE READY_RAW layer1342 no1342 0 mode81342 0
    JR_LTEQF VGV_G 50.0 else1343_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1344:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif1343
  else1343_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1345:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1346:
  else1343_2:
  endif1343:
    JR endif1338
  else1338_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1348_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1349:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB1350 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB1350:
  else1348_1:
  endif1348:
  else1338_2:
  endif1338:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1351:
    MOVEF_F 160.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1352:
  else1329_1:
  endif1329:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 165.0 'True'

	DATA8 layer1355
	DATA8 nos1355
	DATA8 busy1355
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1355 nos1355
	JR_EQ8 0 nos1355 motornotbusy1355
  motorwaiting1355:
	OUTPUT_TEST layer1355 nos1355 busy1355
	JR_EQ8 busy1355 0 motornotbusy1355
	SLEEP
	JR motorwaiting1355
  motornotbusy1355:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1356:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1357:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 380.0 'True'

	DATA8 layer1360
	DATA8 nos1360
	DATA8 busy1360
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1360 nos1360
	JR_EQ8 0 nos1360 motornotbusy1360
  motorwaiting1360:
	OUTPUT_TEST layer1360 nos1360 busy1360
	JR_EQ8 busy1360 0 motornotbusy1360
	SLEEP
	JR motorwaiting1360
  motornotbusy1360:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1361:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1362:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1365
	DATA8 nos1365
	DATA8 busy1365
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1365 nos1365
	JR_EQ8 0 nos1365 motornotbusy1365
  motorwaiting1365:
	OUTPUT_TEST layer1365 nos1365 busy1365
	JR_EQ8 busy1365 0 motornotbusy1365
	SLEEP
	JR motorwaiting1365
  motornotbusy1365:
    JR endif1262
  else1262_1:
    MOVEF_F 200.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1366:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 370.0 'True'

	DATA8 layer1369
	DATA8 nos1369
	DATA8 busy1369
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1369 nos1369
	JR_EQ8 0 nos1369 motornotbusy1369
  motorwaiting1369:
	OUTPUT_TEST layer1369 nos1369 busy1369
	JR_EQ8 busy1369 0 motornotbusy1369
	SLEEP
	JR motorwaiting1369
  motornotbusy1369:
    SUBF VGV_C 220.0 VGV_C
  else1262_2:
  endif1262:
    MOVEF_F 490.0 VLV_U_2
    MOVEF_F 50.0 VLV_BASE_POWER_2
    MOVEF_F 20.0 VLV_MIN_POWER_2
    MOVEF_F VGV_C VLV_DEGREES_2
    MOVEF_F 200.0 VLV_ZAMED_DEGREES_2
    WRITE32 ENDSUB_F_ULTRASONIC_ZAMED_5:CALLSUB1371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_ZAMED_5
CALLSUB1371:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1372:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1373:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1374_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 115.0 0.0 'True' 

	DATA8 layer1376
	DATA8 nos1376
	DATA8 busy1376
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1376 nos1376
	JR_EQ8 0 nos1376 motornotbusy1376
  motorwaiting1376:
	OUTPUT_TEST layer1376 nos1376 busy1376
	JR_EQ8 busy1376 0 motornotbusy1376
	SLEEP
	JR motorwaiting1376
  motornotbusy1376:
  else1374_1:
  endif1374:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1377:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1380
	DATA8 nos1380
	DATA8 busy1380
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1380 nos1380
	JR_EQ8 0 nos1380 motornotbusy1380
  motorwaiting1380:
	OUTPUT_TEST layer1380 nos1380 busy1380
	JR_EQ8 busy1380 0 motornotbusy1380
	SLEEP
	JR motorwaiting1380
  motornotbusy1380:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1381:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1382_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer1384
	DATA8 nos1384
	DATA8 busy1384
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1384 nos1384
	JR_EQ8 0 nos1384 motornotbusy1384
  motorwaiting1384:
	OUTPUT_TEST layer1384 nos1384 busy1384
	JR_EQ8 busy1384 0 motornotbusy1384
	SLEEP
	JR motorwaiting1384
  motornotbusy1384:
  else1382_1:
  endif1382:
    CALL EQ_STRING VGV_IS_LEFT_OPEN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1385_1
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1389
	DATA8 nos1389
	DATA8 busy1389
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1389 nos1389
	JR_EQ8 0 nos1389 motornotbusy1389
  motorwaiting1389:
	OUTPUT_TEST layer1389 nos1389 busy1389
	JR_EQ8 busy1389 0 motornotbusy1389
	SLEEP
	JR motorwaiting1389
  motornotbusy1389:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 60.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1393
	MOVEF_32 1200.0 milliseconds1393
	DATA32 timer1393
	TIMER_WAIT milliseconds1393 timer1393
	TIMER_READY timer1393
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1394:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 300.0 0.0 'True' 

	DATA8 layer1396
	DATA8 nos1396
	DATA8 busy1396
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1396 nos1396
	JR_EQ8 0 nos1396 motornotbusy1396
  motorwaiting1396:
	OUTPUT_TEST layer1396 nos1396 busy1396
	JR_EQ8 busy1396 0 motornotbusy1396
	SLEEP
	JR motorwaiting1396
  motornotbusy1396:
    MULF VGV_LEFT_FORWARD 93.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1400
	MOVEF_32 4000.0 milliseconds1400
	DATA32 timer1400
	TIMER_WAIT milliseconds1400 timer1400
	TIMER_READY timer1400
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1401:
    WRITE32 ENDSUB_F_TAKE_CUBES_INVERSED_0:CALLSUB1402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_INVERSED_0
CALLSUB1402:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1405
	DATA8 nos1405
	DATA8 busy1405
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1405 nos1405
	JR_EQ8 0 nos1405 motornotbusy1405
  motorwaiting1405:
	OUTPUT_TEST layer1405 nos1405 busy1405
	JR_EQ8 busy1405 0 motornotbusy1405
	SLEEP
	JR motorwaiting1405
  motornotbusy1405:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1406_1
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1406_1
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:CALLSUB1409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_INVERSED_0
CALLSUB1409:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB1410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB1410:
    JR endif1406
  else1406_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1406_2
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1406_2
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1415
	DATA8 nos1415
	DATA8 busy1415
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1415 nos1415
	JR_EQ8 0 nos1415 motornotbusy1415
  motorwaiting1415:
	OUTPUT_TEST layer1415 nos1415 busy1415
	JR_EQ8 busy1415 0 motornotbusy1415
	SLEEP
	JR motorwaiting1415
  motornotbusy1415:
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:CALLSUB1416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_INVERSED_0
CALLSUB1416:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB1417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB1417:
    JR endif1406
  else1406_2:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1406_3
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1406_3
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:CALLSUB1420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0
CALLSUB1420:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB1421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB1421:
    JR endif1406
  else1406_3:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1422_1
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1422_1
    WRITE32 ENDSUB_F_TAKE_BOTH_INVERSED_0:CALLSUB1425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_INVERSED_0
CALLSUB1425:
    JR endif1422
  else1422_1:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1422_2
    WRITE32 ENDSUB_F_TAKE_NEAR_INVERSED_0:CALLSUB1427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_INVERSED_0
CALLSUB1427:
    JR endif1422
  else1422_2:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1422_3
    WRITE32 ENDSUB_F_TAKE_LONG_INVERSED_0:CALLSUB1429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_INVERSED_0
CALLSUB1429:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1432
	DATA8 nos1432
	DATA8 busy1432
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1432 nos1432
	JR_EQ8 0 nos1432 motornotbusy1432
  motorwaiting1432:
	OUTPUT_TEST layer1432 nos1432 busy1432
	JR_EQ8 busy1432 0 motornotbusy1432
	SLEEP
	JR motorwaiting1432
  motornotbusy1432:
    JR endif1422
  else1422_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1435
	DATA8 nos1435
	DATA8 busy1435
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1435 nos1435
	JR_EQ8 0 nos1435 motornotbusy1435
  motorwaiting1435:
	OUTPUT_TEST layer1435 nos1435 busy1435
	JR_EQ8 busy1435 0 motornotbusy1435
	SLEEP
	JR motorwaiting1435
  motornotbusy1435:
  else1422_4:
  endif1422:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1436_1
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1436_1
    WRITE32 ENDSUB_F_TAKE_BOTH_INVERSED_0:CALLSUB1439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_INVERSED_0
CALLSUB1439:
    JR endif1436
  else1436_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1436_2
    WRITE32 ENDSUB_F_TAKE_NEAR_INVERSED_0:CALLSUB1441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_INVERSED_0
CALLSUB1441:
    JR endif1436
  else1436_2:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1436_3
    WRITE32 ENDSUB_F_TAKE_LONG_INVERSED_0:CALLSUB1443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_INVERSED_0
CALLSUB1443:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1446
	DATA8 nos1446
	DATA8 busy1446
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1446 nos1446
	JR_EQ8 0 nos1446 motornotbusy1446
  motorwaiting1446:
	OUTPUT_TEST layer1446 nos1446 busy1446
	JR_EQ8 busy1446 0 motornotbusy1446
	SLEEP
	JR motorwaiting1446
  motornotbusy1446:
    JR endif1436
  else1436_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1449
	DATA8 nos1449
	DATA8 busy1449
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1449 nos1449
	JR_EQ8 0 nos1449 motornotbusy1449
  motorwaiting1449:
	OUTPUT_TEST layer1449 nos1449 busy1449
	JR_EQ8 busy1449 0 motornotbusy1449
	SLEEP
	JR motorwaiting1449
  motornotbusy1449:
  else1436_4:
  endif1436:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1450_1
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1450_1
    WRITE32 ENDSUB_F_TAKE_BOTH_INVERSED_0:CALLSUB1453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_INVERSED_0
CALLSUB1453:
    JR endif1450
  else1450_1:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1450_2
    WRITE32 ENDSUB_F_TAKE_NEAR_INVERSED_0:CALLSUB1455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_INVERSED_0
CALLSUB1455:
    JR endif1450
  else1450_2:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1450_3
    WRITE32 ENDSUB_F_TAKE_LONG_INVERSED_0:CALLSUB1457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_INVERSED_0
CALLSUB1457:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1460
	DATA8 nos1460
	DATA8 busy1460
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1460 nos1460
	JR_EQ8 0 nos1460 motornotbusy1460
  motorwaiting1460:
	OUTPUT_TEST layer1460 nos1460 busy1460
	JR_EQ8 busy1460 0 motornotbusy1460
	SLEEP
	JR motorwaiting1460
  motornotbusy1460:
    JR endif1450
  else1450_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1463
	DATA8 nos1463
	DATA8 busy1463
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1463 nos1463
	JR_EQ8 0 nos1463 motornotbusy1463
  motorwaiting1463:
	OUTPUT_TEST layer1463 nos1463 busy1463
	JR_EQ8 busy1463 0 motornotbusy1463
	SLEEP
	JR motorwaiting1463
  motornotbusy1463:
  else1450_4:
  endif1450:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1465
	DATA8 nos1465
	DATA8 busy1465
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1465 nos1465
	JR_EQ8 0 nos1465 motornotbusy1465
  motorwaiting1465:
	OUTPUT_TEST layer1465 nos1465 busy1465
	JR_EQ8 busy1465 0 motornotbusy1465
	SLEEP
	JR motorwaiting1465
  motornotbusy1465:
    MULF VGV_LEFT_FORWARD -25.0 F.0
    MULF VGV_RIGHT_FORWARD -25.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1469
	MOVEF_32 1500.0 milliseconds1469
	DATA32 timer1469
	TIMER_WAIT milliseconds1469 timer1469
	TIMER_READY timer1469
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1470:
  else1406_4:
  endif1406:
    JR endif1385
  else1385_1:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1473
	DATA8 nos1473
	DATA8 busy1473
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1473 nos1473
	JR_EQ8 0 nos1473 motornotbusy1473
  motorwaiting1473:
	OUTPUT_TEST layer1473 nos1473 busy1473
	JR_EQ8 busy1473 0 motornotbusy1473
	SLEEP
	JR motorwaiting1473
  motornotbusy1473:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 60.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1477
	MOVEF_32 1200.0 milliseconds1477
	DATA32 timer1477
	TIMER_WAIT milliseconds1477 timer1477
	TIMER_READY timer1477
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1478:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 220.0 'True'

	DATA8 layer1481
	DATA8 nos1481
	DATA8 busy1481
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1481 nos1481
	JR_EQ8 0 nos1481 motornotbusy1481
  motorwaiting1481:
	OUTPUT_TEST layer1481 nos1481 busy1481
	JR_EQ8 busy1481 0 motornotbusy1481
	SLEEP
	JR motorwaiting1481
  motornotbusy1481:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1483
	DATA8 nos1483
	DATA8 busy1483
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1483 nos1483
	JR_EQ8 0 nos1483 motornotbusy1483
  motorwaiting1483:
	OUTPUT_TEST layer1483 nos1483 busy1483
	JR_EQ8 busy1483 0 motornotbusy1483
	SLEEP
	JR motorwaiting1483
  motornotbusy1483:
    MOVEF_F 107.0 VGV_A
    TIMER_READ timeMC1
  while1485:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 4500.0 endwhile1485
  whilebody1485:
    WRITE32 ENDSUB_F_ULTRASONIC_SUPERFAST_0:CALLSUB1487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SUPERFAST_0
CALLSUB1487:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 4500.0 whilebody1485
  endwhile1485:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1489:
    WRITE32 ENDSUB_F_TAKE_CUBES_0:CALLSUB1490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_0
CALLSUB1490:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1493
	DATA8 nos1493
	DATA8 busy1493
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1493 nos1493
	JR_EQ8 0 nos1493 motornotbusy1493
  motorwaiting1493:
	OUTPUT_TEST layer1493 nos1493 busy1493
	JR_EQ8 busy1493 0 motornotbusy1493
	SLEEP
	JR motorwaiting1493
  motornotbusy1493:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1494_1
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1494_1
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB1497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB1497:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1498:
    JR endif1494
  else1494_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1494_2
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1494_2
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1503
	DATA8 nos1503
	DATA8 busy1503
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1503 nos1503
	JR_EQ8 0 nos1503 motornotbusy1503
  motorwaiting1503:
	OUTPUT_TEST layer1503 nos1503 busy1503
	JR_EQ8 busy1503 0 motornotbusy1503
	SLEEP
	JR motorwaiting1503
  motornotbusy1503:
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB1504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB1504:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1505:
    JR endif1494
  else1494_2:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1494_3
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1494_3
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:CALLSUB1508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_LONG_0
CALLSUB1508:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1509:
    JR endif1494
  else1494_3:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1510_1
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1510_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1513:
    JR endif1510
  else1510_1:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1510_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1515:
    JR endif1510
  else1510_2:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1510_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1517:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1520
	DATA8 nos1520
	DATA8 busy1520
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1520 nos1520
	JR_EQ8 0 nos1520 motornotbusy1520
  motorwaiting1520:
	OUTPUT_TEST layer1520 nos1520 busy1520
	JR_EQ8 busy1520 0 motornotbusy1520
	SLEEP
	JR motorwaiting1520
  motornotbusy1520:
    JR endif1510
  else1510_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1523
	DATA8 nos1523
	DATA8 busy1523
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1523 nos1523
	JR_EQ8 0 nos1523 motornotbusy1523
  motorwaiting1523:
	OUTPUT_TEST layer1523 nos1523 busy1523
	JR_EQ8 busy1523 0 motornotbusy1523
	SLEEP
	JR motorwaiting1523
  motornotbusy1523:
  else1510_4:
  endif1510:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1524_1
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1524_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1527:
    JR endif1524
  else1524_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1524_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1529:
    JR endif1524
  else1524_2:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1524_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1531:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1534
	DATA8 nos1534
	DATA8 busy1534
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1534 nos1534
	JR_EQ8 0 nos1534 motornotbusy1534
  motorwaiting1534:
	OUTPUT_TEST layer1534 nos1534 busy1534
	JR_EQ8 busy1534 0 motornotbusy1534
	SLEEP
	JR motorwaiting1534
  motornotbusy1534:
    JR endif1524
  else1524_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1537
	DATA8 nos1537
	DATA8 busy1537
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1537 nos1537
	JR_EQ8 0 nos1537 motornotbusy1537
  motorwaiting1537:
	OUTPUT_TEST layer1537 nos1537 busy1537
	JR_EQ8 busy1537 0 motornotbusy1537
	SLEEP
	JR motorwaiting1537
  motornotbusy1537:
  else1524_4:
  endif1524:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1538_1
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1538_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1541:
    JR endif1538
  else1538_1:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1538_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1543:
    JR endif1538
  else1538_2:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1538_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1545:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1548
	DATA8 nos1548
	DATA8 busy1548
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1548 nos1548
	JR_EQ8 0 nos1548 motornotbusy1548
  motorwaiting1548:
	OUTPUT_TEST layer1548 nos1548 busy1548
	JR_EQ8 busy1548 0 motornotbusy1548
	SLEEP
	JR motorwaiting1548
  motornotbusy1548:
    JR endif1538
  else1538_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1551
	DATA8 nos1551
	DATA8 busy1551
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1551 nos1551
	JR_EQ8 0 nos1551 motornotbusy1551
  motorwaiting1551:
	OUTPUT_TEST layer1551 nos1551 busy1551
	JR_EQ8 busy1551 0 motornotbusy1551
	SLEEP
	JR motorwaiting1551
  motornotbusy1551:
  else1538_4:
  endif1538:
    MULF -15.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1553
	DATA8 nos1553
	DATA8 busy1553
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1553 nos1553
	JR_EQ8 0 nos1553 motornotbusy1553
  motorwaiting1553:
	OUTPUT_TEST layer1553 nos1553 busy1553
	JR_EQ8 busy1553 0 motornotbusy1553
	SLEEP
	JR motorwaiting1553
  motornotbusy1553:
    MULF VGV_LEFT_FORWARD -25.0 F.0
    MULF VGV_RIGHT_FORWARD -25.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1557
	MOVEF_32 1500.0 milliseconds1557
	DATA32 timer1557
	TIMER_WAIT milliseconds1557 timer1557
	TIMER_READY timer1557
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1558:
  else1494_4:
  endif1494:
  else1385_2:
  endif1385:
    TIMER_READ timeMC9tmp
	SUB32 timeMC9tmp timeMC9 timeMC9tmp
	MOVE32_F timeMC9tmp VGV_T
    DATAF tmpf1560
    DATA8 flag1560
    DIVF VGV_T 60000.0 tmpf1560
    CP_EQF 0.0 60000.0 flag1560
    SELECTF flag1560 0.0 tmpf1560 F.0

    MATH FLOOR F.0 VGV_MINS
    MATH MOD VGV_T 60000.0 F.1
    DATAF tmpf1563
    DATA8 flag1563
    DIVF F.1 1000.0 tmpf1563
    CP_EQF 0.0 1000.0 flag1563
    SELECTF flag1563 0.0 tmpf1563 F.0

    MATH FLOOR F.0 VGV_SECS
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MINS '%g' 99 S.1
    CALL TEXT.APPEND S.1 ':' S.0
    STRINGS VALUE_FORMATTED VGV_SECS '%g' 99 S.1
    CALL TEXT.APPEND S.0 S.1 VGV_STR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_STR
    WRITE32 ENDSUB_F_PLAY_MUSIC_0:CALLSUB1571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PLAY_MUSIC_0
CALLSUB1571:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_ULTRASONIC_POWER_2:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VLV_V_1
    SUBF VLV_V_1 VLV_U_1 VLV_NOWERROR_1
    SUBF VGV_LASTERROR VLV_NOWERROR_1 VLV_DIF_1
    ADDF VGV_INTEGRAL VLV_NOWERROR_1 F.0
    DATAF tmpf1576
    DATA8 flag1576
    DIVF F.0 10.0 tmpf1576
    CP_EQF 0.0 10.0 flag1576
    SELECTF flag1576 0.0 tmpf1576 VLV_INTEGRAL_1

    SUBF VLV_NOWERROR_1 VGV_LASTERROR VLV_DERIVATIVE_1
    MULF VLV_NOWERROR_1 VGV_P_U F.0
    MULF VLV_INTEGRAL_1 VGV_D_U F.1
    ADDF F.0 F.1 VLV_UP_1
    ADDF VLV_POWER_1 VLV_UP_1 F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF VLV_POWER_1 VLV_UP_1 F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VLV_NOWERROR_1 VLV_LASTERROR_1
RETSUB_F_ULTRASONIC_POWER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_POWER_2:
SUB_F_ULTRASONIC_ZAMED_5:
    SUBF VLV_DEGREES_2 VLV_ZAMED_DEGREES_2 VLV_NORMAL_DEGREES_2
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1589:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VLV_NORMAL_DEGREES_2 endwhile1589
  whilebody1589:
    MOVEF_F VLV_BASE_POWER_2 VLV_POWER_1
    MOVEF_F VLV_U_2 VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB1591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB1591:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VLV_NORMAL_DEGREES_2 whilebody1589
  endwhile1589:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_2
  while1595:
    JR_GTEQF VLV_C_2 VLV_ZAMED_DEGREES_2 endwhile1595
  whilebody1595:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.1
    DATAF tmpf1597
    DATA8 flag1597
    DIVF F.1 VLV_ZAMED_DEGREES_2 tmpf1597
    CP_EQF 0.0 VLV_ZAMED_DEGREES_2 flag1597
    SELECTF flag1597 0.0 tmpf1597 F.0

    MULF F.0 VLV_BASE_POWER_2 VLV_MINUS_2
    SUBF VLV_BASE_POWER_2 VLV_MINUS_2 VLV_POWER_2
    JR_GTEQF VLV_POWER_2 VLV_MIN_POWER_2 else1600_1
    MOVEF_F VLV_MIN_POWER_2 VLV_POWER_2
  else1600_1:
  endif1600:
    MOVEF_F VLV_POWER_2 VLV_POWER_1
    MOVEF_F VLV_U_2 VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB1601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB1601:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_2
    JR_LTF VLV_C_2 VLV_ZAMED_DEGREES_2 whilebody1595
  endwhile1595:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1603:
RETSUB_F_ULTRASONIC_ZAMED_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_ZAMED_5:
SUB_F_RESET_0:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_MOVE_FORWARD_ACCELERATION_5:
    SUBF VLV_DEG_4 VLV_ACCELERATION_4 F.0
    SUBF F.0 VLV_ZAME_4 VLV_NORMAL_DEGREES_4
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1608:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_4
  while1610:
    JR_GTEQF VLV_C_4 VLV_ACCELERATION_4 endwhile1610
  whilebody1610:
    DATAF tmpf1611
    DATA8 flag1611
    DIVF VLV_C_4 VLV_ACCELERATION_4 tmpf1611
    CP_EQF 0.0 VLV_ACCELERATION_4 flag1611
    SELECTF flag1611 0.0 tmpf1611 VLV_P_4

    MULF VLV_P_4 VLV_BASE_POWER_4 VLV_POWER_4
    JR_GTEQF VLV_POWER_4 VLV_MIN_POWER_4 else1613_1
    MOVEF_F VLV_MIN_POWER_4 VLV_POWER_4
  else1613_1:
  endif1613:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_POWER_4 '%g' 99 S.2
    CALL TEXT.APPEND S.2 ' ' S.1
    STRINGS VALUE_FORMATTED VLV_C_4 '%g' 99 S.2
    CALL TEXT.APPEND S.1 S.2 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_P_4 VLV_DELTA_4
    SUBF VLV_POWER_4 VLV_DELTA_4 VLV_LEFT_POWER_4
    ADDF VLV_POWER_4 VLV_DELTA_4 VLV_RIGHT_POWER_4
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_4 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_4 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_4
    JR_LTF VLV_C_4 VLV_ACCELERATION_4 whilebody1610
  endwhile1610:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1634:
    MOVEF_F 0.0 VLV_C_4
  while1635:
    JR_GTEQF VLV_C_4 VLV_NORMAL_DEGREES_4 endwhile1635
  whilebody1635:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 1.0 VLV_DELTA_4
    SUBF VLV_BASE_POWER_4 VLV_DELTA_4 VLV_LEFT_POWER_4
    ADDF VLV_BASE_POWER_4 VLV_DELTA_4 VLV_RIGHT_POWER_4
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_4 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_4 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_4
    JR_LTF VLV_C_4 VLV_NORMAL_DEGREES_4 whilebody1635
  endwhile1635:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1648:
    MOVEF_F 0.0 VLV_C_4
  while1649:
    JR_GTEQF VLV_C_4 VLV_ZAME_4 endwhile1649
  whilebody1649:
    DATAF tmpf1650
    DATA8 flag1650
    DIVF VLV_C_4 VLV_ZAME_4 tmpf1650
    CP_EQF 0.0 VLV_ZAME_4 flag1650
    SELECTF flag1650 0.0 tmpf1650 VLV_P_4

    SUBF 1.0 VLV_P_4 F.0
    MULF VLV_BASE_POWER_4 F.0 VLV_POWER_4
    JR_GTEQF VLV_POWER_4 VLV_MIN_POWER_4 else1653_1
    MOVEF_F VLV_MIN_POWER_4 VLV_POWER_4
  else1653_1:
  endif1653:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    SUBF 1.0 VLV_P_4 F.1
    MULF F.0 F.1 VLV_DELTA_4
    SUBF VLV_POWER_4 VLV_DELTA_4 VLV_LEFT_POWER_4
    ADDF VLV_POWER_4 VLV_DELTA_4 VLV_RIGHT_POWER_4
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_4 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_4 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_4
    JR_LTF VLV_C_4 VLV_ZAME_4 whilebody1649
  endwhile1649:
RETSUB_F_MOVE_FORWARD_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:
SUB_F_MOVE_BACKWARD_ACCELERATION_5:
    SUBF VLV_DEG_5 VLV_ACCELERATION_5 F.0
    SUBF F.0 VLV_ZAME_5 VLV_NORMAL_DEGREES_5
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1669:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_5
  while1672:
    JR_GTEQF VLV_C_5 VLV_ACCELERATION_5 endwhile1672
  whilebody1672:
    DATAF tmpf1673
    DATA8 flag1673
    DIVF VLV_C_5 VLV_ACCELERATION_5 tmpf1673
    CP_EQF 0.0 VLV_ACCELERATION_5 flag1673
    SELECTF flag1673 0.0 tmpf1673 VLV_P_5

    JR_LTEQF VLV_P_5 1.0 else1674_1
    MOVEF_F 1.0 VLV_P_5
  else1674_1:
  endif1674:
    MULF VLV_P_5 VLV_BASE_POWER_5 VLV_POWER_5
    JR_GTEQF VLV_POWER_5 VLV_MIN_POWER_5 else1676_1
    MOVEF_F VLV_MIN_POWER_5 VLV_POWER_5
  else1676_1:
  endif1676:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_POWER_5 '%g' 99 S.2
    CALL TEXT.APPEND S.2 ' ' S.1
    STRINGS VALUE_FORMATTED VLV_C_5 '%g' 99 S.2
    CALL TEXT.APPEND S.1 S.2 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.4
    MULF F.4 VGV_RIGHT_FORWARD F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_P_5 F.0
    MULF F.0 -1.0 VLV_DELTA_5
    SUBF VLV_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_5
    JR_LTF VLV_C_5 VLV_ACCELERATION_5 whilebody1672
  endwhile1672:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1701:
    MOVEF_F 0.0 VLV_C_5
  while1702:
    JR_GTEQF VLV_C_5 VLV_NORMAL_DEGREES_5 endwhile1702
  whilebody1702:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 -1.0 VLV_DELTA_5
    SUBF VLV_BASE_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_BASE_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_5
    JR_LTF VLV_C_5 VLV_NORMAL_DEGREES_5 whilebody1702
  endwhile1702:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1718:
    MOVEF_F 0.0 VLV_C_5
  while1719:
    JR_GTEQF VLV_C_5 VLV_ZAME_5 endwhile1719
  whilebody1719:
    DATAF tmpf1720
    DATA8 flag1720
    DIVF VLV_C_5 VLV_ZAME_5 tmpf1720
    CP_EQF 0.0 VLV_ZAME_5 flag1720
    SELECTF flag1720 0.0 tmpf1720 VLV_P_5

    SUBF 1.0 VLV_P_5 F.0
    MULF VLV_BASE_POWER_5 F.0 VLV_POWER_5
    JR_GTEQF VLV_POWER_5 VLV_MIN_POWER_5 else1723_1
    MOVEF_F VLV_MIN_POWER_5 VLV_POWER_5
  else1723_1:
  endif1723:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.4
    MULF F.4 VGV_RIGHT_FORWARD F.3
    SUBF F.2 F.3 F.1
    SUBF 1.0 VLV_P_5 F.2
    MULF F.1 F.2 F.0
    MULF F.0 -1.0 VLV_DELTA_5
    SUBF VLV_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_5
    JR_LTF VLV_C_5 VLV_ZAME_5 whilebody1719
  endwhile1719:
RETSUB_F_MOVE_BACKWARD_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall SPEAKER.PLAY    // FSV 
{
	IN_F volume
	IN_S filename 252	

	// prepend a path to really reach the target file from the current working directory
	DATA8 vol 
	DATAS fullname 300
	MOVEF_8 volume vol

	STRINGS ADD '../../../..' filename fullname  // when using absolute path, go to file system top from the VM directory and then back down
	JR_EQ8 filename 47 absolutepath               // filename begins with a '/' - using absolute path
	STRINGS ADD '../prjs/' filename fullname      // by default use path relative to prjs folder (must go from the current VM directory to there)
absolutepath:
	
	SOUND PLAY vol fullname
}
subcall SPEAKER.ISBUSY     // S
{
	OUT_S result 8
	
	DATA8 busy
	SOUND_TEST busy
	JR_EQ8 busy 0 notbusy
	STRINGS DUPLICATE 'True' result
	RETURN
notbusy:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
