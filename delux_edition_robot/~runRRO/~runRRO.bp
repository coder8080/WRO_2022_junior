lv_base_power_8 = 0
lv_min_power_8 = 0
lv_deg_8 = 0
lv_coef_8 = 0
lv_base_power_12 = 0
lv_min_power_12 = 0
lv_deg_12 = 0
lv_coef_12 = 0
lv_motor_11 = ""
lv_forward_11 = 0
lv_deg_11 = 0
lv_max_power_11 = 0
lv_acceleration_11 = ""
lv_zame_11 = ""
lv_to_stop_11 = ""
lv_time_5 = 0
lv_percent_13 = 0
lv_power_1 = 0
lv_a_3 = 0
lv_deg_10 = 0
lv_power_10 = 0
lv_l_2 = 0
lv_power_9 = 0
gv_p = 0
gv_line = 0
gv_left_sensor = 0
gv_right_sensor = 0
gv_ultrasonic = 0
gv_left_motor = ""
gv_right_motor = ""
gv_not_inverted_motor = ""
gv_motors = ""
gv_left_forward = 0
gv_right_forward = 0
gv_grabber_motor = ""
gv_water_motor = ""
gv_left_max = 0
gv_left_min = 0
gv_last_err = 0
gv_last_motor_err = 0
gv_brown = ""
gv_red = ""
gv_yellow = ""
gv_green = ""
gv_blue = ""
gv_white = ""
gv_water_state = 0
gv_fire_count = 0
gv_men_count = 0
gv_chem = ""
gv_take_chem_in_yellow = ""
gv_a = 0
gv_r = 0
gv_obejct = ""
gv_object = ""
gv_deg = 0
gv_take_left = ""
gv_take_right = ""
gv_w = 0
gv_ultra = 0
gv_line = 1
gv_left_sensor = 2
gv_right_sensor = 3
gv_ultrasonic = 4
gv_left_motor = "A"
gv_right_motor = "B"
gv_not_inverted_motor = "B"
gv_motors = gv_left_motor + gv_right_motor
gv_left_forward = - 1
gv_right_forward = 1
gv_grabber_motor = "C"
gv_water_motor = "D"
gv_left_max = 40
gv_left_min = 5
gv_last_err = 0
gv_last_motor_err = 0
gv_brown = "False"
gv_red = "False"
gv_yellow = "False"
gv_green = "False"
gv_blue = "False"
gv_white = "False"
gv_water_state = 0
gv_fire_count = 0
gv_men_count = 0
gv_chem = "False"
gv_take_chem_in_yellow = "False"
Sensor.SetMode ( gv_line , 0 )
Sensor.SetMode ( gv_left_sensor , 1 )
Sensor.SetMode ( gv_right_sensor , 1 )
Sensor.SetMode ( gv_ultrasonic , 0 )
If EV3.BatteryVoltage < 8 Then
f_beep_0 ()
Speaker.Wait ()
f_beep_0 ()
EndIf
f_main_0 ()
Sub f_beep_0
Speaker.Tone ( 100 , 500 , 200 )
EndSub
Sub f_kick_water_0
Motor.Start ( gv_water_motor , 50 )
Program.Delay ( 500 )
Motor.Stop ( gv_water_motor , "True" )
Motor.Move ( gv_water_motor , - 50 , 20 , "True" )
EndSub
Sub f_take_chem_on_right_0
lv_base_power_8 = 30
lv_min_power_8 = 20
lv_deg_8 = 50
lv_coef_8 = - 1
f_speedup_4 ()
lv_base_power_12 = 30
lv_min_power_12 = 20
lv_deg_12 = 50
lv_coef_12 = - 1
f_zame_4 ()
MotorA.OffAndBrake ()
lv_motor_11 = gv_right_motor
lv_forward_11 = gv_right_forward * - 1
lv_deg_11 = 100
lv_max_power_11 = 30
lv_acceleration_11 = "False"
lv_zame_11 = "True"
lv_to_stop_11 = "True"
f_move_motor_7 ()
Motor.Move ( gv_grabber_motor , 50 , 170 , "True" )
lv_base_power_8 = 30
lv_min_power_8 = 20
lv_deg_8 = 50
lv_coef_8 = 1
f_speedup_4 ()
lv_base_power_12 = 30
lv_min_power_12 = 20
lv_deg_12 = 50
lv_coef_12 = 1
f_zame_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , 50 , 110 , "True" )
lv_base_power_8 = 30
lv_min_power_8 = 20
lv_deg_8 = 60
lv_coef_8 = - 1
f_speedup_4 ()
lv_base_power_12 = 30
lv_min_power_12 = 15
lv_deg_12 = 60
lv_coef_12 = - 1
f_zame_4 ()
f_stop_0 ()
lv_time_5 = 300
f_delay_1 ()
lv_motor_11 = gv_right_motor
lv_forward_11 = gv_right_forward
lv_deg_11 = 85
lv_max_power_11 = 30
lv_acceleration_11 = "True"
lv_zame_11 = "True"
lv_to_stop_11 = "True"
f_move_motor_7 ()
f_stop_0 ()
lv_time_5 = 300
f_delay_1 ()
lv_base_power_8 = 30
lv_min_power_8 = 20
lv_deg_8 = 100
lv_coef_8 = 1
f_speedup_4 ()
gv_chem = "True"
EndSub
Sub f_take_chem_on_left_0
lv_base_power_8 = 30
lv_min_power_8 = 20
lv_deg_8 = 50
lv_coef_8 = - 1
f_speedup_4 ()
lv_base_power_12 = 30
lv_min_power_12 = 20
lv_deg_12 = 50
lv_coef_12 = - 1
f_zame_4 ()
MotorB.OffAndBrake ()
lv_motor_11 = gv_left_motor
lv_forward_11 = gv_left_forward * - 1
lv_deg_11 = 100
lv_max_power_11 = 30
lv_acceleration_11 = "False"
lv_zame_11 = "True"
lv_to_stop_11 = "True"
f_move_motor_7 ()
Motor.Move ( gv_grabber_motor , 50 , 170 , "True" )
lv_base_power_8 = 30
lv_min_power_8 = 20
lv_deg_8 = 50
lv_coef_8 = 1
f_speedup_4 ()
lv_base_power_12 = 30
lv_min_power_12 = 20
lv_deg_12 = 50
lv_coef_12 = 1
f_zame_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , 50 , 110 , "True" )
lv_base_power_8 = 30
lv_min_power_8 = 20
lv_deg_8 = 60
lv_coef_8 = - 1
f_speedup_4 ()
lv_base_power_12 = 30
lv_min_power_12 = 15
lv_deg_12 = 60
lv_coef_12 = - 1
f_zame_4 ()
f_stop_0 ()
lv_time_5 = 300
f_delay_1 ()
lv_motor_11 = gv_left_motor
lv_forward_11 = gv_left_forward
lv_deg_11 = 85
lv_max_power_11 = 30
lv_acceleration_11 = "True"
lv_zame_11 = "True"
lv_to_stop_11 = "True"
f_move_motor_7 ()
f_stop_0 ()
lv_time_5 = 300
f_delay_1 ()
lv_base_power_8 = 30
lv_min_power_8 = 20
lv_deg_8 = 100
lv_coef_8 = 1
f_speedup_4 ()
gv_chem = "True"
EndSub
Sub f_main_0
gv_a = 97
MotorA.StartPower ( 80 * gv_left_forward )
MotorB.StartPower ( 85 * gv_right_forward )
f_reset_0 ()
While MotorB.GetTacho () < 1000
EndWhile
f_read_percent_1 ()
gv_p = lv_percent_13
While gv_p < 50
f_read_percent_1 ()
gv_p = lv_percent_13
EndWhile
While gv_p > 20
f_read_percent_1 ()
gv_p = lv_percent_13
EndWhile
MotorA.OffAndBrake ()
lv_motor_11 = gv_right_motor
lv_forward_11 = gv_right_forward * - 1
lv_deg_11 = 180
lv_max_power_11 = 50
lv_acceleration_11 = "False"
lv_zame_11 = "False"
lv_to_stop_11 = "True"
f_move_motor_7 ()
lv_motor_11 = gv_left_motor
lv_forward_11 = gv_left_forward
lv_deg_11 = 180
lv_max_power_11 = 50
lv_acceleration_11 = "False"
lv_zame_11 = "False"
lv_to_stop_11 = "True"
f_move_motor_7 ()
lv_power_1 = - 50
f_movement_init_1 ()
Program.Delay ( 1000 )
f_stop_0 ()
lv_base_power_8 = 30
lv_min_power_8 = 20
lv_deg_8 = 65
lv_coef_8 = 1
f_speedup_4 ()
MotorA.OffAndBrake ()
lv_motor_11 = gv_right_motor
lv_forward_11 = gv_right_forward
lv_deg_11 = 360
lv_max_power_11 = 30
lv_acceleration_11 = "False"
lv_zame_11 = "True"
lv_to_stop_11 = "True"
f_move_motor_7 ()
lv_power_1 = 40
f_movement_init_1 ()
f_read_percent_1 ()
gv_p = lv_percent_13
While gv_p > 23
f_read_percent_1 ()
gv_p = lv_percent_13
lv_a_3 = gv_a
f_ultra_line_1 ()
EndWhile
lv_base_power_12 = 40
lv_min_power_12 = 0
lv_deg_12 = 35
lv_coef_12 = 1
f_zame_4 ()
f_stop_0 ()
lv_time_5 = 200
f_delay_1 ()
gv_r = Sensor.ReadRawValue ( gv_right_sensor , 0 )
gv_obejct = "none"
If gv_r > 150 Then
gv_object = "human"
gv_men_count = gv_men_count + 1
gv_brown = "True"
ElseIf gv_r > 60 Then
Thread.Run = f_kick_water_0
gv_object = "fire"
gv_fire_count = gv_fire_count + 1
gv_brown = "True"
ElseIf gv_r > 15 Then
f_take_chem_on_right_0 ()
gv_object = "chem"
gv_brown = "True"
EndIf
gv_deg = 525
If gv_object <> "chem" Then
lv_base_power_8 = 40
lv_min_power_8 = 15
lv_deg_8 = 120
lv_coef_8 = 1
f_speedup_4 ()
gv_deg = gv_deg - 120
EndIf
f_reset_0 ()
If gv_brown = "False" Then
While MotorA.GetTacho () * gv_left_forward < gv_deg - 120
lv_a_3 = gv_a
f_ultra_line_1 ()
EndWhile
lv_base_power_12 = 40
lv_min_power_12 = 15
lv_deg_12 = 120
lv_coef_12 = 1
f_zame_4 ()
f_stop_0 ()
lv_time_5 = 200
f_delay_1 ()
gv_r = Sensor.ReadRawValue ( gv_right_sensor , 0 )
If gv_r > 160 Then
gv_red = "True"
gv_men_count = gv_men_count + 1
gv_object = "human"
ElseIf gv_r > 80 Then
gv_red = "True"
gv_fire_count = gv_fire_count + 1
gv_object = "fire"
lv_base_power_8 = 40
lv_min_power_8 = 15
lv_deg_8 = 50
lv_coef_8 = - 1
f_speedup_4 ()
lv_base_power_12 = 40
lv_min_power_12 = 15
lv_deg_12 = 50
lv_coef_12 = - 1
f_zame_4 ()
f_stop_0 ()
f_kick_water_0 ()
lv_base_power_8 = 40
lv_min_power_8 = 15
lv_deg_8 = 100
lv_coef_8 = 1
f_speedup_4 ()
ElseIf gv_r > 20 Then
gv_red = "True"
gv_object = "chem"
f_take_chem_on_right_0 ()
EndIf
lv_power_1 = 40
f_movement_init_1 ()
Else
While MotorA.GetTacho () * gv_left_forward < gv_deg
lv_a_3 = gv_a
f_ultra_line_1 ()
EndWhile
EndIf
f_reset_0 ()
While MotorA.GetTacho () * gv_left_forward < 520
lv_a_3 = gv_a
f_ultra_line_1 ()
EndWhile
MotorA.SetPower ( 60 * gv_left_forward )
MotorB.SetPower ( 60 * gv_right_forward )
Program.Delay ( 1000 )
f_stop_0 ()
gv_take_left = "False"
gv_take_right = "False"
lv_time_5 = 200
f_delay_1 ()
gv_r = Sensor.ReadRawValue ( gv_right_sensor , 0 )
If gv_r > 160 Then
gv_red = "True"
ElseIf gv_r > 80 Then
gv_red = "True"
f_kick_water_0 ()
Else
Sensor.SetMode ( gv_right_sensor , 4 )
lv_time_5 = 200
f_delay_1 ()
gv_w = Sensor.ReadRawValue ( gv_right_sensor , 0 )
LCD.Clear ()
LCD.Text ( 1 , 0 , 0 , 2 , gv_w )
Sensor.SetMode ( gv_right_sensor , 1 )
If gv_w > 30 Then
gv_take_right = "True"
gv_red = "True"
EndIf
EndIf
If gv_red = "False" Then
gv_r = Sensor.ReadRawValue ( gv_left_sensor , 0 )
LCD.Clear ()
LCD.Text ( 1 , 0 , 0 , 2 , gv_r )
Program.Delay ( 1000 )
If gv_r > 140 Then
gv_red = "True"
ElseIf gv_r > 80 Then
gv_red = "True"
f_kick_water_0 ()
Else
Sensor.SetMode ( gv_left_sensor , 4 )
lv_motor_11 = gv_right_motor
lv_forward_11 = gv_right_forward * - 1
lv_deg_11 = 20
lv_max_power_11 = 20
lv_acceleration_11 = "False"
lv_zame_11 = "False"
lv_to_stop_11 = "True"
f_move_motor_7 ()
gv_w = Sensor.ReadRawValue ( gv_left_sensor , 0 )
Sensor.SetMode ( gv_left_sensor , 1 )
MotorB.StartPower ( 20 )
Program.Delay ( 500 )
MotorB.OffAndBrake ()
If gv_w > 60 Then
gv_red = "True"
gv_take_left = "True"
EndIf
EndIf
Else
f_beep_0 ()
EndIf
If gv_take_left = "True" Then
lv_base_power_8 = 30
lv_min_power_8 = 20
lv_deg_8 = 60
lv_coef_8 = - 1
f_speedup_4 ()
lv_base_power_12 = 30
lv_min_power_12 = 20
lv_deg_12 = 60
lv_coef_12 = - 1
f_zame_4 ()
MotorB.OffAndBrake ()
lv_motor_11 = gv_left_motor
lv_forward_11 = gv_left_forward * - 1
lv_deg_11 = 90
lv_max_power_11 = 20
lv_acceleration_11 = "False"
lv_zame_11 = "True"
lv_to_stop_11 = "True"
f_move_motor_7 ()
Motor.Move ( gv_grabber_motor , 50 , 170 , "True" )
lv_base_power_8 = 30
lv_min_power_8 = 20
lv_deg_8 = 40
lv_coef_8 = 1
f_speedup_4 ()
lv_base_power_12 = 30
lv_min_power_12 = 20
lv_deg_12 = 40
lv_coef_12 = 1
f_zame_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , 50 , 110 , "True" )
lv_base_power_8 = 30
lv_min_power_8 = 20
lv_deg_8 = 40
lv_coef_8 = - 1
f_speedup_4 ()
lv_base_power_12 = 30
lv_min_power_12 = 20
lv_deg_12 = 40
lv_coef_12 = - 1
f_zame_4 ()
f_stop_0 ()
lv_time_5 = 200
f_delay_1 ()
lv_motor_11 = gv_left_motor
lv_forward_11 = gv_left_forward
lv_deg_11 = 90
lv_max_power_11 = 20
lv_acceleration_11 = "True"
lv_zame_11 = "False"
lv_to_stop_11 = "True"
f_move_motor_7 ()
lv_power_1 = 30
f_movement_init_1 ()
Program.Delay ( 1000 )
f_stop_0 ()
ElseIf gv_take_right = "True" Then
lv_base_power_8 = 30
lv_min_power_8 = 20
lv_deg_8 = 60
lv_coef_8 = - 1
f_speedup_4 ()
lv_base_power_12 = 30
lv_min_power_12 = 20
lv_deg_12 = 60
lv_coef_12 = - 1
f_zame_4 ()
MotorA.OffAndBrake ()
lv_motor_11 = gv_right_motor
lv_forward_11 = gv_right_forward * - 1
lv_deg_11 = 90
lv_max_power_11 = 20
lv_acceleration_11 = "False"
lv_zame_11 = "True"
lv_to_stop_11 = "True"
f_move_motor_7 ()
Motor.Move ( gv_grabber_motor , 50 , 170 , "True" )
lv_base_power_8 = 30
lv_min_power_8 = 20
lv_deg_8 = 40
lv_coef_8 = 1
f_speedup_4 ()
lv_base_power_12 = 30
lv_min_power_12 = 20
lv_deg_12 = 40
lv_coef_12 = 1
f_zame_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , 50 , 110 , "True" )
lv_base_power_8 = 30
lv_min_power_8 = 20
lv_deg_8 = 40
lv_coef_8 = - 1
f_speedup_4 ()
lv_base_power_12 = 30
lv_min_power_12 = 20
lv_deg_12 = 40
lv_coef_12 = - 1
f_zame_4 ()
f_stop_0 ()
lv_time_5 = 200
f_delay_1 ()
lv_motor_11 = gv_right_motor
lv_forward_11 = gv_right_forward
lv_deg_11 = 90
lv_max_power_11 = 20
lv_acceleration_11 = "True"
lv_zame_11 = "False"
lv_to_stop_11 = "True"
f_move_motor_7 ()
lv_power_1 = 30
f_movement_init_1 ()
Program.Delay ( 1000 )
f_stop_0 ()
EndIf
lv_base_power_8 = 30
lv_min_power_8 = 20
lv_deg_8 = 110
lv_coef_8 = - 1
f_speedup_4 ()
MotorA.OffAndBrake ()
lv_motor_11 = gv_right_motor
lv_forward_11 = gv_right_forward * - 1
lv_deg_11 = 360
lv_max_power_11 = 30
lv_acceleration_11 = "False"
lv_zame_11 = "False"
lv_to_stop_11 = "True"
f_move_motor_7 ()
lv_power_1 = - 40
f_movement_init_1 ()
lv_time_5 = 1000
f_delay_1 ()
lv_base_power_8 = 40
lv_min_power_8 = 20
lv_deg_8 = 120
lv_coef_8 = 1
f_speedup_4 ()
lv_deg_10 = 425 - 240
lv_power_10 = 40
f_forward_deg_2 ()
lv_base_power_12 = 40
lv_min_power_12 = 20
lv_deg_12 = 120
lv_coef_12 = 1
f_zame_4 ()
f_stop_0 ()
lv_time_5 = 200
f_delay_1 ()
gv_r = Sensor.ReadRawValue ( gv_right_sensor , 0 )
If gv_r > 160 Then
ElseIf gv_r > 80 Then
f_kick_water_0 ()
Else
Sensor.SetMode ( gv_right_sensor , 4 )
lv_time_5 = 200
f_delay_1 ()
gv_w = Sensor.ReadRawValue ( gv_right_sensor , 0 )
Sensor.SetMode ( gv_right_sensor , 1 )
If gv_w > 45 Then
gv_take_chem_in_yellow = "True"
EndIf
EndIf
lv_motor_11 = gv_right_motor
lv_forward_11 = gv_right_forward
lv_deg_11 = 260
lv_max_power_11 = 30
lv_acceleration_11 = "True"
lv_zame_11 = "True"
lv_to_stop_11 = "True"
f_move_motor_7 ()
lv_motor_11 = gv_left_motor
lv_forward_11 = gv_left_forward
lv_deg_11 = 260
lv_max_power_11 = 30
lv_acceleration_11 = "True"
lv_zame_11 = "False"
lv_to_stop_11 = "False"
f_move_motor_7 ()
lv_base_power_12 = 30
lv_min_power_12 = 20
lv_deg_12 = 165
lv_coef_12 = 1
f_zame_4 ()
f_stop_0 ()
gv_r = Sensor.ReadRawValue ( gv_left_sensor , 0 )
If gv_r > 180 Then
ElseIf gv_r > 100 Then
f_kick_water_0 ()
Else
gv_ultra = Sensor.ReadRawValue ( gv_ultrasonic , 0 )
If gv_ultra < 70 Then
f_take_chem_on_left_0 ()
EndIf
EndIf
lv_deg_10 = 100
lv_power_10 = 30
f_forward_deg_2 ()
f_reset_0 ()
While MotorA.GetTacho () * gv_left_forward < 300
lv_a_3 = 103
f_ultra_line_1 ()
EndWhile
MotorA.SetPower ( 40 * gv_left_forward )
MotorB.SetPower ( 40 * gv_right_forward )
Program.Delay ( 1000 )
f_stop_0 ()
EndSub
Sub f_movement_init_1
MotorA.StartPower ( lv_power_1 * gv_left_forward )
MotorB.StartPower ( lv_power_1 * gv_right_forward )
EndSub
Sub f_line_1
If lv_l_2 = - 100 Then
lv_l_2 = ( Sensor.ReadPercent ( gv_line ) - gv_left_min ) / ( gv_left_max - gv_left_min ) * 150
EndIf
lv_err_2 = lv_l_2 - 50
lv_diff_2 = lv_err_2 - gv_last_err
lv_delta_2 = lv_err_2 * 1 + lv_diff_2 * 7
lv_left_power_2 = 80 - lv_delta_2
lv_right_power_2 = 80 + lv_delta_2
MotorA.SetPower ( lv_left_power_2 * gv_left_forward )
MotorB.SetPower ( lv_right_power_2 * gv_right_forward )
gv_last_err = lv_err_2
Program.Delay ( 5 )
EndSub
Sub f_ultra_line_1
lv_l_3 = Sensor.ReadRawValue ( gv_ultrasonic , 0 )
lv_err_3 = lv_l_3 - lv_a_3
lv_diff_3 = lv_err_3 - gv_last_err
lv_delta_3 = lv_err_3 * 0.8 + lv_diff_3 * 0
lv_left_power_3 = 40 - lv_delta_3
lv_right_power_3 = 40 + lv_delta_3
MotorA.SetPower ( lv_left_power_3 * gv_left_forward )
MotorB.SetPower ( lv_right_power_3 * gv_right_forward )
gv_last_err = lv_err_3
EndSub
Sub f_delay_1
Program.Delay ( lv_time_5 )
EndSub
Sub f_reset_0
MotorA.ResetCount ()
MotorB.ResetCount ()
EndSub
Sub f_stop_0
MotorAB.OffAndBrake ()
EndSub
Sub f_speedup_4
lv_power_1 = 15
f_movement_init_1 ()
f_reset_0 ()
lv_l_8 = 0
While lv_l_8 < lv_deg_8
lv_p_8 = lv_l_8 / lv_deg_8
lv_power_8 = ( lv_base_power_8 - lv_min_power_8 ) * lv_p_8 + lv_min_power_8
lv_l_8 = MotorA.GetTacho () * gv_left_forward * lv_coef_8
lv_r_8 = MotorB.GetTacho () * gv_right_forward * lv_coef_8
lv_delta_8 = ( lv_l_8 - lv_r_8 ) * lv_p_8
lv_left_power_8 = lv_power_8 - lv_delta_8
lv_right_power_8 = lv_power_8 + lv_delta_8
MotorA.SetPower ( lv_left_power_8 * gv_left_forward * lv_coef_8 )
MotorB.SetPower ( lv_right_power_8 * gv_right_forward * lv_coef_8 )
EndWhile
EndSub
Sub f_sync_1
lv_l_9 = MotorA.GetTacho () * gv_left_forward
lv_r_9 = MotorB.GetTacho () * gv_right_forward
lv_err_9 = lv_l_9 - lv_r_9
lv_diff_9 = lv_err_9 - gv_last_err
lv_delta_9 = lv_err_9 * 1 + lv_diff_9 * 0
lv_left_power_9 = lv_power_9 - lv_delta_9
lv_right_power_9 = lv_power_9 + lv_delta_9
MotorA.SetPower ( lv_left_power_9 * gv_left_forward )
MotorB.SetSpeed ( lv_right_power_9 * gv_right_forward )
gv_last_err = lv_err_9
EndSub
Sub f_forward_deg_2
lv_power_1 = lv_power_10
f_movement_init_1 ()
f_reset_0 ()
lv_l_10 = MotorA.GetTacho () * gv_left_forward
While lv_l_10 < lv_deg_10
lv_power_9 = lv_power_10
f_sync_1 ()
lv_l_10 = MotorA.GetTacho () * gv_left_forward
EndWhile
EndSub
Sub f_move_motor_7
lv_normal_deg_11 = lv_deg_11
lv_acceleration_deg_11 = 0
lv_zame_deg_11 = 0
If lv_acceleration_11 = "True" Then
lv_acceleration_deg_11 = Math.Min ( Math.Floor ( lv_deg_11 / 2 ) , 120 )
lv_normal_deg_11 = lv_normal_deg_11 - lv_acceleration_deg_11
EndIf
If lv_zame_11 = "True" Then
lv_zame_deg_11 = Math.Min ( Math.Floor ( lv_deg_11 / 2 ) , 120 )
lv_normal_deg_11 = lv_normal_deg_11 - lv_zame_deg_11
EndIf
If lv_acceleration_11 = "True" Then
Motor.ResetCount ( lv_motor_11 )
lv_m_11 = 0
While lv_m_11 < lv_acceleration_deg_11
lv_p_11 = lv_m_11 / lv_acceleration_deg_11
lv_power_11 = ( lv_max_power_11 - 10 ) * lv_p_11 + 10
Motor.Start ( lv_motor_11 , lv_power_11 * lv_forward_11 )
lv_m_11 = Motor.GetCount ( lv_motor_11 ) * lv_forward_11
Program.Delay ( 10 )
EndWhile
EndIf
If lv_normal_deg_11 > 0 Then
Motor.Move ( lv_motor_11 , lv_max_power_11 * lv_forward_11 , lv_normal_deg_11 , "False" )
EndIf
If lv_zame_11 = "True" Then
Motor.ResetCount ( lv_motor_11 )
lv_m_11 = 0
While lv_m_11 < lv_zame_deg_11
lv_p_11 = 1 - ( lv_m_11 / lv_zame_deg_11 )
lv_power_11 = ( lv_max_power_11 - 10 ) * lv_p_11 + 10
Motor.Start ( lv_motor_11 , lv_power_11 * lv_forward_11 )
lv_m_11 = Motor.GetCount ( lv_motor_11 ) * lv_forward_11
Program.Delay ( 10 )
EndWhile
EndIf
If lv_to_stop_11 = "True" Then
Motor.Stop ( lv_motor_11 , "True" )
EndIf
EndSub
Sub f_zame_4
lv_power_1 = lv_base_power_12
f_movement_init_1 ()
f_reset_0 ()
lv_l_12 = 0
While lv_l_12 < lv_deg_12
lv_p_12 = lv_l_12 / lv_deg_12
lv_l_12 = MotorA.GetTacho () * gv_left_forward * lv_coef_12
lv_r_12 = MotorB.GetTacho () * gv_right_forward * lv_coef_12
lv_delta_12 = ( lv_l_12 - lv_r_12 ) * ( 1 - lv_p_12 )
lv_power_12 = ( lv_base_power_12 - lv_min_power_12 ) * ( 1 - lv_p_12 ) + lv_min_power_12
lv_left_power_12 = lv_power_12 - lv_delta_12
lv_right_power_12 = lv_power_12 + lv_delta_12
MotorA.SetPower ( lv_left_power_12 * gv_left_forward * lv_coef_12 )
MotorB.SetPower ( lv_right_power_12 * gv_right_forward * lv_coef_12 )
Program.Delay ( 10 )
EndWhile
EndSub
Sub f_read_percent_1
lv_percent_13 = ( Sensor.ReadPercent ( gv_line ) - gv_left_min ) / ( gv_left_max - gv_left_min ) * 100
EndSub
