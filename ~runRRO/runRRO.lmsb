DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_5
DATAF VLV_MIN_POWER_5
DATAF VLV_DEG_5
DATAF VLV_ACCELERATION_5
DATAF VLV_ZAME_5
DATAS VLV_MOTOR_8 252
DATAF VLV_FORWARD_8
DATAF VLV_BASE_POWER_8
DATAF VLV_MIN_POWER_8
DATAF VLV_DEG_8
DATAF VLV_ACCELERATION_8
DATAF VLV_ZAME_8
DATAF VLV_BASE_POWER_6
DATAF VLV_MIN_POWER_6
DATAF VLV_DEG_6
DATAF VLV_ACCELERATION_6
DATAF VLV_ZAME_6
DATAS VLV_MOTOR_7 252
DATAF VLV_FORWARD_7
DATAF VLV_BASE_POWER_7
DATAF VLV_MIN_POWER_7
DATAF VLV_DEG_7
DATAF VLV_ACCELERATION_7
DATAF VLV_ZAME_7
DATAF VLV_U_3
DATAF VLV_BASE_POWER_3
DATAF VLV_MIN_POWER_3
DATAF VLV_DEGREES_3
DATAF VLV_ZAMED_DEGREES_3
DATAF VLV_POWER_1
DATAF VLV_U_1
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAF VGV_RIGHT_FORWARD
DATAF VGV_LEFT_FORWARD
DATAS VGV_NOT_INVERSED_MOTOR 252
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_MOTORS 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_LINE_SENSOR
DATAF VGV_ULTRASONIC
DATAF VGV_A
DATAF VGV_P
DATAF VGV_D
DATAF VGV_LASTERROR
DATAF VGV_INTEGRAL
DATAF VGV_P_U
DATAF VGV_D_U
DATAF VGV_DEG
DATAF VGV_B
DATAF VGV_W
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_MEN_COUNT
DATAS VGV_CHEM 252
DATAF VGV_FIRE_COUNT
DATAS VGV_IS_CHEM_ON_RIGHT 252
DATAS VGV_IS_CHEM_ON_LEFT 252
DATAF VGV_CUBES_COUNT
DATAF VGV_WATER_STATE
DATAS VGV_OBJECT 252
DATAS VGV_UP_WATER 252
DATAS VGV_1_WATER 252
DATAS VGV_2_WATER 252
DATAS VGV_START_FROM_RIGHT 252
DATAF VGV_NOWERROR
DATAF VGV_DIF
DATAF VGV_DERIVATIVE
DATAF VGV_UP
DATAF VGV_C
DATAF VGV_G
DATAS VGV_TAKE_RED_RIGHT 252
DATAS VGV_TAKE_RED_LEFT 252
DATAF VGV_DDD
DATAF VGV_CHEM_BACK
DATAF VGV_NO_BACK
DATAF VGV_HALF
DATAF VGV_ULTRA
DATAF VGV_I
DATAF VGV_R_C
DATAF VGV_L_C
DATAF VGV_DIFF
DATAF VGV_R_P
DATAF VGV_L_P
DATAS VGV_YELLOW_OBJECT 252
DATAF VGV_T
DATAF VGV_MINS
DATAF VGV_SECS
DATAS VGV_STR 252
DATAF VLV_V_1
DATAF VLV_NOWERROR_1
DATAF VLV_DIF_1
DATAF VLV_INTEGRAL_1
DATAF VLV_DERIVATIVE_1
DATAF VLV_UP_1
DATAF VLV_LASTERROR_1
DATAF VLV_NORMAL_DEGREES_3
DATAF VLV_C_3
DATAF VLV_MINUS_3
DATAF VLV_POWER_3
DATAF VLV_NORMAL_DEGREES_5
DATAF VLV_C_5
DATAF VLV_P_5
DATAF VLV_POWER_5
DATAF VLV_DELTA_5
DATAF VLV_LEFT_POWER_5
DATAF VLV_RIGHT_POWER_5
DATAF VLV_NORMAL_DEGREES_6
DATAF VLV_C_6
DATAF VLV_P_6
DATAF VLV_POWER_6
DATAF VLV_DELTA_6
DATAF VLV_LEFT_POWER_6
DATAF VLV_RIGHT_POWER_6
DATAF VLV_NORMAL_DEG_7
DATAF VLV_C_7
DATAF VLV_P_7
DATAF VLV_POWER_7
DATAF VLV_NORMAL_DEG_8
DATAF VLV_C_8
DATAF VLV_POWER_8
DATAF VLV_P_8

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_5
    MOVEF_F 0.0 VLV_MIN_POWER_5
    MOVEF_F 0.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    STRINGS DUPLICATE '' VLV_MOTOR_8
    MOVEF_F 0.0 VLV_FORWARD_8
    MOVEF_F 0.0 VLV_BASE_POWER_8
    MOVEF_F 0.0 VLV_MIN_POWER_8
    MOVEF_F 0.0 VLV_DEG_8
    MOVEF_F 0.0 VLV_ACCELERATION_8
    MOVEF_F 0.0 VLV_ZAME_8
    MOVEF_F 0.0 VLV_BASE_POWER_6
    MOVEF_F 0.0 VLV_MIN_POWER_6
    MOVEF_F 0.0 VLV_DEG_6
    MOVEF_F 0.0 VLV_ACCELERATION_6
    MOVEF_F 0.0 VLV_ZAME_6
    STRINGS DUPLICATE '' VLV_MOTOR_7
    MOVEF_F 0.0 VLV_FORWARD_7
    MOVEF_F 0.0 VLV_BASE_POWER_7
    MOVEF_F 0.0 VLV_MIN_POWER_7
    MOVEF_F 0.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    MOVEF_F 0.0 VLV_U_3
    MOVEF_F 0.0 VLV_BASE_POWER_3
    MOVEF_F 0.0 VLV_MIN_POWER_3
    MOVEF_F 0.0 VLV_DEGREES_3
    MOVEF_F 0.0 VLV_ZAMED_DEGREES_3
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_U_1
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    STRINGS DUPLICATE '' VGV_UP_WATER
    STRINGS DUPLICATE '' VGV_1_WATER
    STRINGS DUPLICATE '' VGV_2_WATER
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_DDD
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_HALF
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    STRINGS DUPLICATE '' VGV_YELLOW_OBJECT
    MOVEF_F 0.0 VGV_T
    MOVEF_F 0.0 VGV_MINS
    MOVEF_F 0.0 VGV_SECS
    STRINGS DUPLICATE '' VGV_STR
    MOVEF_F 0.0 VLV_V_1
    MOVEF_F 0.0 VLV_NOWERROR_1
    MOVEF_F 0.0 VLV_DIF_1
    MOVEF_F 0.0 VLV_INTEGRAL_1
    MOVEF_F 0.0 VLV_DERIVATIVE_1
    MOVEF_F 0.0 VLV_UP_1
    MOVEF_F 0.0 VLV_LASTERROR_1
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_3
    MOVEF_F 0.0 VLV_C_3
    MOVEF_F 0.0 VLV_MINUS_3
    MOVEF_F 0.0 VLV_POWER_3
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_5
    MOVEF_F 0.0 VLV_C_5
    MOVEF_F 0.0 VLV_P_5
    MOVEF_F 0.0 VLV_POWER_5
    MOVEF_F 0.0 VLV_DELTA_5
    MOVEF_F 0.0 VLV_LEFT_POWER_5
    MOVEF_F 0.0 VLV_RIGHT_POWER_5
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_6
    MOVEF_F 0.0 VLV_C_6
    MOVEF_F 0.0 VLV_P_6
    MOVEF_F 0.0 VLV_POWER_6
    MOVEF_F 0.0 VLV_DELTA_6
    MOVEF_F 0.0 VLV_LEFT_POWER_6
    MOVEF_F 0.0 VLV_RIGHT_POWER_6
    MOVEF_F 0.0 VLV_NORMAL_DEG_7
    MOVEF_F 0.0 VLV_C_7
    MOVEF_F 0.0 VLV_P_7
    MOVEF_F 0.0 VLV_POWER_7
    MOVEF_F 0.0 VLV_NORMAL_DEG_8
    MOVEF_F 0.0 VLV_C_8
    MOVEF_F 0.0 VLV_POWER_8
    MOVEF_F 0.0 VLV_P_8
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    MOVEF_F 0.0 VLV_BASE_POWER_5
    MOVEF_F 0.0 VLV_MIN_POWER_5
    MOVEF_F 0.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    STRINGS DUPLICATE '' VLV_MOTOR_8
    MOVEF_F 0.0 VLV_FORWARD_8
    MOVEF_F 0.0 VLV_BASE_POWER_8
    MOVEF_F 0.0 VLV_MIN_POWER_8
    MOVEF_F 0.0 VLV_DEG_8
    MOVEF_F 0.0 VLV_ACCELERATION_8
    MOVEF_F 0.0 VLV_ZAME_8
    MOVEF_F 0.0 VLV_BASE_POWER_6
    MOVEF_F 0.0 VLV_MIN_POWER_6
    MOVEF_F 0.0 VLV_DEG_6
    MOVEF_F 0.0 VLV_ACCELERATION_6
    MOVEF_F 0.0 VLV_ZAME_6
    STRINGS DUPLICATE '' VLV_MOTOR_7
    MOVEF_F 0.0 VLV_FORWARD_7
    MOVEF_F 0.0 VLV_BASE_POWER_7
    MOVEF_F 0.0 VLV_MIN_POWER_7
    MOVEF_F 0.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    MOVEF_F 0.0 VLV_U_3
    MOVEF_F 0.0 VLV_BASE_POWER_3
    MOVEF_F 0.0 VLV_MIN_POWER_3
    MOVEF_F 0.0 VLV_DEGREES_3
    MOVEF_F 0.0 VLV_ZAMED_DEGREES_3
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_U_1
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    STRINGS DUPLICATE '' VGV_UP_WATER
    STRINGS DUPLICATE '' VGV_1_WATER
    STRINGS DUPLICATE '' VGV_2_WATER
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_DDD
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_HALF
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    STRINGS DUPLICATE '' VGV_YELLOW_OBJECT
    MOVEF_F 0.0 VGV_T
    MOVEF_F 0.0 VGV_MINS
    MOVEF_F 0.0 VGV_SECS
    STRINGS DUPLICATE '' VGV_STR
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE 'B' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 1.0 VGV_LINE_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 1.0 VGV_P
    MOVEF_F 6.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 1.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE 'False' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 2.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_UP_WATER
    STRINGS DUPLICATE 'True' VGV_1_WATER
    STRINGS DUPLICATE 'True' VGV_2_WATER
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE_SENSOR no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_RIGHT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_LEFT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 1.0 'Low battery'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB10:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB11 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB11:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB12:
ENDTHREAD:
    RETURN
SUB_F_LINE_0:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF 20.0 F.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf17
    DATA8 flag17
    DIVF F.0 10.0 tmpf17
    CP_EQF 0.0 10.0 flag17
    SELECTF flag17 0.0 tmpf17 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_LINE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_0:
SUB_F_ULTRASONIC_SLOW_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf30
    DATA8 flag30
    DIVF F.0 10.0 tmpf30
    CP_EQF 0.0 10.0 flag30
    SELECTF flag30 0.0 tmpf30 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 20.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 20.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SLOW_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SLOW_0:
SUB_F_ULTRASONIC_FAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf45
    DATA8 flag45
    DIVF F.0 10.0 tmpf45
    CP_EQF 0.0 10.0 flag45
    SELECTF flag45 0.0 tmpf45 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 30.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 30.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_FAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_FAST_0:
SUB_F_ULTRASONIC_SUPERFAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf60
    DATA8 flag60
    DIVF F.0 10.0 tmpf60
    CP_EQF 0.0 10.0 flag60
    SELECTF flag60 0.0 tmpf60 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 80.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 80.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SUPERFAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SUPERFAST_0:
SUB_F_STOP_0:
    CALL MOTOR.STOP VGV_MOTORS 'True'
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_STOP_RIGHT_0:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
RETSUB_F_STOP_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_RIGHT_0:
SUB_F_DELAY_0:
    DATA32 milliseconds73
	MOVEF_32 300.0 milliseconds73
	DATA32 timer73
	TIMER_WAIT milliseconds73 timer73
	TIMER_READY timer73
RETSUB_F_DELAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_0:
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_LEFT_0:
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 280.0 VLV_DEG_5
    MOVEF_F 100.0 VLV_ACCELERATION_5
    MOVEF_F 100.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB75:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB76:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 370.0 VLV_DEG_8
    MOVEF_F 100.0 VLV_ACCELERATION_8
    MOVEF_F 100.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB77:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB78:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer79
	DATA8 nos79
	DATA8 busy79
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer79 nos79
	JR_EQ8 0 nos79 motornotbusy79
  motorwaiting79:
	OUTPUT_TEST layer79 nos79 busy79
	JR_EQ8 busy79 0 motornotbusy79
	SLEEP
	JR motorwaiting79
  motornotbusy79:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 70.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB80 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB80:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB81:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer82
	DATA8 nos82
	DATA8 busy82
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer82 nos82
	JR_EQ8 0 nos82 motornotbusy82
  motorwaiting82:
	OUTPUT_TEST layer82 nos82 busy82
	JR_EQ8 busy82 0 motornotbusy82
	SLEEP
	JR motorwaiting82
  motornotbusy82:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB83:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 90.0 VLV_DEG_6
    MOVEF_F 0.0 VLV_ACCELERATION_6
    MOVEF_F 70.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB84 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB84:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB85 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB85:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 370.0 VLV_DEG_7
    MOVEF_F 100.0 VLV_ACCELERATION_7
    MOVEF_F 100.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB86:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB87:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 280.0 VLV_DEG_6
    MOVEF_F 100.0 VLV_ACCELERATION_6
    MOVEF_F 100.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB88:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB89:
RETSUB_F_TAKE_CHEM_ON_LEFT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_0:
SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 170.0 VLV_DEG_6
    MOVEF_F 70.0 VLV_ACCELERATION_6
    MOVEF_F 70.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB90:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB91:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer92
	DATA8 nos92
	DATA8 busy92
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer92 nos92
	JR_EQ8 0 nos92 motornotbusy92
  motorwaiting92:
	OUTPUT_TEST layer92 nos92 busy92
	JR_EQ8 busy92 0 motornotbusy92
	SLEEP
	JR motorwaiting92
  motornotbusy92:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 160.0 VLV_DEG_7
    MOVEF_F 70.0 VLV_ACCELERATION_7
    MOVEF_F 70.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB93:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB94:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer95
	DATA8 nos95
	DATA8 busy95
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer95 nos95
	JR_EQ8 0 nos95 motornotbusy95
  motorwaiting95:
	OUTPUT_TEST layer95 nos95 busy95
	JR_EQ8 busy95 0 motornotbusy95
	SLEEP
	JR motorwaiting95
  motornotbusy95:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB96:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 160.0 VLV_DEG_8
    MOVEF_F 70.0 VLV_ACCELERATION_8
    MOVEF_F 70.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB97:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB98:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 170.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB99 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB99:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB100:
RETSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 170.0 VLV_DEG_6
    MOVEF_F 70.0 VLV_ACCELERATION_6
    MOVEF_F 70.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB101:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB102:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer103
	DATA8 nos103
	DATA8 busy103
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer103 nos103
	JR_EQ8 0 nos103 motornotbusy103
  motorwaiting103:
	OUTPUT_TEST layer103 nos103 busy103
	JR_EQ8 busy103 0 motornotbusy103
	SLEEP
	JR motorwaiting103
  motornotbusy103:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 160.0 VLV_DEG_7
    MOVEF_F 70.0 VLV_ACCELERATION_7
    MOVEF_F 70.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB104:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB105:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer106
	DATA8 nos106
	DATA8 busy106
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer106 nos106
	JR_EQ8 0 nos106 motornotbusy106
  motorwaiting106:
	OUTPUT_TEST layer106 nos106 busy106
	JR_EQ8 busy106 0 motornotbusy106
	SLEEP
	JR motorwaiting106
  motornotbusy106:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB107:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 160.0 VLV_DEG_8
    MOVEF_F 70.0 VLV_ACCELERATION_8
    MOVEF_F 70.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB108:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB109:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 170.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB110:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB111:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    CALL EQ_STRING VGV_UP_WATER 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else112_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else114_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 50.0 0.0 'True' 

	DATA8 layer116
	DATA8 nos116
	DATA8 busy116
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer116 nos116
	JR_EQ8 0 nos116 motornotbusy116
  motorwaiting116:
	OUTPUT_TEST layer116 nos116 busy116
	JR_EQ8 busy116 0 motornotbusy116
	SLEEP
	JR motorwaiting116
  motornotbusy116:
  else114_1:
  endif114:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 100.0 0.0 20.0 0.0 'True' 

	DATA8 layer117
	DATA8 nos117
	DATA8 busy117
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer117 nos117
	JR_EQ8 0 nos117 motornotbusy117
  motorwaiting117:
	OUTPUT_TEST layer117 nos117 busy117
	JR_EQ8 busy117 0 motornotbusy117
	SLEEP
	JR motorwaiting117
  motornotbusy117:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -100.0 0.0 50.0 0.0 'True' 

	DATA8 layer118
	DATA8 nos118
	DATA8 busy118
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer118 nos118
	JR_EQ8 0 nos118 motornotbusy118
  motorwaiting118:
	OUTPUT_TEST layer118 nos118 busy118
	JR_EQ8 busy118 0 motornotbusy118
	SLEEP
	JR motorwaiting118
  motornotbusy118:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else119_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 50.0 0.0 'True' 

	DATA8 layer121
	DATA8 nos121
	DATA8 busy121
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer121 nos121
	JR_EQ8 0 nos121 motornotbusy121
  motorwaiting121:
	OUTPUT_TEST layer121 nos121 busy121
	JR_EQ8 busy121 0 motornotbusy121
	SLEEP
	JR motorwaiting121
  motornotbusy121:
  else119_1:
  endif119:
    MOVEF_F 1.0 VGV_WATER_STATE
    STRINGS DUPLICATE 'False' VGV_UP_WATER
    JR endif112
  else112_1:
    CALL EQ_STRING VGV_1_WATER 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else112_2
    CALL MOTOR.RESETCOUNT VGV_WATER_MOTOR
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds125
	MOVEF_32 1000.0 milliseconds125
	DATA32 timer125
	TIMER_WAIT milliseconds125 timer125
	TIMER_READY timer125
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.GETCOUNT VGV_WATER_MOTOR F.1
    MATH ABS F.1 F.0
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -30.0 0.0 F.0 0.0 'True' 

	DATA8 layer129
	DATA8 nos129
	DATA8 busy129
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer129 nos129
	JR_EQ8 0 nos129 motornotbusy129
  motorwaiting129:
	OUTPUT_TEST layer129 nos129 busy129
	JR_EQ8 busy129 0 motornotbusy129
	SLEEP
	JR motorwaiting129
  motornotbusy129:
    MOVEF_F 2.0 VGV_WATER_STATE
    STRINGS DUPLICATE 'False' VGV_1_WATER
    JR endif112
  else112_2:
    CALL MOTOR.RESETCOUNT VGV_WATER_MOTOR
    CALL MOTOR.START VGV_WATER_MOTOR -30.0
    DATA32 milliseconds132
	MOVEF_32 1500.0 milliseconds132
	DATA32 timer132
	TIMER_WAIT milliseconds132 timer132
	TIMER_READY timer132
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.GETCOUNT VGV_WATER_MOTOR F.1
    MATH ABS F.1 F.0
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 30.0 0.0 F.0 0.0 'True' 

	DATA8 layer136
	DATA8 nos136
	DATA8 busy136
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer136 nos136
	JR_EQ8 0 nos136 motornotbusy136
  motorwaiting136:
	OUTPUT_TEST layer136 nos136 busy136
	JR_EQ8 busy136 0 motornotbusy136
	SLEEP
	JR motorwaiting136
  motornotbusy136:
    STRINGS DUPLICATE 'False' VGV_2_WATER
  else112_3:
  endif112:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_UPDATE_DISPLAY_0:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_OBJECT
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.1
    CALL TEXT.APPEND 'Red: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.1
    CALL TEXT.APPEND 'White: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 75.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_UPDATE_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UPDATE_DISPLAY_0:
SUB_F_RESET_VALUES_0:
    STRINGS DUPLICATE 'None' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
RETSUB_F_RESET_VALUES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_VALUES_0:
SUB_F_CLOSE_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -10.0 0.0 70.0 0.0 'True' 

	DATA8 layer147
	DATA8 nos147
	DATA8 busy147
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer147 nos147
	JR_EQ8 0 nos147 motornotbusy147
  motorwaiting147:
	OUTPUT_TEST layer147 nos147 busy147
	JR_EQ8 busy147 0 motornotbusy147
	SLEEP
	JR motorwaiting147
  motornotbusy147:
RETSUB_F_CLOSE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_0:
SUB_F_OPEN_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 10.0 0.0 70.0 0.0 'True' 

	DATA8 layer148
	DATA8 nos148
	DATA8 busy148
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer148 nos148
	JR_EQ8 0 nos148 motornotbusy148
  motorwaiting148:
	OUTPUT_TEST layer148 nos148 busy148
	JR_EQ8 busy148 0 motornotbusy148
	SLEEP
	JR motorwaiting148
  motornotbusy148:
RETSUB_F_OPEN_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_0:
SUB_F_TAKE_CUBES_0:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds150
	MOVEF_32 500.0 milliseconds150
	DATA32 timer150
	TIMER_WAIT milliseconds150 timer150
	TIMER_READY timer150
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer154
	DATA8 nos154
	DATA8 busy154
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer154 nos154
	JR_EQ8 0 nos154 motornotbusy154
  motorwaiting154:
	OUTPUT_TEST layer154 nos154 busy154
	JR_EQ8 busy154 0 motornotbusy154
	SLEEP
	JR motorwaiting154
  motornotbusy154:
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR -20.0 0.0 360.0 0.0 'True' 

	DATA8 layer155
	DATA8 nos155
	DATA8 busy155
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer155 nos155
	JR_EQ8 0 nos155 motornotbusy155
  motorwaiting155:
	OUTPUT_TEST layer155 nos155 busy155
	JR_EQ8 busy155 0 motornotbusy155
	SLEEP
	JR motorwaiting155
  motornotbusy155:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds159
	MOVEF_32 700.0 milliseconds159
	DATA32 timer159
	TIMER_WAIT milliseconds159 timer159
	TIMER_READY timer159
    WRITE32 ENDSUB_F_STOP_0:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB160:
    MOVEF_F 229.0 VLV_U_3
    MOVEF_F 50.0 VLV_BASE_POWER_3
    MOVEF_F 20.0 VLV_MIN_POWER_3
    MOVEF_F 930.0 VLV_DEGREES_3
    MOVEF_F 200.0 VLV_ZAMED_DEGREES_3
    WRITE32 ENDSUB_F_ULTRASONIC_ZAMED_5:CALLSUB161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_ZAMED_5
CALLSUB161:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer162
	DATA8 nos162
	DATA8 busy162
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer162 nos162
	JR_EQ8 0 nos162 motornotbusy162
  motorwaiting162:
	OUTPUT_TEST layer162 nos162 busy162
	JR_EQ8 busy162 0 motornotbusy162
	SLEEP
	JR motorwaiting162
  motornotbusy162:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB163:
RETSUB_F_TAKE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_0:
SUB_F_TAKE_CUBES_INVERSED_0:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds165
	MOVEF_32 500.0 milliseconds165
	DATA32 timer165
	TIMER_WAIT milliseconds165 timer165
	TIMER_READY timer165
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer169
	DATA8 nos169
	DATA8 busy169
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer169 nos169
	JR_EQ8 0 nos169 motornotbusy169
  motorwaiting169:
	OUTPUT_TEST layer169 nos169 busy169
	JR_EQ8 busy169 0 motornotbusy169
	SLEEP
	JR motorwaiting169
  motornotbusy169:
    MULF -100.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds172
	MOVEF_32 3000.0 milliseconds172
	DATA32 timer172
	TIMER_WAIT milliseconds172 timer172
	TIMER_READY timer172
    WRITE32 ENDSUB_F_STOP_0:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB173:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds177
	MOVEF_32 1000.0 milliseconds177
	DATA32 timer177
	TIMER_WAIT milliseconds177 timer177
	TIMER_READY timer177
    WRITE32 ENDSUB_F_STOP_0:CALLSUB178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB178:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 20.0 VLV_MIN_POWER_5
    MOVEF_F 930.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 200.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB180:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB181:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer182
	DATA8 nos182
	DATA8 busy182
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer182 nos182
	JR_EQ8 0 nos182 motornotbusy182
  motorwaiting182:
	OUTPUT_TEST layer182 nos182 busy182
	JR_EQ8 busy182 0 motornotbusy182
	SLEEP
	JR motorwaiting182
  motornotbusy182:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB183:
RETSUB_F_TAKE_CUBES_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_INVERSED_0:
SUB_F_TAKE_LONG_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer185
	DATA8 nos185
	DATA8 busy185
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer185 nos185
	JR_EQ8 0 nos185 motornotbusy185
  motorwaiting185:
	OUTPUT_TEST layer185 nos185 busy185
	JR_EQ8 busy185 0 motornotbusy185
	SLEEP
	JR motorwaiting185
  motornotbusy185:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds189
	MOVEF_32 1000.0 milliseconds189
	DATA32 timer189
	TIMER_WAIT milliseconds189 timer189
	TIMER_READY timer189
    WRITE32 ENDSUB_F_STOP_0:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB190:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB191:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer194
	DATA8 nos194
	DATA8 busy194
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer194 nos194
	JR_EQ8 0 nos194 motornotbusy194
  motorwaiting194:
	OUTPUT_TEST layer194 nos194 busy194
	JR_EQ8 busy194 0 motornotbusy194
	SLEEP
	JR motorwaiting194
  motornotbusy194:
    JR_NEQF VGV_CUBES_COUNT 2.0 else195_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB196:
  else195_1:
  endif195:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer199
	DATA8 nos199
	DATA8 busy199
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer199 nos199
	JR_EQ8 0 nos199 motornotbusy199
  motorwaiting199:
	OUTPUT_TEST layer199 nos199 busy199
	JR_EQ8 busy199 0 motornotbusy199
	SLEEP
	JR motorwaiting199
  motornotbusy199:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer201
	DATA8 nos201
	DATA8 busy201
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer201 nos201
	JR_EQ8 0 nos201 motornotbusy201
  motorwaiting201:
	OUTPUT_TEST layer201 nos201 busy201
	JR_EQ8 busy201 0 motornotbusy201
	SLEEP
	JR motorwaiting201
  motornotbusy201:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_0:
SUB_F_TAKE_LONG_INVERSED_0:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer203
	DATA8 nos203
	DATA8 busy203
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer203 nos203
	JR_EQ8 0 nos203 motornotbusy203
  motorwaiting203:
	OUTPUT_TEST layer203 nos203 busy203
	JR_EQ8 busy203 0 motornotbusy203
	SLEEP
	JR motorwaiting203
  motornotbusy203:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds207
	MOVEF_32 1000.0 milliseconds207
	DATA32 timer207
	TIMER_WAIT milliseconds207 timer207
	TIMER_READY timer207
    WRITE32 ENDSUB_F_STOP_0:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB208:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB209:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer212
	DATA8 nos212
	DATA8 busy212
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer212 nos212
	JR_EQ8 0 nos212 motornotbusy212
  motorwaiting212:
	OUTPUT_TEST layer212 nos212 busy212
	JR_EQ8 busy212 0 motornotbusy212
	SLEEP
	JR motorwaiting212
  motornotbusy212:
    JR_NEQF VGV_CUBES_COUNT 2.0 else213_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB214:
  else213_1:
  endif213:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 95.0 'True'

	DATA8 layer217
	DATA8 nos217
	DATA8 busy217
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer217 nos217
	JR_EQ8 0 nos217 motornotbusy217
  motorwaiting217:
	OUTPUT_TEST layer217 nos217 busy217
	JR_EQ8 busy217 0 motornotbusy217
	SLEEP
	JR motorwaiting217
  motornotbusy217:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 365.0 0.0 'True' 

	DATA8 layer219
	DATA8 nos219
	DATA8 busy219
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer219 nos219
	JR_EQ8 0 nos219 motornotbusy219
  motorwaiting219:
	OUTPUT_TEST layer219 nos219 busy219
	JR_EQ8 busy219 0 motornotbusy219
	SLEEP
	JR motorwaiting219
  motornotbusy219:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_INVERSED_0:
SUB_F_TAKE_NEAR_0:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer221
	DATA8 nos221
	DATA8 busy221
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer221 nos221
	JR_EQ8 0 nos221 motornotbusy221
  motorwaiting221:
	OUTPUT_TEST layer221 nos221 busy221
	JR_EQ8 busy221 0 motornotbusy221
	SLEEP
	JR motorwaiting221
  motornotbusy221:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer223
	DATA8 nos223
	DATA8 busy223
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer223 nos223
	JR_EQ8 0 nos223 motornotbusy223
  motorwaiting223:
	OUTPUT_TEST layer223 nos223 busy223
	JR_EQ8 busy223 0 motornotbusy223
	SLEEP
	JR motorwaiting223
  motornotbusy223:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB224:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    MULF 20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer227
	DATA8 nos227
	DATA8 busy227
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer227 nos227
	JR_EQ8 0 nos227 motornotbusy227
  motorwaiting227:
	OUTPUT_TEST layer227 nos227 busy227
	JR_EQ8 busy227 0 motornotbusy227
	SLEEP
	JR motorwaiting227
  motornotbusy227:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB228:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer231
	DATA8 nos231
	DATA8 busy231
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer231 nos231
	JR_EQ8 0 nos231 motornotbusy231
  motorwaiting231:
	OUTPUT_TEST layer231 nos231 busy231
	JR_EQ8 busy231 0 motornotbusy231
	SLEEP
	JR motorwaiting231
  motornotbusy231:
    JR_NEQF VGV_CUBES_COUNT 2.0 else232_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB233:
  else232_1:
  endif232:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer236
	DATA8 nos236
	DATA8 busy236
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer236 nos236
	JR_EQ8 0 nos236 motornotbusy236
  motorwaiting236:
	OUTPUT_TEST layer236 nos236 busy236
	JR_EQ8 busy236 0 motornotbusy236
	SLEEP
	JR motorwaiting236
  motornotbusy236:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer238
	DATA8 nos238
	DATA8 busy238
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer238 nos238
	JR_EQ8 0 nos238 motornotbusy238
  motorwaiting238:
	OUTPUT_TEST layer238 nos238 busy238
	JR_EQ8 busy238 0 motornotbusy238
	SLEEP
	JR motorwaiting238
  motornotbusy238:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer240
	DATA8 nos240
	DATA8 busy240
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer240 nos240
	JR_EQ8 0 nos240 motornotbusy240
  motorwaiting240:
	OUTPUT_TEST layer240 nos240 busy240
	JR_EQ8 busy240 0 motornotbusy240
	SLEEP
	JR motorwaiting240
  motornotbusy240:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB241:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer244
	DATA8 nos244
	DATA8 busy244
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer244 nos244
	JR_EQ8 0 nos244 motornotbusy244
  motorwaiting244:
	OUTPUT_TEST layer244 nos244 busy244
	JR_EQ8 busy244 0 motornotbusy244
	SLEEP
	JR motorwaiting244
  motornotbusy244:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_0:
SUB_F_TAKE_NEAR_INVERSED_0:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer246
	DATA8 nos246
	DATA8 busy246
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer246 nos246
	JR_EQ8 0 nos246 motornotbusy246
  motorwaiting246:
	OUTPUT_TEST layer246 nos246 busy246
	JR_EQ8 busy246 0 motornotbusy246
	SLEEP
	JR motorwaiting246
  motornotbusy246:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer248
	DATA8 nos248
	DATA8 busy248
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer248 nos248
	JR_EQ8 0 nos248 motornotbusy248
  motorwaiting248:
	OUTPUT_TEST layer248 nos248 busy248
	JR_EQ8 busy248 0 motornotbusy248
	SLEEP
	JR motorwaiting248
  motornotbusy248:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB249:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    MULF 20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer252
	DATA8 nos252
	DATA8 busy252
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer252 nos252
	JR_EQ8 0 nos252 motornotbusy252
  motorwaiting252:
	OUTPUT_TEST layer252 nos252 busy252
	JR_EQ8 busy252 0 motornotbusy252
	SLEEP
	JR motorwaiting252
  motornotbusy252:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB253:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer256
	DATA8 nos256
	DATA8 busy256
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer256 nos256
	JR_EQ8 0 nos256 motornotbusy256
  motorwaiting256:
	OUTPUT_TEST layer256 nos256 busy256
	JR_EQ8 busy256 0 motornotbusy256
	SLEEP
	JR motorwaiting256
  motornotbusy256:
    JR_NEQF VGV_CUBES_COUNT 2.0 else257_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB258:
  else257_1:
  endif257:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer261
	DATA8 nos261
	DATA8 busy261
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer261 nos261
	JR_EQ8 0 nos261 motornotbusy261
  motorwaiting261:
	OUTPUT_TEST layer261 nos261 busy261
	JR_EQ8 busy261 0 motornotbusy261
	SLEEP
	JR motorwaiting261
  motornotbusy261:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer263
	DATA8 nos263
	DATA8 busy263
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer263 nos263
	JR_EQ8 0 nos263 motornotbusy263
  motorwaiting263:
	OUTPUT_TEST layer263 nos263 busy263
	JR_EQ8 busy263 0 motornotbusy263
	SLEEP
	JR motorwaiting263
  motornotbusy263:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer265
	DATA8 nos265
	DATA8 busy265
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer265 nos265
	JR_EQ8 0 nos265 motornotbusy265
  motorwaiting265:
	OUTPUT_TEST layer265 nos265 busy265
	JR_EQ8 busy265 0 motornotbusy265
	SLEEP
	JR motorwaiting265
  motornotbusy265:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB266:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer269
	DATA8 nos269
	DATA8 busy269
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer269 nos269
	JR_EQ8 0 nos269 motornotbusy269
  motorwaiting269:
	OUTPUT_TEST layer269 nos269 busy269
	JR_EQ8 busy269 0 motornotbusy269
	SLEEP
	JR motorwaiting269
  motornotbusy269:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_INVERSED_0:
SUB_F_TAKE_BOTH_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer271
	DATA8 nos271
	DATA8 busy271
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer271 nos271
	JR_EQ8 0 nos271 motornotbusy271
  motorwaiting271:
	OUTPUT_TEST layer271 nos271 busy271
	JR_EQ8 busy271 0 motornotbusy271
	SLEEP
	JR motorwaiting271
  motornotbusy271:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer274
	DATA8 nos274
	DATA8 busy274
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer274 nos274
	JR_EQ8 0 nos274 motornotbusy274
  motorwaiting274:
	OUTPUT_TEST layer274 nos274 busy274
	JR_EQ8 busy274 0 motornotbusy274
	SLEEP
	JR motorwaiting274
  motornotbusy274:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB275:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer278
	DATA8 nos278
	DATA8 busy278
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer278 nos278
	JR_EQ8 0 nos278 motornotbusy278
  motorwaiting278:
	OUTPUT_TEST layer278 nos278 busy278
	JR_EQ8 busy278 0 motornotbusy278
	SLEEP
	JR motorwaiting278
  motornotbusy278:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB279:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer282
	DATA8 nos282
	DATA8 busy282
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer282 nos282
	JR_EQ8 0 nos282 motornotbusy282
  motorwaiting282:
	OUTPUT_TEST layer282 nos282 busy282
	JR_EQ8 busy282 0 motornotbusy282
	SLEEP
	JR motorwaiting282
  motornotbusy282:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer284
	DATA8 nos284
	DATA8 busy284
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer284 nos284
	JR_EQ8 0 nos284 motornotbusy284
  motorwaiting284:
	OUTPUT_TEST layer284 nos284 busy284
	JR_EQ8 busy284 0 motornotbusy284
	SLEEP
	JR motorwaiting284
  motornotbusy284:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer287
	DATA8 nos287
	DATA8 busy287
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer287 nos287
	JR_EQ8 0 nos287 motornotbusy287
  motorwaiting287:
	OUTPUT_TEST layer287 nos287 busy287
	JR_EQ8 busy287 0 motornotbusy287
	SLEEP
	JR motorwaiting287
  motornotbusy287:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB288:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer291
	DATA8 nos291
	DATA8 busy291
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer291 nos291
	JR_EQ8 0 nos291 motornotbusy291
  motorwaiting291:
	OUTPUT_TEST layer291 nos291 busy291
	JR_EQ8 busy291 0 motornotbusy291
	SLEEP
	JR motorwaiting291
  motornotbusy291:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer293
	DATA8 nos293
	DATA8 busy293
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer293 nos293
	JR_EQ8 0 nos293 motornotbusy293
  motorwaiting293:
	OUTPUT_TEST layer293 nos293 busy293
	JR_EQ8 busy293 0 motornotbusy293
	SLEEP
	JR motorwaiting293
  motornotbusy293:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer295
	DATA8 nos295
	DATA8 busy295
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer295 nos295
	JR_EQ8 0 nos295 motornotbusy295
  motorwaiting295:
	OUTPUT_TEST layer295 nos295 busy295
	JR_EQ8 busy295 0 motornotbusy295
	SLEEP
	JR motorwaiting295
  motornotbusy295:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer298
	DATA8 nos298
	DATA8 busy298
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer298 nos298
	JR_EQ8 0 nos298 motornotbusy298
  motorwaiting298:
	OUTPUT_TEST layer298 nos298 busy298
	JR_EQ8 busy298 0 motornotbusy298
	SLEEP
	JR motorwaiting298
  motornotbusy298:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_0:
SUB_F_TAKE_BOTH_INVERSED_0:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer300
	DATA8 nos300
	DATA8 busy300
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer300 nos300
	JR_EQ8 0 nos300 motornotbusy300
  motorwaiting300:
	OUTPUT_TEST layer300 nos300 busy300
	JR_EQ8 busy300 0 motornotbusy300
	SLEEP
	JR motorwaiting300
  motornotbusy300:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer303
	DATA8 nos303
	DATA8 busy303
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer303 nos303
	JR_EQ8 0 nos303 motornotbusy303
  motorwaiting303:
	OUTPUT_TEST layer303 nos303 busy303
	JR_EQ8 busy303 0 motornotbusy303
	SLEEP
	JR motorwaiting303
  motornotbusy303:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB304:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer307
	DATA8 nos307
	DATA8 busy307
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer307 nos307
	JR_EQ8 0 nos307 motornotbusy307
  motorwaiting307:
	OUTPUT_TEST layer307 nos307 busy307
	JR_EQ8 busy307 0 motornotbusy307
	SLEEP
	JR motorwaiting307
  motornotbusy307:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB308:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer311
	DATA8 nos311
	DATA8 busy311
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer311 nos311
	JR_EQ8 0 nos311 motornotbusy311
  motorwaiting311:
	OUTPUT_TEST layer311 nos311 busy311
	JR_EQ8 busy311 0 motornotbusy311
	SLEEP
	JR motorwaiting311
  motornotbusy311:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer313
	DATA8 nos313
	DATA8 busy313
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer313 nos313
	JR_EQ8 0 nos313 motornotbusy313
  motorwaiting313:
	OUTPUT_TEST layer313 nos313 busy313
	JR_EQ8 busy313 0 motornotbusy313
	SLEEP
	JR motorwaiting313
  motornotbusy313:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer316
	DATA8 nos316
	DATA8 busy316
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer316 nos316
	JR_EQ8 0 nos316 motornotbusy316
  motorwaiting316:
	OUTPUT_TEST layer316 nos316 busy316
	JR_EQ8 busy316 0 motornotbusy316
	SLEEP
	JR motorwaiting316
  motornotbusy316:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB317:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer320
	DATA8 nos320
	DATA8 busy320
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer320 nos320
	JR_EQ8 0 nos320 motornotbusy320
  motorwaiting320:
	OUTPUT_TEST layer320 nos320 busy320
	JR_EQ8 busy320 0 motornotbusy320
	SLEEP
	JR motorwaiting320
  motornotbusy320:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer322
	DATA8 nos322
	DATA8 busy322
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer322 nos322
	JR_EQ8 0 nos322 motornotbusy322
  motorwaiting322:
	OUTPUT_TEST layer322 nos322 busy322
	JR_EQ8 busy322 0 motornotbusy322
	SLEEP
	JR motorwaiting322
  motornotbusy322:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer324
	DATA8 nos324
	DATA8 busy324
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer324 nos324
	JR_EQ8 0 nos324 motornotbusy324
  motorwaiting324:
	OUTPUT_TEST layer324 nos324 busy324
	JR_EQ8 busy324 0 motornotbusy324
	SLEEP
	JR motorwaiting324
  motornotbusy324:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer327
	DATA8 nos327
	DATA8 busy327
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer327 nos327
	JR_EQ8 0 nos327 motornotbusy327
  motorwaiting327:
	OUTPUT_TEST layer327 nos327 busy327
	JR_EQ8 busy327 0 motornotbusy327
	SLEEP
	JR motorwaiting327
  motornotbusy327:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_INVERSED_0:
SUB_F_TAKE_NEAR_DOUBLE_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer329
	DATA8 nos329
	DATA8 busy329
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer329 nos329
	JR_EQ8 0 nos329 motornotbusy329
  motorwaiting329:
	OUTPUT_TEST layer329 nos329 busy329
	JR_EQ8 busy329 0 motornotbusy329
	SLEEP
	JR motorwaiting329
  motornotbusy329:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer331
	DATA8 nos331
	DATA8 busy331
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer331 nos331
	JR_EQ8 0 nos331 motornotbusy331
  motorwaiting331:
	OUTPUT_TEST layer331 nos331 busy331
	JR_EQ8 busy331 0 motornotbusy331
	SLEEP
	JR motorwaiting331
  motornotbusy331:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer334
	DATA8 nos334
	DATA8 busy334
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer334 nos334
	JR_EQ8 0 nos334 motornotbusy334
  motorwaiting334:
	OUTPUT_TEST layer334 nos334 busy334
	JR_EQ8 busy334 0 motornotbusy334
	SLEEP
	JR motorwaiting334
  motornotbusy334:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB335:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer338
	DATA8 nos338
	DATA8 busy338
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer338 nos338
	JR_EQ8 0 nos338 motornotbusy338
  motorwaiting338:
	OUTPUT_TEST layer338 nos338 busy338
	JR_EQ8 busy338 0 motornotbusy338
	SLEEP
	JR motorwaiting338
  motornotbusy338:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB339:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer342
	DATA8 nos342
	DATA8 busy342
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer342 nos342
	JR_EQ8 0 nos342 motornotbusy342
  motorwaiting342:
	OUTPUT_TEST layer342 nos342 busy342
	JR_EQ8 busy342 0 motornotbusy342
	SLEEP
	JR motorwaiting342
  motornotbusy342:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB343:
RETSUB_F_TAKE_NEAR_DOUBLE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_0:
SUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer345
	DATA8 nos345
	DATA8 busy345
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer345 nos345
	JR_EQ8 0 nos345 motornotbusy345
  motorwaiting345:
	OUTPUT_TEST layer345 nos345 busy345
	JR_EQ8 busy345 0 motornotbusy345
	SLEEP
	JR motorwaiting345
  motornotbusy345:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer347
	DATA8 nos347
	DATA8 busy347
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer347 nos347
	JR_EQ8 0 nos347 motornotbusy347
  motorwaiting347:
	OUTPUT_TEST layer347 nos347 busy347
	JR_EQ8 busy347 0 motornotbusy347
	SLEEP
	JR motorwaiting347
  motornotbusy347:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer350
	DATA8 nos350
	DATA8 busy350
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer350 nos350
	JR_EQ8 0 nos350 motornotbusy350
  motorwaiting350:
	OUTPUT_TEST layer350 nos350 busy350
	JR_EQ8 busy350 0 motornotbusy350
	SLEEP
	JR motorwaiting350
  motornotbusy350:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB351:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer354
	DATA8 nos354
	DATA8 busy354
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer354 nos354
	JR_EQ8 0 nos354 motornotbusy354
  motorwaiting354:
	OUTPUT_TEST layer354 nos354 busy354
	JR_EQ8 busy354 0 motornotbusy354
	SLEEP
	JR motorwaiting354
  motornotbusy354:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB355:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer358
	DATA8 nos358
	DATA8 busy358
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer358 nos358
	JR_EQ8 0 nos358 motornotbusy358
  motorwaiting358:
	OUTPUT_TEST layer358 nos358 busy358
	JR_EQ8 busy358 0 motornotbusy358
	SLEEP
	JR motorwaiting358
  motornotbusy358:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB359:
RETSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer361
	DATA8 nos361
	DATA8 busy361
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer361 nos361
	JR_EQ8 0 nos361 motornotbusy361
  motorwaiting361:
	OUTPUT_TEST layer361 nos361 busy361
	JR_EQ8 busy361 0 motornotbusy361
	SLEEP
	JR motorwaiting361
  motornotbusy361:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer363
	DATA8 nos363
	DATA8 busy363
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer363 nos363
	JR_EQ8 0 nos363 motornotbusy363
  motorwaiting363:
	OUTPUT_TEST layer363 nos363 busy363
	JR_EQ8 busy363 0 motornotbusy363
	SLEEP
	JR motorwaiting363
  motornotbusy363:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer366
	DATA8 nos366
	DATA8 busy366
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer366 nos366
	JR_EQ8 0 nos366 motornotbusy366
  motorwaiting366:
	OUTPUT_TEST layer366 nos366 busy366
	JR_EQ8 busy366 0 motornotbusy366
	SLEEP
	JR motorwaiting366
  motornotbusy366:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB367:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer370
	DATA8 nos370
	DATA8 busy370
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer370 nos370
	JR_EQ8 0 nos370 motornotbusy370
  motorwaiting370:
	OUTPUT_TEST layer370 nos370 busy370
	JR_EQ8 busy370 0 motornotbusy370
	SLEEP
	JR motorwaiting370
  motornotbusy370:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB371:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer374
	DATA8 nos374
	DATA8 busy374
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer374 nos374
	JR_EQ8 0 nos374 motornotbusy374
  motorwaiting374:
	OUTPUT_TEST layer374 nos374 busy374
	JR_EQ8 busy374 0 motornotbusy374
	SLEEP
	JR motorwaiting374
  motornotbusy374:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB375:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer377
	DATA8 nos377
	DATA8 busy377
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer377 nos377
	JR_EQ8 0 nos377 motornotbusy377
  motorwaiting377:
	OUTPUT_TEST layer377 nos377 busy377
	JR_EQ8 busy377 0 motornotbusy377
	SLEEP
	JR motorwaiting377
  motornotbusy377:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer379
	DATA8 nos379
	DATA8 busy379
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer379 nos379
	JR_EQ8 0 nos379 motornotbusy379
  motorwaiting379:
	OUTPUT_TEST layer379 nos379 busy379
	JR_EQ8 busy379 0 motornotbusy379
	SLEEP
	JR motorwaiting379
  motornotbusy379:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer382
	DATA8 nos382
	DATA8 busy382
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer382 nos382
	JR_EQ8 0 nos382 motornotbusy382
  motorwaiting382:
	OUTPUT_TEST layer382 nos382 busy382
	JR_EQ8 busy382 0 motornotbusy382
	SLEEP
	JR motorwaiting382
  motornotbusy382:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB383:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer386
	DATA8 nos386
	DATA8 busy386
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer386 nos386
	JR_EQ8 0 nos386 motornotbusy386
  motorwaiting386:
	OUTPUT_TEST layer386 nos386 busy386
	JR_EQ8 busy386 0 motornotbusy386
	SLEEP
	JR motorwaiting386
  motornotbusy386:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB387:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer390
	DATA8 nos390
	DATA8 busy390
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer390 nos390
	JR_EQ8 0 nos390 motornotbusy390
  motorwaiting390:
	OUTPUT_TEST layer390 nos390 busy390
	JR_EQ8 busy390 0 motornotbusy390
	SLEEP
	JR motorwaiting390
  motornotbusy390:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB391:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
SUB_F_FINISH_AFTER_NEAR_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds395
	MOVEF_32 1500.0 milliseconds395
	DATA32 timer395
	TIMER_WAIT milliseconds395 timer395
	TIMER_READY timer395
    WRITE32 ENDSUB_F_STOP_0:CALLSUB396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB396:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer398
	DATA8 nos398
	DATA8 busy398
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer398 nos398
	JR_EQ8 0 nos398 motornotbusy398
  motorwaiting398:
	OUTPUT_TEST layer398 nos398 busy398
	JR_EQ8 busy398 0 motornotbusy398
	SLEEP
	JR motorwaiting398
  motornotbusy398:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer400
	DATA8 nos400
	DATA8 busy400
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer400 nos400
	JR_EQ8 0 nos400 motornotbusy400
  motorwaiting400:
	OUTPUT_TEST layer400 nos400 busy400
	JR_EQ8 busy400 0 motornotbusy400
	SLEEP
	JR motorwaiting400
  motornotbusy400:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds404
	MOVEF_32 1500.0 milliseconds404
	DATA32 timer404
	TIMER_WAIT milliseconds404 timer404
	TIMER_READY timer404
    WRITE32 ENDSUB_F_STOP_0:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB405:
RETSUB_F_FINISH_AFTER_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_0:
SUB_F_FINISH_AFTER_NEAR_INVERSED_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds409
	MOVEF_32 1500.0 milliseconds409
	DATA32 timer409
	TIMER_WAIT milliseconds409 timer409
	TIMER_READY timer409
    WRITE32 ENDSUB_F_STOP_0:CALLSUB410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB410:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer412
	DATA8 nos412
	DATA8 busy412
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer412 nos412
	JR_EQ8 0 nos412 motornotbusy412
  motorwaiting412:
	OUTPUT_TEST layer412 nos412 busy412
	JR_EQ8 busy412 0 motornotbusy412
	SLEEP
	JR motorwaiting412
  motornotbusy412:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer414
	DATA8 nos414
	DATA8 busy414
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer414 nos414
	JR_EQ8 0 nos414 motornotbusy414
  motorwaiting414:
	OUTPUT_TEST layer414 nos414 busy414
	JR_EQ8 busy414 0 motornotbusy414
	SLEEP
	JR motorwaiting414
  motornotbusy414:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds418
	MOVEF_32 3000.0 milliseconds418
	DATA32 timer418
	TIMER_WAIT milliseconds418 timer418
	TIMER_READY timer418
    WRITE32 ENDSUB_F_STOP_0:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB419:
RETSUB_F_FINISH_AFTER_NEAR_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:
SUB_F_TAKES_INVERSED_0:
    WRITE32 ENDSUB_F_TAKE_CUBES_INVERSED_0:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_INVERSED_0
CALLSUB420:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer423
	DATA8 nos423
	DATA8 busy423
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer423 nos423
	JR_EQ8 0 nos423 motornotbusy423
  motorwaiting423:
	OUTPUT_TEST layer423 nos423 busy423
	JR_EQ8 busy423 0 motornotbusy423
	SLEEP
	JR motorwaiting423
  motornotbusy423:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else424_1
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else424_1
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_INVERSED_0
CALLSUB427:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB428:
    JR endif424
  else424_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else424_2
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else424_2
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer433
	DATA8 nos433
	DATA8 busy433
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer433 nos433
	JR_EQ8 0 nos433 motornotbusy433
  motorwaiting433:
	OUTPUT_TEST layer433 nos433 busy433
	JR_EQ8 busy433 0 motornotbusy433
	SLEEP
	JR motorwaiting433
  motornotbusy433:
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_INVERSED_0
CALLSUB434:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB435:
    JR endif424
  else424_2:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else424_3
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else424_3
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:CALLSUB438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0
CALLSUB438:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB439:
    JR endif424
  else424_3:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else440_1
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else440_1
    WRITE32 ENDSUB_F_TAKE_BOTH_INVERSED_0:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_INVERSED_0
CALLSUB443:
    JR endif440
  else440_1:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else440_2
    WRITE32 ENDSUB_F_TAKE_NEAR_INVERSED_0:CALLSUB445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_INVERSED_0
CALLSUB445:
    JR endif440
  else440_2:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else440_3
    WRITE32 ENDSUB_F_TAKE_LONG_INVERSED_0:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_INVERSED_0
CALLSUB447:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer450
	DATA8 nos450
	DATA8 busy450
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer450 nos450
	JR_EQ8 0 nos450 motornotbusy450
  motorwaiting450:
	OUTPUT_TEST layer450 nos450 busy450
	JR_EQ8 busy450 0 motornotbusy450
	SLEEP
	JR motorwaiting450
  motornotbusy450:
    JR endif440
  else440_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer453
	DATA8 nos453
	DATA8 busy453
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer453 nos453
	JR_EQ8 0 nos453 motornotbusy453
  motorwaiting453:
	OUTPUT_TEST layer453 nos453 busy453
	JR_EQ8 busy453 0 motornotbusy453
	SLEEP
	JR motorwaiting453
  motornotbusy453:
  else440_4:
  endif440:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else454_1
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else454_1
    WRITE32 ENDSUB_F_TAKE_BOTH_INVERSED_0:CALLSUB457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_INVERSED_0
CALLSUB457:
    JR endif454
  else454_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else454_2
    WRITE32 ENDSUB_F_TAKE_NEAR_INVERSED_0:CALLSUB459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_INVERSED_0
CALLSUB459:
    JR endif454
  else454_2:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else454_3
    WRITE32 ENDSUB_F_TAKE_LONG_INVERSED_0:CALLSUB461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_INVERSED_0
CALLSUB461:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer464
	DATA8 nos464
	DATA8 busy464
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer464 nos464
	JR_EQ8 0 nos464 motornotbusy464
  motorwaiting464:
	OUTPUT_TEST layer464 nos464 busy464
	JR_EQ8 busy464 0 motornotbusy464
	SLEEP
	JR motorwaiting464
  motornotbusy464:
    JR endif454
  else454_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer467
	DATA8 nos467
	DATA8 busy467
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer467 nos467
	JR_EQ8 0 nos467 motornotbusy467
  motorwaiting467:
	OUTPUT_TEST layer467 nos467 busy467
	JR_EQ8 busy467 0 motornotbusy467
	SLEEP
	JR motorwaiting467
  motornotbusy467:
  else454_4:
  endif454:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else468_1
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else468_1
    WRITE32 ENDSUB_F_TAKE_BOTH_INVERSED_0:CALLSUB471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_INVERSED_0
CALLSUB471:
    JR endif468
  else468_1:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else468_2
    WRITE32 ENDSUB_F_TAKE_NEAR_INVERSED_0:CALLSUB473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_INVERSED_0
CALLSUB473:
    JR endif468
  else468_2:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else468_3
    WRITE32 ENDSUB_F_TAKE_LONG_INVERSED_0:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_INVERSED_0
CALLSUB475:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer478
	DATA8 nos478
	DATA8 busy478
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer478 nos478
	JR_EQ8 0 nos478 motornotbusy478
  motorwaiting478:
	OUTPUT_TEST layer478 nos478 busy478
	JR_EQ8 busy478 0 motornotbusy478
	SLEEP
	JR motorwaiting478
  motornotbusy478:
    JR endif468
  else468_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer481
	DATA8 nos481
	DATA8 busy481
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer481 nos481
	JR_EQ8 0 nos481 motornotbusy481
  motorwaiting481:
	OUTPUT_TEST layer481 nos481 busy481
	JR_EQ8 busy481 0 motornotbusy481
	SLEEP
	JR motorwaiting481
  motornotbusy481:
  else468_4:
  endif468:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB482:
  else424_4:
  endif424:
RETSUB_F_TAKES_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKES_INVERSED_0:
SUB_F_TAKES_NORMAL_0:
    WRITE32 ENDSUB_F_TAKE_CUBES_0:CALLSUB483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_0
CALLSUB483:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer486
	DATA8 nos486
	DATA8 busy486
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer486 nos486
	JR_EQ8 0 nos486 motornotbusy486
  motorwaiting486:
	OUTPUT_TEST layer486 nos486 busy486
	JR_EQ8 busy486 0 motornotbusy486
	SLEEP
	JR motorwaiting486
  motornotbusy486:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_1
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_1
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB490:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB491:
    JR endif487
  else487_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_2
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_2
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer496
	DATA8 nos496
	DATA8 busy496
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer496 nos496
	JR_EQ8 0 nos496 motornotbusy496
  motorwaiting496:
	OUTPUT_TEST layer496 nos496 busy496
	JR_EQ8 busy496 0 motornotbusy496
	SLEEP
	JR motorwaiting496
  motornotbusy496:
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB497:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB498:
    JR endif487
  else487_2:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_3
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_3
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:CALLSUB501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_LONG_0
CALLSUB501:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB502:
    JR endif487
  else487_3:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else503_1
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else503_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB506:
    JR endif503
  else503_1:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else503_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB508:
    JR endif503
  else503_2:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else503_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB510:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer513
	DATA8 nos513
	DATA8 busy513
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer513 nos513
	JR_EQ8 0 nos513 motornotbusy513
  motorwaiting513:
	OUTPUT_TEST layer513 nos513 busy513
	JR_EQ8 busy513 0 motornotbusy513
	SLEEP
	JR motorwaiting513
  motornotbusy513:
    JR endif503
  else503_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer516
	DATA8 nos516
	DATA8 busy516
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer516 nos516
	JR_EQ8 0 nos516 motornotbusy516
  motorwaiting516:
	OUTPUT_TEST layer516 nos516 busy516
	JR_EQ8 busy516 0 motornotbusy516
	SLEEP
	JR motorwaiting516
  motornotbusy516:
  else503_4:
  endif503:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else517_1
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else517_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB520:
    JR endif517
  else517_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else517_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB522:
    JR endif517
  else517_2:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else517_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB524:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer527
	DATA8 nos527
	DATA8 busy527
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer527 nos527
	JR_EQ8 0 nos527 motornotbusy527
  motorwaiting527:
	OUTPUT_TEST layer527 nos527 busy527
	JR_EQ8 busy527 0 motornotbusy527
	SLEEP
	JR motorwaiting527
  motornotbusy527:
    JR endif517
  else517_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer530
	DATA8 nos530
	DATA8 busy530
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer530 nos530
	JR_EQ8 0 nos530 motornotbusy530
  motorwaiting530:
	OUTPUT_TEST layer530 nos530 busy530
	JR_EQ8 busy530 0 motornotbusy530
	SLEEP
	JR motorwaiting530
  motornotbusy530:
  else517_4:
  endif517:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else531_1
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else531_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB534:
    JR endif531
  else531_1:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else531_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB536:
    JR endif531
  else531_2:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else531_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB538:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer541
	DATA8 nos541
	DATA8 busy541
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer541 nos541
	JR_EQ8 0 nos541 motornotbusy541
  motorwaiting541:
	OUTPUT_TEST layer541 nos541 busy541
	JR_EQ8 busy541 0 motornotbusy541
	SLEEP
	JR motorwaiting541
  motornotbusy541:
    JR endif531
  else531_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer544
	DATA8 nos544
	DATA8 busy544
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer544 nos544
	JR_EQ8 0 nos544 motornotbusy544
  motorwaiting544:
	OUTPUT_TEST layer544 nos544 busy544
	JR_EQ8 busy544 0 motornotbusy544
	SLEEP
	JR motorwaiting544
  motornotbusy544:
  else531_4:
  endif531:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB545:
  else487_4:
  endif487:
RETSUB_F_TAKES_NORMAL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKES_NORMAL_0:
SUB_F_GO_FORWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 25.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 25.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_0:
SUB_F_GO_BACKWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 0.5 VGV_DIFF
    SUBF -25.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF -25.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_BACKWARD_0:
SUB_F_MOVE_FORWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while572:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile572
  whilebody572:
    WRITE32 ENDSUB_F_GO_FORWARD_0:CALLSUB574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_0
CALLSUB574:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody572
  endwhile572:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB576:
RETSUB_F_MOVE_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_0:
SUB_F_MOVE_BACKWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while579:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_LTEQF F.0 F.1 endwhile579
  whilebody579:
    WRITE32 ENDSUB_F_GO_BACKWARD_0:CALLSUB582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_0
CALLSUB582:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_GTF F.0 F.1 whilebody579
  endwhile579:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB585:
RETSUB_F_MOVE_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_0:
SUB_F_MAIN_0:
    STRINGS DUPLICATE 'True' VGV_START_FROM_RIGHT
    TIMER_READ timeMC9
    MOVEF_F 97.0 VGV_A
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB587 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB587:
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else588_1
    MULF VGV_LEFT_FORWARD 100.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    MOVEF_F 600.0 VGV_DEG
  while593:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile593
  whilebody593:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody593
  endwhile593:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while599:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile599
  whilebody599:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody599
  endwhile599:
  while602:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 15.0 endwhile602
  whilebody602:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 15.0 whilebody602
  endwhile602:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB605:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_7
    MOVEF_F 30.0 VLV_BASE_POWER_7
    MOVEF_F 15.0 VLV_MIN_POWER_7
    MOVEF_F 460.0 VLV_DEG_7
    MOVEF_F 100.0 VLV_ACCELERATION_7
    MOVEF_F 100.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB606:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB607:
    MULF VGV_LEFT_FORWARD -40.0 F.0
    MULF VGV_RIGHT_FORWARD -40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds611
	MOVEF_32 1000.0 milliseconds611
	DATA32 timer611
	TIMER_WAIT milliseconds611 timer611
	TIMER_READY timer611
    WRITE32 ENDSUB_F_STOP_0:CALLSUB612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB612:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds617
	MOVEF_32 4500.0 milliseconds617
	DATA32 timer617
	TIMER_WAIT milliseconds617 timer617
	TIMER_READY timer617
    WRITE32 ENDSUB_F_STOP_0:CALLSUB618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB618:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 260.0 0.0 'True' 

	DATA8 layer620
	DATA8 nos620
	DATA8 busy620
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer620 nos620
	JR_EQ8 0 nos620 motornotbusy620
  motorwaiting620:
	OUTPUT_TEST layer620 nos620 busy620
	JR_EQ8 busy620 0 motornotbusy620
	SLEEP
	JR motorwaiting620
  motornotbusy620:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 110.0 0.0 'True' 

	DATA8 layer622
	DATA8 nos622
	DATA8 busy622
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer622 nos622
	JR_EQ8 0 nos622 motornotbusy622
  motorwaiting622:
	OUTPUT_TEST layer622 nos622 busy622
	JR_EQ8 busy622 0 motornotbusy622
	SLEEP
	JR motorwaiting622
  motornotbusy622:
    DATA32 milliseconds623
	MOVEF_32 100.0 milliseconds623
	DATA32 timer623
	TIMER_WAIT milliseconds623 timer623
	TIMER_READY timer623
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while627:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile627
  whilebody627:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody627
  endwhile627:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB630 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB630:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while632:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 500.0 endwhile632
  whilebody632:
    MOVEF_F 20.0 VLV_POWER_1
    MOVEF_F VGV_A VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB634:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 500.0 whilebody632
  endwhile632:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB636 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB636:
    JR endif588
  else588_1:
    MOVEF_F 1200.0 VGV_DEG
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 80.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while641:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile641
  whilebody641:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody641
  endwhile641:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 55.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while647:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile647
  whilebody647:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody647
  endwhile647:
  while650:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile650
  whilebody650:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody650
  endwhile650:
    WRITE32 ENDSUB_F_STOP_RIGHT_0:CALLSUB653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_RIGHT_0
CALLSUB653:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB654:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer656
	DATA8 nos656
	DATA8 busy656
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer656 nos656
	JR_EQ8 0 nos656 motornotbusy656
  motorwaiting656:
	OUTPUT_TEST layer656 nos656 busy656
	JR_EQ8 busy656 0 motornotbusy656
	SLEEP
	JR motorwaiting656
  motornotbusy656:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB657:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 235.0 0.0 'True' 

	DATA8 layer659
	DATA8 nos659
	DATA8 busy659
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer659 nos659
	JR_EQ8 0 nos659 motornotbusy659
  motorwaiting659:
	OUTPUT_TEST layer659 nos659 busy659
	JR_EQ8 busy659 0 motornotbusy659
	SLEEP
	JR motorwaiting659
  motornotbusy659:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while661:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile661
  whilebody661:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB663:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody661
  endwhile661:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB665:
  else588_2:
  endif588:
    DATA8 layer666
	DATA8 no666
	DATA8 mode8666
	
	MOVEF_8 VGV_RIGHT_SENSOR no666
	SUB8 no666 1 no666
	DIV8 no666 4 layer666
	MATH MOD8 no666 4 no666

	MOVEF_8 1.0 mode8666
	
	INPUT_DEVICE READY_RAW layer666 no666 0 mode8666 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB667 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB667:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    MOVEF_F 500.0 VGV_C
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB669:
    JR_LTEQF VGV_B 80.0 else670_1
    DATA8 layer671
	DATA8 no671
	DATA8 mode8671
	
	MOVEF_8 VGV_RIGHT_SENSOR no671
	SUB8 no671 1 no671
	DIV8 no671 4 layer671
	MATH MOD8 no671 4 no671

	MOVEF_8 2.0 mode8671
	
	INPUT_DEVICE READY_RAW layer671 no671 0 mode8671 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer673
	DATA8 no673
	DATA8 mode8673
	
	MOVEF_8 VGV_RIGHT_SENSOR no673
	SUB8 no673 1 no673
	DIV8 no673 4 layer673
	MATH MOD8 no673 4 no673

	MOVEF_8 1.0 mode8673
	
	INPUT_DEVICE READY_RAW layer673 no673 0 mode8673 0
    JR_LTEQF VGV_G 100.0 else674_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB676:
    JR endif674
  else674_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_BROWN
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB678 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB678:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB679:
  else674_2:
  endif674:
    JR endif670
  else670_1:
    JR_LTEQF VGV_B 5.0 else670_2
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else670_2
    DATA8 layer681
	DATA8 no681
	DATA8 mode8681
	
	MOVEF_8 VGV_RIGHT_SENSOR no681
	SUB8 no681 1 no681
	DIV8 no681 4 layer681
	MATH MOD8 no681 4 no681

	MOVEF_8 4.0 mode8681
	
	INPUT_DEVICE READY_RAW layer681 no681 0 mode8681 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    DATA8 layer683
	DATA8 no683
	DATA8 mode8683
	
	MOVEF_8 VGV_RIGHT_SENSOR no683
	SUB8 no683 1 no683
	DIV8 no683 4 layer683
	MATH MOD8 no683 4 no683

	MOVEF_8 1.0 mode8683
	
	INPUT_DEVICE READY_RAW layer683 no683 0 mode8683 0
    STRINGS DUPLICATE 'None' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB684 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB684:
    JR_LTEQF VGV_W 29.0 else685_1
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB686:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB687 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB687:
    JR endif685
  else685_1:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB688:
  else685_2:
  endif685:
  else670_2:
  endif670:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB689:
    DATA8 layer690
	DATA8 no690
	DATA8 mode8690
	
	MOVEF_8 VGV_LINE_SENSOR no690
	SUB8 no690 1 no690
	DIV8 no690 4 layer690
	MATH MOD8 no690 4 no690

	MOVEF_8 2.0 mode8690
	
	INPUT_DEVICE READY_RAW layer690 no690 0 mode8690 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    WRITE32 ENDSUB_F_STOP_0:CALLSUB692 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB692:
  while693:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C or694
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 5.0 endwhile693
  or694:
  whilebody693:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB697 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB697:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody693
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 5.0 whilebody693
  endwhile693:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB700:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB701:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB702:
    MOVEF_F 350.0 VGV_C
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB703:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 90.0 VLV_DEG_6
    MOVEF_F 40.0 VLV_ACCELERATION_6
    MOVEF_F 40.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB704:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB705 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB705:
    ADDF VGV_C 110.0 VGV_C
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB707:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB709 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB709:
    JR_LTEQF VGV_B 80.0 else710_1
    DATA8 layer711
	DATA8 no711
	DATA8 mode8711
	
	MOVEF_8 VGV_RIGHT_SENSOR no711
	SUB8 no711 1 no711
	DIV8 no711 4 layer711
	MATH MOD8 no711 4 no711

	MOVEF_8 2.0 mode8711
	
	INPUT_DEVICE READY_RAW layer711 no711 0 mode8711 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer713
	DATA8 no713
	DATA8 mode8713
	
	MOVEF_8 VGV_RIGHT_SENSOR no713
	SUB8 no713 1 no713
	DIV8 no713 4 layer713
	MATH MOD8 no713 4 no713

	MOVEF_8 1.0 mode8713
	
	INPUT_DEVICE READY_RAW layer713 no713 0 mode8713 0
    JR_LTEQF VGV_G 100.0 else714_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB716 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB716:
    JR endif714
  else714_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_BROWN
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB718:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 80.0 VLV_DEG_6
    MOVEF_F 40.0 VLV_ACCELERATION_6
    MOVEF_F 40.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB719:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB720:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB721 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB721:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB722 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB722:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB723 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB723:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 80.0 VLV_DEG_5
    MOVEF_F 40.0 VLV_ACCELERATION_5
    MOVEF_F 40.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB724:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB725:
  else714_2:
  endif714:
    JR endif710
  else710_1:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 20.0 0.0 'True' 

	DATA8 layer727
	DATA8 nos727
	DATA8 busy727
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer727 nos727
	JR_EQ8 0 nos727 motornotbusy727
  motorwaiting727:
	OUTPUT_TEST layer727 nos727 busy727
	JR_EQ8 busy727 0 motornotbusy727
	SLEEP
	JR motorwaiting727
  motornotbusy727:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB728:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 20.0 0.0 'True' 

	DATA8 layer731
	DATA8 nos731
	DATA8 busy731
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer731 nos731
	JR_EQ8 0 nos731 motornotbusy731
  motorwaiting731:
	OUTPUT_TEST layer731 nos731 busy731
	JR_EQ8 busy731 0 motornotbusy731
	SLEEP
	JR motorwaiting731
  motornotbusy731:
    JR_LTEQF VGV_B 25.0 else732_1
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB733:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB734:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB735:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB736:
  else732_1:
  endif732:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB737:
  else710_2:
  endif710:
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else738_1
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB740:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 80.0 VLV_DEG_6
    MOVEF_F 40.0 VLV_ACCELERATION_6
    MOVEF_F 40.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB741 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB741:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB742:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB743 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB743:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 80.0 VLV_DEG_5
    MOVEF_F 40.0 VLV_ACCELERATION_5
    MOVEF_F 40.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB744 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB744:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB745:
  else738_1:
  endif738:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB746:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while748:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile748
  whilebody748:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB750 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB750:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody748
  endwhile748:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else752_1
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    JR endif752
  else752_1:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  else752_2:
  endif752:
    DATA32 milliseconds760
	MOVEF_32 1000.0 milliseconds760
	DATA32 timer760
	TIMER_WAIT milliseconds760 timer760
	TIMER_READY timer760
    WRITE32 ENDSUB_F_STOP_0:CALLSUB761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB761:
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_LEFT
    MOVEF_F 50.0 VGV_DDD
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB762:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB764 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB764:
    JR_LTEQF VGV_B 85.0 else765_1
    DATA8 layer766
	DATA8 no766
	DATA8 mode8766
	
	MOVEF_8 VGV_RIGHT_SENSOR no766
	SUB8 no766 1 no766
	DIV8 no766 4 layer766
	MATH MOD8 no766 4 no766

	MOVEF_8 2.0 mode8766
	
	INPUT_DEVICE READY_RAW layer766 no766 0 mode8766 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB767 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB767:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer769
	DATA8 no769
	DATA8 mode8769
	
	MOVEF_8 VGV_RIGHT_SENSOR no769
	SUB8 no769 1 no769
	DIV8 no769 4 layer769
	MATH MOD8 no769 4 no769

	MOVEF_8 1.0 mode8769
	
	INPUT_DEVICE READY_RAW layer769 no769 0 mode8769 0
    JR_LTEQF VGV_G 100.0 else770_1
    STRINGS DUPLICATE 'R: Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB772 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB772:
    JR endif770
  else770_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 20.0 VLV_MIN_POWER_6
    MOVEF_F VGV_DDD VLV_DEG_6
    MOVEF_F 0.0 VLV_ACCELERATION_6
    MOVEF_F 0.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB774:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB775 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB775:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB776 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB776:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB777:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB778 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB778:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 20.0 VLV_MIN_POWER_5
    MOVEF_F VGV_DDD VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB779 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB779:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB780 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB780:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB781 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB781:
  else770_2:
  endif770:
    JR endif765
  else765_1:
    JR_LTEQF VGV_B 10.0 else765_2
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else765_2
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB783:
  else765_2:
  endif765:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB784 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB784:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else785_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB787 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB787:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB789:
    JR_LTEQF VGV_B 90.0 else790_1
    DATA8 layer791
	DATA8 no791
	DATA8 mode8791
	
	MOVEF_8 VGV_LEFT_SENSOR no791
	SUB8 no791 1 no791
	DIV8 no791 4 layer791
	MATH MOD8 no791 4 no791

	MOVEF_8 2.0 mode8791
	
	INPUT_DEVICE READY_RAW layer791 no791 0 mode8791 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB792:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer794
	DATA8 no794
	DATA8 mode8794
	
	MOVEF_8 VGV_LEFT_SENSOR no794
	SUB8 no794 1 no794
	DIV8 no794 4 layer794
	MATH MOD8 no794 4 no794

	MOVEF_8 1.0 mode8794
	
	INPUT_DEVICE READY_RAW layer794 no794 0 mode8794 0
    JR_LTEQF VGV_G 100.0 else795_1
    STRINGS DUPLICATE 'L: Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB797 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB797:
    JR endif795
  else795_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 20.0 VLV_MIN_POWER_6
    MOVEF_F VGV_DDD VLV_DEG_6
    MOVEF_F 0.0 VLV_ACCELERATION_6
    MOVEF_F 0.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB799:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB800:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB801:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB802 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB802:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB803:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 20.0 VLV_MIN_POWER_5
    MOVEF_F VGV_DDD VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB804:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB805:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB806 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB806:
  else795_2:
  endif795:
    JR endif790
  else790_1:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 30.0 0.0 'True' 

	DATA8 layer808
	DATA8 nos808
	DATA8 busy808
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer808 nos808
	JR_EQ8 0 nos808 motornotbusy808
  motorwaiting808:
	OUTPUT_TEST layer808 nos808 busy808
	JR_EQ8 busy808 0 motornotbusy808
	SLEEP
	JR motorwaiting808
  motornotbusy808:
    DATA32 milliseconds809
	MOVEF_32 500.0 milliseconds809
	DATA32 timer809
	TIMER_WAIT milliseconds809 timer809
	TIMER_READY timer809
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds813
	MOVEF_32 500.0 milliseconds813
	DATA32 timer813
	TIMER_WAIT milliseconds813 timer813
	TIMER_READY timer813
    WRITE32 ENDSUB_F_STOP_0:CALLSUB814 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB814:
    JR_LTEQF VGV_B 28.0 else815_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else815_1
    WRITE32 ENDSUB_F_STOP_0:CALLSUB817 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB817:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB818 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB818:
  else815_1:
  endif815:
  else790_2:
  endif790:
  else785_1:
  endif785:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB819 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB819:
    MOVEF_F 135.0 VGV_CHEM_BACK
    MOVEF_F 120.0 VGV_NO_BACK
    CALL EQ_STRING VGV_TAKE_RED_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else820_1
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 280.0 VLV_DEG_6
    MOVEF_F 100.0 VLV_ACCELERATION_6
    MOVEF_F 100.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB822 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB822:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB823 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB823:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 70.0 VLV_DEG_7
    MOVEF_F 35.0 VLV_ACCELERATION_7
    MOVEF_F 35.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB824 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB824:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB825 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB825:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer826
	DATA8 nos826
	DATA8 busy826
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer826 nos826
	JR_EQ8 0 nos826 motornotbusy826
  motorwaiting826:
	OUTPUT_TEST layer826 nos826 busy826
	JR_EQ8 busy826 0 motornotbusy826
	SLEEP
	JR motorwaiting826
  motornotbusy826:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 150.0 VLV_DEG_5
    MOVEF_F 60.0 VLV_ACCELERATION_5
    MOVEF_F 60.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB827 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB827:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB828 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB828:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer829
	DATA8 nos829
	DATA8 busy829
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer829 nos829
	JR_EQ8 0 nos829 motornotbusy829
  motorwaiting829:
	OUTPUT_TEST layer829 nos829 busy829
	JR_EQ8 busy829 0 motornotbusy829
	SLEEP
	JR motorwaiting829
  motornotbusy829:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB830 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB830:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 150.0 VLV_DEG_6
    MOVEF_F 60.0 VLV_ACCELERATION_6
    MOVEF_F 60.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB831 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB831:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB832 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB832:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 70.0 VLV_DEG_8
    MOVEF_F 35.0 VLV_ACCELERATION_8
    MOVEF_F 35.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB833 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB833:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB834 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB834:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds838
	MOVEF_32 1500.0 milliseconds838
	DATA32 timer838
	TIMER_WAIT milliseconds838 timer838
	TIMER_READY timer838
    WRITE32 ENDSUB_F_STOP_0:CALLSUB839 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB839:
    SUBF VGV_CHEM_BACK 30.0 F.1
    DATAF tmpf841
    DATA8 flag841
    DIVF F.1 2.0 tmpf841
    CP_EQF 0.0 2.0 flag841
    SELECTF flag841 0.0 tmpf841 F.0

    MATH FLOOR F.0 VGV_HALF
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F VGV_CHEM_BACK VLV_DEG_6
    MOVEF_F VGV_HALF VLV_ACCELERATION_6
    MOVEF_F VGV_HALF VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB843 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB843:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB844 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB844:
    JR endif820
  else820_1:
    CALL EQ_STRING VGV_TAKE_RED_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else820_2
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 280.0 VLV_DEG_6
    MOVEF_F 100.0 VLV_ACCELERATION_6
    MOVEF_F 100.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB846 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB846:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB847 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB847:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 70.0 VLV_DEG_7
    MOVEF_F 35.0 VLV_ACCELERATION_7
    MOVEF_F 35.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB848 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB848:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB849 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB849:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer850
	DATA8 nos850
	DATA8 busy850
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer850 nos850
	JR_EQ8 0 nos850 motornotbusy850
  motorwaiting850:
	OUTPUT_TEST layer850 nos850 busy850
	JR_EQ8 busy850 0 motornotbusy850
	SLEEP
	JR motorwaiting850
  motornotbusy850:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 150.0 VLV_DEG_5
    MOVEF_F 60.0 VLV_ACCELERATION_5
    MOVEF_F 60.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB851 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB851:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB852 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB852:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer853
	DATA8 nos853
	DATA8 busy853
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer853 nos853
	JR_EQ8 0 nos853 motornotbusy853
  motorwaiting853:
	OUTPUT_TEST layer853 nos853 busy853
	JR_EQ8 busy853 0 motornotbusy853
	SLEEP
	JR motorwaiting853
  motornotbusy853:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB854 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB854:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 150.0 VLV_DEG_6
    MOVEF_F 60.0 VLV_ACCELERATION_6
    MOVEF_F 60.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB855 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB855:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB856 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB856:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 70.0 VLV_DEG_8
    MOVEF_F 35.0 VLV_ACCELERATION_8
    MOVEF_F 35.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB857 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB857:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB858 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB858:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds862
	MOVEF_32 1500.0 milliseconds862
	DATA32 timer862
	TIMER_WAIT milliseconds862 timer862
	TIMER_READY timer862
    WRITE32 ENDSUB_F_STOP_0:CALLSUB863 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB863:
    SUBF VGV_CHEM_BACK 30.0 F.1
    DATAF tmpf865
    DATA8 flag865
    DIVF F.1 2.0 tmpf865
    CP_EQF 0.0 2.0 flag865
    SELECTF flag865 0.0 tmpf865 F.0

    MATH FLOOR F.0 VGV_HALF
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F VGV_CHEM_BACK VLV_DEG_6
    MOVEF_F VGV_HALF VLV_ACCELERATION_6
    MOVEF_F VGV_HALF VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB867 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB867:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB868 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB868:
    JR endif820
  else820_2:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else869_1
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 20.0 VLV_MIN_POWER_6
    MOVEF_F VGV_DDD VLV_DEG_6
    MOVEF_F 0.0 VLV_ACCELERATION_6
    MOVEF_F 0.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB871 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB871:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB872 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB872:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB873 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB873:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB874 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB874:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB875 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB875:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 20.0 VLV_MIN_POWER_5
    MOVEF_F VGV_DDD VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB876 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB876:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB877 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB877:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB878 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB878:
  else869_1:
  endif869:
    SUBF VGV_NO_BACK 30.0 F.1
    DATAF tmpf880
    DATA8 flag880
    DIVF F.1 2.0 tmpf880
    CP_EQF 0.0 2.0 flag880
    SELECTF flag880 0.0 tmpf880 F.0

    MATH FLOOR F.0 VGV_HALF
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F VGV_NO_BACK VLV_DEG_6
    MOVEF_F VGV_HALF VLV_ACCELERATION_6
    MOVEF_F VGV_HALF VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB882 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB882:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB883 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB883:
  else820_3:
  endif820:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer886
	DATA8 nos886
	DATA8 busy886
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer886 nos886
	JR_EQ8 0 nos886 motornotbusy886
  motorwaiting886:
	OUTPUT_TEST layer886 nos886 busy886
	JR_EQ8 busy886 0 motornotbusy886
	SLEEP
	JR motorwaiting886
  motornotbusy886:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB887 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB887:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB888 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB888:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds892
	MOVEF_32 700.0 milliseconds892
	DATA32 timer892
	TIMER_WAIT milliseconds892 timer892
	TIMER_READY timer892
    WRITE32 ENDSUB_F_STOP_0:CALLSUB893 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB893:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    ADDF F.0 5.0 VGV_A
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 430.0 VLV_DEG_5
    MOVEF_F 100.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB896 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB896:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while898:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile898
  whilebody898:
    MOVEF_F 40.0 VLV_POWER_1
    MOVEF_F VGV_A VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB900 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB900:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody898
  endwhile898:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA8 layer906
	DATA8 no906
	DATA8 mode8906
	
	MOVEF_8 VGV_LINE_SENSOR no906
	SUB8 no906 1 no906
	DIV8 no906 4 layer906
	MATH MOD8 no906 4 no906

	MOVEF_8 0.0 mode8906
	
	INPUT_DEVICE READY_RAW layer906 no906 0 mode8906 0
  while907:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 or908
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 220.0 endwhile907
  or908:
  whilebody907:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 whilebody907
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 220.0 whilebody907
  endwhile907:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB913 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB913:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB914 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB914:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 92.0 VLV_DEG_6
    MOVEF_F 45.0 VLV_ACCELERATION_6
    MOVEF_F 45.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB915 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB915:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB916 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB916:
    DATA8 layer917
	DATA8 no917
	DATA8 mode8917
	
	MOVEF_8 VGV_LINE_SENSOR no917
	SUB8 no917 1 no917
	DIV8 no917 4 layer917
	MATH MOD8 no917 4 no917

	MOVEF_8 0.0 mode8917
	
	INPUT_DEVICE READY_RAW layer917 no917 0 mode8917 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB918 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB918:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB920 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB920:
    JR_LTEQF VGV_B 45.0 else921_1
    DATA8 layer922
	DATA8 no922
	DATA8 mode8922
	
	MOVEF_8 VGV_LEFT_SENSOR no922
	SUB8 no922 1 no922
	DIV8 no922 4 layer922
	MATH MOD8 no922 4 no922

	MOVEF_8 2.0 mode8922
	
	INPUT_DEVICE READY_RAW layer922 no922 0 mode8922 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB923 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB923:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer925
	DATA8 no925
	DATA8 mode8925
	
	MOVEF_8 VGV_LEFT_SENSOR no925
	SUB8 no925 1 no925
	DIV8 no925 4 layer925
	MATH MOD8 no925 4 no925

	MOVEF_8 1.0 mode8925
	
	INPUT_DEVICE READY_RAW layer925 no925 0 mode8925 0
    JR_LTEQF VGV_G 100.0 else926_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB927 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB927:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif926
  else926_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB929 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB929:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 100.0 VLV_DEG_6
    MOVEF_F 50.0 VLV_ACCELERATION_6
    MOVEF_F 50.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB930:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB931 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB931:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB932 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB932:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 100.0 VLV_DEG_5
    MOVEF_F 100.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB933 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB933:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else926_2:
  endif926:
    JR endif921
  else921_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds939
	MOVEF_32 1000.0 milliseconds939
	DATA32 timer939
	TIMER_WAIT milliseconds939 timer939
	TIMER_READY timer939
    JR_GTEQF VGV_ULTRA 85.0 else940_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else940_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB942 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB942:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB943 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB943:
  else940_1:
  endif940:
  else921_2:
  endif921:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB944 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB944:
    CALL EQ_STRING VGV_OBJECT 'Fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else945_1
    MOVEF_F 30.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 115.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB947 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB947:
    JR endif945
  else945_1:
    MOVEF_F 30.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 115.0 VLV_DEG_5
    MOVEF_F 115.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB948 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB948:
  else945_2:
  endif945:
    SUBF VGV_A 0.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while951:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 250.0 endwhile951
  whilebody951:
    MOVEF_F 40.0 VLV_POWER_1
    MOVEF_F VGV_A VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB953 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB953:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 250.0 whilebody951
  endwhile951:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds958
	MOVEF_32 1500.0 milliseconds958
	DATA32 timer958
	TIMER_WAIT milliseconds958 timer958
	TIMER_READY timer958
    WRITE32 ENDSUB_F_STOP_0:CALLSUB959 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB959:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB960 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB960:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB962 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB962:
    JR_LTEQF VGV_B 55.0 else963_1
    DATA8 layer964
	DATA8 no964
	DATA8 mode8964
	
	MOVEF_8 VGV_LEFT_SENSOR no964
	SUB8 no964 1 no964
	DIV8 no964 4 layer964
	MATH MOD8 no964 4 no964

	MOVEF_8 2.0 mode8964
	
	INPUT_DEVICE READY_RAW layer964 no964 0 mode8964 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB965 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB965:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer967
	DATA8 no967
	DATA8 mode8967
	
	MOVEF_8 VGV_LEFT_SENSOR no967
	SUB8 no967 1 no967
	DIV8 no967 4 layer967
	MATH MOD8 no967 4 no967

	MOVEF_8 1.0 mode8967
	
	INPUT_DEVICE READY_RAW layer967 no967 0 mode8967 0
    JR_LTEQF VGV_G 70.0 else968_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB970 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB970:
    JR endif968
  else968_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB972 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB972:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB973 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB973:
  else968_2:
  endif968:
    JR endif963
  else963_1:
    JR_LTEQF VGV_B 15.0 else963_2
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB974 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB974:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 85.0 else979_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else979_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_STOP_0:CALLSUB981 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB981:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for983:
    JR_GTF VGV_I 20.0 endfor983
  forbody983:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds987
	MOVEF_32 30.0 milliseconds987
	DATA32 timer987
	TIMER_WAIT milliseconds987 timer987
	TIMER_READY timer987
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody983
  endfor983:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer993
	DATA8 nos993
	DATA8 busy993
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer993 nos993
	JR_EQ8 0 nos993 motornotbusy993
  motorwaiting993:
	OUTPUT_TEST layer993 nos993 busy993
	JR_EQ8 busy993 0 motornotbusy993
	SLEEP
	JR motorwaiting993
  motornotbusy993:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB994 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB994:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer995
	DATA8 nos995
	DATA8 busy995
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer995 nos995
	JR_EQ8 0 nos995 motornotbusy995
  motorwaiting995:
	OUTPUT_TEST layer995 nos995 busy995
	JR_EQ8 busy995 0 motornotbusy995
	SLEEP
	JR motorwaiting995
  motornotbusy995:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer998
	DATA8 nos998
	DATA8 busy998
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer998 nos998
	JR_EQ8 0 nos998 motornotbusy998
  motorwaiting998:
	OUTPUT_TEST layer998 nos998 busy998
	JR_EQ8 busy998 0 motornotbusy998
	SLEEP
	JR motorwaiting998
  motornotbusy998:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB999 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB999:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer1000
	DATA8 nos1000
	DATA8 busy1000
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1000 nos1000
	JR_EQ8 0 nos1000 motornotbusy1000
  motorwaiting1000:
	OUTPUT_TEST layer1000 nos1000 busy1000
	JR_EQ8 busy1000 0 motornotbusy1000
	SLEEP
	JR motorwaiting1000
  motornotbusy1000:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1001 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1001:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer1004
	DATA8 nos1004
	DATA8 busy1004
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1004 nos1004
	JR_EQ8 0 nos1004 motornotbusy1004
  motorwaiting1004:
	OUTPUT_TEST layer1004 nos1004 busy1004
	JR_EQ8 busy1004 0 motornotbusy1004
	SLEEP
	JR motorwaiting1004
  motornotbusy1004:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1005 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1005:
    DATA32 milliseconds1006
	MOVEF_32 1000.0 milliseconds1006
	DATA32 timer1006
	TIMER_WAIT milliseconds1006 timer1006
	TIMER_READY timer1006
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1008:
    JR_GTF VGV_I 20.0 endfor1008
  forbody1008:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds1011
	MOVEF_32 30.0 milliseconds1011
	DATA32 timer1011
	TIMER_WAIT milliseconds1011 timer1011
	TIMER_READY timer1011
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1008
  endfor1008:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1017
	DATA8 nos1017
	DATA8 busy1017
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1017 nos1017
	JR_EQ8 0 nos1017 motornotbusy1017
  motorwaiting1017:
	OUTPUT_TEST layer1017 nos1017 busy1017
	JR_EQ8 busy1017 0 motornotbusy1017
	SLEEP
	JR motorwaiting1017
  motornotbusy1017:
    MULF 30.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1020
	MOVEF_32 1000.0 milliseconds1020
	DATA32 timer1020
	TIMER_WAIT milliseconds1020 timer1020
	TIMER_READY timer1020
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1021 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1021:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1022 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1022:
  else979_1:
  endif979:
  else963_2:
  endif963:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1023 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1023:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer1025
	DATA8 nos1025
	DATA8 busy1025
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1025 nos1025
	JR_EQ8 0 nos1025 motornotbusy1025
  motorwaiting1025:
	OUTPUT_TEST layer1025 nos1025 busy1025
	JR_EQ8 busy1025 0 motornotbusy1025
	SLEEP
	JR motorwaiting1025
  motornotbusy1025:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 104.0 0.0 'True' 

	DATA8 layer1027
	DATA8 nos1027
	DATA8 busy1027
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1027 nos1027
	JR_EQ8 0 nos1027 motornotbusy1027
  motorwaiting1027:
	OUTPUT_TEST layer1027 nos1027 busy1027
	JR_EQ8 busy1027 0 motornotbusy1027
	SLEEP
	JR motorwaiting1027
  motornotbusy1027:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 102.0 VGV_A
  while1029:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 100.0 endwhile1029
  whilebody1029:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB1031 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB1031:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 100.0 whilebody1029
  endwhile1029:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1036:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 6.0 endwhile1036
  whilebody1036:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 6.0 whilebody1036
  endwhile1036:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1039 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1039:
    DATA8 layer1040
	DATA8 no1040
	DATA8 mode81040
	
	MOVEF_8 VGV_LINE_SENSOR no1040
	SUB8 no1040 1 no1040
	DIV8 no1040 4 layer1040
	MATH MOD8 no1040 4 no1040

	MOVEF_8 0.0 mode81040
	
	INPUT_DEVICE READY_RAW layer1040 no1040 0 mode81040 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1041 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1041:
    MOVEF_F 110.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1042 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1042:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1043:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else1045_1
    DATA8 layer1046
	DATA8 no1046
	DATA8 mode81046
	
	MOVEF_8 VGV_LEFT_SENSOR no1046
	SUB8 no1046 1 no1046
	DIV8 no1046 4 layer1046
	MATH MOD8 no1046 4 no1046

	MOVEF_8 2.0 mode81046
	
	INPUT_DEVICE READY_RAW layer1046 no1046 0 mode81046 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1047 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1047:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1049
	DATA8 no1049
	DATA8 mode81049
	
	MOVEF_8 VGV_LEFT_SENSOR no1049
	SUB8 no1049 1 no1049
	DIV8 no1049 4 layer1049
	MATH MOD8 no1049 4 no1049

	MOVEF_8 1.0 mode81049
	
	INPUT_DEVICE READY_RAW layer1049 no1049 0 mode81049 0
    JR_LTEQF VGV_G 100.0 else1050_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1051 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1051:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif1050
  else1050_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1053 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1053:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1054 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1054:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1055 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1055:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1056 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1056:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1057 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1057:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else1050_2:
  endif1050:
    JR endif1045
  else1045_1:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1059:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 85.0 else1064_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1064_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1066 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1066:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1067 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1067:
  else1064_1:
  endif1064:
  else1045_2:
  endif1045:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1068 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1068:
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1069_1
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1071 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1071:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1072 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1072:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1073 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1073:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1074 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1074:
  else1069_1:
  endif1069:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1075 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1075:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1076 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1076:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1077 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1077:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1078 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1078:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else1080_1
    DATA8 layer1081
	DATA8 no1081
	DATA8 mode81081
	
	MOVEF_8 VGV_LEFT_SENSOR no1081
	SUB8 no1081 1 no1081
	DIV8 no1081 4 layer1081
	MATH MOD8 no1081 4 no1081

	MOVEF_8 2.0 mode81081
	
	INPUT_DEVICE READY_RAW layer1081 no1081 0 mode81081 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1082 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1082:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1084
	DATA8 no1084
	DATA8 mode81084
	
	MOVEF_8 VGV_LEFT_SENSOR no1084
	SUB8 no1084 1 no1084
	DIV8 no1084 4 layer1084
	MATH MOD8 no1084 4 no1084

	MOVEF_8 1.0 mode81084
	
	INPUT_DEVICE READY_RAW layer1084 no1084 0 mode81084 0
    JR_LTEQF VGV_G 70.0 else1085_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1086 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1086:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif1085
  else1085_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1088 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1088:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1089 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1089:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else1085_2:
  endif1085:
    JR endif1080
  else1080_1:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1091 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1091:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 85.0 else1096_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1096_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB1098 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB1098:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1099 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1099:
    JR endif1096
  else1096_1:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1096_2
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB1101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB1101:
  else1096_2:
  endif1096:
  else1080_2:
  endif1080:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1102:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer1105
	DATA8 nos1105
	DATA8 busy1105
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1105 nos1105
	JR_EQ8 0 nos1105 motornotbusy1105
  motorwaiting1105:
	OUTPUT_TEST layer1105 nos1105 busy1105
	JR_EQ8 busy1105 0 motornotbusy1105
	SLEEP
	JR motorwaiting1105
  motornotbusy1105:
    ADDF VGV_A 7.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1108:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 310.0 endwhile1108
  whilebody1108:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB1110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB1110:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 310.0 whilebody1108
  endwhile1108:
    MOVEF_F 105.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1112:
    DATA8 layer1113
	DATA8 no1113
	DATA8 mode81113
	
	MOVEF_8 VGV_LEFT_SENSOR no1113
	SUB8 no1113 1 no1113
	DIV8 no1113 4 layer1113
	MATH MOD8 no1113 4 no1113

	MOVEF_8 1.0 mode81113
	
	INPUT_DEVICE READY_RAW layer1113 no1113 0 mode81113 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1114:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1116:
    JR_LTEQF VGV_B 55.0 else1117_1
    DATA8 layer1118
	DATA8 no1118
	DATA8 mode81118
	
	MOVEF_8 VGV_LEFT_SENSOR no1118
	SUB8 no1118 1 no1118
	DIV8 no1118 4 layer1118
	MATH MOD8 no1118 4 no1118

	MOVEF_8 2.0 mode81118
	
	INPUT_DEVICE READY_RAW layer1118 no1118 0 mode81118 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1119:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1121
	DATA8 no1121
	DATA8 mode81121
	
	MOVEF_8 VGV_LEFT_SENSOR no1121
	SUB8 no1121 1 no1121
	DIV8 no1121 4 layer1121
	MATH MOD8 no1121 4 no1121

	MOVEF_8 1.0 mode81121
	
	INPUT_DEVICE READY_RAW layer1121 no1121 0 mode81121 0
    JR_LTEQF VGV_G 70.0 else1122_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1123:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif1122
  else1122_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1125:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1126:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1127:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1128:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else1122_2:
  endif1122:
    JR endif1117
  else1117_1:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1130:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 85.0 else1135_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1135_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1137:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1138:
  else1135_1:
  endif1135:
  else1117_2:
  endif1117:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1139:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1140_1
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1142:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1143:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1144:
  else1140_1:
  endif1140:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1145:
    DATA8 layer1146
	DATA8 no1146
	DATA8 mode81146
	
	MOVEF_8 VGV_LINE_SENSOR no1146
	SUB8 no1146 1 no1146
	DIV8 no1146 4 layer1146
	MATH MOD8 no1146 4 no1146

	MOVEF_8 0.0 mode81146
	
	INPUT_DEVICE READY_RAW layer1146 no1146 0 mode81146 0
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'False'

	DATA8 layer1149
	DATA8 nos1149
	DATA8 busy1149
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1149 nos1149
	JR_EQ8 0 nos1149 motornotbusy1149
  motorwaiting1149:
	OUTPUT_TEST layer1149 nos1149 busy1149
	JR_EQ8 busy1149 0 motornotbusy1149
	SLEEP
	JR motorwaiting1149
  motornotbusy1149:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1153:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile1153
  whilebody1153:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody1153
  endwhile1153:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1156:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 200.0 0.0 'False' 

	DATA8 layer1158
	DATA8 nos1158
	DATA8 busy1158
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1158 nos1158
	JR_EQ8 0 nos1158 motornotbusy1158
  motorwaiting1158:
	OUTPUT_TEST layer1158 nos1158 busy1158
	JR_EQ8 busy1158 0 motornotbusy1158
	SLEEP
	JR motorwaiting1158
  motornotbusy1158:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
  while1161:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile1161
  whilebody1161:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody1161
  endwhile1161:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer1165
	DATA8 nos1165
	DATA8 busy1165
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1165 nos1165
	JR_EQ8 0 nos1165 motornotbusy1165
  motorwaiting1165:
	OUTPUT_TEST layer1165 nos1165 busy1165
	JR_EQ8 busy1165 0 motornotbusy1165
	SLEEP
	JR motorwaiting1165
  motornotbusy1165:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1166:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1168:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile1168
  whilebody1168:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB1170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB1170:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody1168
  endwhile1168:
  while1172:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 5.0 endwhile1172
  whilebody1172:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB1174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB1174:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 5.0 whilebody1172
  endwhile1172:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1176:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer1179
	DATA8 nos1179
	DATA8 busy1179
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1179 nos1179
	JR_EQ8 0 nos1179 motornotbusy1179
  motorwaiting1179:
	OUTPUT_TEST layer1179 nos1179 busy1179
	JR_EQ8 busy1179 0 motornotbusy1179
	SLEEP
	JR motorwaiting1179
  motornotbusy1179:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1180:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1181:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1184
	DATA8 nos1184
	DATA8 busy1184
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1184 nos1184
	JR_EQ8 0 nos1184 motornotbusy1184
  motorwaiting1184:
	OUTPUT_TEST layer1184 nos1184 busy1184
	JR_EQ8 busy1184 0 motornotbusy1184
	SLEEP
	JR motorwaiting1184
  motornotbusy1184:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1185:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1186:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 25.0 'False'

	DATA8 layer1189
	DATA8 nos1189
	DATA8 busy1189
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1189 nos1189
	JR_EQ8 0 nos1189 motornotbusy1189
  motorwaiting1189:
	OUTPUT_TEST layer1189 nos1189 busy1189
	JR_EQ8 busy1189 0 motornotbusy1189
	SLEEP
	JR motorwaiting1189
  motornotbusy1189:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1191:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile1191
  whilebody1191:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF F.0 17.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf1197
    DATA8 flag1197
    DIVF F.0 10.0 tmpf1197
    CP_EQF 0.0 10.0 flag1197
    SELECTF flag1197 0.0 tmpf1197 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 20.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -20.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody1191
  endwhile1191:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 135.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 135.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1207:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1208:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1209:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1211:
    JR_LTEQF VGV_B 60.0 else1212_1
    DATA8 layer1213
	DATA8 no1213
	DATA8 mode81213
	
	MOVEF_8 VGV_LEFT_SENSOR no1213
	SUB8 no1213 1 no1213
	DIV8 no1213 4 layer1213
	MATH MOD8 no1213 4 no1213

	MOVEF_8 2.0 mode81213
	
	INPUT_DEVICE READY_RAW layer1213 no1213 0 mode81213 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1214:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1216
	DATA8 no1216
	DATA8 mode81216
	
	MOVEF_8 VGV_LEFT_SENSOR no1216
	SUB8 no1216 1 no1216
	DIV8 no1216 4 layer1216
	MATH MOD8 no1216 4 no1216

	MOVEF_8 1.0 mode81216
	
	INPUT_DEVICE READY_RAW layer1216 no1216 0 mode81216 0
    JR_LTEQF VGV_G 80.0 else1217_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1218:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif1217
  else1217_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'FIre' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1220:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1221:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else1217_2:
  endif1217:
    JR endif1212
  else1212_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1224_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1224_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1226:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1227:
    MULF 10.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 10.0 0.0 'True' 

	DATA8 layer1229
	DATA8 nos1229
	DATA8 busy1229
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1229 nos1229
	JR_EQ8 0 nos1229 motornotbusy1229
  motorwaiting1229:
	OUTPUT_TEST layer1229 nos1229 busy1229
	JR_EQ8 busy1229 0 motornotbusy1229
	SLEEP
	JR motorwaiting1229
  motornotbusy1229:
  else1224_1:
  endif1224:
  else1212_2:
  endif1212:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1230:
    MOVEF_F 710.0 VGV_C
    STRINGS DUPLICATE 'unknown' VGV_YELLOW_OBJECT
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1231_1
    CALL EQ_STRING VGV_WHITE 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1231_1
    STRINGS DUPLICATE 'unknown' VGV_YELLOW_OBJECT
    JR_NEQF VGV_MEN_COUNT 1.0 else1234_1
    STRINGS DUPLICATE 'man' VGV_YELLOW_OBJECT
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif1234
  else1234_1:
    JR_NEQF VGV_FIRE_COUNT 1.0 else1234_2
    STRINGS DUPLICATE 'fire' VGV_YELLOW_OBJECT
    JR endif1234
  else1234_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1234_3
    STRINGS DUPLICATE 'chem' VGV_YELLOW_OBJECT
    JR endif1234
  else1234_3:
    JR_NEQF VGV_MEN_COUNT 2.0 else1234_4
    JR_NEQF VGV_FIRE_COUNT 2.0 else1234_4
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1234_4
    STRINGS DUPLICATE 'none' VGV_YELLOW_OBJECT
  else1234_4:
  endif1234:
  else1231_1:
  endif1231:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or1238
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1237_1
  or1238:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 20.0 VLV_MIN_POWER_5
    MOVEF_F 515.0 VLV_DEG_5
    MOVEF_F 200.0 VLV_ACCELERATION_5
    MOVEF_F 200.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1241:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1242:
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1243_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1245:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1247:
    JR_LTEQF VGV_B 50.0 else1248_1
    DATA8 layer1249
	DATA8 no1249
	DATA8 mode81249
	
	MOVEF_8 VGV_LEFT_SENSOR no1249
	SUB8 no1249 1 no1249
	DIV8 no1249 4 layer1249
	MATH MOD8 no1249 4 no1249

	MOVEF_8 2.0 mode81249
	
	INPUT_DEVICE READY_RAW layer1249 no1249 0 mode81249 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1250:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1252
	DATA8 no1252
	DATA8 mode81252
	
	MOVEF_8 VGV_LEFT_SENSOR no1252
	SUB8 no1252 1 no1252
	DIV8 no1252 4 layer1252
	MATH MOD8 no1252 4 no1252

	MOVEF_8 1.0 mode81252
	
	INPUT_DEVICE READY_RAW layer1252 no1252 0 mode81252 0
    JR_LTEQF VGV_G 70.0 else1253_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1254:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif1253
  else1253_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1256:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1257:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1258:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1259:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else1253_2:
  endif1253:
    JR endif1248
  else1248_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds1265
	MOVEF_32 3000.0 milliseconds1265
	DATA32 timer1265
	TIMER_WAIT milliseconds1265 timer1265
	TIMER_READY timer1265
    JR_GTEQF VGV_ULTRA 85.0 else1266_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1266_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1268:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1269:
  else1266_1:
  endif1266:
  else1248_2:
  endif1248:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1270:
  else1243_1:
  endif1243:
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1271_1
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1273:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1274:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1275:
  else1271_1:
  endif1271:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1276_1
    STRINGS DUPLICATE 'unknown' VGV_YELLOW_OBJECT
    JR_NEQF VGV_MEN_COUNT 1.0 else1278_1
    STRINGS DUPLICATE 'man' VGV_YELLOW_OBJECT
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif1278
  else1278_1:
    JR_NEQF VGV_FIRE_COUNT 1.0 else1278_2
    STRINGS DUPLICATE 'fire' VGV_YELLOW_OBJECT
    JR endif1278
  else1278_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1278_3
    STRINGS DUPLICATE 'chem' VGV_YELLOW_OBJECT
    JR endif1278
  else1278_3:
    JR_NEQF VGV_MEN_COUNT 2.0 else1278_4
    JR_NEQF VGV_FIRE_COUNT 2.0 else1278_4
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1278_4
    STRINGS DUPLICATE 'none' VGV_YELLOW_OBJECT
  else1278_4:
  endif1278:
  else1276_1:
  endif1276:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1281_1
    CALL EQ_STRING VGV_YELLOW_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or1284
    CALL EQ_STRING VGV_YELLOW_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1283_1
  or1284:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 30.0 0.0 'True' 

	DATA8 layer1288
	DATA8 nos1288
	DATA8 busy1288
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1288 nos1288
	JR_EQ8 0 nos1288 motornotbusy1288
  motorwaiting1288:
	OUTPUT_TEST layer1288 nos1288 busy1288
	JR_EQ8 busy1288 0 motornotbusy1288
	SLEEP
	JR motorwaiting1288
  motornotbusy1288:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 80.0 VLV_DEG_5
    MOVEF_F 40.0 VLV_ACCELERATION_5
    MOVEF_F 40.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1289:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1290:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1291 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1291:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 80.0 VLV_DEG_6
    MOVEF_F 40.0 VLV_ACCELERATION_6
    MOVEF_F 40.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB1292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB1292:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1293:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 35.0 0.0 'True' 

	DATA8 layer1295
	DATA8 nos1295
	DATA8 busy1295
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1295 nos1295
	JR_EQ8 0 nos1295 motornotbusy1295
  motorwaiting1295:
	OUTPUT_TEST layer1295 nos1295 busy1295
	JR_EQ8 busy1295 0 motornotbusy1295
	SLEEP
	JR motorwaiting1295
  motornotbusy1295:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1296:
    JR endif1283
  else1283_1:
    CALL EQ_STRING VGV_YELLOW_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1283_2
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 160.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1298:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1299:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB1300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB1300:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 160.0 VLV_DEG_6
    MOVEF_F 70.0 VLV_ACCELERATION_6
    MOVEF_F 70.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB1301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB1301:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1302:
    STRINGS DUPLICATE 'True' VGV_CHEM
    JR endif1283
  else1283_2:
    CALL EQ_STRING VGV_YELLOW_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1283_3
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
  else1283_3:
  endif1283:
    STRINGS DUPLICATE 'True' VGV_YELLOW
  else1281_1:
  endif1281:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 165.0 'True'

	DATA8 layer1306
	DATA8 nos1306
	DATA8 busy1306
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1306 nos1306
	JR_EQ8 0 nos1306 motornotbusy1306
  motorwaiting1306:
	OUTPUT_TEST layer1306 nos1306 busy1306
	JR_EQ8 busy1306 0 motornotbusy1306
	SLEEP
	JR motorwaiting1306
  motornotbusy1306:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB1307 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB1307:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 380.0 'True'

	DATA8 layer1310
	DATA8 nos1310
	DATA8 busy1310
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1310 nos1310
	JR_EQ8 0 nos1310 motornotbusy1310
  motorwaiting1310:
	OUTPUT_TEST layer1310 nos1310 busy1310
	JR_EQ8 busy1310 0 motornotbusy1310
	SLEEP
	JR motorwaiting1310
  motornotbusy1310:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB1311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB1311:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 300.0 VLV_DEG_5
    MOVEF_F 100.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1312:
    JR endif1237
  else1237_1:
    MOVEF_F 200.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1313:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 370.0 'True'

	DATA8 layer1316
	DATA8 nos1316
	DATA8 busy1316
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1316 nos1316
	JR_EQ8 0 nos1316 motornotbusy1316
  motorwaiting1316:
	OUTPUT_TEST layer1316 nos1316 busy1316
	JR_EQ8 busy1316 0 motornotbusy1316
	SLEEP
	JR motorwaiting1316
  motornotbusy1316:
    SUBF VGV_C 220.0 VGV_C
  else1237_2:
  endif1237:
    MOVEF_F 490.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1319:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile1319
  whilebody1319:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB1321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB1321:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody1319
  endwhile1319:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB1323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB1323:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1324_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 115.0 0.0 'True' 

	DATA8 layer1326
	DATA8 nos1326
	DATA8 busy1326
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1326 nos1326
	JR_EQ8 0 nos1326 motornotbusy1326
  motorwaiting1326:
	OUTPUT_TEST layer1326 nos1326 busy1326
	JR_EQ8 busy1326 0 motornotbusy1326
	SLEEP
	JR motorwaiting1326
  motornotbusy1326:
  else1324_1:
  endif1324:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1327:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 300.0 VLV_DEG_6
    MOVEF_F 100.0 VLV_ACCELERATION_6
    MOVEF_F 100.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB1328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB1328:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1329:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1330_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer1332
	DATA8 nos1332
	DATA8 busy1332
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1332 nos1332
	JR_EQ8 0 nos1332 motornotbusy1332
  motorwaiting1332:
	OUTPUT_TEST layer1332 nos1332 busy1332
	JR_EQ8 busy1332 0 motornotbusy1332
	SLEEP
	JR motorwaiting1332
  motornotbusy1332:
  else1330_1:
  endif1330:
    CALL EQ_STRING VGV_START_FROM_RIGHT 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1333_1
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1337
	DATA8 nos1337
	DATA8 busy1337
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1337 nos1337
	JR_EQ8 0 nos1337 motornotbusy1337
  motorwaiting1337:
	OUTPUT_TEST layer1337 nos1337 busy1337
	JR_EQ8 busy1337 0 motornotbusy1337
	SLEEP
	JR motorwaiting1337
  motornotbusy1337:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1341
	MOVEF_32 2000.0 milliseconds1341
	DATA32 timer1341
	TIMER_WAIT milliseconds1341 timer1341
	TIMER_READY timer1341
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1342:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 220.0 'True'

	DATA8 layer1345
	DATA8 nos1345
	DATA8 busy1345
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1345 nos1345
	JR_EQ8 0 nos1345 motornotbusy1345
  motorwaiting1345:
	OUTPUT_TEST layer1345 nos1345 busy1345
	JR_EQ8 busy1345 0 motornotbusy1345
	SLEEP
	JR motorwaiting1345
  motornotbusy1345:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1347
	DATA8 nos1347
	DATA8 busy1347
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1347 nos1347
	JR_EQ8 0 nos1347 motornotbusy1347
  motorwaiting1347:
	OUTPUT_TEST layer1347 nos1347 busy1347
	JR_EQ8 busy1347 0 motornotbusy1347
	SLEEP
	JR motorwaiting1347
  motornotbusy1347:
    MOVEF_F 107.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1349:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 1000.0 endwhile1349
  whilebody1349:
    WRITE32 ENDSUB_F_ULTRASONIC_SUPERFAST_0:CALLSUB1351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SUPERFAST_0
CALLSUB1351:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 1000.0 whilebody1349
  endwhile1349:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1356
	MOVEF_32 3000.0 milliseconds1356
	DATA32 timer1356
	TIMER_WAIT milliseconds1356 timer1356
	TIMER_READY timer1356
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1357:
    WRITE32 ENDSUB_F_TAKES_NORMAL_0:CALLSUB1358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKES_NORMAL_0
CALLSUB1358:
    JR endif1333
  else1333_1:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1361
	DATA8 nos1361
	DATA8 busy1361
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1361 nos1361
	JR_EQ8 0 nos1361 motornotbusy1361
  motorwaiting1361:
	OUTPUT_TEST layer1361 nos1361 busy1361
	JR_EQ8 busy1361 0 motornotbusy1361
	SLEEP
	JR motorwaiting1361
  motornotbusy1361:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1365
	MOVEF_32 2000.0 milliseconds1365
	DATA32 timer1365
	TIMER_WAIT milliseconds1365 timer1365
	TIMER_READY timer1365
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1366:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 190.0 0.0 'True' 

	DATA8 layer1368
	DATA8 nos1368
	DATA8 busy1368
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1368 nos1368
	JR_EQ8 0 nos1368 motornotbusy1368
  motorwaiting1368:
	OUTPUT_TEST layer1368 nos1368 busy1368
	JR_EQ8 busy1368 0 motornotbusy1368
	SLEEP
	JR motorwaiting1368
  motornotbusy1368:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 140.0 0.0 'True' 

	DATA8 layer1370
	DATA8 nos1370
	DATA8 busy1370
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1370 nos1370
	JR_EQ8 0 nos1370 motornotbusy1370
  motorwaiting1370:
	OUTPUT_TEST layer1370 nos1370 busy1370
	JR_EQ8 busy1370 0 motornotbusy1370
	SLEEP
	JR motorwaiting1370
  motornotbusy1370:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer1372
	DATA8 nos1372
	DATA8 busy1372
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1372 nos1372
	JR_EQ8 0 nos1372 motornotbusy1372
  motorwaiting1372:
	OUTPUT_TEST layer1372 nos1372 busy1372
	JR_EQ8 busy1372 0 motornotbusy1372
	SLEEP
	JR motorwaiting1372
  motornotbusy1372:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer1374
	DATA8 nos1374
	DATA8 busy1374
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1374 nos1374
	JR_EQ8 0 nos1374 motornotbusy1374
  motorwaiting1374:
	OUTPUT_TEST layer1374 nos1374 busy1374
	JR_EQ8 busy1374 0 motornotbusy1374
	SLEEP
	JR motorwaiting1374
  motornotbusy1374:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 93.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1379:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 1050.0 endwhile1379
  whilebody1379:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 1050.0 whilebody1379
  endwhile1379:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1385
	MOVEF_32 3000.0 milliseconds1385
	DATA32 timer1385
	TIMER_WAIT milliseconds1385 timer1385
	TIMER_READY timer1385
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1386:
    WRITE32 ENDSUB_F_TAKES_INVERSED_0:CALLSUB1387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKES_INVERSED_0
CALLSUB1387:
  else1333_2:
  endif1333:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 20.0 'True'

	DATA8 layer1390
	DATA8 nos1390
	DATA8 busy1390
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1390 nos1390
	JR_EQ8 0 nos1390 motornotbusy1390
  motorwaiting1390:
	OUTPUT_TEST layer1390 nos1390 busy1390
	JR_EQ8 busy1390 0 motornotbusy1390
	SLEEP
	JR motorwaiting1390
  motornotbusy1390:
    TIMER_READ timeMC9tmp
	SUB32 timeMC9tmp timeMC9 timeMC9tmp
	MOVE32_F timeMC9tmp VGV_T
    DATAF tmpf1392
    DATA8 flag1392
    DIVF VGV_T 60000.0 tmpf1392
    CP_EQF 0.0 60000.0 flag1392
    SELECTF flag1392 0.0 tmpf1392 F.0

    MATH FLOOR F.0 VGV_MINS
    MATH MOD VGV_T 60000.0 F.1
    DATAF tmpf1395
    DATA8 flag1395
    DIVF F.1 1000.0 tmpf1395
    CP_EQF 0.0 1000.0 flag1395
    SELECTF flag1395 0.0 tmpf1395 F.0

    MATH FLOOR F.0 VGV_SECS
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MINS '%g' 99 S.1
    CALL TEXT.APPEND S.1 ':' S.0
    STRINGS VALUE_FORMATTED VGV_SECS '%g' 99 S.1
    CALL TEXT.APPEND S.0 S.1 VGV_STR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_STR
    DATA32 milliseconds1403
	MOVEF_32 100000000.0 milliseconds1403
	DATA32 timer1403
	TIMER_WAIT milliseconds1403 timer1403
	TIMER_READY timer1403
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_ULTRASONIC_POWER_2:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VLV_V_1
    SUBF VLV_V_1 VLV_U_1 VLV_NOWERROR_1
    SUBF VGV_LASTERROR VLV_NOWERROR_1 VLV_DIF_1
    ADDF VGV_INTEGRAL VLV_NOWERROR_1 F.0
    DATAF tmpf1408
    DATA8 flag1408
    DIVF F.0 10.0 tmpf1408
    CP_EQF 0.0 10.0 flag1408
    SELECTF flag1408 0.0 tmpf1408 VLV_INTEGRAL_1

    SUBF VLV_NOWERROR_1 VGV_LASTERROR VLV_DERIVATIVE_1
    MULF VLV_NOWERROR_1 VGV_P_U F.0
    MULF VLV_INTEGRAL_1 VGV_D_U F.1
    ADDF F.0 F.1 VLV_UP_1
    ADDF VLV_POWER_1 VLV_UP_1 F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF VLV_POWER_1 VLV_UP_1 F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VLV_NOWERROR_1 VLV_LASTERROR_1
RETSUB_F_ULTRASONIC_POWER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_POWER_2:
SUB_F_AFTER_ACTION_0:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1419:
    DATA32 milliseconds1420
	MOVEF_32 300.0 milliseconds1420
	DATA32 timer1420
	TIMER_WAIT milliseconds1420 timer1420
	TIMER_READY timer1420
RETSUB_F_AFTER_ACTION_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_AFTER_ACTION_0:
SUB_F_ULTRASONIC_ZAMED_5:
    SUBF VLV_DEGREES_3 VLV_ZAMED_DEGREES_3 VLV_NORMAL_DEGREES_3
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1423:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VLV_NORMAL_DEGREES_3 endwhile1423
  whilebody1423:
    MOVEF_F VLV_BASE_POWER_3 VLV_POWER_1
    MOVEF_F VLV_U_3 VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB1425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB1425:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VLV_NORMAL_DEGREES_3 whilebody1423
  endwhile1423:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_3
  while1429:
    JR_GTEQF VLV_C_3 VLV_ZAMED_DEGREES_3 endwhile1429
  whilebody1429:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.1
    DATAF tmpf1431
    DATA8 flag1431
    DIVF F.1 VLV_ZAMED_DEGREES_3 tmpf1431
    CP_EQF 0.0 VLV_ZAMED_DEGREES_3 flag1431
    SELECTF flag1431 0.0 tmpf1431 F.0

    MULF F.0 VLV_BASE_POWER_3 VLV_MINUS_3
    SUBF VLV_BASE_POWER_3 VLV_MINUS_3 VLV_POWER_3
    JR_GTEQF VLV_POWER_3 VLV_MIN_POWER_3 else1434_1
    MOVEF_F VLV_MIN_POWER_3 VLV_POWER_3
  else1434_1:
  endif1434:
    MOVEF_F VLV_POWER_3 VLV_POWER_1
    MOVEF_F VLV_U_3 VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB1435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB1435:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_3
    JR_LTF VLV_C_3 VLV_ZAMED_DEGREES_3 whilebody1429
  endwhile1429:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1437:
RETSUB_F_ULTRASONIC_ZAMED_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_ZAMED_5:
SUB_F_RESET_0:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_MOVE_FORWARD_ACCELERATION_5:
    SUBF VLV_DEG_5 VLV_ACCELERATION_5 F.0
    SUBF F.0 VLV_ZAME_5 VLV_NORMAL_DEGREES_5
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1442:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
  while1444:
    JR_GTEQF VLV_C_5 VLV_ACCELERATION_5 endwhile1444
  whilebody1444:
    DATAF tmpf1445
    DATA8 flag1445
    DIVF VLV_C_5 VLV_ACCELERATION_5 tmpf1445
    CP_EQF 0.0 VLV_ACCELERATION_5 flag1445
    SELECTF flag1445 0.0 tmpf1445 VLV_P_5

    SUBF VLV_BASE_POWER_5 VLV_MIN_POWER_5 F.1
    MULF VLV_P_5 F.1 F.0
    ADDF F.0 VLV_MIN_POWER_5 VLV_POWER_5
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_P_5 VLV_DELTA_5
    SUBF VLV_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
    JR_LTF VLV_C_5 VLV_ACCELERATION_5 whilebody1444
  endwhile1444:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1461:
    MOVEF_F 0.0 VLV_C_5
  while1462:
    JR_GTEQF VLV_C_5 VLV_NORMAL_DEGREES_5 endwhile1462
  whilebody1462:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 1.0 VLV_DELTA_5
    SUBF VLV_BASE_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_BASE_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
    JR_LTF VLV_C_5 VLV_NORMAL_DEGREES_5 whilebody1462
  endwhile1462:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1475:
    MOVEF_F 0.0 VLV_C_5
  while1476:
    JR_GTEQF VLV_C_5 VLV_ZAME_5 endwhile1476
  whilebody1476:
    DATAF tmpf1477
    DATA8 flag1477
    DIVF VLV_C_5 VLV_ZAME_5 tmpf1477
    CP_EQF 0.0 VLV_ZAME_5 flag1477
    SELECTF flag1477 0.0 tmpf1477 VLV_P_5

    SUBF VLV_BASE_POWER_5 VLV_MIN_POWER_5 F.1
    SUBF 1.0 VLV_P_5 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_5 VLV_POWER_5
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    SUBF 1.0 VLV_P_5 F.1
    MULF F.0 F.1 VLV_DELTA_5
    SUBF VLV_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
    JR_LTF VLV_C_5 VLV_ZAME_5 whilebody1476
  endwhile1476:
RETSUB_F_MOVE_FORWARD_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:
SUB_F_MOVE_BACKWARD_ACCELERATION_5:
    SUBF VLV_DEG_6 VLV_ACCELERATION_6 F.0
    SUBF F.0 VLV_ZAME_6 VLV_NORMAL_DEGREES_6
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1497:
    MOVEF_F 0.0 VLV_C_6
  while1498:
    JR_GTEQF VLV_C_6 VLV_ACCELERATION_6 endwhile1498
  whilebody1498:
    DATAF tmpf1499
    DATA8 flag1499
    DIVF VLV_C_6 VLV_ACCELERATION_6 tmpf1499
    CP_EQF 0.0 VLV_ACCELERATION_6 flag1499
    SELECTF flag1499 0.0 tmpf1499 VLV_P_6

    SUBF VLV_BASE_POWER_6 VLV_MIN_POWER_6 F.1
    MULF VLV_P_6 F.1 F.0
    ADDF F.0 VLV_MIN_POWER_6 VLV_POWER_6
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.4
    MULF F.4 VGV_RIGHT_FORWARD F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_P_6 F.0
    MULF F.0 -1.0 VLV_DELTA_6
    SUBF VLV_POWER_6 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF VLV_POWER_6 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_6 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_6 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_6
    JR_LTF VLV_C_6 VLV_ACCELERATION_6 whilebody1498
  endwhile1498:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1519:
    MOVEF_F 0.0 VLV_C_6
  while1520:
    JR_GTEQF VLV_C_6 VLV_NORMAL_DEGREES_6 endwhile1520
  whilebody1520:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 -1.0 VLV_DELTA_6
    SUBF VLV_BASE_POWER_6 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF VLV_BASE_POWER_6 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_6 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_6 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_6
    JR_LTF VLV_C_6 VLV_NORMAL_DEGREES_6 whilebody1520
  endwhile1520:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1536:
    MOVEF_F 0.0 VLV_C_6
  while1537:
    JR_GTEQF VLV_C_6 VLV_ZAME_6 endwhile1537
  whilebody1537:
    DATAF tmpf1538
    DATA8 flag1538
    DIVF VLV_C_6 VLV_ZAME_6 tmpf1538
    CP_EQF 0.0 VLV_ZAME_6 flag1538
    SELECTF flag1538 0.0 tmpf1538 VLV_P_6

    SUBF VLV_BASE_POWER_6 VLV_MIN_POWER_6 F.1
    SUBF 1.0 VLV_P_6 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_6 VLV_POWER_6
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.4
    MULF F.4 VGV_RIGHT_FORWARD F.3
    SUBF F.2 F.3 F.1
    SUBF 1.0 VLV_P_6 F.2
    MULF F.1 F.2 F.0
    MULF F.0 -1.0 VLV_DELTA_6
    SUBF VLV_POWER_6 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF VLV_POWER_6 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_6 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_6 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_6
    JR_LTF VLV_C_6 VLV_ZAME_6 whilebody1537
  endwhile1537:
RETSUB_F_MOVE_BACKWARD_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:
SUB_F_MOTOR_FORWARD_ACCELERATION_7:
    SUBF VLV_DEG_7 VLV_ACCELERATION_7 F.0
    SUBF F.0 VLV_ZAME_7 VLV_NORMAL_DEG_7
    CALL MOTOR.RESETCOUNT VLV_MOTOR_7
    MOVEF_F 0.0 VLV_C_7
  while1563:
    JR_GTEQF VLV_C_7 VLV_ACCELERATION_7 endwhile1563
  whilebody1563:
    DATAF tmpf1564
    DATA8 flag1564
    DIVF VLV_C_7 VLV_ACCELERATION_7 tmpf1564
    CP_EQF 0.0 VLV_ACCELERATION_7 flag1564
    SELECTF flag1564 0.0 tmpf1564 VLV_P_7

    SUBF VLV_BASE_POWER_7 VLV_MIN_POWER_7 F.1
    MULF F.1 VLV_P_7 F.0
    ADDF F.0 VLV_MIN_POWER_7 VLV_POWER_7
    MATH FLOOR VLV_POWER_7 F.0
    MULF F.0 VLV_FORWARD_7 VLV_POWER_7
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_POWER_7 '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    CALL MOTOR.START VLV_MOTOR_7 VLV_POWER_7
    CALL MOTOR.GETCOUNT VLV_MOTOR_7 F.0
    MULF F.0 VLV_FORWARD_7 VLV_C_7
    DATA32 milliseconds1578
	MOVEF_32 10.0 milliseconds1578
	DATA32 timer1578
	TIMER_WAIT milliseconds1578 timer1578
	TIMER_READY timer1578
    JR_LTF VLV_C_7 VLV_ACCELERATION_7 whilebody1563
  endwhile1563:
    MULF VLV_BASE_POWER_7 VLV_FORWARD_7 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_7 F.0 0.0 VLV_NORMAL_DEG_7 0.0 'False' 

	DATA8 layer1580
	DATA8 nos1580
	DATA8 busy1580
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_7 layer1580 nos1580
	JR_EQ8 0 nos1580 motornotbusy1580
  motorwaiting1580:
	OUTPUT_TEST layer1580 nos1580 busy1580
	JR_EQ8 busy1580 0 motornotbusy1580
	SLEEP
	JR motorwaiting1580
  motornotbusy1580:
    CALL MOTOR.RESETCOUNT VLV_MOTOR_7
    MOVEF_F 0.0 VLV_C_7
  while1582:
    JR_GTEQF VLV_C_7 VLV_ZAME_7 endwhile1582
  whilebody1582:
    DATAF tmpf1583
    DATA8 flag1583
    DIVF VLV_C_7 VLV_ZAME_7 tmpf1583
    CP_EQF 0.0 VLV_ZAME_7 flag1583
    SELECTF flag1583 0.0 tmpf1583 VLV_P_7

    SUBF VLV_BASE_POWER_7 VLV_MIN_POWER_7 F.1
    SUBF 1.0 VLV_P_7 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_7 VLV_POWER_7
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_POWER_7 '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    MULF VLV_POWER_7 VLV_FORWARD_7 F.0
    CALL MOTOR.START VLV_MOTOR_7 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_7 F.0
    MULF F.0 VLV_FORWARD_7 VLV_C_7
    DATA32 milliseconds1597
	MOVEF_32 10.0 milliseconds1597
	DATA32 timer1597
	TIMER_WAIT milliseconds1597 timer1597
	TIMER_READY timer1597
    JR_LTF VLV_C_7 VLV_ZAME_7 whilebody1582
  endwhile1582:
RETSUB_F_MOTOR_FORWARD_ACCELERATION_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:
SUB_F_MOTOR_BACKWARD_ACCELERATION_7:
    SUBF VLV_DEG_8 VLV_ACCELERATION_8 F.0
    SUBF F.0 VLV_ZAME_8 VLV_NORMAL_DEG_8
    CALL MOTOR.RESETCOUNT VLV_MOTOR_8
    MOVEF_F 0.0 VLV_C_8
  while1601:
    JR_GTEQF VLV_C_8 VLV_ACCELERATION_8 endwhile1601
  whilebody1601:
    DATAF tmpf1602
    DATA8 flag1602
    DIVF VLV_C_8 VLV_ACCELERATION_8 tmpf1602
    CP_EQF 0.0 VLV_ACCELERATION_8 flag1602
    SELECTF flag1602 0.0 tmpf1602 F.1

    SUBF VLV_BASE_POWER_8 VLV_MIN_POWER_8 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_8 VLV_POWER_8
    MULF VLV_FORWARD_8 VLV_POWER_8 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VLV_MOTOR_8 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_8 F.1
    MULF F.1 VLV_FORWARD_8 F.0
    MULF F.0 -1.0 VLV_C_8
    DATA32 milliseconds1612
	MOVEF_32 10.0 milliseconds1612
	DATA32 timer1612
	TIMER_WAIT milliseconds1612 timer1612
	TIMER_READY timer1612
    JR_LTF VLV_C_8 VLV_ACCELERATION_8 whilebody1601
  endwhile1601:
    MULF VLV_FORWARD_8 VLV_BASE_POWER_8 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_8 F.0 0.0 VLV_NORMAL_DEG_8 0.0 'False' 

	DATA8 layer1615
	DATA8 nos1615
	DATA8 busy1615
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_8 layer1615 nos1615
	JR_EQ8 0 nos1615 motornotbusy1615
  motorwaiting1615:
	OUTPUT_TEST layer1615 nos1615 busy1615
	JR_EQ8 busy1615 0 motornotbusy1615
	SLEEP
	JR motorwaiting1615
  motornotbusy1615:
    CALL MOTOR.RESETCOUNT VLV_MOTOR_8
    MOVEF_F 0.0 VLV_C_8
  while1617:
    JR_GTEQF VLV_C_8 VLV_ZAME_8 endwhile1617
  whilebody1617:
    DATAF tmpf1618
    DATA8 flag1618
    DIVF VLV_C_8 VLV_ZAME_8 tmpf1618
    CP_EQF 0.0 VLV_ZAME_8 flag1618
    SELECTF flag1618 0.0 tmpf1618 VLV_P_8

    SUBF VLV_BASE_POWER_8 VLV_MIN_POWER_8 F.1
    SUBF 1.0 VLV_P_8 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_8 VLV_POWER_8
    MULF VLV_FORWARD_8 VLV_POWER_8 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VLV_MOTOR_8 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_8 F.1
    MULF F.1 VLV_FORWARD_8 F.0
    MULF F.0 -1.0 VLV_C_8
    DATA32 milliseconds1629
	MOVEF_32 10.0 milliseconds1629
	DATA32 timer1629
	TIMER_WAIT milliseconds1629 timer1629
	TIMER_READY timer1629
    JR_LTF VLV_C_8 VLV_ZAME_8 whilebody1617
  endwhile1617:
RETSUB_F_MOTOR_BACKWARD_ACCELERATION_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
