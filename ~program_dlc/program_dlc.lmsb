DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERSED_MOTOR 252
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_MOTORS 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_LINE_SENSOR
DATAF VGV_ULTRASONIC
DATAF VGV_RIGHT_FORWARD
DATAF VGV_LEFT_FORWARD
DATAF VGV_A
DATAF VGV_P
DATAF VGV_D
DATAF VGV_LASTERROR
DATAF VGV_NOWERROR
DATAF VGV_DIF
DATAF VGV_INTEGRAL
DATAF VGV_DERIVATIVE
DATAF VGV_UP
DATAF VGV_P_U
DATAF VGV_D_U
DATAF VGV_DEG
DATAS VGV_IS_CHEM_ON_RIGHT 252
DATAS VGV_IS_CHEM_ON_LEFT 252
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_CHEM 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_CUBES_COUNT
DATAS VGV_OBJECT 252
DATAF VGV_B
DATAF VGV_W
DATAF VGV_WATER_STATE
DATAS VGV_START_FROM_RIGHT 252
DATAF VGV_C
DATAF VGV_G
DATAF VGV_R_C
DATAF VGV_L_C
DATAF VGV_DIFF
DATAF VGV_R_P
DATAF VGV_L_P
DATAF VGV_I
DATAS VGV_TAKE_RED_RIGHT 252
DATAS VGV_TAKE_RED_LEFT 252
DATAF VGV_CHEM_BACK
DATAF VGV_NO_BACK
DATAF VGV_ULTRA

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VGV_I
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VGV_I
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 1.0 VGV_LINE_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 1.0 VGV_P
    MOVEF_F 6.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 1.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 2.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else1_1
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 1.0 'Bitch, we fucked up'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB5 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB5:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB6 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB6:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB7 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB7:
  else1_1:
  endif1:
    DATA8 layer8
	DATA8 no8
	DATA8 mode88
	
	MOVEF_8 VGV_LINE_SENSOR no8
	SUB8 no8 1 no8
	DIV8 no8 4 layer8
	MATH MOD8 no8 4 no8

	MOVEF_8 0.0 mode88
	
	INPUT_DEVICE READY_RAW layer8 no8 0 mode88 0
    DATA8 layer9
	DATA8 no9
	DATA8 mode89
	
	MOVEF_8 VGV_RIGHT_SENSOR no9
	SUB8 no9 1 no9
	DIV8 no9 4 layer9
	MATH MOD8 no9 4 no9

	MOVEF_8 1.0 mode89
	
	INPUT_DEVICE READY_RAW layer9 no9 0 mode89 0
    DATA8 layer10
	DATA8 no10
	DATA8 mode810
	
	MOVEF_8 VGV_LEFT_SENSOR no10
	SUB8 no10 1 no10
	DIV8 no10 4 layer10
	MATH MOD8 no10 4 no10

	MOVEF_8 1.0 mode810
	
	INPUT_DEVICE READY_RAW layer10 no10 0 mode810 0
    DATA8 layer11
	DATA8 no11
	DATA8 mode811
	
	MOVEF_8 VGV_ULTRASONIC no11
	SUB8 no11 1 no11
	DIV8 no11 4 layer11
	MATH MOD8 no11 4 no11

	MOVEF_8 0.0 mode811
	
	INPUT_DEVICE READY_RAW layer11 no11 0 mode811 0
    MOVEF_F 0.0 VGV_WATER_STATE
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB12:
ENDTHREAD:
    RETURN
SUB_F_LINE_0:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF 20.0 F.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf17
    DATA8 flag17
    DIVF F.0 10.0 tmpf17
    CP_EQF 0.0 10.0 flag17
    SELECTF flag17 0.0 tmpf17 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_LINE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_0:
SUB_F_STOP_0:
    CALL MOTOR.STOP VGV_MOTORS 'True'
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_STOP_RIGHT_0:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
RETSUB_F_STOP_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_RIGHT_0:
SUB_F_DELAY_0:
    DATA32 milliseconds28
	MOVEF_32 500.0 milliseconds28
	DATA32 timer28
	TIMER_WAIT milliseconds28 timer28
	TIMER_READY timer28
RETSUB_F_DELAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_0:
SUB_F_ULTRASONIC_SLOW_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf33
    DATA8 flag33
    DIVF F.0 10.0 tmpf33
    CP_EQF 0.0 10.0 flag33
    SELECTF flag33 0.0 tmpf33 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 20.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 20.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SLOW_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SLOW_0:
SUB_F_ULTRASONIC_FAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf48
    DATA8 flag48
    DIVF F.0 10.0 tmpf48
    CP_EQF 0.0 10.0 flag48
    SELECTF flag48 0.0 tmpf48 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 35.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 35.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_FAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_FAST_0:
SUB_F_TAKE_CHEM_ON_LEFT_0:
    MOVEF_F 280.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB59 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB59:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB60:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for62:
    JR_GTF VGV_I 20.0 endfor62
  forbody62:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds66
	MOVEF_32 10.0 milliseconds66
	DATA32 timer66
	TIMER_WAIT milliseconds66 timer66
	TIMER_READY timer66
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody62
  endfor62:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 360.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer72
	DATA8 nos72
	DATA8 busy72
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer72 nos72
	JR_EQ8 0 nos72 motornotbusy72
  motorwaiting72:
	OUTPUT_TEST layer72 nos72 busy72
	JR_EQ8 busy72 0 motornotbusy72
	SLEEP
	JR motorwaiting72
  motornotbusy72:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer73
	DATA8 nos73
	DATA8 busy73
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer73 nos73
	JR_EQ8 0 nos73 motornotbusy73
  motorwaiting73:
	OUTPUT_TEST layer73 nos73 busy73
	JR_EQ8 busy73 0 motornotbusy73
	SLEEP
	JR motorwaiting73
  motornotbusy73:
    MOVEF_F 70.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB74 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB74:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer75
	DATA8 nos75
	DATA8 busy75
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer75 nos75
	JR_EQ8 0 nos75 motornotbusy75
  motorwaiting75:
	OUTPUT_TEST layer75 nos75 busy75
	JR_EQ8 busy75 0 motornotbusy75
	SLEEP
	JR motorwaiting75
  motornotbusy75:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB76:
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB77:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for79:
    JR_GTF VGV_I 20.0 endfor79
  forbody79:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds82
	MOVEF_32 10.0 milliseconds82
	DATA32 timer82
	TIMER_WAIT milliseconds82 timer82
	TIMER_READY timer82
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody79
  endfor79:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 350.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer88
	DATA8 nos88
	DATA8 busy88
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer88 nos88
	JR_EQ8 0 nos88 motornotbusy88
  motorwaiting88:
	OUTPUT_TEST layer88 nos88 busy88
	JR_EQ8 busy88 0 motornotbusy88
	SLEEP
	JR motorwaiting88
  motornotbusy88:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB89:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB90:
    MOVEF_F 280.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB91:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB92:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB93:
RETSUB_F_TAKE_CHEM_ON_LEFT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_0:
SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for95:
    JR_GTF VGV_I 20.0 endfor95
  forbody95:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds101
	MOVEF_32 30.0 milliseconds101
	DATA32 timer101
	TIMER_WAIT milliseconds101 timer101
	TIMER_READY timer101
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody95
  endfor95:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 170.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer107
	DATA8 nos107
	DATA8 busy107
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer107 nos107
	JR_EQ8 0 nos107 motornotbusy107
  motorwaiting107:
	OUTPUT_TEST layer107 nos107 busy107
	JR_EQ8 busy107 0 motornotbusy107
	SLEEP
	JR motorwaiting107
  motornotbusy107:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB108:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer109
	DATA8 nos109
	DATA8 busy109
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer109 nos109
	JR_EQ8 0 nos109 motornotbusy109
  motorwaiting109:
	OUTPUT_TEST layer109 nos109 busy109
	JR_EQ8 busy109 0 motornotbusy109
	SLEEP
	JR motorwaiting109
  motornotbusy109:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for111:
    JR_GTF VGV_I 20.0 endfor111
  forbody111:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds114
	MOVEF_32 10.0 milliseconds114
	DATA32 timer114
	TIMER_WAIT milliseconds114 timer114
	TIMER_READY timer114
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody111
  endfor111:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer120
	DATA8 nos120
	DATA8 busy120
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer120 nos120
	JR_EQ8 0 nos120 motornotbusy120
  motorwaiting120:
	OUTPUT_TEST layer120 nos120 busy120
	JR_EQ8 busy120 0 motornotbusy120
	SLEEP
	JR motorwaiting120
  motornotbusy120:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB121:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer122
	DATA8 nos122
	DATA8 busy122
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer122 nos122
	JR_EQ8 0 nos122 motornotbusy122
  motorwaiting122:
	OUTPUT_TEST layer122 nos122 busy122
	JR_EQ8 busy122 0 motornotbusy122
	SLEEP
	JR motorwaiting122
  motornotbusy122:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB123:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB124:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for126:
    JR_GTF VGV_I 20.0 endfor126
  forbody126:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds130
	MOVEF_32 10.0 milliseconds130
	DATA32 timer130
	TIMER_WAIT milliseconds130 timer130
	TIMER_READY timer130
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody126
  endfor126:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer136
	DATA8 nos136
	DATA8 busy136
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer136 nos136
	JR_EQ8 0 nos136 motornotbusy136
  motorwaiting136:
	OUTPUT_TEST layer136 nos136 busy136
	JR_EQ8 busy136 0 motornotbusy136
	SLEEP
	JR motorwaiting136
  motornotbusy136:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB137:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB138:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for140:
    JR_GTF VGV_I 20.0 endfor140
  forbody140:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds144
	MOVEF_32 30.0 milliseconds144
	DATA32 timer144
	TIMER_WAIT milliseconds144 timer144
	TIMER_READY timer144
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody140
  endfor140:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 170.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer150
	DATA8 nos150
	DATA8 busy150
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer150 nos150
	JR_EQ8 0 nos150 motornotbusy150
  motorwaiting150:
	OUTPUT_TEST layer150 nos150 busy150
	JR_EQ8 busy150 0 motornotbusy150
	SLEEP
	JR motorwaiting150
  motornotbusy150:
RETSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for152:
    JR_GTF VGV_I 20.0 endfor152
  forbody152:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds158
	MOVEF_32 30.0 milliseconds158
	DATA32 timer158
	TIMER_WAIT milliseconds158 timer158
	TIMER_READY timer158
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody152
  endfor152:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer164
	DATA8 nos164
	DATA8 busy164
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer164 nos164
	JR_EQ8 0 nos164 motornotbusy164
  motorwaiting164:
	OUTPUT_TEST layer164 nos164 busy164
	JR_EQ8 busy164 0 motornotbusy164
	SLEEP
	JR motorwaiting164
  motornotbusy164:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB165:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer166
	DATA8 nos166
	DATA8 busy166
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer166 nos166
	JR_EQ8 0 nos166 motornotbusy166
  motorwaiting166:
	OUTPUT_TEST layer166 nos166 busy166
	JR_EQ8 busy166 0 motornotbusy166
	SLEEP
	JR motorwaiting166
  motornotbusy166:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for168:
    JR_GTF VGV_I 20.0 endfor168
  forbody168:
    MULF VGV_I VGV_LEFT_FORWARD F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds171
	MOVEF_32 10.0 milliseconds171
	DATA32 timer171
	TIMER_WAIT milliseconds171 timer171
	TIMER_READY timer171
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody168
  endfor168:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer177
	DATA8 nos177
	DATA8 busy177
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer177 nos177
	JR_EQ8 0 nos177 motornotbusy177
  motorwaiting177:
	OUTPUT_TEST layer177 nos177 busy177
	JR_EQ8 busy177 0 motornotbusy177
	SLEEP
	JR motorwaiting177
  motornotbusy177:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB178:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer179
	DATA8 nos179
	DATA8 busy179
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer179 nos179
	JR_EQ8 0 nos179 motornotbusy179
  motorwaiting179:
	OUTPUT_TEST layer179 nos179 busy179
	JR_EQ8 busy179 0 motornotbusy179
	SLEEP
	JR motorwaiting179
  motornotbusy179:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB180:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB181:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for183:
    JR_GTF VGV_I 20.0 endfor183
  forbody183:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds187
	MOVEF_32 10.0 milliseconds187
	DATA32 timer187
	TIMER_WAIT milliseconds187 timer187
	TIMER_READY timer187
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody183
  endfor183:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer193
	DATA8 nos193
	DATA8 busy193
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer193 nos193
	JR_EQ8 0 nos193 motornotbusy193
  motorwaiting193:
	OUTPUT_TEST layer193 nos193 busy193
	JR_EQ8 busy193 0 motornotbusy193
	SLEEP
	JR motorwaiting193
  motornotbusy193:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB194:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB195:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for197:
    JR_GTF VGV_I 20.0 endfor197
  forbody197:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds201
	MOVEF_32 30.0 milliseconds201
	DATA32 timer201
	TIMER_WAIT milliseconds201 timer201
	TIMER_READY timer201
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody197
  endfor197:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer207
	DATA8 nos207
	DATA8 busy207
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer207 nos207
	JR_EQ8 0 nos207 motornotbusy207
  motorwaiting207:
	OUTPUT_TEST layer207 nos207 busy207
	JR_EQ8 busy207 0 motornotbusy207
	SLEEP
	JR motorwaiting207
  motornotbusy207:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else208_1
    CALL MOTOR.START VGV_WATER_MOTOR -30.0
    DATA32 milliseconds210
	MOVEF_32 1500.0 milliseconds210
	DATA32 timer210
	TIMER_WAIT milliseconds210 timer210
	TIMER_READY timer210
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif208
  else208_1:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds213
	MOVEF_32 1500.0 milliseconds213
	DATA32 timer213
	TIMER_WAIT milliseconds213 timer213
	TIMER_READY timer213
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
  else208_2:
  endif208:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_UPDATE_DISPLAY_0:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_OBJECT
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.1
    CALL TEXT.APPEND 'Red: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.1
    CALL TEXT.APPEND 'White: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 75.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_UPDATE_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UPDATE_DISPLAY_0:
SUB_F_RESET_VALUES_0:
    STRINGS DUPLICATE 'None' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
RETSUB_F_RESET_VALUES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_VALUES_0:
SUB_F_CLOSE_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -10.0 0.0 70.0 0.0 'True' 

	DATA8 layer226
	DATA8 nos226
	DATA8 busy226
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer226 nos226
	JR_EQ8 0 nos226 motornotbusy226
  motorwaiting226:
	OUTPUT_TEST layer226 nos226 busy226
	JR_EQ8 busy226 0 motornotbusy226
	SLEEP
	JR motorwaiting226
  motornotbusy226:
RETSUB_F_CLOSE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_0:
SUB_F_OPEN_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 10.0 0.0 70.0 0.0 'True' 

	DATA8 layer227
	DATA8 nos227
	DATA8 busy227
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer227 nos227
	JR_EQ8 0 nos227 motornotbusy227
  motorwaiting227:
	OUTPUT_TEST layer227 nos227 busy227
	JR_EQ8 busy227 0 motornotbusy227
	SLEEP
	JR motorwaiting227
  motornotbusy227:
RETSUB_F_OPEN_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_0:
SUB_F_TAKE_CUBES_0:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB228:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB229:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer232
	DATA8 nos232
	DATA8 busy232
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer232 nos232
	JR_EQ8 0 nos232 motornotbusy232
  motorwaiting232:
	OUTPUT_TEST layer232 nos232 busy232
	JR_EQ8 busy232 0 motornotbusy232
	SLEEP
	JR motorwaiting232
  motornotbusy232:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB233:
    MULF VGV_RIGHT_FORWARD -30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds236
	MOVEF_32 1500.0 milliseconds236
	DATA32 timer236
	TIMER_WAIT milliseconds236 timer236
	TIMER_READY timer236
    WRITE32 ENDSUB_F_STOP_0:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB237:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB238:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 227.0 VGV_A
  while240:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 930.0 endwhile240
  whilebody240:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB242:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 930.0 whilebody240
  endwhile240:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB244:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB245:
RETSUB_F_TAKE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_0:
SUB_F_TAKE_LONG_0:
    MULF VGV_RIGHT_FORWARD 15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer247
	DATA8 nos247
	DATA8 busy247
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer247 nos247
	JR_EQ8 0 nos247 motornotbusy247
  motorwaiting247:
	OUTPUT_TEST layer247 nos247 busy247
	JR_EQ8 busy247 0 motornotbusy247
	SLEEP
	JR motorwaiting247
  motornotbusy247:
    MULF VGV_LEFT_FORWARD 15.0 F.0
    MULF VGV_RIGHT_FORWARD 15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer250
	DATA8 nos250
	DATA8 busy250
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer250 nos250
	JR_EQ8 0 nos250 motornotbusy250
  motorwaiting250:
	OUTPUT_TEST layer250 nos250 busy250
	JR_EQ8 busy250 0 motornotbusy250
	SLEEP
	JR motorwaiting250
  motornotbusy250:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB251:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer254
	DATA8 nos254
	DATA8 busy254
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer254 nos254
	JR_EQ8 0 nos254 motornotbusy254
  motorwaiting254:
	OUTPUT_TEST layer254 nos254 busy254
	JR_EQ8 busy254 0 motornotbusy254
	SLEEP
	JR motorwaiting254
  motornotbusy254:
    JR_NEQF VGV_CUBES_COUNT 2.0 else255_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB256:
  else255_1:
  endif255:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 38.0 'True'

	DATA8 layer259
	DATA8 nos259
	DATA8 busy259
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer259 nos259
	JR_EQ8 0 nos259 motornotbusy259
  motorwaiting259:
	OUTPUT_TEST layer259 nos259 busy259
	JR_EQ8 busy259 0 motornotbusy259
	SLEEP
	JR motorwaiting259
  motornotbusy259:
    MULF VGV_RIGHT_FORWARD -15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer261
	DATA8 nos261
	DATA8 busy261
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer261 nos261
	JR_EQ8 0 nos261 motornotbusy261
  motorwaiting261:
	OUTPUT_TEST layer261 nos261 busy261
	JR_EQ8 busy261 0 motornotbusy261
	SLEEP
	JR motorwaiting261
  motornotbusy261:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_0:
SUB_F_TAKE_NEAR_0:
    MULF -15.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer263
	DATA8 nos263
	DATA8 busy263
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer263 nos263
	JR_EQ8 0 nos263 motornotbusy263
  motorwaiting263:
	OUTPUT_TEST layer263 nos263 busy263
	JR_EQ8 busy263 0 motornotbusy263
	SLEEP
	JR motorwaiting263
  motornotbusy263:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer265
	DATA8 nos265
	DATA8 busy265
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer265 nos265
	JR_EQ8 0 nos265 motornotbusy265
  motorwaiting265:
	OUTPUT_TEST layer265 nos265 busy265
	JR_EQ8 busy265 0 motornotbusy265
	SLEEP
	JR motorwaiting265
  motornotbusy265:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB266:
    MULF 15.0 VGV_LEFT_FORWARD F.0
    MULF 15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer269
	DATA8 nos269
	DATA8 busy269
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer269 nos269
	JR_EQ8 0 nos269 motornotbusy269
  motorwaiting269:
	OUTPUT_TEST layer269 nos269 busy269
	JR_EQ8 busy269 0 motornotbusy269
	SLEEP
	JR motorwaiting269
  motornotbusy269:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB270:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer273
	DATA8 nos273
	DATA8 busy273
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer273 nos273
	JR_EQ8 0 nos273 motornotbusy273
  motorwaiting273:
	OUTPUT_TEST layer273 nos273 busy273
	JR_EQ8 busy273 0 motornotbusy273
	SLEEP
	JR motorwaiting273
  motornotbusy273:
    JR_NEQF VGV_CUBES_COUNT 2.0 else274_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB275:
  else274_1:
  endif274:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer278
	DATA8 nos278
	DATA8 busy278
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer278 nos278
	JR_EQ8 0 nos278 motornotbusy278
  motorwaiting278:
	OUTPUT_TEST layer278 nos278 busy278
	JR_EQ8 busy278 0 motornotbusy278
	SLEEP
	JR motorwaiting278
  motornotbusy278:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer280
	DATA8 nos280
	DATA8 busy280
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer280 nos280
	JR_EQ8 0 nos280 motornotbusy280
  motorwaiting280:
	OUTPUT_TEST layer280 nos280 busy280
	JR_EQ8 busy280 0 motornotbusy280
	SLEEP
	JR motorwaiting280
  motornotbusy280:
    MULF VGV_RIGHT_FORWARD -15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer282
	DATA8 nos282
	DATA8 busy282
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer282 nos282
	JR_EQ8 0 nos282 motornotbusy282
  motorwaiting282:
	OUTPUT_TEST layer282 nos282 busy282
	JR_EQ8 busy282 0 motornotbusy282
	SLEEP
	JR motorwaiting282
  motornotbusy282:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB283:
    MULF VGV_LEFT_FORWARD 15.0 F.0
    MULF VGV_RIGHT_FORWARD 15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer286
	DATA8 nos286
	DATA8 busy286
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer286 nos286
	JR_EQ8 0 nos286 motornotbusy286
  motorwaiting286:
	OUTPUT_TEST layer286 nos286 busy286
	JR_EQ8 busy286 0 motornotbusy286
	SLEEP
	JR motorwaiting286
  motornotbusy286:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_0:
SUB_F_GO_FORWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_0:
SUB_F_GO_BACKWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF -20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF -20.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_BACKWARD_0:
SUB_F_MOVE_FORWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while313:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile313
  whilebody313:
    WRITE32 ENDSUB_F_GO_FORWARD_0:CALLSUB315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_0
CALLSUB315:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody313
  endwhile313:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB317:
RETSUB_F_MOVE_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_0:
SUB_F_MOVE_BACKWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while320:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_LTEQF F.0 F.1 endwhile320
  whilebody320:
    WRITE32 ENDSUB_F_GO_BACKWARD_0:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_0
CALLSUB323:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_GTF F.0 F.1 whilebody320
  endwhile320:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB326:
RETSUB_F_MOVE_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_0:
SUB_F_MAIN_0:
    STRINGS DUPLICATE 'False' VGV_START_FROM_RIGHT
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else327_1
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 53.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds332
	MOVEF_32 2000.0 milliseconds332
	DATA32 timer332
	TIMER_WAIT milliseconds332 timer332
	TIMER_READY timer332
    WRITE32 ENDSUB_F_STOP_0:CALLSUB333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB333:
    MULF VGV_RIGHT_FORWARD -30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds336
	MOVEF_32 1000.0 milliseconds336
	DATA32 timer336
	TIMER_WAIT milliseconds336 timer336
	TIMER_READY timer336
    WRITE32 ENDSUB_F_STOP_0:CALLSUB337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB337:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB338:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 200.0 0.0 'True' 

	DATA8 layer340
	DATA8 nos340
	DATA8 busy340
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer340 nos340
	JR_EQ8 0 nos340 motornotbusy340
  motorwaiting340:
	OUTPUT_TEST layer340 nos340 busy340
	JR_EQ8 busy340 0 motornotbusy340
	SLEEP
	JR motorwaiting340
  motornotbusy340:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB341 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB341:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer343
	DATA8 nos343
	DATA8 busy343
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer343 nos343
	JR_EQ8 0 nos343 motornotbusy343
  motorwaiting343:
	OUTPUT_TEST layer343 nos343 busy343
	JR_EQ8 busy343 0 motornotbusy343
	SLEEP
	JR motorwaiting343
  motornotbusy343:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB344:
  else327_1:
  endif327:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB345:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 80.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    MOVEF_F 1200.0 VGV_DEG
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else350_1
    MOVEF_F 1100.0 VGV_DEG
  else350_1:
  endif350:
  while352:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile352
  whilebody352:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody352
  endwhile352:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 55.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while358:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile358
  whilebody358:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody358
  endwhile358:
  while361:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile361
  whilebody361:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody361
  endwhile361:
    WRITE32 ENDSUB_F_STOP_RIGHT_0:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_RIGHT_0
CALLSUB364:
    MOVEF_F 105.0 VGV_A
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB365:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 290.0 0.0 'True' 

	DATA8 layer367
	DATA8 nos367
	DATA8 busy367
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer367 nos367
	JR_EQ8 0 nos367 motornotbusy367
  motorwaiting367:
	OUTPUT_TEST layer367 nos367 busy367
	JR_EQ8 busy367 0 motornotbusy367
	SLEEP
	JR motorwaiting367
  motornotbusy367:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB368:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 240.0 0.0 'True' 

	DATA8 layer370
	DATA8 nos370
	DATA8 busy370
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer370 nos370
	JR_EQ8 0 nos370 motornotbusy370
  motorwaiting370:
	OUTPUT_TEST layer370 nos370 busy370
	JR_EQ8 busy370 0 motornotbusy370
	SLEEP
	JR motorwaiting370
  motornotbusy370:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while372:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile372
  whilebody372:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB374:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody372
  endwhile372:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB376:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB377:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    MOVEF_F 500.0 VGV_C
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB379:
    JR_LTEQF VGV_B 80.0 else380_1
    DATA8 layer381
	DATA8 no381
	DATA8 mode8381
	
	MOVEF_8 VGV_RIGHT_SENSOR no381
	SUB8 no381 1 no381
	DIV8 no381 4 layer381
	MATH MOD8 no381 4 no381

	MOVEF_8 2.0 mode8381
	
	INPUT_DEVICE READY_RAW layer381 no381 0 mode8381 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer383
	DATA8 no383
	DATA8 mode8383
	
	MOVEF_8 VGV_RIGHT_SENSOR no383
	SUB8 no383 1 no383
	DIV8 no383 4 layer383
	MATH MOD8 no383 4 no383

	MOVEF_8 1.0 mode8383
	
	INPUT_DEVICE READY_RAW layer383 no383 0 mode8383 0
    JR_LTEQF VGV_G 100.0 else384_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB385:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif384
  else384_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB386:
    STRINGS DUPLICATE 'True' VGV_BROWN
    MOVEF_F 95.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB387:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB388:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB389:
  else384_2:
  endif384:
    JR endif380
  else380_1:
    JR_LTEQF VGV_B 5.0 else380_2
    DATA8 layer390
	DATA8 no390
	DATA8 mode8390
	
	MOVEF_8 VGV_RIGHT_SENSOR no390
	SUB8 no390 1 no390
	DIV8 no390 4 layer390
	MATH MOD8 no390 4 no390

	MOVEF_8 4.0 mode8390
	
	INPUT_DEVICE READY_RAW layer390 no390 0 mode8390 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    DATA8 layer392
	DATA8 no392
	DATA8 mode8392
	
	MOVEF_8 VGV_RIGHT_SENSOR no392
	SUB8 no392 1 no392
	DIV8 no392 4 layer392
	MATH MOD8 no392 4 no392

	MOVEF_8 1.0 mode8392
	
	INPUT_DEVICE READY_RAW layer392 no392 0 mode8392 0
    STRINGS DUPLICATE 'None' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB393 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB393:
    JR_LTEQF VGV_W 25.0 else394_1
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB395:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB396:
  else394_1:
  endif394:
  else380_2:
  endif380:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB397:
    DATA8 layer398
	DATA8 no398
	DATA8 mode8398
	
	MOVEF_8 VGV_LINE_SENSOR no398
	SUB8 no398 1 no398
	DIV8 no398 4 layer398
	MATH MOD8 no398 4 no398

	MOVEF_8 2.0 mode8398
	
	INPUT_DEVICE READY_RAW layer398 no398 0 mode8398 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    WRITE32 ENDSUB_F_STOP_0:CALLSUB400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB400:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB401:
  while402:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C or403
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 5.0 endwhile402
  or403:
  whilebody402:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB406:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody402
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 5.0 whilebody402
  endwhile402:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB409:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB410:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB411:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB412:
    MOVEF_F 350.0 VGV_C
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else413_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB415:
    MOVEF_F 90.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB416:
    ADDF VGV_C 110.0 VGV_C
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB418:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB420:
    JR_LTEQF VGV_B 80.0 else421_1
    DATA8 layer422
	DATA8 no422
	DATA8 mode8422
	
	MOVEF_8 VGV_RIGHT_SENSOR no422
	SUB8 no422 1 no422
	DIV8 no422 4 layer422
	MATH MOD8 no422 4 no422

	MOVEF_8 2.0 mode8422
	
	INPUT_DEVICE READY_RAW layer422 no422 0 mode8422 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer424
	DATA8 no424
	DATA8 mode8424
	
	MOVEF_8 VGV_RIGHT_SENSOR no424
	SUB8 no424 1 no424
	DIV8 no424 4 layer424
	MATH MOD8 no424 4 no424

	MOVEF_8 1.0 mode8424
	
	INPUT_DEVICE READY_RAW layer424 no424 0 mode8424 0
    JR_LTEQF VGV_G 100.0 else425_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB426:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif425
  else425_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB427:
    STRINGS DUPLICATE 'True' VGV_BROWN
    MOVEF_F 40.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB428:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB429:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB430:
  else425_2:
  endif425:
    JR endif421
  else421_1:
    JR_LTEQF VGV_B 12.0 else421_2
    DATA8 layer431
	DATA8 no431
	DATA8 mode8431
	
	MOVEF_8 VGV_RIGHT_SENSOR no431
	SUB8 no431 1 no431
	DIV8 no431 4 layer431
	MATH MOD8 no431 4 no431

	MOVEF_8 4.0 mode8431
	
	INPUT_DEVICE READY_RAW layer431 no431 0 mode8431 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB433:
    DATA8 layer434
	DATA8 no434
	DATA8 mode8434
	
	MOVEF_8 VGV_RIGHT_SENSOR no434
	SUB8 no434 1 no434
	DIV8 no434 4 layer434
	MATH MOD8 no434 4 no434

	MOVEF_8 1.0 mode8434
	
	INPUT_DEVICE READY_RAW layer434 no434 0 mode8434 0
    JR_LTEQF VGV_W 40.0 else435_1
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB436:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB437:
  else435_1:
  endif435:
  else421_2:
  endif421:
  else413_1:
  endif413:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB438:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while440:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile440
  whilebody440:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB442:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody440
  endwhile440:
    MOVEF_F 1.0 VGV_P_U
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else444_1
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    JR endif444
  else444_1:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  else444_2:
  endif444:
    DATA32 milliseconds452
	MOVEF_32 1000.0 milliseconds452
	DATA32 timer452
	TIMER_WAIT milliseconds452 timer452
	TIMER_READY timer452
    WRITE32 ENDSUB_F_STOP_0:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB453:
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_LEFT
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB454:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB456:
    JR_LTEQF VGV_B 85.0 else457_1
    DATA8 layer458
	DATA8 no458
	DATA8 mode8458
	
	MOVEF_8 VGV_RIGHT_SENSOR no458
	SUB8 no458 1 no458
	DIV8 no458 4 layer458
	MATH MOD8 no458 4 no458

	MOVEF_8 2.0 mode8458
	
	INPUT_DEVICE READY_RAW layer458 no458 0 mode8458 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB459:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer461
	DATA8 no461
	DATA8 mode8461
	
	MOVEF_8 VGV_RIGHT_SENSOR no461
	SUB8 no461 1 no461
	DIV8 no461 4 layer461
	MATH MOD8 no461 4 no461

	MOVEF_8 1.0 mode8461
	
	INPUT_DEVICE READY_RAW layer461 no461 0 mode8461 0
    JR_LTEQF VGV_G 100.0 else462_1
    STRINGS DUPLICATE 'R: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB463:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif462
  else462_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB464:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB465:
  else462_2:
  endif462:
    JR endif457
  else457_1:
    JR_LTEQF VGV_B 10.0 else457_2
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB466:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_RIGHT
  else457_2:
  endif457:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB467:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else468_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB470:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB472:
    JR_LTEQF VGV_B 120.0 else473_1
    DATA8 layer474
	DATA8 no474
	DATA8 mode8474
	
	MOVEF_8 VGV_LEFT_SENSOR no474
	SUB8 no474 1 no474
	DIV8 no474 4 layer474
	MATH MOD8 no474 4 no474

	MOVEF_8 2.0 mode8474
	
	INPUT_DEVICE READY_RAW layer474 no474 0 mode8474 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB475:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer477
	DATA8 no477
	DATA8 mode8477
	
	MOVEF_8 VGV_LEFT_SENSOR no477
	SUB8 no477 1 no477
	DIV8 no477 4 layer477
	MATH MOD8 no477 4 no477

	MOVEF_8 1.0 mode8477
	
	INPUT_DEVICE READY_RAW layer477 no477 0 mode8477 0
    JR_LTEQF VGV_G 100.0 else478_1
    STRINGS DUPLICATE 'L: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB479:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif478
  else478_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB480:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB481:
  else478_2:
  endif478:
    JR endif473
  else473_1:
    DATA8 layer482
	DATA8 no482
	DATA8 mode8482
	
	MOVEF_8 VGV_LEFT_SENSOR no482
	SUB8 no482 1 no482
	DIV8 no482 4 layer482
	MATH MOD8 no482 4 no482

	MOVEF_8 2.0 mode8482
	
	INPUT_DEVICE READY_RAW layer482 no482 0 mode8482 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer484
	DATA8 no484
	DATA8 mode8484
	
	MOVEF_8 VGV_LEFT_SENSOR no484
	SUB8 no484 1 no484
	DIV8 no484 4 layer484
	MATH MOD8 no484 4 no484

	MOVEF_8 1.0 mode8484
	
	INPUT_DEVICE READY_RAW layer484 no484 0 mode8484 0
    JR_GTF VGV_G 25.0 or486
    JR_GTEQF VGV_G 18.0 else485_1
  or486:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB487:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_LEFT
  else485_1:
  endif485:
  else473_2:
  endif473:
  else468_1:
  endif468:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB488:
    MOVEF_F 140.0 VGV_CHEM_BACK
    MOVEF_F 140.0 VGV_NO_BACK
    CALL EQ_STRING VGV_TAKE_RED_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else489_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for492:
    JR_GTF VGV_I 20.0 endfor492
  forbody492:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds498
	MOVEF_32 30.0 milliseconds498
	DATA32 timer498
	TIMER_WAIT milliseconds498 timer498
	TIMER_READY timer498
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody492
  endfor492:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer504
	DATA8 nos504
	DATA8 busy504
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer504 nos504
	JR_EQ8 0 nos504 motornotbusy504
  motorwaiting504:
	OUTPUT_TEST layer504 nos504 busy504
	JR_EQ8 busy504 0 motornotbusy504
	SLEEP
	JR motorwaiting504
  motornotbusy504:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB505:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer507
	DATA8 nos507
	DATA8 busy507
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer507 nos507
	JR_EQ8 0 nos507 motornotbusy507
  motorwaiting507:
	OUTPUT_TEST layer507 nos507 busy507
	JR_EQ8 busy507 0 motornotbusy507
	SLEEP
	JR motorwaiting507
  motornotbusy507:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB508:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer509
	DATA8 nos509
	DATA8 busy509
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer509 nos509
	JR_EQ8 0 nos509 motornotbusy509
  motorwaiting509:
	OUTPUT_TEST layer509 nos509 busy509
	JR_EQ8 busy509 0 motornotbusy509
	SLEEP
	JR motorwaiting509
  motornotbusy509:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for511:
    JR_GTF VGV_I 20.0 endfor511
  forbody511:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds515
	MOVEF_32 20.0 milliseconds515
	DATA32 timer515
	TIMER_WAIT milliseconds515 timer515
	TIMER_READY timer515
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody511
  endfor511:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer521
	DATA8 nos521
	DATA8 busy521
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer521 nos521
	JR_EQ8 0 nos521 motornotbusy521
  motorwaiting521:
	OUTPUT_TEST layer521 nos521 busy521
	JR_EQ8 busy521 0 motornotbusy521
	SLEEP
	JR motorwaiting521
  motornotbusy521:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB522:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer523
	DATA8 nos523
	DATA8 busy523
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer523 nos523
	JR_EQ8 0 nos523 motornotbusy523
  motorwaiting523:
	OUTPUT_TEST layer523 nos523 busy523
	JR_EQ8 busy523 0 motornotbusy523
	SLEEP
	JR motorwaiting523
  motornotbusy523:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB524:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for526:
    JR_GTF VGV_I 20.0 endfor526
  forbody526:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds532
	MOVEF_32 20.0 milliseconds532
	DATA32 timer532
	TIMER_WAIT milliseconds532 timer532
	TIMER_READY timer532
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody526
  endfor526:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer538
	DATA8 nos538
	DATA8 busy538
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer538 nos538
	JR_EQ8 0 nos538 motornotbusy538
  motorwaiting538:
	OUTPUT_TEST layer538 nos538 busy538
	JR_EQ8 busy538 0 motornotbusy538
	SLEEP
	JR motorwaiting538
  motornotbusy538:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB539:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB540 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB540:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer542
	DATA8 nos542
	DATA8 busy542
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer542 nos542
	JR_EQ8 0 nos542 motornotbusy542
  motorwaiting542:
	OUTPUT_TEST layer542 nos542 busy542
	JR_EQ8 busy542 0 motornotbusy542
	SLEEP
	JR motorwaiting542
  motornotbusy542:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB543:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds547
	MOVEF_32 1500.0 milliseconds547
	DATA32 timer547
	TIMER_WAIT milliseconds547 timer547
	TIMER_READY timer547
    WRITE32 ENDSUB_F_STOP_0:CALLSUB548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB548:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB549 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB549:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for551:
    JR_GTF VGV_I 20.0 endfor551
  forbody551:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds557
	MOVEF_32 20.0 milliseconds557
	DATA32 timer557
	TIMER_WAIT milliseconds557 timer557
	TIMER_READY timer557
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody551
  endfor551:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer563
	DATA8 nos563
	DATA8 busy563
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer563 nos563
	JR_EQ8 0 nos563 motornotbusy563
  motorwaiting563:
	OUTPUT_TEST layer563 nos563 busy563
	JR_EQ8 busy563 0 motornotbusy563
	SLEEP
	JR motorwaiting563
  motornotbusy563:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB564:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB565:
    JR endif489
  else489_1:
    CALL EQ_STRING VGV_TAKE_RED_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else489_2
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for568:
    JR_GTF VGV_I 20.0 endfor568
  forbody568:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds574
	MOVEF_32 30.0 milliseconds574
	DATA32 timer574
	TIMER_WAIT milliseconds574 timer574
	TIMER_READY timer574
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody568
  endfor568:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer580
	DATA8 nos580
	DATA8 busy580
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer580 nos580
	JR_EQ8 0 nos580 motornotbusy580
  motorwaiting580:
	OUTPUT_TEST layer580 nos580 busy580
	JR_EQ8 busy580 0 motornotbusy580
	SLEEP
	JR motorwaiting580
  motornotbusy580:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB581:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer583
	DATA8 nos583
	DATA8 busy583
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer583 nos583
	JR_EQ8 0 nos583 motornotbusy583
  motorwaiting583:
	OUTPUT_TEST layer583 nos583 busy583
	JR_EQ8 busy583 0 motornotbusy583
	SLEEP
	JR motorwaiting583
  motornotbusy583:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB584:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer585
	DATA8 nos585
	DATA8 busy585
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer585 nos585
	JR_EQ8 0 nos585 motornotbusy585
  motorwaiting585:
	OUTPUT_TEST layer585 nos585 busy585
	JR_EQ8 busy585 0 motornotbusy585
	SLEEP
	JR motorwaiting585
  motornotbusy585:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for587:
    JR_GTF VGV_I 20.0 endfor587
  forbody587:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds591
	MOVEF_32 20.0 milliseconds591
	DATA32 timer591
	TIMER_WAIT milliseconds591 timer591
	TIMER_READY timer591
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody587
  endfor587:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer597
	DATA8 nos597
	DATA8 busy597
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer597 nos597
	JR_EQ8 0 nos597 motornotbusy597
  motorwaiting597:
	OUTPUT_TEST layer597 nos597 busy597
	JR_EQ8 busy597 0 motornotbusy597
	SLEEP
	JR motorwaiting597
  motornotbusy597:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB598:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer599
	DATA8 nos599
	DATA8 busy599
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer599 nos599
	JR_EQ8 0 nos599 motornotbusy599
  motorwaiting599:
	OUTPUT_TEST layer599 nos599 busy599
	JR_EQ8 busy599 0 motornotbusy599
	SLEEP
	JR motorwaiting599
  motornotbusy599:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB600:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for602:
    JR_GTF VGV_I 20.0 endfor602
  forbody602:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds608
	MOVEF_32 20.0 milliseconds608
	DATA32 timer608
	TIMER_WAIT milliseconds608 timer608
	TIMER_READY timer608
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody602
  endfor602:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer614
	DATA8 nos614
	DATA8 busy614
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer614 nos614
	JR_EQ8 0 nos614 motornotbusy614
  motorwaiting614:
	OUTPUT_TEST layer614 nos614 busy614
	JR_EQ8 busy614 0 motornotbusy614
	SLEEP
	JR motorwaiting614
  motornotbusy614:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB615:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB616:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer618
	DATA8 nos618
	DATA8 busy618
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer618 nos618
	JR_EQ8 0 nos618 motornotbusy618
  motorwaiting618:
	OUTPUT_TEST layer618 nos618 busy618
	JR_EQ8 busy618 0 motornotbusy618
	SLEEP
	JR motorwaiting618
  motornotbusy618:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB619:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds623
	MOVEF_32 1000.0 milliseconds623
	DATA32 timer623
	TIMER_WAIT milliseconds623 timer623
	TIMER_READY timer623
    WRITE32 ENDSUB_F_STOP_0:CALLSUB624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB624:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB625:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for627:
    JR_GTF VGV_I 20.0 endfor627
  forbody627:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds633
	MOVEF_32 20.0 milliseconds633
	DATA32 timer633
	TIMER_WAIT milliseconds633 timer633
	TIMER_READY timer633
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody627
  endfor627:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer639
	DATA8 nos639
	DATA8 busy639
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer639 nos639
	JR_EQ8 0 nos639 motornotbusy639
  motorwaiting639:
	OUTPUT_TEST layer639 nos639 busy639
	JR_EQ8 busy639 0 motornotbusy639
	SLEEP
	JR motorwaiting639
  motornotbusy639:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB640 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB640:
    JR endif489
  else489_2:
    MOVEF_F VGV_NO_BACK VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB641:
  else489_3:
  endif489:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer644
	DATA8 nos644
	DATA8 busy644
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer644 nos644
	JR_EQ8 0 nos644 motornotbusy644
  motorwaiting644:
	OUTPUT_TEST layer644 nos644 busy644
	JR_EQ8 busy644 0 motornotbusy644
	SLEEP
	JR motorwaiting644
  motornotbusy644:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB645:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB646 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB646:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds650
	MOVEF_32 700.0 milliseconds650
	DATA32 timer650
	TIMER_WAIT milliseconds650 timer650
	TIMER_READY timer650
    WRITE32 ENDSUB_F_STOP_0:CALLSUB651 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB651:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    ADDF F.0 5.0 VGV_A
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 430.0 'True'

	DATA8 layer656
	DATA8 nos656
	DATA8 busy656
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer656 nos656
	JR_EQ8 0 nos656 motornotbusy656
  motorwaiting656:
	OUTPUT_TEST layer656 nos656 busy656
	JR_EQ8 busy656 0 motornotbusy656
	SLEEP
	JR motorwaiting656
  motornotbusy656:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while658:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile658
  whilebody658:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB660:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody658
  endwhile658:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA8 layer666
	DATA8 no666
	DATA8 mode8666
	
	MOVEF_8 VGV_LINE_SENSOR no666
	SUB8 no666 1 no666
	DIV8 no666 4 layer666
	MATH MOD8 no666 4 no666

	MOVEF_8 0.0 mode8666
	
	INPUT_DEVICE READY_RAW layer666 no666 0 mode8666 0
  while667:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 or668
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 220.0 endwhile667
  or668:
  whilebody667:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 whilebody667
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 220.0 whilebody667
  endwhile667:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB673 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB673:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB674:
    MOVEF_F 95.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB675 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB675:
    DATA8 layer676
	DATA8 no676
	DATA8 mode8676
	
	MOVEF_8 VGV_LINE_SENSOR no676
	SUB8 no676 1 no676
	DIV8 no676 4 layer676
	MATH MOD8 no676 4 no676

	MOVEF_8 0.0 mode8676
	
	INPUT_DEVICE READY_RAW layer676 no676 0 mode8676 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB677 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB677:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB679:
    JR_LTEQF VGV_B 55.0 else680_1
    DATA8 layer681
	DATA8 no681
	DATA8 mode8681
	
	MOVEF_8 VGV_LEFT_SENSOR no681
	SUB8 no681 1 no681
	DIV8 no681 4 layer681
	MATH MOD8 no681 4 no681

	MOVEF_8 2.0 mode8681
	
	INPUT_DEVICE READY_RAW layer681 no681 0 mode8681 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB682:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer684
	DATA8 no684
	DATA8 mode8684
	
	MOVEF_8 VGV_LEFT_SENSOR no684
	SUB8 no684 1 no684
	DIV8 no684 4 layer684
	MATH MOD8 no684 4 no684

	MOVEF_8 1.0 mode8684
	
	INPUT_DEVICE READY_RAW layer684 no684 0 mode8684 0
    JR_LTEQF VGV_G 100.0 else685_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB686:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif685
  else685_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB687 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB687:
    MOVEF_F 100.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB688:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB689:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB690 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB690:
  else685_2:
  endif685:
    JR endif680
  else680_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else692_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB693:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB694 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB694:
  else692_1:
  endif692:
  else680_2:
  endif680:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB695:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB696 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB696:
    SUBF VGV_A 5.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while699:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 250.0 endwhile699
  whilebody699:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB701:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 250.0 whilebody699
  endwhile699:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds706
	MOVEF_32 2000.0 milliseconds706
	DATA32 timer706
	TIMER_WAIT milliseconds706 timer706
	TIMER_READY timer706
    WRITE32 ENDSUB_F_STOP_0:CALLSUB707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB707:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB708 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB708:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB710 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB710:
    JR_LTEQF VGV_B 55.0 else711_1
    DATA8 layer712
	DATA8 no712
	DATA8 mode8712
	
	MOVEF_8 VGV_LEFT_SENSOR no712
	SUB8 no712 1 no712
	DIV8 no712 4 layer712
	MATH MOD8 no712 4 no712

	MOVEF_8 2.0 mode8712
	
	INPUT_DEVICE READY_RAW layer712 no712 0 mode8712 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB713:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer715
	DATA8 no715
	DATA8 mode8715
	
	MOVEF_8 VGV_LEFT_SENSOR no715
	SUB8 no715 1 no715
	DIV8 no715 4 layer715
	MATH MOD8 no715 4 no715

	MOVEF_8 1.0 mode8715
	
	INPUT_DEVICE READY_RAW layer715 no715 0 mode8715 0
    JR_LTEQF VGV_G 70.0 else716_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB717 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB717:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif716
  else716_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB718:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB719:
  else716_2:
  endif716:
    JR endif711
  else711_1:
    JR_LTEQF VGV_B 15.0 else711_2
    DATA8 layer720
	DATA8 no720
	DATA8 mode8720
	
	MOVEF_8 VGV_LEFT_SENSOR no720
	SUB8 no720 1 no720
	DIV8 no720 4 layer720
	MATH MOD8 no720 4 no720

	MOVEF_8 4.0 mode8720
	
	INPUT_DEVICE READY_RAW layer720 no720 0 mode8720 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB721 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB721:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_W
    DATA8 layer723
	DATA8 no723
	DATA8 mode8723
	
	MOVEF_8 VGV_LEFT_SENSOR no723
	SUB8 no723 1 no723
	DIV8 no723 4 layer723
	MATH MOD8 no723 4 no723

	MOVEF_8 1.0 mode8723
	
	INPUT_DEVICE READY_RAW layer723 no723 0 mode8723 0
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB724:
    JR_LTEQF VGV_W 60.0 else725_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB726:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB727:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for729:
    JR_GTF VGV_I 20.0 endfor729
  forbody729:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds733
	MOVEF_32 30.0 milliseconds733
	DATA32 timer733
	TIMER_WAIT milliseconds733 timer733
	TIMER_READY timer733
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody729
  endfor729:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer739
	DATA8 nos739
	DATA8 busy739
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer739 nos739
	JR_EQ8 0 nos739 motornotbusy739
  motorwaiting739:
	OUTPUT_TEST layer739 nos739 busy739
	JR_EQ8 busy739 0 motornotbusy739
	SLEEP
	JR motorwaiting739
  motornotbusy739:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB740:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer741
	DATA8 nos741
	DATA8 busy741
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer741 nos741
	JR_EQ8 0 nos741 motornotbusy741
  motorwaiting741:
	OUTPUT_TEST layer741 nos741 busy741
	JR_EQ8 busy741 0 motornotbusy741
	SLEEP
	JR motorwaiting741
  motornotbusy741:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer744
	DATA8 nos744
	DATA8 busy744
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer744 nos744
	JR_EQ8 0 nos744 motornotbusy744
  motorwaiting744:
	OUTPUT_TEST layer744 nos744 busy744
	JR_EQ8 busy744 0 motornotbusy744
	SLEEP
	JR motorwaiting744
  motornotbusy744:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB745:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer746
	DATA8 nos746
	DATA8 busy746
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer746 nos746
	JR_EQ8 0 nos746 motornotbusy746
  motorwaiting746:
	OUTPUT_TEST layer746 nos746 busy746
	JR_EQ8 busy746 0 motornotbusy746
	SLEEP
	JR motorwaiting746
  motornotbusy746:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB747 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB747:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer750
	DATA8 nos750
	DATA8 busy750
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer750 nos750
	JR_EQ8 0 nos750 motornotbusy750
  motorwaiting750:
	OUTPUT_TEST layer750 nos750 busy750
	JR_EQ8 busy750 0 motornotbusy750
	SLEEP
	JR motorwaiting750
  motornotbusy750:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB751 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB751:
    DATA32 milliseconds752
	MOVEF_32 1000.0 milliseconds752
	DATA32 timer752
	TIMER_WAIT milliseconds752 timer752
	TIMER_READY timer752
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for754:
    JR_GTF VGV_I 20.0 endfor754
  forbody754:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds757
	MOVEF_32 30.0 milliseconds757
	DATA32 timer757
	TIMER_WAIT milliseconds757 timer757
	TIMER_READY timer757
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody754
  endfor754:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer763
	DATA8 nos763
	DATA8 busy763
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer763 nos763
	JR_EQ8 0 nos763 motornotbusy763
  motorwaiting763:
	OUTPUT_TEST layer763 nos763 busy763
	JR_EQ8 busy763 0 motornotbusy763
	SLEEP
	JR motorwaiting763
  motornotbusy763:
    MULF 30.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds766
	MOVEF_32 1000.0 milliseconds766
	DATA32 timer766
	TIMER_WAIT milliseconds766 timer766
	TIMER_READY timer766
    WRITE32 ENDSUB_F_STOP_0:CALLSUB767 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB767:
  else725_1:
  endif725:
  else711_2:
  endif711:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB768 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB768:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer770
	DATA8 nos770
	DATA8 busy770
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer770 nos770
	JR_EQ8 0 nos770 motornotbusy770
  motorwaiting770:
	OUTPUT_TEST layer770 nos770 busy770
	JR_EQ8 busy770 0 motornotbusy770
	SLEEP
	JR motorwaiting770
  motornotbusy770:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 104.0 0.0 'True' 

	DATA8 layer772
	DATA8 nos772
	DATA8 busy772
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer772 nos772
	JR_EQ8 0 nos772 motornotbusy772
  motorwaiting772:
	OUTPUT_TEST layer772 nos772 busy772
	JR_EQ8 busy772 0 motornotbusy772
	SLEEP
	JR motorwaiting772
  motornotbusy772:
    DATA8 layer773
	DATA8 no773
	DATA8 mode8773
	
	MOVEF_8 VGV_LINE_SENSOR no773
	SUB8 no773 1 no773
	DIV8 no773 4 layer773
	MATH MOD8 no773 4 no773

	MOVEF_8 2.0 mode8773
	
	INPUT_DEVICE READY_RAW layer773 no773 0 mode8773 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 105.0 VGV_A
  while775:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 100.0 endwhile775
  whilebody775:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB777:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 100.0 whilebody775
  endwhile775:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while782:
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 2.0 endwhile782
  whilebody782:
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 2.0 whilebody782
  endwhile782:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB785 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB785:
    DATA8 layer786
	DATA8 no786
	DATA8 mode8786
	
	MOVEF_8 VGV_LINE_SENSOR no786
	SUB8 no786 1 no786
	DIV8 no786 4 layer786
	MATH MOD8 no786 4 no786

	MOVEF_8 0.0 mode8786
	
	INPUT_DEVICE READY_RAW layer786 no786 0 mode8786 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB787 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB787:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB788 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB788:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB789:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB790:
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else791_1
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else794_1
    DATA8 layer795
	DATA8 no795
	DATA8 mode8795
	
	MOVEF_8 VGV_LEFT_SENSOR no795
	SUB8 no795 1 no795
	DIV8 no795 4 layer795
	MATH MOD8 no795 4 no795

	MOVEF_8 2.0 mode8795
	
	INPUT_DEVICE READY_RAW layer795 no795 0 mode8795 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB796:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer798
	DATA8 no798
	DATA8 mode8798
	
	MOVEF_8 VGV_LEFT_SENSOR no798
	SUB8 no798 1 no798
	DIV8 no798 4 layer798
	MATH MOD8 no798 4 no798

	MOVEF_8 1.0 mode8798
	
	INPUT_DEVICE READY_RAW layer798 no798 0 mode8798 0
    JR_LTEQF VGV_G 100.0 else799_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB800:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif799
  else799_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB801:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB802 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB802:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB803:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB804:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB805:
  else799_2:
  endif799:
    JR endif794
  else794_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else807_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB808 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB808:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB809 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB809:
  else807_1:
  endif807:
  else794_2:
  endif794:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB810 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB810:
  else791_1:
  endif791:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB811 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB811:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB812 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB812:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB813 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB813:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else815_1
    DATA8 layer816
	DATA8 no816
	DATA8 mode8816
	
	MOVEF_8 VGV_LEFT_SENSOR no816
	SUB8 no816 1 no816
	DIV8 no816 4 layer816
	MATH MOD8 no816 4 no816

	MOVEF_8 2.0 mode8816
	
	INPUT_DEVICE READY_RAW layer816 no816 0 mode8816 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB817 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB817:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer819
	DATA8 no819
	DATA8 mode8819
	
	MOVEF_8 VGV_LEFT_SENSOR no819
	SUB8 no819 1 no819
	DIV8 no819 4 layer819
	MATH MOD8 no819 4 no819

	MOVEF_8 1.0 mode8819
	
	INPUT_DEVICE READY_RAW layer819 no819 0 mode8819 0
    JR_LTEQF VGV_G 70.0 else820_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB821 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB821:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif820
  else820_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB822 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB822:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB823 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB823:
  else820_2:
  endif820:
    JR endif815
  else815_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else825_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB826 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB826:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB827 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB827:
  else825_1:
  endif825:
  else815_2:
  endif815:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB828 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB828:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer831
	DATA8 nos831
	DATA8 busy831
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer831 nos831
	JR_EQ8 0 nos831 motornotbusy831
  motorwaiting831:
	OUTPUT_TEST layer831 nos831 busy831
	JR_EQ8 busy831 0 motornotbusy831
	SLEEP
	JR motorwaiting831
  motornotbusy831:
    ADDF VGV_A 7.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while834:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 310.0 endwhile834
  whilebody834:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB836:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 310.0 whilebody834
  endwhile834:
    MOVEF_F 110.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB838:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else839_1
    DATA8 layer841
	DATA8 no841
	DATA8 mode8841
	
	MOVEF_8 VGV_LEFT_SENSOR no841
	SUB8 no841 1 no841
	DIV8 no841 4 layer841
	MATH MOD8 no841 4 no841

	MOVEF_8 1.0 mode8841
	
	INPUT_DEVICE READY_RAW layer841 no841 0 mode8841 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB842 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB842:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB844 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB844:
    JR_LTEQF VGV_B 55.0 else845_1
    DATA8 layer846
	DATA8 no846
	DATA8 mode8846
	
	MOVEF_8 VGV_LEFT_SENSOR no846
	SUB8 no846 1 no846
	DIV8 no846 4 layer846
	MATH MOD8 no846 4 no846

	MOVEF_8 2.0 mode8846
	
	INPUT_DEVICE READY_RAW layer846 no846 0 mode8846 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB847 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB847:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer849
	DATA8 no849
	DATA8 mode8849
	
	MOVEF_8 VGV_LEFT_SENSOR no849
	SUB8 no849 1 no849
	DIV8 no849 4 layer849
	MATH MOD8 no849 4 no849

	MOVEF_8 1.0 mode8849
	
	INPUT_DEVICE READY_RAW layer849 no849 0 mode8849 0
    JR_LTEQF VGV_G 70.0 else850_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB851 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB851:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif850
  else850_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB852 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB852:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB853 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB853:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB854 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB854:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB855 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB855:
  else850_2:
  endif850:
    JR endif845
  else845_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else857_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB858 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB858:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB859 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB859:
  else857_1:
  endif857:
  else845_2:
  endif845:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB860 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB860:
  else839_1:
  endif839:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB861 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB861:
    DATA8 layer862
	DATA8 no862
	DATA8 mode8862
	
	MOVEF_8 VGV_LINE_SENSOR no862
	SUB8 no862 1 no862
	DIV8 no862 4 layer862
	MATH MOD8 no862 4 no862

	MOVEF_8 0.0 mode8862
	
	INPUT_DEVICE READY_RAW layer862 no862 0 mode8862 0
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'False'

	DATA8 layer865
	DATA8 nos865
	DATA8 busy865
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer865 nos865
	JR_EQ8 0 nos865 motornotbusy865
  motorwaiting865:
	OUTPUT_TEST layer865 nos865 busy865
	JR_EQ8 busy865 0 motornotbusy865
	SLEEP
	JR motorwaiting865
  motornotbusy865:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while869:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile869
  whilebody869:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody869
  endwhile869:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB872 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB872:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 200.0 0.0 'False' 

	DATA8 layer874
	DATA8 nos874
	DATA8 busy874
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer874 nos874
	JR_EQ8 0 nos874 motornotbusy874
  motorwaiting874:
	OUTPUT_TEST layer874 nos874 busy874
	JR_EQ8 busy874 0 motornotbusy874
	SLEEP
	JR motorwaiting874
  motornotbusy874:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
  while877:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile877
  whilebody877:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody877
  endwhile877:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer881
	DATA8 nos881
	DATA8 busy881
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer881 nos881
	JR_EQ8 0 nos881 motornotbusy881
  motorwaiting881:
	OUTPUT_TEST layer881 nos881 busy881
	JR_EQ8 busy881 0 motornotbusy881
	SLEEP
	JR motorwaiting881
  motornotbusy881:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB882 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB882:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while884:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile884
  whilebody884:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB886 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB886:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody884
  endwhile884:
  while888:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 5.0 endwhile888
  whilebody888:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB890 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB890:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 5.0 whilebody888
  endwhile888:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB892 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB892:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer895
	DATA8 nos895
	DATA8 busy895
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer895 nos895
	JR_EQ8 0 nos895 motornotbusy895
  motorwaiting895:
	OUTPUT_TEST layer895 nos895 busy895
	JR_EQ8 busy895 0 motornotbusy895
	SLEEP
	JR motorwaiting895
  motornotbusy895:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB896 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB896:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB897 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB897:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer900
	DATA8 nos900
	DATA8 busy900
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer900 nos900
	JR_EQ8 0 nos900 motornotbusy900
  motorwaiting900:
	OUTPUT_TEST layer900 nos900 busy900
	JR_EQ8 busy900 0 motornotbusy900
	SLEEP
	JR motorwaiting900
  motornotbusy900:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB901 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB901:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB902 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB902:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 25.0 'False'

	DATA8 layer905
	DATA8 nos905
	DATA8 busy905
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer905 nos905
	JR_EQ8 0 nos905 motornotbusy905
  motorwaiting905:
	OUTPUT_TEST layer905 nos905 busy905
	JR_EQ8 busy905 0 motornotbusy905
	SLEEP
	JR motorwaiting905
  motornotbusy905:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while907:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile907
  whilebody907:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF F.0 17.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf913
    DATA8 flag913
    DIVF F.0 10.0 tmpf913
    CP_EQF 0.0 10.0 flag913
    SELECTF flag913 0.0 tmpf913 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody907
  endwhile907:
    MOVEF_F 135.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB923 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB923:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB924 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB924:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB925 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB925:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB927 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB927:
    JR_LTEQF VGV_B 140.0 else928_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB929 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB929:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif928
  else928_1:
    JR_LTEQF VGV_B 80.0 else928_2
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'FIre' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB930:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB931 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB931:
    JR endif928
  else928_2:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else933_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'True' VGV_CHEM
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB934 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB934:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB935 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB935:
  else933_1:
  endif933:
  else928_3:
  endif928:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB936 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB936:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB937 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB937:
    MOVEF_F 493.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while939:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 180.0 endwhile939
  whilebody939:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB941 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB941:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 180.0 whilebody939
  endwhile939:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB943 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB943:
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else944_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB946 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB946:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB948 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB948:
    JR_LTEQF VGV_B 40.0 else949_1
    DATA8 layer950
	DATA8 no950
	DATA8 mode8950
	
	MOVEF_8 VGV_LEFT_SENSOR no950
	SUB8 no950 1 no950
	DIV8 no950 4 layer950
	MATH MOD8 no950 4 no950

	MOVEF_8 2.0 mode8950
	
	INPUT_DEVICE READY_RAW layer950 no950 0 mode8950 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB951 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB951:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer953
	DATA8 no953
	DATA8 mode8953
	
	MOVEF_8 VGV_LEFT_SENSOR no953
	SUB8 no953 1 no953
	DIV8 no953 4 layer953
	MATH MOD8 no953 4 no953

	MOVEF_8 1.0 mode8953
	
	INPUT_DEVICE READY_RAW layer953 no953 0 mode8953 0
    JR_LTEQF VGV_G 100.0 else954_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB955 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB955:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif954
  else954_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB956 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB956:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB957 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB957:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB958 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB958:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB959 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB959:
  else954_2:
  endif954:
    JR endif949
  else949_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else961_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB962 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB962:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer965
	DATA8 nos965
	DATA8 busy965
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer965 nos965
	JR_EQ8 0 nos965 motornotbusy965
  motorwaiting965:
	OUTPUT_TEST layer965 nos965 busy965
	JR_EQ8 busy965 0 motornotbusy965
	SLEEP
	JR motorwaiting965
  motornotbusy965:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB966 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB966:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer967
	DATA8 nos967
	DATA8 busy967
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer967 nos967
	JR_EQ8 0 nos967 motornotbusy967
  motorwaiting967:
	OUTPUT_TEST layer967 nos967 busy967
	JR_EQ8 busy967 0 motornotbusy967
	SLEEP
	JR motorwaiting967
  motornotbusy967:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for969:
    JR_GTF VGV_I 20.0 endfor969
  forbody969:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds972
	MOVEF_32 10.0 milliseconds972
	DATA32 timer972
	TIMER_WAIT milliseconds972 timer972
	TIMER_READY timer972
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody969
  endfor969:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer978
	DATA8 nos978
	DATA8 busy978
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer978 nos978
	JR_EQ8 0 nos978 motornotbusy978
  motorwaiting978:
	OUTPUT_TEST layer978 nos978 busy978
	JR_EQ8 busy978 0 motornotbusy978
	SLEEP
	JR motorwaiting978
  motornotbusy978:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB979 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB979:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer980
	DATA8 nos980
	DATA8 busy980
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer980 nos980
	JR_EQ8 0 nos980 motornotbusy980
  motorwaiting980:
	OUTPUT_TEST layer980 nos980 busy980
	JR_EQ8 busy980 0 motornotbusy980
	SLEEP
	JR motorwaiting980
  motornotbusy980:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB981 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB981:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB982 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB982:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for984:
    JR_GTF VGV_I 20.0 endfor984
  forbody984:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds988
	MOVEF_32 10.0 milliseconds988
	DATA32 timer988
	TIMER_WAIT milliseconds988 timer988
	TIMER_READY timer988
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody984
  endfor984:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer994
	DATA8 nos994
	DATA8 busy994
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer994 nos994
	JR_EQ8 0 nos994 motornotbusy994
  motorwaiting994:
	OUTPUT_TEST layer994 nos994 busy994
	JR_EQ8 busy994 0 motornotbusy994
	SLEEP
	JR motorwaiting994
  motornotbusy994:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB995 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB995:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB996 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB996:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer999
	DATA8 nos999
	DATA8 busy999
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer999 nos999
	JR_EQ8 0 nos999 motornotbusy999
  motorwaiting999:
	OUTPUT_TEST layer999 nos999 busy999
	JR_EQ8 busy999 0 motornotbusy999
	SLEEP
	JR motorwaiting999
  motornotbusy999:
  else961_1:
  endif961:
  else949_2:
  endif949:
  else944_1:
  endif944:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1000 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1000:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1001 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1001:
    MOVEF_F 160.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1002 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1002:
    DATA8 layer1003
	DATA8 no1003
	DATA8 mode81003
	
	MOVEF_8 VGV_LEFT_SENSOR no1003
	SUB8 no1003 1 no1003
	DIV8 no1003 4 layer1003
	MATH MOD8 no1003 4 no1003

	MOVEF_8 1.0 mode81003
	
	INPUT_DEVICE READY_RAW layer1003 no1003 0 mode81003 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1004 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1004:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1006 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1006:
    JR_LTEQF VGV_B 40.0 else1007_1
    DATA8 layer1008
	DATA8 no1008
	DATA8 mode81008
	
	MOVEF_8 VGV_LEFT_SENSOR no1008
	SUB8 no1008 1 no1008
	DIV8 no1008 4 layer1008
	MATH MOD8 no1008 4 no1008

	MOVEF_8 2.0 mode81008
	
	INPUT_DEVICE READY_RAW layer1008 no1008 0 mode81008 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1009 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1009:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1011
	DATA8 no1011
	DATA8 mode81011
	
	MOVEF_8 VGV_LEFT_SENSOR no1011
	SUB8 no1011 1 no1011
	DIV8 no1011 4 layer1011
	MATH MOD8 no1011 4 no1011

	MOVEF_8 1.0 mode81011
	
	INPUT_DEVICE READY_RAW layer1011 no1011 0 mode81011 0
    JR_LTEQF VGV_G 50.0 else1012_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1013 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1013:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif1012
  else1012_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1014 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1014:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1015 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1015:
  else1012_2:
  endif1012:
    JR endif1007
  else1007_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1017_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1018 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1018:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB1019 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB1019:
  else1017_1:
  endif1017:
  else1007_2:
  endif1007:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1020 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1020:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 325.0 'True'

	DATA8 layer1023
	DATA8 nos1023
	DATA8 busy1023
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1023 nos1023
	JR_EQ8 0 nos1023 motornotbusy1023
  motorwaiting1023:
	OUTPUT_TEST layer1023 nos1023 busy1023
	JR_EQ8 busy1023 0 motornotbusy1023
	SLEEP
	JR motorwaiting1023
  motornotbusy1023:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1024 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1024:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1025 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1025:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 380.0 'True'

	DATA8 layer1028
	DATA8 nos1028
	DATA8 busy1028
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1028 nos1028
	JR_EQ8 0 nos1028 motornotbusy1028
  motorwaiting1028:
	OUTPUT_TEST layer1028 nos1028 busy1028
	JR_EQ8 busy1028 0 motornotbusy1028
	SLEEP
	JR motorwaiting1028
  motornotbusy1028:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1029 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1029:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1030 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1030:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1033
	DATA8 nos1033
	DATA8 busy1033
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1033 nos1033
	JR_EQ8 0 nos1033 motornotbusy1033
  motorwaiting1033:
	OUTPUT_TEST layer1033 nos1033 busy1033
	JR_EQ8 busy1033 0 motornotbusy1033
	SLEEP
	JR motorwaiting1033
  motornotbusy1033:
    MOVEF_F 474.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1035:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 710.0 endwhile1035
  whilebody1035:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB1037 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB1037:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 710.0 whilebody1035
  endwhile1035:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1039 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1039:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1040 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1040:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1041_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 115.0 0.0 'True' 

	DATA8 layer1043
	DATA8 nos1043
	DATA8 busy1043
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1043 nos1043
	JR_EQ8 0 nos1043 motornotbusy1043
  motorwaiting1043:
	OUTPUT_TEST layer1043 nos1043 busy1043
	JR_EQ8 busy1043 0 motornotbusy1043
	SLEEP
	JR motorwaiting1043
  motornotbusy1043:
  else1041_1:
  endif1041:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1044 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1044:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1047
	DATA8 nos1047
	DATA8 busy1047
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1047 nos1047
	JR_EQ8 0 nos1047 motornotbusy1047
  motorwaiting1047:
	OUTPUT_TEST layer1047 nos1047 busy1047
	JR_EQ8 busy1047 0 motornotbusy1047
	SLEEP
	JR motorwaiting1047
  motornotbusy1047:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1048 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1048:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1049_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer1051
	DATA8 nos1051
	DATA8 busy1051
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1051 nos1051
	JR_EQ8 0 nos1051 motornotbusy1051
  motorwaiting1051:
	OUTPUT_TEST layer1051 nos1051 busy1051
	JR_EQ8 busy1051 0 motornotbusy1051
	SLEEP
	JR motorwaiting1051
  motornotbusy1051:
  else1049_1:
  endif1049:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1054
	DATA8 nos1054
	DATA8 busy1054
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1054 nos1054
	JR_EQ8 0 nos1054 motornotbusy1054
  motorwaiting1054:
	OUTPUT_TEST layer1054 nos1054 busy1054
	JR_EQ8 busy1054 0 motornotbusy1054
	SLEEP
	JR motorwaiting1054
  motornotbusy1054:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 60.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1058
	MOVEF_32 1200.0 milliseconds1058
	DATA32 timer1058
	TIMER_WAIT milliseconds1058 timer1058
	TIMER_READY timer1058
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1059:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer1062
	DATA8 nos1062
	DATA8 busy1062
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1062 nos1062
	JR_EQ8 0 nos1062 motornotbusy1062
  motorwaiting1062:
	OUTPUT_TEST layer1062 nos1062 busy1062
	JR_EQ8 busy1062 0 motornotbusy1062
	SLEEP
	JR motorwaiting1062
  motornotbusy1062:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer1064
	DATA8 nos1064
	DATA8 busy1064
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1064 nos1064
	JR_EQ8 0 nos1064 motornotbusy1064
  motorwaiting1064:
	OUTPUT_TEST layer1064 nos1064 busy1064
	JR_EQ8 busy1064 0 motornotbusy1064
	SLEEP
	JR motorwaiting1064
  motornotbusy1064:
    MULF VGV_LEFT_FORWARD 90.0 F.0
    MULF VGV_RIGHT_FORWARD 95.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1068
	MOVEF_32 3500.0 milliseconds1068
	DATA32 timer1068
	TIMER_WAIT milliseconds1068 timer1068
	TIMER_READY timer1068
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1069 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1069:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer1070
	DATA8 nos1070
	DATA8 busy1070
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer1070 nos1070
	JR_EQ8 0 nos1070 motornotbusy1070
  motorwaiting1070:
	OUTPUT_TEST layer1070 nos1070 busy1070
	JR_EQ8 busy1070 0 motornotbusy1070
	SLEEP
	JR motorwaiting1070
  motornotbusy1070:
    WRITE32 ENDSUB_F_TAKE_CUBES_0:CALLSUB1071 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_0
CALLSUB1071:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1074
	DATA8 nos1074
	DATA8 busy1074
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1074 nos1074
	JR_EQ8 0 nos1074 motornotbusy1074
  motorwaiting1074:
	OUTPUT_TEST layer1074 nos1074 busy1074
	JR_EQ8 busy1074 0 motornotbusy1074
	SLEEP
	JR motorwaiting1074
  motornotbusy1074:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1075 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1075:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1076_1
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1078 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1078:
  else1076_1:
  endif1076:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1079_1
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1081 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1081:
  else1079_1:
  endif1079:
    CALL EQ_STRING VGV_RED_MAN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1082_1
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1086
	DATA8 nos1086
	DATA8 busy1086
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1086 nos1086
	JR_EQ8 0 nos1086 motornotbusy1086
  motorwaiting1086:
	OUTPUT_TEST layer1086 nos1086 busy1086
	JR_EQ8 busy1086 0 motornotbusy1086
	SLEEP
	JR motorwaiting1086
  motornotbusy1086:
  else1082_1:
  endif1082:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1087_1
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1089 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1089:
  else1087_1:
  endif1087:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1090_1
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1092 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1092:
  else1090_1:
  endif1090:
    CALL EQ_STRING VGV_YELLOW_MAN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1093_1
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1097
	DATA8 nos1097
	DATA8 busy1097
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1097 nos1097
	JR_EQ8 0 nos1097 motornotbusy1097
  motorwaiting1097:
	OUTPUT_TEST layer1097 nos1097 busy1097
	JR_EQ8 busy1097 0 motornotbusy1097
	SLEEP
	JR motorwaiting1097
  motornotbusy1097:
  else1093_1:
  endif1093:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1098_1
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1100:
  else1098_1:
  endif1098:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1101_1
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1103:
  else1101_1:
  endif1101:
    CALL EQ_STRING VGV_GREEN_MAN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1104_1
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 220.0 'True'

	DATA8 layer1108
	DATA8 nos1108
	DATA8 busy1108
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1108 nos1108
	JR_EQ8 0 nos1108 motornotbusy1108
  motorwaiting1108:
	OUTPUT_TEST layer1108 nos1108 busy1108
	JR_EQ8 busy1108 0 motornotbusy1108
	SLEEP
	JR motorwaiting1108
  motornotbusy1108:
  else1104_1:
  endif1104:
    MULF -15.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1110
	DATA8 nos1110
	DATA8 busy1110
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1110 nos1110
	JR_EQ8 0 nos1110 motornotbusy1110
  motorwaiting1110:
	OUTPUT_TEST layer1110 nos1110 busy1110
	JR_EQ8 busy1110 0 motornotbusy1110
	SLEEP
	JR motorwaiting1110
  motornotbusy1110:
    MULF VGV_LEFT_FORWARD -25.0 F.0
    MULF VGV_RIGHT_FORWARD -25.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1114
	MOVEF_32 1500.0 milliseconds1114
	DATA32 timer1114
	TIMER_WAIT milliseconds1114 timer1114
	TIMER_READY timer1114
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1115:
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1116_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 55.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1122:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 1200.0 endwhile1122
  whilebody1122:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 1200.0 whilebody1122
  endwhile1122:
  while1125:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 25.0 endwhile1125
  whilebody1125:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 25.0 whilebody1125
  endwhile1125:
  while1128:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile1128
  whilebody1128:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody1128
  endwhile1128:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1131:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1132:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 365.0 0.0 'True' 

	DATA8 layer1134
	DATA8 nos1134
	DATA8 busy1134
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1134 nos1134
	JR_EQ8 0 nos1134 motornotbusy1134
  motorwaiting1134:
	OUTPUT_TEST layer1134 nos1134 busy1134
	JR_EQ8 busy1134 0 motornotbusy1134
	SLEEP
	JR motorwaiting1134
  motornotbusy1134:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1138:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1141
	DATA8 nos1141
	DATA8 busy1141
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1141 nos1141
	JR_EQ8 0 nos1141 motornotbusy1141
  motorwaiting1141:
	OUTPUT_TEST layer1141 nos1141 busy1141
	JR_EQ8 busy1141 0 motornotbusy1141
	SLEEP
	JR motorwaiting1141
  motornotbusy1141:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 300.0 0.0 'True' 

	DATA8 layer1143
	DATA8 nos1143
	DATA8 busy1143
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1143 nos1143
	JR_EQ8 0 nos1143 motornotbusy1143
  motorwaiting1143:
	OUTPUT_TEST layer1143 nos1143 busy1143
	JR_EQ8 busy1143 0 motornotbusy1143
	SLEEP
	JR motorwaiting1143
  motornotbusy1143:
    MULF VGV_LEFT_FORWARD 55.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1147
	MOVEF_32 4000.0 milliseconds1147
	DATA32 timer1147
	TIMER_WAIT milliseconds1147 timer1147
	TIMER_READY timer1147
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1148:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 20.0 'True'

	DATA8 layer1151
	DATA8 nos1151
	DATA8 busy1151
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1151 nos1151
	JR_EQ8 0 nos1151 motornotbusy1151
  motorwaiting1151:
	OUTPUT_TEST layer1151 nos1151 busy1151
	JR_EQ8 busy1151 0 motornotbusy1151
	SLEEP
	JR motorwaiting1151
  motornotbusy1151:
  else1116_1:
  endif1116:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
