DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_12
DATAF VLV_MIN_POWER_12
DATAF VLV_DEG_12
DATAF VLV_COEF_12
DATAF VLV_BASE_POWER_17
DATAF VLV_MIN_POWER_17
DATAF VLV_DEG_17
DATAF VLV_COEF_17
DATAS VLV_MOTOR_16 252
DATAF VLV_FORWARD_16
DATAF VLV_DEG_16
DATAF VLV_MAX_POWER_16
DATAS VLV_ACCELERATION_16 252
DATAS VLV_ZAME_16 252
DATAS VLV_TO_STOP_16 252
DATAF VLV_TIME_2
DATAF VLV_PORT_5
DATAF VLV_MODE_5
DATAF VLV_D_5
DATAF VLV_RESULT_5
DATAS VLV_TEXT_6 252
DATAF VLV_POWER_1
DATAF VLV_PERCENT_7
DATAF VLV_L_9
DATAF VLV_L_8
DATAF VLV_POWER_14
DATAF VLV_COEF_19
DATAF VLV_COEF_20
DATAS VLV_IS_INVERTED_21 252
DATAS VLV_IS_INVERTED_22 252
DATAF VLV_MINUS_DEG_22
DATAF VLV_MINUS_DEG_23
DATAS VLV_IS_INVERTED_25 252
DATAS VLV_MOTOR1_25 252
DATAS VLV_MOTOR2_25 252
DATAF VLV_FORWARD1_25
DATAF VLV_FORWARD2_25
DATAF VLV_COEF_25
DATAF VLV_DEG_15
DATAF VLV_POWER_15
DATAF VGV_C
DATAF VGV_P
DATAF VLV_CUR_8
DATAF VLV_CUR_9
DATAF VLV_MINUS_DEG_24
DATAS VLV_MOTOR1_26 252
DATAS VLV_MOTOR2_26 252
DATAF VLV_FORWARD1_26
DATAF VLV_FORWARD2_26
DATAF VLV_COEF_26
DATAS VLV_MOTOR1_27 252
DATAS VLV_MOTOR2_27 252
DATAF VLV_FORWARD1_27
DATAF VLV_FORWARD2_27
DATAF VLV_COEF_27
DATAF VLV_P_27
DATAS VLV_MOTOR1_28 252
DATAS VLV_MOTOR2_28 252
DATAF VLV_FORWARD1_28
DATAF VLV_FORWARD2_28
DATAF VLV_COEF_28
DATAF VGV_LINE
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_ULTRASONIC
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERTED_MOTOR 252
DATAS VGV_MOTORS 252
DATAF VGV_LEFT_FORWARD
DATAF VGV_RIGHT_FORWARD
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_MAX
DATAF VGV_LEFT_MIN
DATAF VGV_LAST_ERR
DATAF VGV_LAST_MOTOR_ERR
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_WATER_STATE
DATAF VGV_FIRE_COUNT
DATAF VGV_MEN_COUNT
DATAS VGV_CHEM 252
DATAS VGV_TAKE_CHEM_IN_YELLOW 252
DATAF VGV_CUBES_COUNT
DATAF VGV_R
DATAF VGV_G
DATAF VGV_B
DATAF VGV_W
DATAS VGV_COLOR1 252
DATAS VGV_COLOR2 252
DATAS VGV_OPENED 252
DATAF VGV_ULTRA
DATAF VGV_D1
DATAF VGV_D2
DATAF VGV_D3
DATAF VLV_CURRENT_MODE_5
DATAF VLV_ERR_8
DATAF VLV_DIFF_8
DATAF VLV_DELTA_8
DATAF VLV_LEFT_POWER_8
DATAF VLV_RIGHT_POWER_8
DATAF VLV_ERR_9
DATAF VLV_DIFF_9
DATAF VLV_DELTA_9
DATAF VLV_LEFT_POWER_9
DATAF VLV_RIGHT_POWER_9
DATAF VLV_L_12
DATAF VLV_P_12
DATAF VLV_POWER_12
DATAF VLV_R_12
DATAF VLV_DELTA_12
DATAF VLV_LEFT_POWER_12
DATAF VLV_RIGHT_POWER_12
DATAF VLV_L_14
DATAF VLV_R_14
DATAF VLV_ERR_14
DATAF VLV_DIFF_14
DATAF VLV_DELTA_14
DATAF VLV_LEFT_POWER_14
DATAF VLV_RIGHT_POWER_14
DATAF VLV_L_15
DATAF VLV_NORMAL_DEG_16
DATAF VLV_ACCELERATION_DEG_16
DATAF VLV_ZAME_DEG_16
DATAF VLV_M_16
DATAF VLV_MIN_POWER_16
DATAF VLV_P_16
DATAF VLV_POWER_16
DATAF VLV_L_17
DATAF VLV_P_17
DATAF VLV_R_17
DATAF VLV_DELTA_17
DATAF VLV_POWER_17
DATAF VLV_LEFT_POWER_17
DATAF VLV_RIGHT_POWER_17
DATAS VLV_MOT_21 252
DATAF VLV_FORWARD_21
DATAF VLV_COEF_21
DATAF VLV_COEF_22
DATAF VLV_DEG_23
DATA32 RUNCOUNTER_F_PREPARE_GRABBER_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_12
    MOVEF_F 0.0 VLV_MIN_POWER_12
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_COEF_12
    MOVEF_F 0.0 VLV_BASE_POWER_17
    MOVEF_F 0.0 VLV_MIN_POWER_17
    MOVEF_F 0.0 VLV_DEG_17
    MOVEF_F 0.0 VLV_COEF_17
    STRINGS DUPLICATE '' VLV_MOTOR_16
    MOVEF_F 0.0 VLV_FORWARD_16
    MOVEF_F 0.0 VLV_DEG_16
    MOVEF_F 0.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE '' VLV_ACCELERATION_16
    STRINGS DUPLICATE '' VLV_ZAME_16
    STRINGS DUPLICATE '' VLV_TO_STOP_16
    MOVEF_F 0.0 VLV_TIME_2
    MOVEF_F 0.0 VLV_PORT_5
    MOVEF_F 0.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    MOVEF_F 0.0 VLV_RESULT_5
    STRINGS DUPLICATE '' VLV_TEXT_6
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_PERCENT_7
    MOVEF_F 0.0 VLV_L_9
    MOVEF_F 0.0 VLV_L_8
    MOVEF_F 0.0 VLV_POWER_14
    MOVEF_F 0.0 VLV_COEF_19
    MOVEF_F 0.0 VLV_COEF_20
    STRINGS DUPLICATE '' VLV_IS_INVERTED_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_22
    MOVEF_F 0.0 VLV_MINUS_DEG_22
    MOVEF_F 0.0 VLV_MINUS_DEG_23
    STRINGS DUPLICATE '' VLV_IS_INVERTED_25
    STRINGS DUPLICATE '' VLV_MOTOR1_25
    STRINGS DUPLICATE '' VLV_MOTOR2_25
    MOVEF_F 0.0 VLV_FORWARD1_25
    MOVEF_F 0.0 VLV_FORWARD2_25
    MOVEF_F 0.0 VLV_COEF_25
    MOVEF_F 0.0 VLV_DEG_15
    MOVEF_F 0.0 VLV_POWER_15
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VLV_CUR_8
    MOVEF_F 0.0 VLV_CUR_9
    MOVEF_F 0.0 VLV_MINUS_DEG_24
    STRINGS DUPLICATE '' VLV_MOTOR1_26
    STRINGS DUPLICATE '' VLV_MOTOR2_26
    MOVEF_F 0.0 VLV_FORWARD1_26
    MOVEF_F 0.0 VLV_FORWARD2_26
    MOVEF_F 0.0 VLV_COEF_26
    STRINGS DUPLICATE '' VLV_MOTOR1_27
    STRINGS DUPLICATE '' VLV_MOTOR2_27
    MOVEF_F 0.0 VLV_FORWARD1_27
    MOVEF_F 0.0 VLV_FORWARD2_27
    MOVEF_F 0.0 VLV_COEF_27
    MOVEF_F 0.0 VLV_P_27
    STRINGS DUPLICATE '' VLV_MOTOR1_28
    STRINGS DUPLICATE '' VLV_MOTOR2_28
    MOVEF_F 0.0 VLV_FORWARD1_28
    MOVEF_F 0.0 VLV_FORWARD2_28
    MOVEF_F 0.0 VLV_COEF_28
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_COLOR1
    STRINGS DUPLICATE '' VGV_COLOR2
    STRINGS DUPLICATE '' VGV_OPENED
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_D1
    MOVEF_F 0.0 VGV_D2
    MOVEF_F 0.0 VGV_D3
    MOVEF_F 0.0 VLV_CURRENT_MODE_5
    MOVEF_F 0.0 VLV_ERR_8
    MOVEF_F 0.0 VLV_DIFF_8
    MOVEF_F 0.0 VLV_DELTA_8
    MOVEF_F 0.0 VLV_LEFT_POWER_8
    MOVEF_F 0.0 VLV_RIGHT_POWER_8
    MOVEF_F 0.0 VLV_ERR_9
    MOVEF_F 0.0 VLV_DIFF_9
    MOVEF_F 0.0 VLV_DELTA_9
    MOVEF_F 0.0 VLV_LEFT_POWER_9
    MOVEF_F 0.0 VLV_RIGHT_POWER_9
    MOVEF_F 0.0 VLV_L_12
    MOVEF_F 0.0 VLV_P_12
    MOVEF_F 0.0 VLV_POWER_12
    MOVEF_F 0.0 VLV_R_12
    MOVEF_F 0.0 VLV_DELTA_12
    MOVEF_F 0.0 VLV_LEFT_POWER_12
    MOVEF_F 0.0 VLV_RIGHT_POWER_12
    MOVEF_F 0.0 VLV_L_14
    MOVEF_F 0.0 VLV_R_14
    MOVEF_F 0.0 VLV_ERR_14
    MOVEF_F 0.0 VLV_DIFF_14
    MOVEF_F 0.0 VLV_DELTA_14
    MOVEF_F 0.0 VLV_LEFT_POWER_14
    MOVEF_F 0.0 VLV_RIGHT_POWER_14
    MOVEF_F 0.0 VLV_L_15
    MOVEF_F 0.0 VLV_NORMAL_DEG_16
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_16
    MOVEF_F 0.0 VLV_ZAME_DEG_16
    MOVEF_F 0.0 VLV_M_16
    MOVEF_F 0.0 VLV_MIN_POWER_16
    MOVEF_F 0.0 VLV_P_16
    MOVEF_F 0.0 VLV_POWER_16
    MOVEF_F 0.0 VLV_L_17
    MOVEF_F 0.0 VLV_P_17
    MOVEF_F 0.0 VLV_R_17
    MOVEF_F 0.0 VLV_DELTA_17
    MOVEF_F 0.0 VLV_POWER_17
    MOVEF_F 0.0 VLV_LEFT_POWER_17
    MOVEF_F 0.0 VLV_RIGHT_POWER_17
    STRINGS DUPLICATE '' VLV_MOT_21
    MOVEF_F 0.0 VLV_FORWARD_21
    MOVEF_F 0.0 VLV_COEF_21
    MOVEF_F 0.0 VLV_COEF_22
    MOVEF_F 0.0 VLV_DEG_23
    MOVE32_32 0 RUNCOUNTER_F_PREPARE_GRABBER_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_PREPARE_GRABBER_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_PREPARE_GRABBER_0 0
    CALL GETANDINC32 RUNCOUNTER_F_PREPARE_GRABBER_0 -1 RUNCOUNTER_F_PREPARE_GRABBER_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_PREPARE_GRABBER_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch601
    WRITE32 ENDSUB_F_PREPARE_GRABBER_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PREPARE_GRABBER_0
  dispatch601:
    MOVEF_F 0.0 VLV_BASE_POWER_12
    MOVEF_F 0.0 VLV_MIN_POWER_12
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_COEF_12
    MOVEF_F 0.0 VLV_BASE_POWER_17
    MOVEF_F 0.0 VLV_MIN_POWER_17
    MOVEF_F 0.0 VLV_DEG_17
    MOVEF_F 0.0 VLV_COEF_17
    STRINGS DUPLICATE '' VLV_MOTOR_16
    MOVEF_F 0.0 VLV_FORWARD_16
    MOVEF_F 0.0 VLV_DEG_16
    MOVEF_F 0.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE '' VLV_ACCELERATION_16
    STRINGS DUPLICATE '' VLV_ZAME_16
    STRINGS DUPLICATE '' VLV_TO_STOP_16
    MOVEF_F 0.0 VLV_TIME_2
    MOVEF_F 0.0 VLV_PORT_5
    MOVEF_F 0.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    MOVEF_F 0.0 VLV_RESULT_5
    STRINGS DUPLICATE '' VLV_TEXT_6
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_PERCENT_7
    MOVEF_F 0.0 VLV_L_9
    MOVEF_F 0.0 VLV_L_8
    MOVEF_F 0.0 VLV_POWER_14
    MOVEF_F 0.0 VLV_COEF_19
    MOVEF_F 0.0 VLV_COEF_20
    STRINGS DUPLICATE '' VLV_IS_INVERTED_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_22
    MOVEF_F 0.0 VLV_MINUS_DEG_22
    MOVEF_F 0.0 VLV_MINUS_DEG_23
    STRINGS DUPLICATE '' VLV_IS_INVERTED_25
    STRINGS DUPLICATE '' VLV_MOTOR1_25
    STRINGS DUPLICATE '' VLV_MOTOR2_25
    MOVEF_F 0.0 VLV_FORWARD1_25
    MOVEF_F 0.0 VLV_FORWARD2_25
    MOVEF_F 0.0 VLV_COEF_25
    MOVEF_F 0.0 VLV_DEG_15
    MOVEF_F 0.0 VLV_POWER_15
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VLV_CUR_8
    MOVEF_F 0.0 VLV_CUR_9
    MOVEF_F 0.0 VLV_MINUS_DEG_24
    STRINGS DUPLICATE '' VLV_MOTOR1_26
    STRINGS DUPLICATE '' VLV_MOTOR2_26
    MOVEF_F 0.0 VLV_FORWARD1_26
    MOVEF_F 0.0 VLV_FORWARD2_26
    MOVEF_F 0.0 VLV_COEF_26
    STRINGS DUPLICATE '' VLV_MOTOR1_27
    STRINGS DUPLICATE '' VLV_MOTOR2_27
    MOVEF_F 0.0 VLV_FORWARD1_27
    MOVEF_F 0.0 VLV_FORWARD2_27
    MOVEF_F 0.0 VLV_COEF_27
    MOVEF_F 0.0 VLV_P_27
    STRINGS DUPLICATE '' VLV_MOTOR1_28
    STRINGS DUPLICATE '' VLV_MOTOR2_28
    MOVEF_F 0.0 VLV_FORWARD1_28
    MOVEF_F 0.0 VLV_FORWARD2_28
    MOVEF_F 0.0 VLV_COEF_28
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_COLOR1
    STRINGS DUPLICATE '' VGV_COLOR2
    STRINGS DUPLICATE '' VGV_OPENED
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_D1
    MOVEF_F 0.0 VGV_D2
    MOVEF_F 0.0 VGV_D3
    MOVEF_F 1.0 VGV_LINE
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERTED_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 37.0 VGV_LEFT_MAX
    MOVEF_F 4.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 2.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE 'none' VGV_COLOR1
    STRINGS DUPLICATE 'none' VGV_COLOR2
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_LEFT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 0.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_RIGHT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 0.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB7 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB7:
    SOUND_READY
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB10:
ENDTHREAD:
    RETURN
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else12_1
    CALL MOTOR.START VGV_WATER_MOTOR 50.0
    DATA32 milliseconds14
	MOVEF_32 500.0 milliseconds14
	DATA32 timer14
	TIMER_WAIT milliseconds14 timer14
	TIMER_READY timer14
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer16
	DATA8 nos16
	DATA8 busy16
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer16 nos16
	JR_EQ8 0 nos16 motornotbusy16
  motorwaiting16:
	OUTPUT_TEST layer16 nos16 busy16
	JR_EQ8 busy16 0 motornotbusy16
	SLEEP
	JR motorwaiting16
  motornotbusy16:
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif12
  else12_1:
    CALL MOTOR.START VGV_WATER_MOTOR -50.0
    DATA32 milliseconds18
	MOVEF_32 500.0 milliseconds18
	DATA32 timer18
	TIMER_WAIT milliseconds18 timer18
	TIMER_READY timer18
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 50.0 0.0 20.0 0.0 'True' 

	DATA8 layer20
	DATA8 nos20
	DATA8 busy20
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer20 nos20
	JR_EQ8 0 nos20 motornotbusy20
  motorwaiting20:
	OUTPUT_TEST layer20 nos20 busy20
	JR_EQ8 busy20 0 motornotbusy20
	SLEEP
	JR motorwaiting20
  motornotbusy20:
  else12_2:
  endif12:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_PREPARE_GRABBER_0:
    CALL MOTOR.START VGV_GRABBER_MOTOR -20.0
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB22 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB22:
    CALL MOTOR.STOP VGV_GRABBER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 50.0 0.0 'True' 

	DATA8 layer24
	DATA8 nos24
	DATA8 busy24
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer24 nos24
	JR_EQ8 0 nos24 motornotbusy24
  motorwaiting24:
	OUTPUT_TEST layer24 nos24 busy24
	JR_EQ8 busy24 0 motornotbusy24
	SLEEP
	JR motorwaiting24
  motornotbusy24:
RETSUB_F_PREPARE_GRABBER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PREPARE_GRABBER_0:
SUB_F_MAIN_0:
    DATA32 tmp25
    CALL GETANDINC32 RUNCOUNTER_F_PREPARE_GRABBER_0 1  RUNCOUNTER_F_PREPARE_GRABBER_0 tmp25
    JR_NEQ32 0 tmp25 alreadylaunched25
    OBJECT_START TF_PREPARE_GRABBER_0
  alreadylaunched25:
    STRINGS DUPLICATE 'none' VGV_OPENED
    WRITE32 ENDSUB_F_RESET_0:CALLSUB26 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB26:
    MULF 40.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setSpeedB
	OUTPUT_SPEED 0 2 setSpeedB
	OUTPUT_START 0 2
    MULF 35.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setSpeedA
	OUTPUT_SPEED 0 1 setSpeedA
	OUTPUT_START 0 1
  while31:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 440.0 endwhile31
  whilebody31:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 440.0 whilebody31
  endwhile31:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB36 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB36:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 180.0 VLV_DEG_16
    MOVEF_F 40.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB38 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB38:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 50.0 VLV_DEG_16
    MOVEF_F 40.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB39 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB39:
    MULF -80.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    MOVEF_F 2000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB42 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB42:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB43 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB43:
    MULF -80.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB46 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB46:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB47 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB47:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 30.0 VLV_MIN_POWER_12
    MOVEF_F 140.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB48 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB48:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB49 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB49:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB50 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB50:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 250.0 else52_1
    STRINGS DUPLICATE 'right' VGV_OPENED
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB53 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB53:
    JR endif52
  else52_1:
    STRINGS DUPLICATE 'left' VGV_OPENED
  else52_2:
  endif52:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 400.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB54 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB54:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 400.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB55 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB55:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB56 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB56:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB57 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB57:
    MOVEF_F 0.0 VGV_C
    MOVEF_F VGV_LEFT_SENSOR VLV_PORT_5
    MOVEF_F 0.0 VLV_MODE_5
    MOVEF_F 200.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB58 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB58:
    MOVEF_F VLV_RESULT_5 VGV_C
    JR_NEQF VGV_C 4.0 else59_1
    STRINGS DUPLICATE 'green' VGV_COLOR1
    JR endif59
  else59_1:
    JR_EQF VGV_C 5.0 or60
    JR_NEQF VGV_C 6.0 else59_2
  or60:
    STRINGS DUPLICATE 'yellow' VGV_COLOR1
    JR endif59
  else59_2:
    JR_LTEQF VGV_C 6.0 else59_3
    JR_GTEQF VGV_C 11.0 else59_3
    STRINGS DUPLICATE 'red' VGV_COLOR1
    JR endif59
  else59_3:
    JR_EQF VGV_C 2.0 or61
    JR_NEQF VGV_C 3.0 else59_4
  or61:
    STRINGS DUPLICATE 'blue' VGV_COLOR1
    JR endif59
  else59_4:
    JR_NEQF VGV_C 14.0 else59_5
    STRINGS DUPLICATE 'white' VGV_COLOR1
    JR endif59
  else59_5:
    STRINGS DUPLICATE 'black' VGV_COLOR1
  else59_6:
  endif59:
    STRINGS VALUE_FORMATTED VGV_C '%g' 99 S.1
    CALL TEXT.APPEND S.1 ' ' S.0
    CALL TEXT.APPEND S.0 VGV_COLOR1 VLV_TEXT_6
    WRITE32 ENDSUB_F_TEXT_TO_SCREEN_1:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TEXT_TO_SCREEN_1
CALLSUB65:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 410.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB66:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB67 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB67:
    MOVEF_F VGV_LEFT_SENSOR VLV_PORT_5
    MOVEF_F 0.0 VLV_MODE_5
    MOVEF_F 200.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB68 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB68:
    MOVEF_F VLV_RESULT_5 VGV_C
    JR_NEQF VGV_C 4.0 else69_1
    STRINGS DUPLICATE 'green' VGV_COLOR2
    JR endif69
  else69_1:
    JR_EQF VGV_C 5.0 or70
    JR_NEQF VGV_C 6.0 else69_2
  or70:
    STRINGS DUPLICATE 'yellow' VGV_COLOR2
    JR endif69
  else69_2:
    JR_LTEQF VGV_C 6.0 else69_3
    JR_GTEQF VGV_C 11.0 else69_3
    STRINGS DUPLICATE 'red' VGV_COLOR2
    JR endif69
  else69_3:
    JR_EQF VGV_C 2.0 or71
    JR_NEQF VGV_C 3.0 else69_4
  or71:
    STRINGS DUPLICATE 'blue' VGV_COLOR2
    JR endif69
  else69_4:
    JR_NEQF VGV_C 14.0 else69_5
    STRINGS DUPLICATE 'white' VGV_COLOR2
    JR endif69
  else69_5:
    STRINGS DUPLICATE 'black' VGV_COLOR2
  else69_6:
  endif69:
    STRINGS VALUE_FORMATTED VGV_C '%g' 99 S.1
    CALL TEXT.APPEND S.1 ' ' S.0
    CALL TEXT.APPEND S.0 VGV_COLOR2 VLV_TEXT_6
    WRITE32 ENDSUB_F_TEXT_TO_SCREEN_1:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TEXT_TO_SCREEN_1
CALLSUB75:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB76:
    MOVEF_F 2000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB77:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB78:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB80 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB80:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB81:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB82:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB83:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 30.0 VLV_MIN_POWER_12
    MOVEF_F 415.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB84 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB84:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB85 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB85:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB86:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB88:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 210.0 0.0 'True' 

	DATA8 layer89
	DATA8 nos89
	DATA8 busy89
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer89 nos89
	JR_EQ8 0 nos89 motornotbusy89
  motorwaiting89:
	OUTPUT_TEST layer89 nos89 busy89
	JR_EQ8 busy89 0 motornotbusy89
	SLEEP
	JR motorwaiting89
  motornotbusy89:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB90:
    MOVEF_F 1500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB91:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB92:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 30.0 VLV_MIN_POWER_12
    MOVEF_F 900.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB93:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB94:
    CALL MOTOR.START VGV_GRABBER_MOTOR 30.0
    MOVEF_F 2000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB96:
    CALL MOTOR.STOP VGV_GRABBER_MOTOR 'True'
    CALL EQ_STRING VGV_OPENED 'right' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else98_1
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB100:
    MOVEF_F 3000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB101:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB102:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 220.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB103:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 160.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB105:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB106:
    MOVEF_F 2000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB107:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB108:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB109:
    MULF 60.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 50.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    WRITE32 ENDSUB_F_RESET_0:CALLSUB114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB114:
  while115:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 950.0 endwhile115
  whilebody115:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 950.0 whilebody115
  endwhile115:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB120:
    MOVEF_F VLV_PERCENT_7 VGV_P
  while121:
    JR_GTEQF VGV_P 40.0 endwhile121
  whilebody121:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB122:
    MOVEF_F VLV_PERCENT_7 VGV_P
    JR_LTF VGV_P 40.0 whilebody121
  endwhile121:
  while123:
    JR_LTEQF VGV_P 20.0 endwhile123
  whilebody123:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB124:
    MOVEF_F VLV_PERCENT_7 VGV_P
    JR_GTF VGV_P 20.0 whilebody123
  endwhile123:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB125:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB126:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB127:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB128:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB129:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB130:
    MOVEF_F -30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB131:
    MOVEF_F 1500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB132:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB133:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB134:
    MOVEF_F VLV_PERCENT_7 VGV_P
    WRITE32 ENDSUB_F_RESET_0:CALLSUB135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB135:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB136:
  while137:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 450.0 or138
    JR_LTEQF VGV_P 10.0 endwhile137
  or138:
  whilebody137:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB141:
    MOVEF_F VLV_PERCENT_7 VGV_P
    MOVEF_F VGV_P VLV_L_9
    WRITE32 ENDSUB_F_LINE_SLOW_1:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_SLOW_1
CALLSUB142:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 450.0 whilebody137
    JR_GTF VGV_P 10.0 whilebody137
  endwhile137:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB145:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 375.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB146:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 120.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB147:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB148:
    JR endif98
  else98_1:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB149:
    CALL MOTOR.STOP VGV_MOTORS 'True'
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 375.0 'True'

	DATA8 layer153
	DATA8 nos153
	DATA8 busy153
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer153 nos153
	JR_EQ8 0 nos153 motornotbusy153
  motorwaiting153:
	OUTPUT_TEST layer153 nos153 busy153
	JR_EQ8 busy153 0 motornotbusy153
	SLEEP
	JR motorwaiting153
  motornotbusy153:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB154:
    MOVEF_F 2000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB155:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB156:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 220.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB157:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 160.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB159:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB160 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB160:
    MOVEF_F 2000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB161:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB162:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB163:
    MULF 70.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 80.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    WRITE32 ENDSUB_F_RESET_0:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB168:
  while169:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 950.0 endwhile169
  whilebody169:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 950.0 whilebody169
  endwhile169:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB174:
    MOVEF_F VLV_PERCENT_7 VGV_P
  while175:
    JR_GTEQF VGV_P 40.0 endwhile175
  whilebody175:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB176:
    MOVEF_F VLV_PERCENT_7 VGV_P
    JR_LTF VGV_P 40.0 whilebody175
  endwhile175:
  while177:
    JR_LTEQF VGV_P 20.0 endwhile177
  whilebody177:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB178 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB178:
    MOVEF_F VLV_PERCENT_7 VGV_P
    JR_GTF VGV_P 20.0 whilebody177
  endwhile177:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB179:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB180:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 30.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB181:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB182:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB183:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB184:
    MOVEF_F -30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB185:
    MOVEF_F 1500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB186:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB187:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB188:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB189:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB190:
    MOVEF_F VLV_PERCENT_7 VGV_P
  while191:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 450.0 or192
    JR_LTEQF VGV_P 10.0 endwhile191
  or192:
  whilebody191:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB195:
    MOVEF_F VLV_PERCENT_7 VGV_P
    MOVEF_F VGV_P VLV_L_9
    WRITE32 ENDSUB_F_LINE_SLOW_1:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_SLOW_1
CALLSUB196:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 450.0 whilebody191
    JR_GTF VGV_P 10.0 whilebody191
  endwhile191:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB199:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 375.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB200:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 200.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB201:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB202:
  else98_2:
  endif98:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB203:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB204:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 200.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB205:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB206:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB208:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB209:
    MOVEF_F 3000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB210:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB211:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 220.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB212:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 160.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB214:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB215:
    MULF 50.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 60.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    CALL SENSOR.READPERCENT VGV_LINE VGV_P
  while221:
    JR_GTF VGV_P 10.0 or222
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 200.0 endwhile221
  or222:
  whilebody221:
    CALL SENSOR.READPERCENT VGV_LINE VGV_P
    JR_GTF VGV_P 10.0 whilebody221
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 200.0 whilebody221
  endwhile221:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB228:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB229:
  while230:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 500.0 endwhile230
  whilebody230:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 500.0 whilebody230
  endwhile230:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB235:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 180.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB237:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 50.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB238:
    MULF -80.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    MOVEF_F 2000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB241:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB242:
    MULF -80.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB245:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB246:
    MOVEF_F 380.0 VGV_D1
    MOVEF_F 120.0 VGV_D2
    MOVEF_F 60.0 VGV_D3
    CALL EQ_STRING VGV_COLOR1 'black' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else247_1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 100.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB249:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 110.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB250:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB251:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -20.0 0.0 VGV_D1 0.0 'True' 

	DATA8 layer252
	DATA8 nos252
	DATA8 busy252
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer252 nos252
	JR_EQ8 0 nos252 motornotbusy252
  motorwaiting252:
	OUTPUT_TEST layer252 nos252 busy252
	JR_EQ8 busy252 0 motornotbusy252
	SLEEP
	JR motorwaiting252
  motornotbusy252:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F VGV_D3 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB253:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB254:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 20.0 0.0 VGV_D2 0.0 'True' 

	DATA8 layer255
	DATA8 nos255
	DATA8 busy255
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer255 nos255
	JR_EQ8 0 nos255 motornotbusy255
  motorwaiting255:
	OUTPUT_TEST layer255 nos255 busy255
	JR_EQ8 busy255 0 motornotbusy255
	SLEEP
	JR motorwaiting255
  motornotbusy255:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    SUBF 110.0 VGV_D3 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB257:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB258:
    MULF VGV_LEFT_FORWARD -80.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    MOVEF_F 2500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB261:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB262:
    JR endif247
  else247_1:
    CALL EQ_STRING VGV_COLOR1 'white' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else247_2
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 600.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB264:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB265:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 100.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB266:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB267:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F VGV_D3 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB268:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB269:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -20.0 0.0 VGV_D1 0.0 'True' 

	DATA8 layer270
	DATA8 nos270
	DATA8 busy270
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer270 nos270
	JR_EQ8 0 nos270 motornotbusy270
  motorwaiting270:
	OUTPUT_TEST layer270 nos270 busy270
	JR_EQ8 busy270 0 motornotbusy270
	SLEEP
	JR motorwaiting270
  motornotbusy270:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F VGV_D3 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB271:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB272:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 20.0 0.0 VGV_D2 0.0 'True' 

	DATA8 layer273
	DATA8 nos273
	DATA8 busy273
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer273 nos273
	JR_EQ8 0 nos273 motornotbusy273
  motorwaiting273:
	OUTPUT_TEST layer273 nos273 busy273
	JR_EQ8 busy273 0 motornotbusy273
	SLEEP
	JR motorwaiting273
  motornotbusy273:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 100.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB275:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 560.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB276:
    MOVEF_F -30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB277:
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB278:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB279:
    JR endif247
  else247_2:
    CALL EQ_STRING VGV_COLOR1 'red' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else247_3
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 340.0 VLV_DEG_16
    MOVEF_F 25.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB281:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 30.0 VLV_MIN_POWER_12
    ADDF 500.0 VGV_D3 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB283:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB284:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -20.0 0.0 VGV_D1 0.0 'True' 

	DATA8 layer285
	DATA8 nos285
	DATA8 busy285
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer285 nos285
	JR_EQ8 0 nos285 motornotbusy285
  motorwaiting285:
	OUTPUT_TEST layer285 nos285 busy285
	JR_EQ8 busy285 0 motornotbusy285
	SLEEP
	JR motorwaiting285
  motornotbusy285:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F VGV_D3 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB286:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB287:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 20.0 0.0 VGV_D2 0.0 'True' 

	DATA8 layer288
	DATA8 nos288
	DATA8 busy288
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer288 nos288
	JR_EQ8 0 nos288 motornotbusy288
  motorwaiting288:
	OUTPUT_TEST layer288 nos288 busy288
	JR_EQ8 busy288 0 motornotbusy288
	SLEEP
	JR motorwaiting288
  motornotbusy288:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 30.0 VLV_MIN_POWER_12
    MOVEF_F 500.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB289:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB290:
    MULF VGV_RIGHT_FORWARD -80.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    MOVEF_F 2500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB293:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB294:
    JR endif247
  else247_3:
    CALL EQ_STRING VGV_COLOR1 'yellow' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else247_4
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 200.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB296:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 30.0 VLV_MIN_POWER_12
    ADDF 850.0 VGV_D3 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB298:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB299:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -20.0 0.0 VGV_D1 0.0 'True' 

	DATA8 layer300
	DATA8 nos300
	DATA8 busy300
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer300 nos300
	JR_EQ8 0 nos300 motornotbusy300
  motorwaiting300:
	OUTPUT_TEST layer300 nos300 busy300
	JR_EQ8 busy300 0 motornotbusy300
	SLEEP
	JR motorwaiting300
  motornotbusy300:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F VGV_D3 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB301:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB302:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 20.0 0.0 VGV_D2 0.0 'True' 

	DATA8 layer303
	DATA8 nos303
	DATA8 busy303
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer303 nos303
	JR_EQ8 0 nos303 motornotbusy303
  motorwaiting303:
	OUTPUT_TEST layer303 nos303 busy303
	JR_EQ8 busy303 0 motornotbusy303
	SLEEP
	JR motorwaiting303
  motornotbusy303:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 30.0 VLV_MIN_POWER_12
    MOVEF_F 850.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB304:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB305:
    MULF -80.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    MOVEF_F 2500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB308:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB309:
    JR endif247
  else247_4:
    CALL EQ_STRING VGV_COLOR1 'green' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else247_5
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 120.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB311:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 30.0 VLV_MIN_POWER_12
    ADDF 1200.0 VGV_D3 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB313:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB314:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -20.0 0.0 VGV_D1 0.0 'True' 

	DATA8 layer315
	DATA8 nos315
	DATA8 busy315
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer315 nos315
	JR_EQ8 0 nos315 motornotbusy315
  motorwaiting315:
	OUTPUT_TEST layer315 nos315 busy315
	JR_EQ8 busy315 0 motornotbusy315
	SLEEP
	JR motorwaiting315
  motornotbusy315:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F VGV_D3 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB316:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB317:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 20.0 0.0 VGV_D2 0.0 'True' 

	DATA8 layer318
	DATA8 nos318
	DATA8 busy318
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer318 nos318
	JR_EQ8 0 nos318 motornotbusy318
  motorwaiting318:
	OUTPUT_TEST layer318 nos318 busy318
	JR_EQ8 busy318 0 motornotbusy318
	SLEEP
	JR motorwaiting318
  motornotbusy318:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 30.0 VLV_MIN_POWER_12
    MOVEF_F 1190.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB319:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB320 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB320:
    MULF -80.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    MOVEF_F 2500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB323:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB324 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB324:
    JR endif247
  else247_5:
    CALL EQ_STRING VGV_COLOR1 'blue' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else247_6
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 30.0 VLV_MIN_POWER_12
    ADDF 1100.0 VGV_D3 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB327:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB328:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -20.0 0.0 VGV_D1 0.0 'True' 

	DATA8 layer329
	DATA8 nos329
	DATA8 busy329
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer329 nos329
	JR_EQ8 0 nos329 motornotbusy329
  motorwaiting329:
	OUTPUT_TEST layer329 nos329 busy329
	JR_EQ8 busy329 0 motornotbusy329
	SLEEP
	JR motorwaiting329
  motornotbusy329:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F VGV_D3 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB330 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB330:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB331:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 20.0 0.0 VGV_D2 0.0 'True' 

	DATA8 layer332
	DATA8 nos332
	DATA8 busy332
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer332 nos332
	JR_EQ8 0 nos332 motornotbusy332
  motorwaiting332:
	OUTPUT_TEST layer332 nos332 busy332
	JR_EQ8 busy332 0 motornotbusy332
	SLEEP
	JR motorwaiting332
  motornotbusy332:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 30.0 VLV_MIN_POWER_12
    MOVEF_F 1050.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB333:
    MOVEF_F -30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB334:
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB335:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB336:
  else247_6:
  endif247:
    CALL EQ_STRING VGV_COLOR2 'black' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else337_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -20.0 0.0 VGV_D2 0.0 'True' 

	DATA8 layer339
	DATA8 nos339
	DATA8 busy339
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer339 nos339
	JR_EQ8 0 nos339 motornotbusy339
  motorwaiting339:
	OUTPUT_TEST layer339 nos339 busy339
	JR_EQ8 busy339 0 motornotbusy339
	SLEEP
	JR motorwaiting339
  motornotbusy339:
    JR endif337
  else337_1:
    CALL EQ_STRING VGV_COLOR2 'white' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else337_2
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 600.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB341 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB341:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB342:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -20.0 0.0 VGV_D2 0.0 'True' 

	DATA8 layer343
	DATA8 nos343
	DATA8 busy343
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer343 nos343
	JR_EQ8 0 nos343 motornotbusy343
  motorwaiting343:
	OUTPUT_TEST layer343 nos343 busy343
	JR_EQ8 busy343 0 motornotbusy343
	SLEEP
	JR motorwaiting343
  motornotbusy343:
    JR endif337
  else337_2:
    CALL EQ_STRING VGV_COLOR2 'red' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else337_3
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 340.0 VLV_DEG_16
    MOVEF_F 25.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB345:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 500.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB346:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB347:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -20.0 0.0 VGV_D2 0.0 'True' 

	DATA8 layer348
	DATA8 nos348
	DATA8 busy348
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer348 nos348
	JR_EQ8 0 nos348 motornotbusy348
  motorwaiting348:
	OUTPUT_TEST layer348 nos348 busy348
	JR_EQ8 busy348 0 motornotbusy348
	SLEEP
	JR motorwaiting348
  motornotbusy348:
    JR endif337
  else337_3:
    CALL EQ_STRING VGV_COLOR2 'yellow' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else337_4
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 200.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB350 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB350:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    ADDF 850.0 VGV_D3 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB352:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB353:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -20.0 0.0 VGV_D2 0.0 'True' 

	DATA8 layer354
	DATA8 nos354
	DATA8 busy354
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer354 nos354
	JR_EQ8 0 nos354 motornotbusy354
  motorwaiting354:
	OUTPUT_TEST layer354 nos354 busy354
	JR_EQ8 busy354 0 motornotbusy354
	SLEEP
	JR motorwaiting354
  motornotbusy354:
    JR endif337
  else337_4:
    CALL EQ_STRING VGV_COLOR2 'green' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else337_5
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 120.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB356:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 30.0 VLV_MIN_POWER_12
    ADDF 1200.0 VGV_D3 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB358:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB359:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -20.0 0.0 VGV_D2 0.0 'True' 

	DATA8 layer360
	DATA8 nos360
	DATA8 busy360
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer360 nos360
	JR_EQ8 0 nos360 motornotbusy360
  motorwaiting360:
	OUTPUT_TEST layer360 nos360 busy360
	JR_EQ8 busy360 0 motornotbusy360
	SLEEP
	JR motorwaiting360
  motornotbusy360:
    JR endif337
  else337_5:
    CALL EQ_STRING VGV_COLOR2 'blue' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else337_6
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    ADDF 1100.0 VGV_D3 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB363:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB364:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -20.0 0.0 VGV_D2 0.0 'True' 

	DATA8 layer365
	DATA8 nos365
	DATA8 busy365
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer365 nos365
	JR_EQ8 0 nos365 motornotbusy365
  motorwaiting365:
	OUTPUT_TEST layer365 nos365 busy365
	JR_EQ8 busy365 0 motornotbusy365
	SLEEP
	JR motorwaiting365
  motornotbusy365:
  else337_6:
  endif337:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_MOVEMENT_INIT_1:
    MULF VLV_POWER_1 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF VLV_POWER_1 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
RETSUB_F_MOVEMENT_INIT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVEMENT_INIT_1:
SUB_F_DELAY_1:
    DATA32 milliseconds370
	MOVEF_32 VLV_TIME_2 milliseconds370
	DATA32 timer370
	TIMER_WAIT milliseconds370 timer370
	TIMER_READY timer370
RETSUB_F_DELAY_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_1:
SUB_F_RESET_0:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 2
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_STOP_0:
    OUTPUT_POWER 0 3 0
	OUTPUT_STOP 0 3 1
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_READ_MODE_4:
    CALL SENSOR.GETMODE VLV_PORT_5 VLV_CURRENT_MODE_5
    JR_EQF VLV_CURRENT_MODE_5 VLV_MODE_5 else375_1
    DATA8 layer376
	DATA8 no376
	DATA8 mode8376
	
	MOVEF_8 VLV_PORT_5 no376
	SUB8 no376 1 no376
	DIV8 no376 4 layer376
	MATH MOD8 no376 4 no376

	MOVEF_8 VLV_MODE_5 mode8376
	
	INPUT_DEVICE READY_RAW layer376 no376 0 mode8376 0
    DATA8 layer377
	DATA8 no377	
	MOVEF_8 VLV_PORT_5 no377
	SUB8 no377 1 no377
	DIV8 no377 4 layer377
	MATH MOD8 no377 4 no377 
	INPUT_READY layer377 no377
  else375_1:
  endif375:
    JR_LTEQF VLV_D_5 0.0 else378_1
    MOVEF_F VLV_D_5 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB379:
  else378_1:
  endif378:
    CALL SENSOR.READRAWVALUE VLV_PORT_5 0.0 VLV_RESULT_5
    DATA8 layer381
	DATA8 no381
	DATA8 mode8381
	
	MOVEF_8 VLV_PORT_5 no381
	SUB8 no381 1 no381
	DIV8 no381 4 layer381
	MATH MOD8 no381 4 no381

	MOVEF_8 1.0 mode8381
	
	INPUT_DEVICE READY_RAW layer381 no381 0 mode8381 0
RETSUB_F_READ_MODE_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_READ_MODE_4:
SUB_F_TEXT_TO_SCREEN_1:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 VLV_TEXT_6
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_TEXT_TO_SCREEN_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TEXT_TO_SCREEN_1:
SUB_F_READ_PERCENT_1:
    CALL SENSOR.GETMODE VGV_LINE F.0
    JR_EQF F.0 0.0 else386_1
    DATA8 layer388
	DATA8 no388
	DATA8 mode8388
	
	MOVEF_8 VGV_LINE no388
	SUB8 no388 1 no388
	DIV8 no388 4 layer388
	MATH MOD8 no388 4 no388

	MOVEF_8 0.0 mode8388
	
	INPUT_DEVICE READY_RAW layer388 no388 0 mode8388 0
    DATA8 layer389
	DATA8 no389	
	MOVEF_8 VGV_LINE no389
	SUB8 no389 1 no389
	DIV8 no389 4 layer389
	MATH MOD8 no389 4 no389 
	INPUT_READY layer389 no389
  else386_1:
  endif386:
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf393
    DATA8 flag393
    DIVF F.1 F.2 tmpf393
    CP_EQF 0.0 F.2 flag393
    SELECTF flag393 0.0 tmpf393 F.0

    MULF F.0 100.0 VLV_PERCENT_7
RETSUB_F_READ_PERCENT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_READ_PERCENT_1:
SUB_F_LINE_1:
    MOVEF_F 0.0 VLV_CUR_8
    JR_NEQF VLV_L_8 -100.0 else395_1
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB396:
    MOVEF_F VLV_PERCENT_7 VLV_CUR_8
    JR endif395
  else395_1:
    MOVEF_F VLV_L_8 VLV_CUR_8
  else395_2:
  endif395:
    SUBF VLV_CUR_8 50.0 VLV_ERR_8
    SUBF VLV_ERR_8 VGV_LAST_ERR VLV_DIFF_8
    MULF VLV_ERR_8 1.0 F.0
    MULF VLV_DIFF_8 7.0 F.1
    ADDF F.0 F.1 VLV_DELTA_8
    SUBF 80.0 VLV_DELTA_8 VLV_LEFT_POWER_8
    ADDF 80.0 VLV_DELTA_8 VLV_RIGHT_POWER_8
    MULF VLV_LEFT_POWER_8 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_8 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_8 VGV_LAST_ERR
    DATA32 milliseconds408
	MOVEF_32 5.0 milliseconds408
	DATA32 timer408
	TIMER_WAIT milliseconds408 timer408
	TIMER_READY timer408
RETSUB_F_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_1:
SUB_F_LINE_SLOW_1:
    MOVEF_F 0.0 VLV_CUR_9
    JR_NEQF VLV_L_9 -100.0 else409_1
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB410:
    MOVEF_F VLV_PERCENT_7 VLV_CUR_9
    JR endif409
  else409_1:
    MOVEF_F VLV_L_9 VLV_CUR_9
  else409_2:
  endif409:
    SUBF VLV_CUR_9 50.0 VLV_ERR_9
    SUBF VLV_ERR_9 VGV_LAST_ERR VLV_DIFF_9
    MULF VLV_ERR_9 0.5 F.0
    MULF VLV_DIFF_9 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_9
    SUBF 30.0 VLV_DELTA_9 VLV_LEFT_POWER_9
    ADDF 30.0 VLV_DELTA_9 VLV_RIGHT_POWER_9
    MULF VLV_LEFT_POWER_9 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_9 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_9 VGV_LAST_ERR
    DATA32 milliseconds422
	MOVEF_32 5.0 milliseconds422
	DATA32 timer422
	TIMER_WAIT milliseconds422 timer422
	TIMER_READY timer422
RETSUB_F_LINE_SLOW_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_SLOW_1:
SUB_F_SPEEDUP_4:
    MOVEF_F 15.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB423 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB423:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB424:
    TIMER_READ timeMC2
    MOVEF_F 0.0 VLV_L_12
  while426:
    JR_GTEQF VLV_L_12 VLV_DEG_12 endwhile426
  whilebody426:
    TIMER_READ timeMC2tmp
	SUB32 timeMC2tmp timeMC2 timeMC2tmp
	MOVE32_F timeMC2tmp F.0
    JR_LTEQF F.0 1000.0 else427_1
    JR_GTEQF VLV_L_12 20.0 else427_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB429:
    ADDF VLV_MIN_POWER_12 5.0 VLV_MIN_POWER_12
    TIMER_READ timeMC2
  else427_1:
  endif427:
    DATAF tmpf432
    DATA8 flag432
    DIVF VLV_L_12 VLV_DEG_12 tmpf432
    CP_EQF 0.0 VLV_DEG_12 flag432
    SELECTF flag432 0.0 tmpf432 VLV_P_12

    SUBF VLV_BASE_POWER_12 VLV_MIN_POWER_12 F.1
    MULF F.1 VLV_P_12 F.0
    ADDF F.0 VLV_MIN_POWER_12 VLV_POWER_12
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_12 VLV_L_12
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_12 VLV_R_12
    SUBF VLV_L_12 VLV_R_12 F.0
    MULF F.0 VLV_P_12 VLV_DELTA_12
    SUBF VLV_POWER_12 VLV_DELTA_12 VLV_LEFT_POWER_12
    ADDF VLV_POWER_12 VLV_DELTA_12 VLV_RIGHT_POWER_12
    MULF VLV_LEFT_POWER_12 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_12 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_12 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_12 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    JR_LTF VLV_L_12 VLV_DEG_12 whilebody426
  endwhile426:
RETSUB_F_SPEEDUP_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPEEDUP_4:
SUB_F_SYNC_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_14
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_14
    SUBF VLV_L_14 VLV_R_14 VLV_ERR_14
    SUBF VLV_ERR_14 VGV_LAST_ERR VLV_DIFF_14
    MULF VLV_ERR_14 1.0 F.0
    MULF VLV_DIFF_14 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_14
    SUBF VLV_POWER_14 VLV_DELTA_14 VLV_LEFT_POWER_14
    ADDF VLV_POWER_14 VLV_DELTA_14 VLV_RIGHT_POWER_14
    MULF VLV_LEFT_POWER_14 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_14 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_14 VGV_LAST_ERR
RETSUB_F_SYNC_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SYNC_1:
SUB_F_FORWARD_DEG_2:
    MOVEF_F VLV_POWER_15 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB467:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB468 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB468:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_15
  while471:
    MATH ABS VLV_L_15 F.0
    MATH ABS VLV_DEG_15 F.1
    JR_GTEQF F.0 F.1 endwhile471
  whilebody471:
    MOVEF_F VLV_POWER_15 VLV_POWER_14
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB474:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_15
    MATH ABS VLV_L_15 F.0
    MATH ABS VLV_DEG_15 F.1
    JR_LTF F.0 F.1 whilebody471
  endwhile471:
RETSUB_F_FORWARD_DEG_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FORWARD_DEG_2:
SUB_F_MOVE_MOTOR_7:
    MOVEF_F VLV_DEG_16 VLV_NORMAL_DEG_16
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_16
    MOVEF_F 0.0 VLV_ZAME_DEG_16
    CALL EQ_STRING VLV_ACCELERATION_16 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else479_1
    DATAF tmpf481
    DATA8 flag481
    DIVF VLV_DEG_16 2.0 tmpf481
    CP_EQF 0.0 2.0 flag481
    SELECTF flag481 0.0 tmpf481 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag483
	CP_LTF F.0 120.0 flag483
	SELECTF flag483 F.0 120.0 VLV_ACCELERATION_DEG_16
    SUBF VLV_NORMAL_DEG_16 VLV_ACCELERATION_DEG_16 VLV_NORMAL_DEG_16
  else479_1:
  endif479:
    CALL EQ_STRING VLV_ZAME_16 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else485_1
    DATAF tmpf487
    DATA8 flag487
    DIVF VLV_DEG_16 2.0 tmpf487
    CP_EQF 0.0 2.0 flag487
    SELECTF flag487 0.0 tmpf487 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag489
	CP_LTF F.0 120.0 flag489
	SELECTF flag489 F.0 120.0 VLV_ZAME_DEG_16
    SUBF VLV_NORMAL_DEG_16 VLV_ZAME_DEG_16 VLV_NORMAL_DEG_16
  else485_1:
  endif485:
    CALL EQ_STRING VLV_ACCELERATION_16 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else491_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_16
    MOVEF_F 0.0 VLV_M_16
    MOVEF_F 10.0 VLV_MIN_POWER_16
    TIMER_READ timeMC1
  while495:
    JR_GTEQF VLV_M_16 VLV_ACCELERATION_DEG_16 endwhile495
  whilebody495:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTEQF F.0 700.0 else496_1
    JR_GTEQF VLV_M_16 20.0 else496_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB498:
    ADDF VLV_MIN_POWER_16 5.0 VLV_MIN_POWER_16
    MOVEF_F VLV_ACCELERATION_DEG_16 VLV_ACCELERATION_DEG_16
    TIMER_READ timeMC1
  else496_1:
  endif496:
    DATAF tmpf501
    DATA8 flag501
    DIVF VLV_M_16 VLV_ACCELERATION_DEG_16 tmpf501
    CP_EQF 0.0 VLV_ACCELERATION_DEG_16 flag501
    SELECTF flag501 0.0 tmpf501 VLV_P_16

    SUBF VLV_MAX_POWER_16 VLV_MIN_POWER_16 F.1
    MULF F.1 VLV_P_16 F.0
    ADDF F.0 VLV_MIN_POWER_16 VLV_POWER_16
    MULF VLV_POWER_16 VLV_FORWARD_16 F.0
    CALL MOTOR.START VLV_MOTOR_16 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_16 F.0
    MULF F.0 VLV_FORWARD_16 VLV_M_16
    DATA32 milliseconds509
	MOVEF_32 10.0 milliseconds509
	DATA32 timer509
	TIMER_WAIT milliseconds509 timer509
	TIMER_READY timer509
    JR_LTF VLV_M_16 VLV_ACCELERATION_DEG_16 whilebody495
  endwhile495:
  else491_1:
  endif491:
    JR_LTEQF VLV_NORMAL_DEG_16 0.0 else510_1
    MULF VLV_MAX_POWER_16 VLV_FORWARD_16 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_16 F.0 0.0 VLV_NORMAL_DEG_16 0.0 'False' 

	DATA8 layer512
	DATA8 nos512
	DATA8 busy512
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_16 layer512 nos512
	JR_EQ8 0 nos512 motornotbusy512
  motorwaiting512:
	OUTPUT_TEST layer512 nos512 busy512
	JR_EQ8 busy512 0 motornotbusy512
	SLEEP
	JR motorwaiting512
  motornotbusy512:
  else510_1:
  endif510:
    CALL EQ_STRING VLV_ZAME_16 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else513_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_16
    MOVEF_F 0.0 VLV_M_16
  while516:
    JR_GTEQF VLV_M_16 VLV_ZAME_DEG_16 endwhile516
  whilebody516:
    DATAF tmpf517
    DATA8 flag517
    DIVF VLV_M_16 VLV_ZAME_DEG_16 tmpf517
    CP_EQF 0.0 VLV_ZAME_DEG_16 flag517
    SELECTF flag517 0.0 tmpf517 F.0

    SUBF 1.0 F.0 VLV_P_16
    SUBF VLV_MAX_POWER_16 10.0 F.1
    MULF F.1 VLV_P_16 F.0
    ADDF F.0 10.0 VLV_POWER_16
    MULF VLV_POWER_16 VLV_FORWARD_16 F.0
    CALL MOTOR.START VLV_MOTOR_16 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_16 F.0
    MULF F.0 VLV_FORWARD_16 VLV_M_16
    DATA32 milliseconds526
	MOVEF_32 10.0 milliseconds526
	DATA32 timer526
	TIMER_WAIT milliseconds526 timer526
	TIMER_READY timer526
    JR_LTF VLV_M_16 VLV_ZAME_DEG_16 whilebody516
  endwhile516:
  else513_1:
  endif513:
    CALL EQ_STRING VLV_TO_STOP_16 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else527_1
    CALL MOTOR.STOP VLV_MOTOR_16 'True'
  else527_1:
  endif527:
RETSUB_F_MOVE_MOTOR_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_MOTOR_7:
SUB_F_ZAME_4:
    MOVEF_F VLV_BASE_POWER_17 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB530:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB531:
    MOVEF_F 0.0 VLV_L_17
  while532:
    JR_GTEQF VLV_L_17 VLV_DEG_17 endwhile532
  whilebody532:
    DATAF tmpf533
    DATA8 flag533
    DIVF VLV_L_17 VLV_DEG_17 tmpf533
    CP_EQF 0.0 VLV_DEG_17 flag533
    SELECTF flag533 0.0 tmpf533 VLV_P_17

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_17 VLV_L_17
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_17 VLV_R_17
    SUBF VLV_L_17 VLV_R_17 F.0
    SUBF 1.0 VLV_P_17 F.1
    MULF F.0 F.1 VLV_DELTA_17
    SUBF VLV_BASE_POWER_17 VLV_MIN_POWER_17 F.1
    SUBF 1.0 VLV_P_17 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_17 VLV_POWER_17
    SUBF VLV_POWER_17 VLV_DELTA_17 VLV_LEFT_POWER_17
    ADDF VLV_POWER_17 VLV_DELTA_17 VLV_RIGHT_POWER_17
    MULF VLV_LEFT_POWER_17 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_17 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_17 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_17 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds555
	MOVEF_32 10.0 milliseconds555
	DATA32 timer555
	TIMER_WAIT milliseconds555 timer555
	TIMER_READY timer555
    JR_LTF VLV_L_17 VLV_DEG_17 whilebody532
  endwhile532:
RETSUB_F_ZAME_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAME_4:
SUB_F_OPEN_CUBES_1:
    MULF 50.0 VLV_COEF_19 F.0
    CALL MOTOR.START VGV_WATER_MOTOR F.0
    DATA32 milliseconds558
	MOVEF_32 500.0 milliseconds558
	DATA32 timer558
	TIMER_WAIT milliseconds558 timer558
	TIMER_READY timer558
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
RETSUB_F_OPEN_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_1:
SUB_F_CLOSE_CUBES_1:
    MULF -30.0 VLV_COEF_20 F.0
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR F.0 0.0 90.0 0.0 'True' 

	DATA8 layer561
	DATA8 nos561
	DATA8 busy561
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer561 nos561
	JR_EQ8 0 nos561 motornotbusy561
  motorwaiting561:
	OUTPUT_TEST layer561 nos561 busy561
	JR_EQ8 busy561 0 motornotbusy561
	SLEEP
	JR motorwaiting561
  motornotbusy561:
RETSUB_F_CLOSE_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_1:
SUB_F_DELIVER_LONG_1:
    CALL EQ_STRING VLV_IS_INVERTED_21 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else562_1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOT_21
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_21
    MOVEF_F 1.0 VLV_COEF_21
    JR endif562
  else562_1:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOT_21
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_21
    MOVEF_F -1.0 VLV_COEF_21
  else562_2:
  endif562:
    JR_NEQF VGV_CUBES_COUNT 2.0 else564_1
    MOVEF_F VLV_COEF_21 VLV_COEF_19
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB565:
    STRINGS DUPLICATE VLV_MOT_21 VLV_MOTOR_16
    MOVEF_F VLV_FORWARD_21 VLV_FORWARD_16
    MOVEF_F 270.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB566:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB567 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB567:
    STRINGS DUPLICATE VLV_MOT_21 VLV_MOTOR_16
    MULF VLV_FORWARD_21 -1.0 VLV_FORWARD_16
    MOVEF_F 120.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB569:
    MOVEF_F VLV_COEF_21 VLV_COEF_20
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB570:
    STRINGS DUPLICATE VLV_MOT_21 VLV_MOTOR_16
    MULF VLV_FORWARD_21 -1.0 VLV_FORWARD_16
    MOVEF_F 145.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB572:
    MOVEF_F 1.0 VGV_CUBES_COUNT
    JR endif564
  else564_1:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 30.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB573:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB574:
    STRINGS DUPLICATE VLV_MOT_21 VLV_MOTOR_16
    MOVEF_F VLV_FORWARD_21 VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB575:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB576:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB577:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB578:
    MOVEF_F VLV_COEF_21 VLV_COEF_19
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB579:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 45.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB580:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 45.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB581:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB582:
    STRINGS DUPLICATE VLV_MOT_21 VLV_MOTOR_16
    MULF VLV_FORWARD_21 -1.0 VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB584:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 30.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB585:
    MOVEF_F 0.0 VGV_CUBES_COUNT
  else564_2:
  endif564:
RETSUB_F_DELIVER_LONG_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_LONG_1:
SUB_F_DELIVER_NEAR_2:
    CALL EQ_STRING VLV_IS_INVERTED_22 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else586_1
    MOVEF_F 1.0 VLV_COEF_22
    JR endif586
  else586_1:
    MOVEF_F -1.0 VLV_COEF_22
  else586_2:
  endif586:
    MOVEF_F 0.0 VLV_MINUS_DEG_22
    MOVEF_F VLV_COEF_22 VLV_COEF_19
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB588:
    JR_NEQF VGV_CUBES_COUNT 2.0 else589_1
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 30.0 VLV_MIN_POWER_12
    MOVEF_F 45.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB590:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB591:
    MOVEF_F VLV_COEF_22 VLV_COEF_20
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB592:
    MOVEF_F 1.0 VGV_CUBES_COUNT
    MOVEF_F 45.0 VLV_MINUS_DEG_22
  else589_1:
  endif589:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB593:
    SUBF VGV_CUBES_COUNT 1.0 VGV_CUBES_COUNT
RETSUB_F_DELIVER_NEAR_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_NEAR_2:
SUB_F_MOVE_TO_NEXT_ZONE_1:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB595:
    SUBF 205.0 VLV_MINUS_DEG_23 VLV_DEG_23
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F VLV_DEG_23 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB597:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB598:
RETSUB_F_MOVE_TO_NEXT_ZONE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_TO_NEXT_ZONE_1:
SUB_F_GET_MOTORS_6:
    CALL EQ_STRING VLV_IS_INVERTED_25 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else599_1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR1_25
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR2_25
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD1_25
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD2_25
    MOVEF_F 1.0 VLV_COEF_25
    JR endif599
  else599_1:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR1_25
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR2_25
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD1_25
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD2_25
    MOVEF_F -1.0 VLV_COEF_25
  else599_2:
  endif599:
RETSUB_F_GET_MOTORS_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GET_MOTORS_6:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall SENSOR.GETMODE		// FF
{
	IN_F port
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 type
	DATA8 mode
	
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	
	INPUT_DEVICE GET_TYPEMODE layer no type mode
	MOVE8_F mode result
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
