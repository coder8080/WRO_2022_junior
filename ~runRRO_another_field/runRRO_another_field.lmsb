DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_5
DATAF VLV_MIN_POWER_5
DATAF VLV_DEG_5
DATAF VLV_ACCELERATION_5
DATAF VLV_ZAME_5
DATAS VLV_MOTOR_8 252
DATAF VLV_FORWARD_8
DATAF VLV_BASE_POWER_8
DATAF VLV_MIN_POWER_8
DATAF VLV_DEG_8
DATAF VLV_ACCELERATION_8
DATAF VLV_ZAME_8
DATAF VLV_BASE_POWER_6
DATAF VLV_MIN_POWER_6
DATAF VLV_DEG_6
DATAF VLV_ACCELERATION_6
DATAF VLV_ZAME_6
DATAS VLV_MOTOR_7 252
DATAF VLV_FORWARD_7
DATAF VLV_BASE_POWER_7
DATAF VLV_MIN_POWER_7
DATAF VLV_DEG_7
DATAF VLV_ACCELERATION_7
DATAF VLV_ZAME_7
DATAF VLV_U_3
DATAF VLV_BASE_POWER_3
DATAF VLV_MIN_POWER_3
DATAF VLV_DEGREES_3
DATAF VLV_ZAMED_DEGREES_3
DATAF VLV_POWER_1
DATAF VLV_U_1
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAF VGV_RIGHT_FORWARD
DATAF VGV_LEFT_FORWARD
DATAS VGV_NOT_INVERSED_MOTOR 252
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_MOTORS 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_LINE_SENSOR
DATAF VGV_ULTRASONIC
DATAF VGV_A
DATAF VGV_P
DATAF VGV_D
DATAF VGV_LASTERROR
DATAF VGV_INTEGRAL
DATAF VGV_P_U
DATAF VGV_D_U
DATAF VGV_DEG
DATAF VGV_B
DATAF VGV_W
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_MEN_COUNT
DATAS VGV_CHEM 252
DATAF VGV_FIRE_COUNT
DATAS VGV_IS_CHEM_ON_RIGHT 252
DATAS VGV_IS_CHEM_ON_LEFT 252
DATAF VGV_CUBES_COUNT
DATAF VGV_WATER_STATE
DATAS VGV_OBJECT 252
DATAS VGV_UP_WATER 252
DATAS VGV_1_WATER 252
DATAS VGV_2_WATER 252
DATAS VGV_START_FROM_RIGHT 252
DATAF VGV_M
DATAF VGV_NOWERROR
DATAF VGV_DIF
DATAF VGV_DERIVATIVE
DATAF VGV_UP
DATAF VGV_C
DATAF VGV_G
DATAS VGV_TAKE_RED_RIGHT 252
DATAS VGV_TAKE_RED_LEFT 252
DATAF VGV_CHEM_BACK
DATAF VGV_NO_BACK
DATAF VGV_HALF
DATAF VGV_ULTRA
DATAF VGV_I
DATAF VGV_R_C
DATAF VGV_L_C
DATAF VGV_DIFF
DATAF VGV_R_P
DATAF VGV_L_P
DATAS VGV_YELLOW_OBJECT 252
DATAF VGV_T
DATAF VGV_MINS
DATAF VGV_SECS
DATAS VGV_STR 252
DATAF VLV_V_1
DATAF VLV_NOWERROR_1
DATAF VLV_DIF_1
DATAF VLV_INTEGRAL_1
DATAF VLV_DERIVATIVE_1
DATAF VLV_UP_1
DATAF VLV_LASTERROR_1
DATAF VLV_NORMAL_DEGREES_3
DATAF VLV_C_3
DATAF VLV_MINUS_3
DATAF VLV_POWER_3
DATAF VLV_NORMAL_DEGREES_5
DATAF VLV_C_5
DATAF VLV_P_5
DATAF VLV_POWER_5
DATAF VLV_DELTA_5
DATAF VLV_LEFT_POWER_5
DATAF VLV_RIGHT_POWER_5
DATAF VLV_NORMAL_DEGREES_6
DATAF VLV_C_6
DATAF VLV_P_6
DATAF VLV_POWER_6
DATAF VLV_DELTA_6
DATAF VLV_LEFT_POWER_6
DATAF VLV_RIGHT_POWER_6
DATAF VLV_NORMAL_DEG_7
DATAF VLV_C_7
DATAF VLV_P_7
DATAF VLV_POWER_7
DATAF VLV_NORMAL_DEG_8
DATAF VLV_C_8
DATAF VLV_POWER_8
DATAF VLV_P_8

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_5
    MOVEF_F 0.0 VLV_MIN_POWER_5
    MOVEF_F 0.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    STRINGS DUPLICATE '' VLV_MOTOR_8
    MOVEF_F 0.0 VLV_FORWARD_8
    MOVEF_F 0.0 VLV_BASE_POWER_8
    MOVEF_F 0.0 VLV_MIN_POWER_8
    MOVEF_F 0.0 VLV_DEG_8
    MOVEF_F 0.0 VLV_ACCELERATION_8
    MOVEF_F 0.0 VLV_ZAME_8
    MOVEF_F 0.0 VLV_BASE_POWER_6
    MOVEF_F 0.0 VLV_MIN_POWER_6
    MOVEF_F 0.0 VLV_DEG_6
    MOVEF_F 0.0 VLV_ACCELERATION_6
    MOVEF_F 0.0 VLV_ZAME_6
    STRINGS DUPLICATE '' VLV_MOTOR_7
    MOVEF_F 0.0 VLV_FORWARD_7
    MOVEF_F 0.0 VLV_BASE_POWER_7
    MOVEF_F 0.0 VLV_MIN_POWER_7
    MOVEF_F 0.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    MOVEF_F 0.0 VLV_U_3
    MOVEF_F 0.0 VLV_BASE_POWER_3
    MOVEF_F 0.0 VLV_MIN_POWER_3
    MOVEF_F 0.0 VLV_DEGREES_3
    MOVEF_F 0.0 VLV_ZAMED_DEGREES_3
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_U_1
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    STRINGS DUPLICATE '' VGV_UP_WATER
    STRINGS DUPLICATE '' VGV_1_WATER
    STRINGS DUPLICATE '' VGV_2_WATER
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_M
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_HALF
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    STRINGS DUPLICATE '' VGV_YELLOW_OBJECT
    MOVEF_F 0.0 VGV_T
    MOVEF_F 0.0 VGV_MINS
    MOVEF_F 0.0 VGV_SECS
    STRINGS DUPLICATE '' VGV_STR
    MOVEF_F 0.0 VLV_V_1
    MOVEF_F 0.0 VLV_NOWERROR_1
    MOVEF_F 0.0 VLV_DIF_1
    MOVEF_F 0.0 VLV_INTEGRAL_1
    MOVEF_F 0.0 VLV_DERIVATIVE_1
    MOVEF_F 0.0 VLV_UP_1
    MOVEF_F 0.0 VLV_LASTERROR_1
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_3
    MOVEF_F 0.0 VLV_C_3
    MOVEF_F 0.0 VLV_MINUS_3
    MOVEF_F 0.0 VLV_POWER_3
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_5
    MOVEF_F 0.0 VLV_C_5
    MOVEF_F 0.0 VLV_P_5
    MOVEF_F 0.0 VLV_POWER_5
    MOVEF_F 0.0 VLV_DELTA_5
    MOVEF_F 0.0 VLV_LEFT_POWER_5
    MOVEF_F 0.0 VLV_RIGHT_POWER_5
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_6
    MOVEF_F 0.0 VLV_C_6
    MOVEF_F 0.0 VLV_P_6
    MOVEF_F 0.0 VLV_POWER_6
    MOVEF_F 0.0 VLV_DELTA_6
    MOVEF_F 0.0 VLV_LEFT_POWER_6
    MOVEF_F 0.0 VLV_RIGHT_POWER_6
    MOVEF_F 0.0 VLV_NORMAL_DEG_7
    MOVEF_F 0.0 VLV_C_7
    MOVEF_F 0.0 VLV_P_7
    MOVEF_F 0.0 VLV_POWER_7
    MOVEF_F 0.0 VLV_NORMAL_DEG_8
    MOVEF_F 0.0 VLV_C_8
    MOVEF_F 0.0 VLV_POWER_8
    MOVEF_F 0.0 VLV_P_8
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    MOVEF_F 0.0 VLV_BASE_POWER_5
    MOVEF_F 0.0 VLV_MIN_POWER_5
    MOVEF_F 0.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    STRINGS DUPLICATE '' VLV_MOTOR_8
    MOVEF_F 0.0 VLV_FORWARD_8
    MOVEF_F 0.0 VLV_BASE_POWER_8
    MOVEF_F 0.0 VLV_MIN_POWER_8
    MOVEF_F 0.0 VLV_DEG_8
    MOVEF_F 0.0 VLV_ACCELERATION_8
    MOVEF_F 0.0 VLV_ZAME_8
    MOVEF_F 0.0 VLV_BASE_POWER_6
    MOVEF_F 0.0 VLV_MIN_POWER_6
    MOVEF_F 0.0 VLV_DEG_6
    MOVEF_F 0.0 VLV_ACCELERATION_6
    MOVEF_F 0.0 VLV_ZAME_6
    STRINGS DUPLICATE '' VLV_MOTOR_7
    MOVEF_F 0.0 VLV_FORWARD_7
    MOVEF_F 0.0 VLV_BASE_POWER_7
    MOVEF_F 0.0 VLV_MIN_POWER_7
    MOVEF_F 0.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    MOVEF_F 0.0 VLV_U_3
    MOVEF_F 0.0 VLV_BASE_POWER_3
    MOVEF_F 0.0 VLV_MIN_POWER_3
    MOVEF_F 0.0 VLV_DEGREES_3
    MOVEF_F 0.0 VLV_ZAMED_DEGREES_3
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_U_1
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    STRINGS DUPLICATE '' VGV_UP_WATER
    STRINGS DUPLICATE '' VGV_1_WATER
    STRINGS DUPLICATE '' VGV_2_WATER
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_M
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_HALF
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    STRINGS DUPLICATE '' VGV_YELLOW_OBJECT
    MOVEF_F 0.0 VGV_T
    MOVEF_F 0.0 VGV_MINS
    MOVEF_F 0.0 VGV_SECS
    STRINGS DUPLICATE '' VGV_STR
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE 'B' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 1.0 VGV_LINE_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 1.0 VGV_P
    MOVEF_F 6.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 1.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE 'False' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 2.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_UP_WATER
    STRINGS DUPLICATE 'True' VGV_1_WATER
    STRINGS DUPLICATE 'True' VGV_2_WATER
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE_SENSOR no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_RIGHT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_LEFT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 1.0 'Low battery'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB10:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB11 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB11:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB12:
ENDTHREAD:
    RETURN
SUB_F_LINE_0:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF 20.0 F.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf17
    DATA8 flag17
    DIVF F.0 10.0 tmpf17
    CP_EQF 0.0 10.0 flag17
    SELECTF flag17 0.0 tmpf17 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_LINE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_0:
SUB_F_ULTRASONIC_SLOW_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf30
    DATA8 flag30
    DIVF F.0 10.0 tmpf30
    CP_EQF 0.0 10.0 flag30
    SELECTF flag30 0.0 tmpf30 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 20.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 20.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SLOW_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SLOW_0:
SUB_F_ULTRASONIC_FAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf45
    DATA8 flag45
    DIVF F.0 10.0 tmpf45
    CP_EQF 0.0 10.0 flag45
    SELECTF flag45 0.0 tmpf45 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 30.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 30.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_FAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_FAST_0:
SUB_F_ULTRASONIC_SUPERFAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf60
    DATA8 flag60
    DIVF F.0 10.0 tmpf60
    CP_EQF 0.0 10.0 flag60
    SELECTF flag60 0.0 tmpf60 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 80.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 80.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SUPERFAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SUPERFAST_0:
SUB_F_STOP_0:
    CALL MOTOR.STOP VGV_MOTORS 'True'
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_STOP_RIGHT_0:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
RETSUB_F_STOP_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_RIGHT_0:
SUB_F_DELAY_0:
    DATA32 milliseconds73
	MOVEF_32 300.0 milliseconds73
	DATA32 timer73
	TIMER_WAIT milliseconds73 timer73
	TIMER_READY timer73
RETSUB_F_DELAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_0:
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_LEFT_0:
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 280.0 VLV_DEG_5
    MOVEF_F 100.0 VLV_ACCELERATION_5
    MOVEF_F 100.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB75:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB76:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 370.0 VLV_DEG_8
    MOVEF_F 100.0 VLV_ACCELERATION_8
    MOVEF_F 100.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB77:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB78:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer79
	DATA8 nos79
	DATA8 busy79
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer79 nos79
	JR_EQ8 0 nos79 motornotbusy79
  motorwaiting79:
	OUTPUT_TEST layer79 nos79 busy79
	JR_EQ8 busy79 0 motornotbusy79
	SLEEP
	JR motorwaiting79
  motornotbusy79:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 70.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB80 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB80:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB81:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer82
	DATA8 nos82
	DATA8 busy82
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer82 nos82
	JR_EQ8 0 nos82 motornotbusy82
  motorwaiting82:
	OUTPUT_TEST layer82 nos82 busy82
	JR_EQ8 busy82 0 motornotbusy82
	SLEEP
	JR motorwaiting82
  motornotbusy82:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB83:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 90.0 VLV_DEG_6
    MOVEF_F 0.0 VLV_ACCELERATION_6
    MOVEF_F 70.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB84 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB84:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB85 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB85:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 370.0 VLV_DEG_7
    MOVEF_F 100.0 VLV_ACCELERATION_7
    MOVEF_F 100.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB86:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB87:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 280.0 VLV_DEG_6
    MOVEF_F 100.0 VLV_ACCELERATION_6
    MOVEF_F 100.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB88:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB89:
RETSUB_F_TAKE_CHEM_ON_LEFT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_0:
SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 170.0 VLV_DEG_6
    MOVEF_F 70.0 VLV_ACCELERATION_6
    MOVEF_F 70.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB90:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB91:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer92
	DATA8 nos92
	DATA8 busy92
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer92 nos92
	JR_EQ8 0 nos92 motornotbusy92
  motorwaiting92:
	OUTPUT_TEST layer92 nos92 busy92
	JR_EQ8 busy92 0 motornotbusy92
	SLEEP
	JR motorwaiting92
  motornotbusy92:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 160.0 VLV_DEG_7
    MOVEF_F 70.0 VLV_ACCELERATION_7
    MOVEF_F 70.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB93:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB94:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer95
	DATA8 nos95
	DATA8 busy95
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer95 nos95
	JR_EQ8 0 nos95 motornotbusy95
  motorwaiting95:
	OUTPUT_TEST layer95 nos95 busy95
	JR_EQ8 busy95 0 motornotbusy95
	SLEEP
	JR motorwaiting95
  motornotbusy95:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB96:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 160.0 VLV_DEG_8
    MOVEF_F 70.0 VLV_ACCELERATION_8
    MOVEF_F 70.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB97:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB98:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 170.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB99 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB99:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB100:
RETSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 170.0 VLV_DEG_6
    MOVEF_F 70.0 VLV_ACCELERATION_6
    MOVEF_F 70.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB101:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB102:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer103
	DATA8 nos103
	DATA8 busy103
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer103 nos103
	JR_EQ8 0 nos103 motornotbusy103
  motorwaiting103:
	OUTPUT_TEST layer103 nos103 busy103
	JR_EQ8 busy103 0 motornotbusy103
	SLEEP
	JR motorwaiting103
  motornotbusy103:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 160.0 VLV_DEG_7
    MOVEF_F 70.0 VLV_ACCELERATION_7
    MOVEF_F 70.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB104:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB105:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer106
	DATA8 nos106
	DATA8 busy106
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer106 nos106
	JR_EQ8 0 nos106 motornotbusy106
  motorwaiting106:
	OUTPUT_TEST layer106 nos106 busy106
	JR_EQ8 busy106 0 motornotbusy106
	SLEEP
	JR motorwaiting106
  motornotbusy106:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB107:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 160.0 VLV_DEG_8
    MOVEF_F 70.0 VLV_ACCELERATION_8
    MOVEF_F 70.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB108:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB109:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 170.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB110:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB111:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    CALL EQ_STRING VGV_UP_WATER 'Ture' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else112_1
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 100.0 0.0 20.0 0.0 'True' 

	DATA8 layer114
	DATA8 nos114
	DATA8 busy114
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer114 nos114
	JR_EQ8 0 nos114 motornotbusy114
  motorwaiting114:
	OUTPUT_TEST layer114 nos114 busy114
	JR_EQ8 busy114 0 motornotbusy114
	SLEEP
	JR motorwaiting114
  motornotbusy114:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -100.0 0.0 50.0 0.0 'True' 

	DATA8 layer115
	DATA8 nos115
	DATA8 busy115
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer115 nos115
	JR_EQ8 0 nos115 motornotbusy115
  motorwaiting115:
	OUTPUT_TEST layer115 nos115 busy115
	JR_EQ8 busy115 0 motornotbusy115
	SLEEP
	JR motorwaiting115
  motornotbusy115:
    MOVEF_F 1.0 VGV_WATER_STATE
    STRINGS DUPLICATE 'False' VGV_UP_WATER
    JR endif112
  else112_1:
    CALL EQ_STRING VGV_1_WATER 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else112_2
    CALL MOTOR.RESETCOUNT VGV_WATER_MOTOR
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds119
	MOVEF_32 1000.0 milliseconds119
	DATA32 timer119
	TIMER_WAIT milliseconds119 timer119
	TIMER_READY timer119
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.GETCOUNT VGV_WATER_MOTOR F.1
    MATH ABS F.1 F.0
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -30.0 0.0 F.0 0.0 'True' 

	DATA8 layer123
	DATA8 nos123
	DATA8 busy123
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer123 nos123
	JR_EQ8 0 nos123 motornotbusy123
  motorwaiting123:
	OUTPUT_TEST layer123 nos123 busy123
	JR_EQ8 busy123 0 motornotbusy123
	SLEEP
	JR motorwaiting123
  motornotbusy123:
    MOVEF_F 2.0 VGV_WATER_STATE
    STRINGS DUPLICATE 'False' VGV_1_WATER
    JR endif112
  else112_2:
    CALL MOTOR.RESETCOUNT VGV_WATER_MOTOR
    CALL MOTOR.START VGV_WATER_MOTOR -30.0
    DATA32 milliseconds126
	MOVEF_32 1500.0 milliseconds126
	DATA32 timer126
	TIMER_WAIT milliseconds126 timer126
	TIMER_READY timer126
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.GETCOUNT VGV_WATER_MOTOR F.1
    MATH ABS F.1 F.0
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 30.0 0.0 F.0 0.0 'True' 

	DATA8 layer130
	DATA8 nos130
	DATA8 busy130
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer130 nos130
	JR_EQ8 0 nos130 motornotbusy130
  motorwaiting130:
	OUTPUT_TEST layer130 nos130 busy130
	JR_EQ8 busy130 0 motornotbusy130
	SLEEP
	JR motorwaiting130
  motornotbusy130:
    STRINGS DUPLICATE 'False' VGV_2_WATER
  else112_3:
  endif112:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_UPDATE_DISPLAY_0:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_OBJECT
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.1
    CALL TEXT.APPEND 'Red: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.1
    CALL TEXT.APPEND 'White: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 75.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_UPDATE_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UPDATE_DISPLAY_0:
SUB_F_RESET_VALUES_0:
    STRINGS DUPLICATE 'None' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
RETSUB_F_RESET_VALUES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_VALUES_0:
SUB_F_CLOSE_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -10.0 0.0 70.0 0.0 'True' 

	DATA8 layer141
	DATA8 nos141
	DATA8 busy141
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer141 nos141
	JR_EQ8 0 nos141 motornotbusy141
  motorwaiting141:
	OUTPUT_TEST layer141 nos141 busy141
	JR_EQ8 busy141 0 motornotbusy141
	SLEEP
	JR motorwaiting141
  motornotbusy141:
RETSUB_F_CLOSE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_0:
SUB_F_OPEN_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 10.0 0.0 70.0 0.0 'True' 

	DATA8 layer142
	DATA8 nos142
	DATA8 busy142
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer142 nos142
	JR_EQ8 0 nos142 motornotbusy142
  motorwaiting142:
	OUTPUT_TEST layer142 nos142 busy142
	JR_EQ8 busy142 0 motornotbusy142
	SLEEP
	JR motorwaiting142
  motornotbusy142:
RETSUB_F_OPEN_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_0:
SUB_F_TAKE_CUBES_0:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds144
	MOVEF_32 500.0 milliseconds144
	DATA32 timer144
	TIMER_WAIT milliseconds144 timer144
	TIMER_READY timer144
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer148
	DATA8 nos148
	DATA8 busy148
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer148 nos148
	JR_EQ8 0 nos148 motornotbusy148
  motorwaiting148:
	OUTPUT_TEST layer148 nos148 busy148
	JR_EQ8 busy148 0 motornotbusy148
	SLEEP
	JR motorwaiting148
  motornotbusy148:
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR -20.0 0.0 360.0 0.0 'True' 

	DATA8 layer149
	DATA8 nos149
	DATA8 busy149
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer149 nos149
	JR_EQ8 0 nos149 motornotbusy149
  motorwaiting149:
	OUTPUT_TEST layer149 nos149 busy149
	JR_EQ8 busy149 0 motornotbusy149
	SLEEP
	JR motorwaiting149
  motornotbusy149:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds153
	MOVEF_32 700.0 milliseconds153
	DATA32 timer153
	TIMER_WAIT milliseconds153 timer153
	TIMER_READY timer153
    WRITE32 ENDSUB_F_STOP_0:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB154:
    MOVEF_F 229.0 VLV_U_3
    MOVEF_F 50.0 VLV_BASE_POWER_3
    MOVEF_F 20.0 VLV_MIN_POWER_3
    MOVEF_F 930.0 VLV_DEGREES_3
    MOVEF_F 200.0 VLV_ZAMED_DEGREES_3
    WRITE32 ENDSUB_F_ULTRASONIC_ZAMED_5:CALLSUB155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_ZAMED_5
CALLSUB155:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer156
	DATA8 nos156
	DATA8 busy156
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer156 nos156
	JR_EQ8 0 nos156 motornotbusy156
  motorwaiting156:
	OUTPUT_TEST layer156 nos156 busy156
	JR_EQ8 busy156 0 motornotbusy156
	SLEEP
	JR motorwaiting156
  motornotbusy156:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB157:
RETSUB_F_TAKE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_0:
SUB_F_TAKE_CUBES_INVERSED_0:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds159
	MOVEF_32 500.0 milliseconds159
	DATA32 timer159
	TIMER_WAIT milliseconds159 timer159
	TIMER_READY timer159
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer163
	DATA8 nos163
	DATA8 busy163
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer163 nos163
	JR_EQ8 0 nos163 motornotbusy163
  motorwaiting163:
	OUTPUT_TEST layer163 nos163 busy163
	JR_EQ8 busy163 0 motornotbusy163
	SLEEP
	JR motorwaiting163
  motornotbusy163:
    MULF -30.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds166
	MOVEF_32 3000.0 milliseconds166
	DATA32 timer166
	TIMER_WAIT milliseconds166 timer166
	TIMER_READY timer166
    WRITE32 ENDSUB_F_STOP_0:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB167:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds171
	MOVEF_32 1000.0 milliseconds171
	DATA32 timer171
	TIMER_WAIT milliseconds171 timer171
	TIMER_READY timer171
    WRITE32 ENDSUB_F_STOP_0:CALLSUB172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB172:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 20.0 VLV_MIN_POWER_5
    MOVEF_F 930.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 200.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB174:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB175:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer176
	DATA8 nos176
	DATA8 busy176
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer176 nos176
	JR_EQ8 0 nos176 motornotbusy176
  motorwaiting176:
	OUTPUT_TEST layer176 nos176 busy176
	JR_EQ8 busy176 0 motornotbusy176
	SLEEP
	JR motorwaiting176
  motornotbusy176:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB177:
RETSUB_F_TAKE_CUBES_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_INVERSED_0:
SUB_F_TAKE_LONG_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer179
	DATA8 nos179
	DATA8 busy179
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer179 nos179
	JR_EQ8 0 nos179 motornotbusy179
  motorwaiting179:
	OUTPUT_TEST layer179 nos179 busy179
	JR_EQ8 busy179 0 motornotbusy179
	SLEEP
	JR motorwaiting179
  motornotbusy179:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds183
	MOVEF_32 1000.0 milliseconds183
	DATA32 timer183
	TIMER_WAIT milliseconds183 timer183
	TIMER_READY timer183
    WRITE32 ENDSUB_F_STOP_0:CALLSUB184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB184:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB185:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer188
	DATA8 nos188
	DATA8 busy188
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer188 nos188
	JR_EQ8 0 nos188 motornotbusy188
  motorwaiting188:
	OUTPUT_TEST layer188 nos188 busy188
	JR_EQ8 busy188 0 motornotbusy188
	SLEEP
	JR motorwaiting188
  motornotbusy188:
    JR_NEQF VGV_CUBES_COUNT 2.0 else189_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB190:
  else189_1:
  endif189:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer193
	DATA8 nos193
	DATA8 busy193
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer193 nos193
	JR_EQ8 0 nos193 motornotbusy193
  motorwaiting193:
	OUTPUT_TEST layer193 nos193 busy193
	JR_EQ8 busy193 0 motornotbusy193
	SLEEP
	JR motorwaiting193
  motornotbusy193:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer195
	DATA8 nos195
	DATA8 busy195
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer195 nos195
	JR_EQ8 0 nos195 motornotbusy195
  motorwaiting195:
	OUTPUT_TEST layer195 nos195 busy195
	JR_EQ8 busy195 0 motornotbusy195
	SLEEP
	JR motorwaiting195
  motornotbusy195:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_0:
SUB_F_TAKE_LONG_INVERSED_0:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer197
	DATA8 nos197
	DATA8 busy197
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer197 nos197
	JR_EQ8 0 nos197 motornotbusy197
  motorwaiting197:
	OUTPUT_TEST layer197 nos197 busy197
	JR_EQ8 busy197 0 motornotbusy197
	SLEEP
	JR motorwaiting197
  motornotbusy197:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds201
	MOVEF_32 1000.0 milliseconds201
	DATA32 timer201
	TIMER_WAIT milliseconds201 timer201
	TIMER_READY timer201
    WRITE32 ENDSUB_F_STOP_0:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB202:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB203:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer206
	DATA8 nos206
	DATA8 busy206
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer206 nos206
	JR_EQ8 0 nos206 motornotbusy206
  motorwaiting206:
	OUTPUT_TEST layer206 nos206 busy206
	JR_EQ8 busy206 0 motornotbusy206
	SLEEP
	JR motorwaiting206
  motornotbusy206:
    JR_NEQF VGV_CUBES_COUNT 2.0 else207_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB208:
  else207_1:
  endif207:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer211
	DATA8 nos211
	DATA8 busy211
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer211 nos211
	JR_EQ8 0 nos211 motornotbusy211
  motorwaiting211:
	OUTPUT_TEST layer211 nos211 busy211
	JR_EQ8 busy211 0 motornotbusy211
	SLEEP
	JR motorwaiting211
  motornotbusy211:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer213
	DATA8 nos213
	DATA8 busy213
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer213 nos213
	JR_EQ8 0 nos213 motornotbusy213
  motorwaiting213:
	OUTPUT_TEST layer213 nos213 busy213
	JR_EQ8 busy213 0 motornotbusy213
	SLEEP
	JR motorwaiting213
  motornotbusy213:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_INVERSED_0:
SUB_F_TAKE_NEAR_0:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer215
	DATA8 nos215
	DATA8 busy215
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer215 nos215
	JR_EQ8 0 nos215 motornotbusy215
  motorwaiting215:
	OUTPUT_TEST layer215 nos215 busy215
	JR_EQ8 busy215 0 motornotbusy215
	SLEEP
	JR motorwaiting215
  motornotbusy215:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer217
	DATA8 nos217
	DATA8 busy217
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer217 nos217
	JR_EQ8 0 nos217 motornotbusy217
  motorwaiting217:
	OUTPUT_TEST layer217 nos217 busy217
	JR_EQ8 busy217 0 motornotbusy217
	SLEEP
	JR motorwaiting217
  motornotbusy217:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB218:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    MULF 20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer221
	DATA8 nos221
	DATA8 busy221
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer221 nos221
	JR_EQ8 0 nos221 motornotbusy221
  motorwaiting221:
	OUTPUT_TEST layer221 nos221 busy221
	JR_EQ8 busy221 0 motornotbusy221
	SLEEP
	JR motorwaiting221
  motornotbusy221:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB222:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer225
	DATA8 nos225
	DATA8 busy225
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer225 nos225
	JR_EQ8 0 nos225 motornotbusy225
  motorwaiting225:
	OUTPUT_TEST layer225 nos225 busy225
	JR_EQ8 busy225 0 motornotbusy225
	SLEEP
	JR motorwaiting225
  motornotbusy225:
    JR_NEQF VGV_CUBES_COUNT 2.0 else226_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB227:
  else226_1:
  endif226:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer230
	DATA8 nos230
	DATA8 busy230
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer230 nos230
	JR_EQ8 0 nos230 motornotbusy230
  motorwaiting230:
	OUTPUT_TEST layer230 nos230 busy230
	JR_EQ8 busy230 0 motornotbusy230
	SLEEP
	JR motorwaiting230
  motornotbusy230:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer232
	DATA8 nos232
	DATA8 busy232
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer232 nos232
	JR_EQ8 0 nos232 motornotbusy232
  motorwaiting232:
	OUTPUT_TEST layer232 nos232 busy232
	JR_EQ8 busy232 0 motornotbusy232
	SLEEP
	JR motorwaiting232
  motornotbusy232:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer234
	DATA8 nos234
	DATA8 busy234
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer234 nos234
	JR_EQ8 0 nos234 motornotbusy234
  motorwaiting234:
	OUTPUT_TEST layer234 nos234 busy234
	JR_EQ8 busy234 0 motornotbusy234
	SLEEP
	JR motorwaiting234
  motornotbusy234:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB235:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer238
	DATA8 nos238
	DATA8 busy238
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer238 nos238
	JR_EQ8 0 nos238 motornotbusy238
  motorwaiting238:
	OUTPUT_TEST layer238 nos238 busy238
	JR_EQ8 busy238 0 motornotbusy238
	SLEEP
	JR motorwaiting238
  motornotbusy238:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_0:
SUB_F_TAKE_NEAR_INVERSED_0:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer240
	DATA8 nos240
	DATA8 busy240
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer240 nos240
	JR_EQ8 0 nos240 motornotbusy240
  motorwaiting240:
	OUTPUT_TEST layer240 nos240 busy240
	JR_EQ8 busy240 0 motornotbusy240
	SLEEP
	JR motorwaiting240
  motornotbusy240:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer242
	DATA8 nos242
	DATA8 busy242
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer242 nos242
	JR_EQ8 0 nos242 motornotbusy242
  motorwaiting242:
	OUTPUT_TEST layer242 nos242 busy242
	JR_EQ8 busy242 0 motornotbusy242
	SLEEP
	JR motorwaiting242
  motornotbusy242:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB243:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    MULF 20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer246
	DATA8 nos246
	DATA8 busy246
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer246 nos246
	JR_EQ8 0 nos246 motornotbusy246
  motorwaiting246:
	OUTPUT_TEST layer246 nos246 busy246
	JR_EQ8 busy246 0 motornotbusy246
	SLEEP
	JR motorwaiting246
  motornotbusy246:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB247:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer250
	DATA8 nos250
	DATA8 busy250
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer250 nos250
	JR_EQ8 0 nos250 motornotbusy250
  motorwaiting250:
	OUTPUT_TEST layer250 nos250 busy250
	JR_EQ8 busy250 0 motornotbusy250
	SLEEP
	JR motorwaiting250
  motornotbusy250:
    JR_NEQF VGV_CUBES_COUNT 2.0 else251_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB252:
  else251_1:
  endif251:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer255
	DATA8 nos255
	DATA8 busy255
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer255 nos255
	JR_EQ8 0 nos255 motornotbusy255
  motorwaiting255:
	OUTPUT_TEST layer255 nos255 busy255
	JR_EQ8 busy255 0 motornotbusy255
	SLEEP
	JR motorwaiting255
  motornotbusy255:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer257
	DATA8 nos257
	DATA8 busy257
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer257 nos257
	JR_EQ8 0 nos257 motornotbusy257
  motorwaiting257:
	OUTPUT_TEST layer257 nos257 busy257
	JR_EQ8 busy257 0 motornotbusy257
	SLEEP
	JR motorwaiting257
  motornotbusy257:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer259
	DATA8 nos259
	DATA8 busy259
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer259 nos259
	JR_EQ8 0 nos259 motornotbusy259
  motorwaiting259:
	OUTPUT_TEST layer259 nos259 busy259
	JR_EQ8 busy259 0 motornotbusy259
	SLEEP
	JR motorwaiting259
  motornotbusy259:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB260:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer263
	DATA8 nos263
	DATA8 busy263
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer263 nos263
	JR_EQ8 0 nos263 motornotbusy263
  motorwaiting263:
	OUTPUT_TEST layer263 nos263 busy263
	JR_EQ8 busy263 0 motornotbusy263
	SLEEP
	JR motorwaiting263
  motornotbusy263:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_INVERSED_0:
SUB_F_TAKE_BOTH_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer265
	DATA8 nos265
	DATA8 busy265
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer265 nos265
	JR_EQ8 0 nos265 motornotbusy265
  motorwaiting265:
	OUTPUT_TEST layer265 nos265 busy265
	JR_EQ8 busy265 0 motornotbusy265
	SLEEP
	JR motorwaiting265
  motornotbusy265:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer268
	DATA8 nos268
	DATA8 busy268
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer268 nos268
	JR_EQ8 0 nos268 motornotbusy268
  motorwaiting268:
	OUTPUT_TEST layer268 nos268 busy268
	JR_EQ8 busy268 0 motornotbusy268
	SLEEP
	JR motorwaiting268
  motornotbusy268:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB269:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer272
	DATA8 nos272
	DATA8 busy272
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer272 nos272
	JR_EQ8 0 nos272 motornotbusy272
  motorwaiting272:
	OUTPUT_TEST layer272 nos272 busy272
	JR_EQ8 busy272 0 motornotbusy272
	SLEEP
	JR motorwaiting272
  motornotbusy272:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB273:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer276
	DATA8 nos276
	DATA8 busy276
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer276 nos276
	JR_EQ8 0 nos276 motornotbusy276
  motorwaiting276:
	OUTPUT_TEST layer276 nos276 busy276
	JR_EQ8 busy276 0 motornotbusy276
	SLEEP
	JR motorwaiting276
  motornotbusy276:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer278
	DATA8 nos278
	DATA8 busy278
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer278 nos278
	JR_EQ8 0 nos278 motornotbusy278
  motorwaiting278:
	OUTPUT_TEST layer278 nos278 busy278
	JR_EQ8 busy278 0 motornotbusy278
	SLEEP
	JR motorwaiting278
  motornotbusy278:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer281
	DATA8 nos281
	DATA8 busy281
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer281 nos281
	JR_EQ8 0 nos281 motornotbusy281
  motorwaiting281:
	OUTPUT_TEST layer281 nos281 busy281
	JR_EQ8 busy281 0 motornotbusy281
	SLEEP
	JR motorwaiting281
  motornotbusy281:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB282 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB282:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer285
	DATA8 nos285
	DATA8 busy285
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer285 nos285
	JR_EQ8 0 nos285 motornotbusy285
  motorwaiting285:
	OUTPUT_TEST layer285 nos285 busy285
	JR_EQ8 busy285 0 motornotbusy285
	SLEEP
	JR motorwaiting285
  motornotbusy285:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer287
	DATA8 nos287
	DATA8 busy287
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer287 nos287
	JR_EQ8 0 nos287 motornotbusy287
  motorwaiting287:
	OUTPUT_TEST layer287 nos287 busy287
	JR_EQ8 busy287 0 motornotbusy287
	SLEEP
	JR motorwaiting287
  motornotbusy287:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer289
	DATA8 nos289
	DATA8 busy289
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer289 nos289
	JR_EQ8 0 nos289 motornotbusy289
  motorwaiting289:
	OUTPUT_TEST layer289 nos289 busy289
	JR_EQ8 busy289 0 motornotbusy289
	SLEEP
	JR motorwaiting289
  motornotbusy289:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer292
	DATA8 nos292
	DATA8 busy292
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer292 nos292
	JR_EQ8 0 nos292 motornotbusy292
  motorwaiting292:
	OUTPUT_TEST layer292 nos292 busy292
	JR_EQ8 busy292 0 motornotbusy292
	SLEEP
	JR motorwaiting292
  motornotbusy292:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_0:
SUB_F_TAKE_BOTH_INVERSED_0:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer294
	DATA8 nos294
	DATA8 busy294
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer294 nos294
	JR_EQ8 0 nos294 motornotbusy294
  motorwaiting294:
	OUTPUT_TEST layer294 nos294 busy294
	JR_EQ8 busy294 0 motornotbusy294
	SLEEP
	JR motorwaiting294
  motornotbusy294:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer297
	DATA8 nos297
	DATA8 busy297
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer297 nos297
	JR_EQ8 0 nos297 motornotbusy297
  motorwaiting297:
	OUTPUT_TEST layer297 nos297 busy297
	JR_EQ8 busy297 0 motornotbusy297
	SLEEP
	JR motorwaiting297
  motornotbusy297:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB298:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer301
	DATA8 nos301
	DATA8 busy301
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer301 nos301
	JR_EQ8 0 nos301 motornotbusy301
  motorwaiting301:
	OUTPUT_TEST layer301 nos301 busy301
	JR_EQ8 busy301 0 motornotbusy301
	SLEEP
	JR motorwaiting301
  motornotbusy301:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB302:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer305
	DATA8 nos305
	DATA8 busy305
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer305 nos305
	JR_EQ8 0 nos305 motornotbusy305
  motorwaiting305:
	OUTPUT_TEST layer305 nos305 busy305
	JR_EQ8 busy305 0 motornotbusy305
	SLEEP
	JR motorwaiting305
  motornotbusy305:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer307
	DATA8 nos307
	DATA8 busy307
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer307 nos307
	JR_EQ8 0 nos307 motornotbusy307
  motorwaiting307:
	OUTPUT_TEST layer307 nos307 busy307
	JR_EQ8 busy307 0 motornotbusy307
	SLEEP
	JR motorwaiting307
  motornotbusy307:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer310
	DATA8 nos310
	DATA8 busy310
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer310 nos310
	JR_EQ8 0 nos310 motornotbusy310
  motorwaiting310:
	OUTPUT_TEST layer310 nos310 busy310
	JR_EQ8 busy310 0 motornotbusy310
	SLEEP
	JR motorwaiting310
  motornotbusy310:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB311:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer314
	DATA8 nos314
	DATA8 busy314
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer314 nos314
	JR_EQ8 0 nos314 motornotbusy314
  motorwaiting314:
	OUTPUT_TEST layer314 nos314 busy314
	JR_EQ8 busy314 0 motornotbusy314
	SLEEP
	JR motorwaiting314
  motornotbusy314:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer316
	DATA8 nos316
	DATA8 busy316
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer316 nos316
	JR_EQ8 0 nos316 motornotbusy316
  motorwaiting316:
	OUTPUT_TEST layer316 nos316 busy316
	JR_EQ8 busy316 0 motornotbusy316
	SLEEP
	JR motorwaiting316
  motornotbusy316:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer318
	DATA8 nos318
	DATA8 busy318
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer318 nos318
	JR_EQ8 0 nos318 motornotbusy318
  motorwaiting318:
	OUTPUT_TEST layer318 nos318 busy318
	JR_EQ8 busy318 0 motornotbusy318
	SLEEP
	JR motorwaiting318
  motornotbusy318:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer321
	DATA8 nos321
	DATA8 busy321
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer321 nos321
	JR_EQ8 0 nos321 motornotbusy321
  motorwaiting321:
	OUTPUT_TEST layer321 nos321 busy321
	JR_EQ8 busy321 0 motornotbusy321
	SLEEP
	JR motorwaiting321
  motornotbusy321:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_INVERSED_0:
SUB_F_TAKE_NEAR_DOUBLE_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer323
	DATA8 nos323
	DATA8 busy323
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer323 nos323
	JR_EQ8 0 nos323 motornotbusy323
  motorwaiting323:
	OUTPUT_TEST layer323 nos323 busy323
	JR_EQ8 busy323 0 motornotbusy323
	SLEEP
	JR motorwaiting323
  motornotbusy323:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer325
	DATA8 nos325
	DATA8 busy325
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer325 nos325
	JR_EQ8 0 nos325 motornotbusy325
  motorwaiting325:
	OUTPUT_TEST layer325 nos325 busy325
	JR_EQ8 busy325 0 motornotbusy325
	SLEEP
	JR motorwaiting325
  motornotbusy325:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer328
	DATA8 nos328
	DATA8 busy328
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer328 nos328
	JR_EQ8 0 nos328 motornotbusy328
  motorwaiting328:
	OUTPUT_TEST layer328 nos328 busy328
	JR_EQ8 busy328 0 motornotbusy328
	SLEEP
	JR motorwaiting328
  motornotbusy328:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB329:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer332
	DATA8 nos332
	DATA8 busy332
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer332 nos332
	JR_EQ8 0 nos332 motornotbusy332
  motorwaiting332:
	OUTPUT_TEST layer332 nos332 busy332
	JR_EQ8 busy332 0 motornotbusy332
	SLEEP
	JR motorwaiting332
  motornotbusy332:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB333:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer336
	DATA8 nos336
	DATA8 busy336
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer336 nos336
	JR_EQ8 0 nos336 motornotbusy336
  motorwaiting336:
	OUTPUT_TEST layer336 nos336 busy336
	JR_EQ8 busy336 0 motornotbusy336
	SLEEP
	JR motorwaiting336
  motornotbusy336:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB337:
RETSUB_F_TAKE_NEAR_DOUBLE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_0:
SUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer339
	DATA8 nos339
	DATA8 busy339
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer339 nos339
	JR_EQ8 0 nos339 motornotbusy339
  motorwaiting339:
	OUTPUT_TEST layer339 nos339 busy339
	JR_EQ8 busy339 0 motornotbusy339
	SLEEP
	JR motorwaiting339
  motornotbusy339:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer341
	DATA8 nos341
	DATA8 busy341
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer341 nos341
	JR_EQ8 0 nos341 motornotbusy341
  motorwaiting341:
	OUTPUT_TEST layer341 nos341 busy341
	JR_EQ8 busy341 0 motornotbusy341
	SLEEP
	JR motorwaiting341
  motornotbusy341:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer344
	DATA8 nos344
	DATA8 busy344
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer344 nos344
	JR_EQ8 0 nos344 motornotbusy344
  motorwaiting344:
	OUTPUT_TEST layer344 nos344 busy344
	JR_EQ8 busy344 0 motornotbusy344
	SLEEP
	JR motorwaiting344
  motornotbusy344:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB345:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer348
	DATA8 nos348
	DATA8 busy348
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer348 nos348
	JR_EQ8 0 nos348 motornotbusy348
  motorwaiting348:
	OUTPUT_TEST layer348 nos348 busy348
	JR_EQ8 busy348 0 motornotbusy348
	SLEEP
	JR motorwaiting348
  motornotbusy348:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB349:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer352
	DATA8 nos352
	DATA8 busy352
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer352 nos352
	JR_EQ8 0 nos352 motornotbusy352
  motorwaiting352:
	OUTPUT_TEST layer352 nos352 busy352
	JR_EQ8 busy352 0 motornotbusy352
	SLEEP
	JR motorwaiting352
  motornotbusy352:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB353:
RETSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer355
	DATA8 nos355
	DATA8 busy355
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer355 nos355
	JR_EQ8 0 nos355 motornotbusy355
  motorwaiting355:
	OUTPUT_TEST layer355 nos355 busy355
	JR_EQ8 busy355 0 motornotbusy355
	SLEEP
	JR motorwaiting355
  motornotbusy355:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer357
	DATA8 nos357
	DATA8 busy357
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer357 nos357
	JR_EQ8 0 nos357 motornotbusy357
  motorwaiting357:
	OUTPUT_TEST layer357 nos357 busy357
	JR_EQ8 busy357 0 motornotbusy357
	SLEEP
	JR motorwaiting357
  motornotbusy357:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer360
	DATA8 nos360
	DATA8 busy360
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer360 nos360
	JR_EQ8 0 nos360 motornotbusy360
  motorwaiting360:
	OUTPUT_TEST layer360 nos360 busy360
	JR_EQ8 busy360 0 motornotbusy360
	SLEEP
	JR motorwaiting360
  motornotbusy360:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB361:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer364
	DATA8 nos364
	DATA8 busy364
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer364 nos364
	JR_EQ8 0 nos364 motornotbusy364
  motorwaiting364:
	OUTPUT_TEST layer364 nos364 busy364
	JR_EQ8 busy364 0 motornotbusy364
	SLEEP
	JR motorwaiting364
  motornotbusy364:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB365:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer368
	DATA8 nos368
	DATA8 busy368
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer368 nos368
	JR_EQ8 0 nos368 motornotbusy368
  motorwaiting368:
	OUTPUT_TEST layer368 nos368 busy368
	JR_EQ8 busy368 0 motornotbusy368
	SLEEP
	JR motorwaiting368
  motornotbusy368:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB369:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer371
	DATA8 nos371
	DATA8 busy371
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer371 nos371
	JR_EQ8 0 nos371 motornotbusy371
  motorwaiting371:
	OUTPUT_TEST layer371 nos371 busy371
	JR_EQ8 busy371 0 motornotbusy371
	SLEEP
	JR motorwaiting371
  motornotbusy371:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer373
	DATA8 nos373
	DATA8 busy373
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer373 nos373
	JR_EQ8 0 nos373 motornotbusy373
  motorwaiting373:
	OUTPUT_TEST layer373 nos373 busy373
	JR_EQ8 busy373 0 motornotbusy373
	SLEEP
	JR motorwaiting373
  motornotbusy373:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer376
	DATA8 nos376
	DATA8 busy376
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer376 nos376
	JR_EQ8 0 nos376 motornotbusy376
  motorwaiting376:
	OUTPUT_TEST layer376 nos376 busy376
	JR_EQ8 busy376 0 motornotbusy376
	SLEEP
	JR motorwaiting376
  motornotbusy376:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB377:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer380
	DATA8 nos380
	DATA8 busy380
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer380 nos380
	JR_EQ8 0 nos380 motornotbusy380
  motorwaiting380:
	OUTPUT_TEST layer380 nos380 busy380
	JR_EQ8 busy380 0 motornotbusy380
	SLEEP
	JR motorwaiting380
  motornotbusy380:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB381:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer384
	DATA8 nos384
	DATA8 busy384
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer384 nos384
	JR_EQ8 0 nos384 motornotbusy384
  motorwaiting384:
	OUTPUT_TEST layer384 nos384 busy384
	JR_EQ8 busy384 0 motornotbusy384
	SLEEP
	JR motorwaiting384
  motornotbusy384:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB385:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
SUB_F_FINISH_AFTER_NEAR_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds389
	MOVEF_32 1500.0 milliseconds389
	DATA32 timer389
	TIMER_WAIT milliseconds389 timer389
	TIMER_READY timer389
    WRITE32 ENDSUB_F_STOP_0:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB390:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer392
	DATA8 nos392
	DATA8 busy392
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer392 nos392
	JR_EQ8 0 nos392 motornotbusy392
  motorwaiting392:
	OUTPUT_TEST layer392 nos392 busy392
	JR_EQ8 busy392 0 motornotbusy392
	SLEEP
	JR motorwaiting392
  motornotbusy392:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer394
	DATA8 nos394
	DATA8 busy394
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer394 nos394
	JR_EQ8 0 nos394 motornotbusy394
  motorwaiting394:
	OUTPUT_TEST layer394 nos394 busy394
	JR_EQ8 busy394 0 motornotbusy394
	SLEEP
	JR motorwaiting394
  motornotbusy394:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds398
	MOVEF_32 1000.0 milliseconds398
	DATA32 timer398
	TIMER_WAIT milliseconds398 timer398
	TIMER_READY timer398
    WRITE32 ENDSUB_F_STOP_0:CALLSUB399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB399:
RETSUB_F_FINISH_AFTER_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_0:
SUB_F_FINISH_AFTER_NEAR_INVERSED_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds403
	MOVEF_32 1500.0 milliseconds403
	DATA32 timer403
	TIMER_WAIT milliseconds403 timer403
	TIMER_READY timer403
    WRITE32 ENDSUB_F_STOP_0:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB404:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer406
	DATA8 nos406
	DATA8 busy406
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer406 nos406
	JR_EQ8 0 nos406 motornotbusy406
  motorwaiting406:
	OUTPUT_TEST layer406 nos406 busy406
	JR_EQ8 busy406 0 motornotbusy406
	SLEEP
	JR motorwaiting406
  motornotbusy406:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer408
	DATA8 nos408
	DATA8 busy408
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer408 nos408
	JR_EQ8 0 nos408 motornotbusy408
  motorwaiting408:
	OUTPUT_TEST layer408 nos408 busy408
	JR_EQ8 busy408 0 motornotbusy408
	SLEEP
	JR motorwaiting408
  motornotbusy408:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds412
	MOVEF_32 1000.0 milliseconds412
	DATA32 timer412
	TIMER_WAIT milliseconds412 timer412
	TIMER_READY timer412
    WRITE32 ENDSUB_F_STOP_0:CALLSUB413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB413:
RETSUB_F_FINISH_AFTER_NEAR_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:
SUB_F_TAKES_INVERSED_0:
    WRITE32 ENDSUB_F_TAKE_CUBES_INVERSED_0:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_INVERSED_0
CALLSUB414:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer417
	DATA8 nos417
	DATA8 busy417
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer417 nos417
	JR_EQ8 0 nos417 motornotbusy417
  motorwaiting417:
	OUTPUT_TEST layer417 nos417 busy417
	JR_EQ8 busy417 0 motornotbusy417
	SLEEP
	JR motorwaiting417
  motornotbusy417:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else418_1
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else418_1
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:CALLSUB421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_INVERSED_0
CALLSUB421:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB422:
    JR endif418
  else418_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else418_2
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else418_2
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer427
	DATA8 nos427
	DATA8 busy427
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer427 nos427
	JR_EQ8 0 nos427 motornotbusy427
  motorwaiting427:
	OUTPUT_TEST layer427 nos427 busy427
	JR_EQ8 busy427 0 motornotbusy427
	SLEEP
	JR motorwaiting427
  motornotbusy427:
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_INVERSED_0
CALLSUB428:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB429:
    JR endif418
  else418_2:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else418_3
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else418_3
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0
CALLSUB432:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB433:
    JR endif418
  else418_3:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else434_1
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else434_1
    WRITE32 ENDSUB_F_TAKE_BOTH_INVERSED_0:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_INVERSED_0
CALLSUB437:
    JR endif434
  else434_1:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else434_2
    WRITE32 ENDSUB_F_TAKE_NEAR_INVERSED_0:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_INVERSED_0
CALLSUB439:
    JR endif434
  else434_2:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else434_3
    WRITE32 ENDSUB_F_TAKE_LONG_INVERSED_0:CALLSUB441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_INVERSED_0
CALLSUB441:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer444
	DATA8 nos444
	DATA8 busy444
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer444 nos444
	JR_EQ8 0 nos444 motornotbusy444
  motorwaiting444:
	OUTPUT_TEST layer444 nos444 busy444
	JR_EQ8 busy444 0 motornotbusy444
	SLEEP
	JR motorwaiting444
  motornotbusy444:
    JR endif434
  else434_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer447
	DATA8 nos447
	DATA8 busy447
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer447 nos447
	JR_EQ8 0 nos447 motornotbusy447
  motorwaiting447:
	OUTPUT_TEST layer447 nos447 busy447
	JR_EQ8 busy447 0 motornotbusy447
	SLEEP
	JR motorwaiting447
  motornotbusy447:
  else434_4:
  endif434:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else448_1
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else448_1
    WRITE32 ENDSUB_F_TAKE_BOTH_INVERSED_0:CALLSUB451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_INVERSED_0
CALLSUB451:
    JR endif448
  else448_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else448_2
    WRITE32 ENDSUB_F_TAKE_NEAR_INVERSED_0:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_INVERSED_0
CALLSUB453:
    JR endif448
  else448_2:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else448_3
    WRITE32 ENDSUB_F_TAKE_LONG_INVERSED_0:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_INVERSED_0
CALLSUB455:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer458
	DATA8 nos458
	DATA8 busy458
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer458 nos458
	JR_EQ8 0 nos458 motornotbusy458
  motorwaiting458:
	OUTPUT_TEST layer458 nos458 busy458
	JR_EQ8 busy458 0 motornotbusy458
	SLEEP
	JR motorwaiting458
  motornotbusy458:
    JR endif448
  else448_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer461
	DATA8 nos461
	DATA8 busy461
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer461 nos461
	JR_EQ8 0 nos461 motornotbusy461
  motorwaiting461:
	OUTPUT_TEST layer461 nos461 busy461
	JR_EQ8 busy461 0 motornotbusy461
	SLEEP
	JR motorwaiting461
  motornotbusy461:
  else448_4:
  endif448:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else462_1
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else462_1
    WRITE32 ENDSUB_F_TAKE_BOTH_INVERSED_0:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_INVERSED_0
CALLSUB465:
    JR endif462
  else462_1:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else462_2
    WRITE32 ENDSUB_F_TAKE_NEAR_INVERSED_0:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_INVERSED_0
CALLSUB467:
    JR endif462
  else462_2:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else462_3
    WRITE32 ENDSUB_F_TAKE_LONG_INVERSED_0:CALLSUB469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_INVERSED_0
CALLSUB469:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer472
	DATA8 nos472
	DATA8 busy472
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer472 nos472
	JR_EQ8 0 nos472 motornotbusy472
  motorwaiting472:
	OUTPUT_TEST layer472 nos472 busy472
	JR_EQ8 busy472 0 motornotbusy472
	SLEEP
	JR motorwaiting472
  motornotbusy472:
    JR endif462
  else462_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer475
	DATA8 nos475
	DATA8 busy475
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer475 nos475
	JR_EQ8 0 nos475 motornotbusy475
  motorwaiting475:
	OUTPUT_TEST layer475 nos475 busy475
	JR_EQ8 busy475 0 motornotbusy475
	SLEEP
	JR motorwaiting475
  motornotbusy475:
  else462_4:
  endif462:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer477
	DATA8 nos477
	DATA8 busy477
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer477 nos477
	JR_EQ8 0 nos477 motornotbusy477
  motorwaiting477:
	OUTPUT_TEST layer477 nos477 busy477
	JR_EQ8 busy477 0 motornotbusy477
	SLEEP
	JR motorwaiting477
  motornotbusy477:
    MULF VGV_LEFT_FORWARD -25.0 F.0
    MULF VGV_RIGHT_FORWARD -25.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds481
	MOVEF_32 1500.0 milliseconds481
	DATA32 timer481
	TIMER_WAIT milliseconds481 timer481
	TIMER_READY timer481
    WRITE32 ENDSUB_F_STOP_0:CALLSUB482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB482:
  else418_4:
  endif418:
RETSUB_F_TAKES_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKES_INVERSED_0:
SUB_F_TAKES_NORMAL_0:
    WRITE32 ENDSUB_F_TAKE_CUBES_0:CALLSUB483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_0
CALLSUB483:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer486
	DATA8 nos486
	DATA8 busy486
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer486 nos486
	JR_EQ8 0 nos486 motornotbusy486
  motorwaiting486:
	OUTPUT_TEST layer486 nos486 busy486
	JR_EQ8 busy486 0 motornotbusy486
	SLEEP
	JR motorwaiting486
  motornotbusy486:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_1
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_1
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB490:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB491:
    JR endif487
  else487_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_2
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_2
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer496
	DATA8 nos496
	DATA8 busy496
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer496 nos496
	JR_EQ8 0 nos496 motornotbusy496
  motorwaiting496:
	OUTPUT_TEST layer496 nos496 busy496
	JR_EQ8 busy496 0 motornotbusy496
	SLEEP
	JR motorwaiting496
  motornotbusy496:
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB497:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB498:
    JR endif487
  else487_2:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_3
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_3
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:CALLSUB501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_LONG_0
CALLSUB501:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB502:
    JR endif487
  else487_3:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else503_1
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else503_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB506:
    JR endif503
  else503_1:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else503_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB508:
    JR endif503
  else503_2:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else503_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB510:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer513
	DATA8 nos513
	DATA8 busy513
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer513 nos513
	JR_EQ8 0 nos513 motornotbusy513
  motorwaiting513:
	OUTPUT_TEST layer513 nos513 busy513
	JR_EQ8 busy513 0 motornotbusy513
	SLEEP
	JR motorwaiting513
  motornotbusy513:
    JR endif503
  else503_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer516
	DATA8 nos516
	DATA8 busy516
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer516 nos516
	JR_EQ8 0 nos516 motornotbusy516
  motorwaiting516:
	OUTPUT_TEST layer516 nos516 busy516
	JR_EQ8 busy516 0 motornotbusy516
	SLEEP
	JR motorwaiting516
  motornotbusy516:
  else503_4:
  endif503:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else517_1
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else517_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB520:
    JR endif517
  else517_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else517_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB522:
    JR endif517
  else517_2:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else517_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB524:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer527
	DATA8 nos527
	DATA8 busy527
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer527 nos527
	JR_EQ8 0 nos527 motornotbusy527
  motorwaiting527:
	OUTPUT_TEST layer527 nos527 busy527
	JR_EQ8 busy527 0 motornotbusy527
	SLEEP
	JR motorwaiting527
  motornotbusy527:
    JR endif517
  else517_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer530
	DATA8 nos530
	DATA8 busy530
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer530 nos530
	JR_EQ8 0 nos530 motornotbusy530
  motorwaiting530:
	OUTPUT_TEST layer530 nos530 busy530
	JR_EQ8 busy530 0 motornotbusy530
	SLEEP
	JR motorwaiting530
  motornotbusy530:
  else517_4:
  endif517:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else531_1
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else531_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB534:
    JR endif531
  else531_1:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else531_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB536:
    JR endif531
  else531_2:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else531_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB538:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer541
	DATA8 nos541
	DATA8 busy541
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer541 nos541
	JR_EQ8 0 nos541 motornotbusy541
  motorwaiting541:
	OUTPUT_TEST layer541 nos541 busy541
	JR_EQ8 busy541 0 motornotbusy541
	SLEEP
	JR motorwaiting541
  motornotbusy541:
    JR endif531
  else531_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer544
	DATA8 nos544
	DATA8 busy544
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer544 nos544
	JR_EQ8 0 nos544 motornotbusy544
  motorwaiting544:
	OUTPUT_TEST layer544 nos544 busy544
	JR_EQ8 busy544 0 motornotbusy544
	SLEEP
	JR motorwaiting544
  motornotbusy544:
  else531_4:
  endif531:
    MULF -15.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer546
	DATA8 nos546
	DATA8 busy546
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer546 nos546
	JR_EQ8 0 nos546 motornotbusy546
  motorwaiting546:
	OUTPUT_TEST layer546 nos546 busy546
	JR_EQ8 busy546 0 motornotbusy546
	SLEEP
	JR motorwaiting546
  motornotbusy546:
    MULF VGV_LEFT_FORWARD -25.0 F.0
    MULF VGV_RIGHT_FORWARD -25.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds550
	MOVEF_32 1500.0 milliseconds550
	DATA32 timer550
	TIMER_WAIT milliseconds550 timer550
	TIMER_READY timer550
    WRITE32 ENDSUB_F_STOP_0:CALLSUB551 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB551:
  else487_4:
  endif487:
RETSUB_F_TAKES_NORMAL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKES_NORMAL_0:
SUB_F_GO_FORWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 25.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 25.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_0:
SUB_F_GO_BACKWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 0.5 VGV_DIFF
    SUBF -25.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF -25.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_BACKWARD_0:
SUB_F_MOVE_FORWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while578:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile578
  whilebody578:
    WRITE32 ENDSUB_F_GO_FORWARD_0:CALLSUB580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_0
CALLSUB580:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody578
  endwhile578:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB582:
RETSUB_F_MOVE_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_0:
SUB_F_MOVE_BACKWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while585:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_LTEQF F.0 F.1 endwhile585
  whilebody585:
    WRITE32 ENDSUB_F_GO_BACKWARD_0:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_0
CALLSUB588:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_GTF F.0 F.1 whilebody585
  endwhile585:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB591:
RETSUB_F_MOVE_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_0:
SUB_F_KICK_NEW_FIRE_0:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 370.0 'True'

	DATA8 layer594
	DATA8 nos594
	DATA8 busy594
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer594 nos594
	JR_EQ8 0 nos594 motornotbusy594
  motorwaiting594:
	OUTPUT_TEST layer594 nos594 busy594
	JR_EQ8 busy594 0 motornotbusy594
	SLEEP
	JR motorwaiting594
  motornotbusy594:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 160.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB595:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB596:
    CALL MOTOR.START VGV_WATER_MOTOR -40.0
    DATA32 milliseconds598
	MOVEF_32 1000.0 milliseconds598
	DATA32 timer598
	TIMER_WAIT milliseconds598 timer598
	TIMER_READY timer598
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 160.0 VLV_DEG_6
    MOVEF_F 70.0 VLV_ACCELERATION_6
    MOVEF_F 70.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB600:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB601:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 40.0 0.0 20.0 0.0 'True' 

	DATA8 layer602
	DATA8 nos602
	DATA8 busy602
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer602 nos602
	JR_EQ8 0 nos602 motornotbusy602
  motorwaiting602:
	OUTPUT_TEST layer602 nos602 busy602
	JR_EQ8 busy602 0 motornotbusy602
	SLEEP
	JR motorwaiting602
  motornotbusy602:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 370.0 'True'

	DATA8 layer605
	DATA8 nos605
	DATA8 busy605
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer605 nos605
	JR_EQ8 0 nos605 motornotbusy605
  motorwaiting605:
	OUTPUT_TEST layer605 nos605 busy605
	JR_EQ8 busy605 0 motornotbusy605
	SLEEP
	JR motorwaiting605
  motornotbusy605:
RETSUB_F_KICK_NEW_FIRE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_NEW_FIRE_0:
SUB_F_MAIN_0:
    STRINGS DUPLICATE 'True' VGV_START_FROM_RIGHT
    TIMER_READ timeMC9
    MOVEF_F 97.0 VGV_A
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB607:
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else608_1
    MULF VGV_LEFT_FORWARD 100.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    MOVEF_F 600.0 VGV_DEG
  while613:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile613
  whilebody613:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody613
  endwhile613:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while619:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile619
  whilebody619:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody619
  endwhile619:
  while622:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 15.0 endwhile622
  whilebody622:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 15.0 whilebody622
  endwhile622:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB625:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_7
    MOVEF_F 30.0 VLV_BASE_POWER_7
    MOVEF_F 15.0 VLV_MIN_POWER_7
    MOVEF_F 460.0 VLV_DEG_7
    MOVEF_F 100.0 VLV_ACCELERATION_7
    MOVEF_F 100.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB626 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB626:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB627:
    MULF VGV_LEFT_FORWARD -40.0 F.0
    MULF VGV_RIGHT_FORWARD -40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds631
	MOVEF_32 1000.0 milliseconds631
	DATA32 timer631
	TIMER_WAIT milliseconds631 timer631
	TIMER_READY timer631
    WRITE32 ENDSUB_F_STOP_0:CALLSUB632 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB632:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while637:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 500.0 or638
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile637
  or638:
  whilebody637:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 500.0 whilebody637
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody637
  endwhile637:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB643:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -20.0 0.0 70.0 0.0 'True' 

	DATA8 layer644
	DATA8 nos644
	DATA8 busy644
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer644 nos644
	JR_EQ8 0 nos644 motornotbusy644
  motorwaiting644:
	OUTPUT_TEST layer644 nos644 busy644
	JR_EQ8 busy644 0 motornotbusy644
	SLEEP
	JR motorwaiting644
  motornotbusy644:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_7
    MOVEF_F 30.0 VLV_BASE_POWER_7
    MOVEF_F 15.0 VLV_MIN_POWER_7
    MOVEF_F 510.0 VLV_DEG_7
    MOVEF_F 150.0 VLV_ACCELERATION_7
    MOVEF_F 150.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB645:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB646 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB646:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 20.0 VLV_MIN_POWER_7
    MOVEF_F 140.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB647:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB648:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_M
  while650:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_LTEQF F.0 4.0 endwhile650
  whilebody650:
    MOVEF_F 30.0 VLV_POWER_1
    MOVEF_F VGV_M VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB652:
    CALL SENSOR.READPERCENT 1.0 F.0
    JR_GTF F.0 4.0 whilebody650
  endwhile650:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB654:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 20.0 0.0 70.0 0.0 'True' 

	DATA8 layer655
	DATA8 nos655
	DATA8 busy655
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer655 nos655
	JR_EQ8 0 nos655 motornotbusy655
  motorwaiting655:
	OUTPUT_TEST layer655 nos655 busy655
	JR_EQ8 busy655 0 motornotbusy655
	SLEEP
	JR motorwaiting655
  motornotbusy655:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_8
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 365.0 VLV_DEG_8
    MOVEF_F 100.0 VLV_ACCELERATION_8
    MOVEF_F 100.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB656 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB656:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB657:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds661
	MOVEF_32 2500.0 milliseconds661
	DATA32 timer661
	TIMER_WAIT milliseconds661 timer661
	TIMER_READY timer661
    WRITE32 ENDSUB_F_STOP_0:CALLSUB662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB662:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer664
	DATA8 nos664
	DATA8 busy664
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer664 nos664
	JR_EQ8 0 nos664 motornotbusy664
  motorwaiting664:
	OUTPUT_TEST layer664 nos664 busy664
	JR_EQ8 busy664 0 motornotbusy664
	SLEEP
	JR motorwaiting664
  motornotbusy664:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 125.0 0.0 'True' 

	DATA8 layer666
	DATA8 nos666
	DATA8 busy666
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer666 nos666
	JR_EQ8 0 nos666 motornotbusy666
  motorwaiting666:
	OUTPUT_TEST layer666 nos666 busy666
	JR_EQ8 busy666 0 motornotbusy666
	SLEEP
	JR motorwaiting666
  motornotbusy666:
    DATA32 milliseconds667
	MOVEF_32 100.0 milliseconds667
	DATA32 timer667
	TIMER_WAIT milliseconds667 timer667
	TIMER_READY timer667
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while671:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile671
  whilebody671:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody671
  endwhile671:
  while674:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile674
  whilebody674:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody674
  endwhile674:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB677 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB677:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while679:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 510.0 endwhile679
  whilebody679:
    MOVEF_F 20.0 VLV_POWER_1
    MOVEF_F VGV_A VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB681:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 510.0 whilebody679
  endwhile679:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB683:
    JR endif608
  else608_1:
    MOVEF_F 1200.0 VGV_DEG
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 80.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while688:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile688
  whilebody688:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody688
  endwhile688:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 55.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while694:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile694
  whilebody694:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody694
  endwhile694:
  while697:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile697
  whilebody697:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody697
  endwhile697:
    WRITE32 ENDSUB_F_STOP_RIGHT_0:CALLSUB700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_RIGHT_0
CALLSUB700:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB701:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer703
	DATA8 nos703
	DATA8 busy703
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer703 nos703
	JR_EQ8 0 nos703 motornotbusy703
  motorwaiting703:
	OUTPUT_TEST layer703 nos703 busy703
	JR_EQ8 busy703 0 motornotbusy703
	SLEEP
	JR motorwaiting703
  motornotbusy703:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB704:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 235.0 0.0 'True' 

	DATA8 layer706
	DATA8 nos706
	DATA8 busy706
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer706 nos706
	JR_EQ8 0 nos706 motornotbusy706
  motorwaiting706:
	OUTPUT_TEST layer706 nos706 busy706
	JR_EQ8 busy706 0 motornotbusy706
	SLEEP
	JR motorwaiting706
  motornotbusy706:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while708:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile708
  whilebody708:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB710 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB710:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody708
  endwhile708:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB712 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB712:
  else608_2:
  endif608:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB713:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    MOVEF_F 500.0 VGV_C
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB715:
    JR_LTEQF VGV_B 80.0 else716_1
    DATA8 layer717
	DATA8 no717
	DATA8 mode8717
	
	MOVEF_8 VGV_RIGHT_SENSOR no717
	SUB8 no717 1 no717
	DIV8 no717 4 layer717
	MATH MOD8 no717 4 no717

	MOVEF_8 2.0 mode8717
	
	INPUT_DEVICE READY_RAW layer717 no717 0 mode8717 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer719
	DATA8 no719
	DATA8 mode8719
	
	MOVEF_8 VGV_RIGHT_SENSOR no719
	SUB8 no719 1 no719
	DIV8 no719 4 layer719
	MATH MOD8 no719 4 no719

	MOVEF_8 1.0 mode8719
	
	INPUT_DEVICE READY_RAW layer719 no719 0 mode8719 0
    JR_LTEQF VGV_G 100.0 else720_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB722 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB722:
    JR endif720
  else720_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_BROWN
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB724:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB725:
  else720_2:
  endif720:
    JR endif716
  else716_1:
    JR_LTEQF VGV_B 5.0 else716_2
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else716_2
    DATA8 layer727
	DATA8 no727
	DATA8 mode8727
	
	MOVEF_8 VGV_RIGHT_SENSOR no727
	SUB8 no727 1 no727
	DIV8 no727 4 layer727
	MATH MOD8 no727 4 no727

	MOVEF_8 4.0 mode8727
	
	INPUT_DEVICE READY_RAW layer727 no727 0 mode8727 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    DATA8 layer729
	DATA8 no729
	DATA8 mode8729
	
	MOVEF_8 VGV_RIGHT_SENSOR no729
	SUB8 no729 1 no729
	DIV8 no729 4 layer729
	MATH MOD8 no729 4 no729

	MOVEF_8 1.0 mode8729
	
	INPUT_DEVICE READY_RAW layer729 no729 0 mode8729 0
    STRINGS DUPLICATE 'None' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB730 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB730:
    JR_LTEQF VGV_W 29.0 else731_1
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB732 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB732:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB733:
  else731_1:
  endif731:
  else716_2:
  endif716:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB734:
    DATA8 layer735
	DATA8 no735
	DATA8 mode8735
	
	MOVEF_8 VGV_LINE_SENSOR no735
	SUB8 no735 1 no735
	DIV8 no735 4 layer735
	MATH MOD8 no735 4 no735

	MOVEF_8 2.0 mode8735
	
	INPUT_DEVICE READY_RAW layer735 no735 0 mode8735 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    WRITE32 ENDSUB_F_STOP_0:CALLSUB737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB737:
  while738:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C or739
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 5.0 endwhile738
  or739:
  whilebody738:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB742:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody738
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 5.0 whilebody738
  endwhile738:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB745:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB746:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB747 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB747:
    MOVEF_F 350.0 VGV_C
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 90.0 VLV_DEG_6
    MOVEF_F 40.0 VLV_ACCELERATION_6
    MOVEF_F 40.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB748:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB749 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB749:
    ADDF VGV_C 110.0 VGV_C
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB751 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB751:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB753:
    JR_LTEQF VGV_B 80.0 else754_1
    DATA8 layer755
	DATA8 no755
	DATA8 mode8755
	
	MOVEF_8 VGV_RIGHT_SENSOR no755
	SUB8 no755 1 no755
	DIV8 no755 4 layer755
	MATH MOD8 no755 4 no755

	MOVEF_8 2.0 mode8755
	
	INPUT_DEVICE READY_RAW layer755 no755 0 mode8755 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer757
	DATA8 no757
	DATA8 mode8757
	
	MOVEF_8 VGV_RIGHT_SENSOR no757
	SUB8 no757 1 no757
	DIV8 no757 4 layer757
	MATH MOD8 no757 4 no757

	MOVEF_8 1.0 mode8757
	
	INPUT_DEVICE READY_RAW layer757 no757 0 mode8757 0
    JR_LTEQF VGV_G 100.0 else758_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB760:
    JR endif758
  else758_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_BROWN
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB762:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 80.0 VLV_DEG_6
    MOVEF_F 40.0 VLV_ACCELERATION_6
    MOVEF_F 40.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB763 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB763:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB764 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB764:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB765 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB765:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 80.0 VLV_DEG_5
    MOVEF_F 40.0 VLV_ACCELERATION_5
    MOVEF_F 40.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB766 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB766:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB767 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB767:
  else758_2:
  endif758:
    JR endif754
  else754_1:
    JR_LTEQF VGV_B 17.0 else754_2
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else754_2
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB769 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB769:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB770 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB770:
  else754_2:
  endif754:
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else771_1
    WRITE32 ENDSUB_F_KICK_NEW_FIRE_0:CALLSUB773 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_NEW_FIRE_0
CALLSUB773:
  else771_1:
  endif771:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB774:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while776:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile776
  whilebody776:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB778 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB778:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody776
  endwhile776:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else780_1
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    JR endif780
  else780_1:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  else780_2:
  endif780:
    DATA32 milliseconds788
	MOVEF_32 1000.0 milliseconds788
	DATA32 timer788
	TIMER_WAIT milliseconds788 timer788
	TIMER_READY timer788
    WRITE32 ENDSUB_F_STOP_0:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB789:
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_LEFT
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB791 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB791:
    JR_LTEQF VGV_B 85.0 else792_1
    DATA8 layer793
	DATA8 no793
	DATA8 mode8793
	
	MOVEF_8 VGV_RIGHT_SENSOR no793
	SUB8 no793 1 no793
	DIV8 no793 4 layer793
	MATH MOD8 no793 4 no793

	MOVEF_8 2.0 mode8793
	
	INPUT_DEVICE READY_RAW layer793 no793 0 mode8793 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB794:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer796
	DATA8 no796
	DATA8 mode8796
	
	MOVEF_8 VGV_RIGHT_SENSOR no796
	SUB8 no796 1 no796
	DIV8 no796 4 layer796
	MATH MOD8 no796 4 no796

	MOVEF_8 1.0 mode8796
	
	INPUT_DEVICE READY_RAW layer796 no796 0 mode8796 0
    JR_LTEQF VGV_G 100.0 else797_1
    STRINGS DUPLICATE 'R: Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB799:
    JR endif797
  else797_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB801:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB802 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB802:
  else797_2:
  endif797:
    JR endif792
  else792_1:
    JR_LTEQF VGV_B 10.0 else792_2
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else792_2
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB804:
  else792_2:
  endif792:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB805:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else806_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB808 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB808:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB810 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB810:
    JR_LTEQF VGV_B 90.0 else811_1
    DATA8 layer812
	DATA8 no812
	DATA8 mode8812
	
	MOVEF_8 VGV_LEFT_SENSOR no812
	SUB8 no812 1 no812
	DIV8 no812 4 layer812
	MATH MOD8 no812 4 no812

	MOVEF_8 2.0 mode8812
	
	INPUT_DEVICE READY_RAW layer812 no812 0 mode8812 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB813 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB813:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer815
	DATA8 no815
	DATA8 mode8815
	
	MOVEF_8 VGV_LEFT_SENSOR no815
	SUB8 no815 1 no815
	DIV8 no815 4 layer815
	MATH MOD8 no815 4 no815

	MOVEF_8 1.0 mode8815
	
	INPUT_DEVICE READY_RAW layer815 no815 0 mode8815 0
    JR_LTEQF VGV_G 100.0 else816_1
    STRINGS DUPLICATE 'L: Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB818 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB818:
    JR endif816
  else816_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB820 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB820:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB821 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB821:
  else816_2:
  endif816:
    JR endif811
  else811_1:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 30.0 0.0 'True' 

	DATA8 layer823
	DATA8 nos823
	DATA8 busy823
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer823 nos823
	JR_EQ8 0 nos823 motornotbusy823
  motorwaiting823:
	OUTPUT_TEST layer823 nos823 busy823
	JR_EQ8 busy823 0 motornotbusy823
	SLEEP
	JR motorwaiting823
  motornotbusy823:
    DATA32 milliseconds824
	MOVEF_32 500.0 milliseconds824
	DATA32 timer824
	TIMER_WAIT milliseconds824 timer824
	TIMER_READY timer824
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds828
	MOVEF_32 500.0 milliseconds828
	DATA32 timer828
	TIMER_WAIT milliseconds828 timer828
	TIMER_READY timer828
    WRITE32 ENDSUB_F_STOP_0:CALLSUB829 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB829:
    JR_LTEQF VGV_B 28.0 else830_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else830_1
    WRITE32 ENDSUB_F_STOP_0:CALLSUB832 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB832:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB833 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB833:
  else830_1:
  endif830:
  else811_2:
  endif811:
  else806_1:
  endif806:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB834 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB834:
    MOVEF_F 140.0 VGV_CHEM_BACK
    MOVEF_F 130.0 VGV_NO_BACK
    CALL EQ_STRING VGV_TAKE_RED_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else835_1
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 280.0 VLV_DEG_6
    MOVEF_F 100.0 VLV_ACCELERATION_6
    MOVEF_F 100.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB837:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB838:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 70.0 VLV_DEG_7
    MOVEF_F 35.0 VLV_ACCELERATION_7
    MOVEF_F 35.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB839 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB839:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB840 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB840:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer841
	DATA8 nos841
	DATA8 busy841
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer841 nos841
	JR_EQ8 0 nos841 motornotbusy841
  motorwaiting841:
	OUTPUT_TEST layer841 nos841 busy841
	JR_EQ8 busy841 0 motornotbusy841
	SLEEP
	JR motorwaiting841
  motornotbusy841:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 150.0 VLV_DEG_5
    MOVEF_F 60.0 VLV_ACCELERATION_5
    MOVEF_F 60.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB842 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB842:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB843 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB843:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer844
	DATA8 nos844
	DATA8 busy844
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer844 nos844
	JR_EQ8 0 nos844 motornotbusy844
  motorwaiting844:
	OUTPUT_TEST layer844 nos844 busy844
	JR_EQ8 busy844 0 motornotbusy844
	SLEEP
	JR motorwaiting844
  motornotbusy844:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB845 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB845:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 150.0 VLV_DEG_6
    MOVEF_F 60.0 VLV_ACCELERATION_6
    MOVEF_F 60.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB846 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB846:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB847 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB847:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 70.0 VLV_DEG_8
    MOVEF_F 35.0 VLV_ACCELERATION_8
    MOVEF_F 35.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB848 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB848:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB849 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB849:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds853
	MOVEF_32 1500.0 milliseconds853
	DATA32 timer853
	TIMER_WAIT milliseconds853 timer853
	TIMER_READY timer853
    WRITE32 ENDSUB_F_STOP_0:CALLSUB854 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB854:
    SUBF VGV_CHEM_BACK 30.0 F.1
    DATAF tmpf856
    DATA8 flag856
    DIVF F.1 2.0 tmpf856
    CP_EQF 0.0 2.0 flag856
    SELECTF flag856 0.0 tmpf856 F.0

    MATH FLOOR F.0 VGV_HALF
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F VGV_CHEM_BACK VLV_DEG_6
    MOVEF_F VGV_HALF VLV_ACCELERATION_6
    MOVEF_F VGV_HALF VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB858 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB858:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB859 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB859:
    JR endif835
  else835_1:
    CALL EQ_STRING VGV_TAKE_RED_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else835_2
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 280.0 VLV_DEG_6
    MOVEF_F 100.0 VLV_ACCELERATION_6
    MOVEF_F 100.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB861 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB861:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB862 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB862:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 70.0 VLV_DEG_7
    MOVEF_F 35.0 VLV_ACCELERATION_7
    MOVEF_F 35.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB863 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB863:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB864 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB864:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer865
	DATA8 nos865
	DATA8 busy865
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer865 nos865
	JR_EQ8 0 nos865 motornotbusy865
  motorwaiting865:
	OUTPUT_TEST layer865 nos865 busy865
	JR_EQ8 busy865 0 motornotbusy865
	SLEEP
	JR motorwaiting865
  motornotbusy865:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 150.0 VLV_DEG_5
    MOVEF_F 60.0 VLV_ACCELERATION_5
    MOVEF_F 60.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB866 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB866:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB867 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB867:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer868
	DATA8 nos868
	DATA8 busy868
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer868 nos868
	JR_EQ8 0 nos868 motornotbusy868
  motorwaiting868:
	OUTPUT_TEST layer868 nos868 busy868
	JR_EQ8 busy868 0 motornotbusy868
	SLEEP
	JR motorwaiting868
  motornotbusy868:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB869 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB869:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 150.0 VLV_DEG_6
    MOVEF_F 60.0 VLV_ACCELERATION_6
    MOVEF_F 60.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB870 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB870:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB871 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB871:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 70.0 VLV_DEG_8
    MOVEF_F 35.0 VLV_ACCELERATION_8
    MOVEF_F 35.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB872 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB872:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB873 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB873:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds877
	MOVEF_32 1500.0 milliseconds877
	DATA32 timer877
	TIMER_WAIT milliseconds877 timer877
	TIMER_READY timer877
    WRITE32 ENDSUB_F_STOP_0:CALLSUB878 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB878:
    SUBF VGV_CHEM_BACK 30.0 F.1
    DATAF tmpf880
    DATA8 flag880
    DIVF F.1 2.0 tmpf880
    CP_EQF 0.0 2.0 flag880
    SELECTF flag880 0.0 tmpf880 F.0

    MATH FLOOR F.0 VGV_HALF
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F VGV_CHEM_BACK VLV_DEG_6
    MOVEF_F VGV_HALF VLV_ACCELERATION_6
    MOVEF_F VGV_HALF VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB882 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB882:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB883 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB883:
    JR endif835
  else835_2:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else884_1
    CALL MOTOR.START VGV_WATER_MOTOR -50.0
    DATA32 milliseconds887
	MOVEF_32 1000.0 milliseconds887
	DATA32 timer887
	TIMER_WAIT milliseconds887 timer887
	TIMER_READY timer887
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
  else884_1:
  endif884:
    SUBF VGV_NO_BACK 30.0 F.1
    DATAF tmpf890
    DATA8 flag890
    DIVF F.1 2.0 tmpf890
    CP_EQF 0.0 2.0 flag890
    SELECTF flag890 0.0 tmpf890 F.0

    MATH FLOOR F.0 VGV_HALF
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F VGV_NO_BACK VLV_DEG_6
    MOVEF_F VGV_HALF VLV_ACCELERATION_6
    MOVEF_F VGV_HALF VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB892 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB892:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB893 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB893:
  else835_3:
  endif835:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer896
	DATA8 nos896
	DATA8 busy896
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer896 nos896
	JR_EQ8 0 nos896 motornotbusy896
  motorwaiting896:
	OUTPUT_TEST layer896 nos896 busy896
	JR_EQ8 busy896 0 motornotbusy896
	SLEEP
	JR motorwaiting896
  motornotbusy896:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB897 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB897:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB898 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB898:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds902
	MOVEF_32 700.0 milliseconds902
	DATA32 timer902
	TIMER_WAIT milliseconds902 timer902
	TIMER_READY timer902
    WRITE32 ENDSUB_F_STOP_0:CALLSUB903 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB903:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    ADDF F.0 5.0 VGV_A
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 430.0 VLV_DEG_5
    MOVEF_F 100.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB906 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB906:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while908:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile908
  whilebody908:
    MOVEF_F 40.0 VLV_POWER_1
    MOVEF_F VGV_A VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB910 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB910:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody908
  endwhile908:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA8 layer916
	DATA8 no916
	DATA8 mode8916
	
	MOVEF_8 VGV_LINE_SENSOR no916
	SUB8 no916 1 no916
	DIV8 no916 4 layer916
	MATH MOD8 no916 4 no916

	MOVEF_8 0.0 mode8916
	
	INPUT_DEVICE READY_RAW layer916 no916 0 mode8916 0
  while917:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 or918
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 220.0 endwhile917
  or918:
  whilebody917:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 whilebody917
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 220.0 whilebody917
  endwhile917:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB923 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB923:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB924 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB924:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 92.0 VLV_DEG_6
    MOVEF_F 45.0 VLV_ACCELERATION_6
    MOVEF_F 45.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB925 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB925:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB926 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB926:
    DATA8 layer927
	DATA8 no927
	DATA8 mode8927
	
	MOVEF_8 VGV_LINE_SENSOR no927
	SUB8 no927 1 no927
	DIV8 no927 4 layer927
	MATH MOD8 no927 4 no927

	MOVEF_8 0.0 mode8927
	
	INPUT_DEVICE READY_RAW layer927 no927 0 mode8927 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB929 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB929:
    JR_LTEQF VGV_B 45.0 else930_1
    DATA8 layer931
	DATA8 no931
	DATA8 mode8931
	
	MOVEF_8 VGV_LEFT_SENSOR no931
	SUB8 no931 1 no931
	DIV8 no931 4 layer931
	MATH MOD8 no931 4 no931

	MOVEF_8 2.0 mode8931
	
	INPUT_DEVICE READY_RAW layer931 no931 0 mode8931 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer933
	DATA8 no933
	DATA8 mode8933
	
	MOVEF_8 VGV_LEFT_SENSOR no933
	SUB8 no933 1 no933
	DIV8 no933 4 layer933
	MATH MOD8 no933 4 no933

	MOVEF_8 1.0 mode8933
	
	INPUT_DEVICE READY_RAW layer933 no933 0 mode8933 0
    JR_LTEQF VGV_G 100.0 else934_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB935 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB935:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif934
  else934_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB937 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB937:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 100.0 VLV_DEG_6
    MOVEF_F 50.0 VLV_ACCELERATION_6
    MOVEF_F 50.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB938 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB938:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB939 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB939:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB940 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB940:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 100.0 VLV_DEG_5
    MOVEF_F 100.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB941 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB941:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else934_2:
  endif934:
    JR endif930
  else930_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds947
	MOVEF_32 1000.0 milliseconds947
	DATA32 timer947
	TIMER_WAIT milliseconds947 timer947
	TIMER_READY timer947
    JR_GTEQF VGV_ULTRA 85.0 else948_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else948_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB950 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB950:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB951 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB951:
  else948_1:
  endif948:
  else930_2:
  endif930:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB952 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB952:
    CALL EQ_STRING VGV_OBJECT 'Fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else953_1
    MOVEF_F 30.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 115.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB955 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB955:
    JR endif953
  else953_1:
    MOVEF_F 30.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 115.0 VLV_DEG_5
    MOVEF_F 115.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB956 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB956:
  else953_2:
  endif953:
    SUBF VGV_A 0.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while959:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 250.0 endwhile959
  whilebody959:
    MOVEF_F 40.0 VLV_POWER_1
    MOVEF_F VGV_A VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB961 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB961:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 250.0 whilebody959
  endwhile959:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds966
	MOVEF_32 1500.0 milliseconds966
	DATA32 timer966
	TIMER_WAIT milliseconds966 timer966
	TIMER_READY timer966
    WRITE32 ENDSUB_F_STOP_0:CALLSUB967 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB967:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB969 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB969:
    JR_LTEQF VGV_B 55.0 else970_1
    DATA8 layer971
	DATA8 no971
	DATA8 mode8971
	
	MOVEF_8 VGV_LEFT_SENSOR no971
	SUB8 no971 1 no971
	DIV8 no971 4 layer971
	MATH MOD8 no971 4 no971

	MOVEF_8 2.0 mode8971
	
	INPUT_DEVICE READY_RAW layer971 no971 0 mode8971 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer973
	DATA8 no973
	DATA8 mode8973
	
	MOVEF_8 VGV_LEFT_SENSOR no973
	SUB8 no973 1 no973
	DIV8 no973 4 layer973
	MATH MOD8 no973 4 no973

	MOVEF_8 1.0 mode8973
	
	INPUT_DEVICE READY_RAW layer973 no973 0 mode8973 0
    JR_LTEQF VGV_G 70.0 else974_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB976 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB976:
    JR endif974
  else974_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB978 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB978:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB979 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB979:
  else974_2:
  endif974:
    JR endif970
  else970_1:
    JR_LTEQF VGV_B 15.0 else970_2
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else981_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else981_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB983 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB983:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB984:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for986:
    JR_GTF VGV_I 20.0 endfor986
  forbody986:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds990
	MOVEF_32 30.0 milliseconds990
	DATA32 timer990
	TIMER_WAIT milliseconds990 timer990
	TIMER_READY timer990
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody986
  endfor986:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer996
	DATA8 nos996
	DATA8 busy996
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer996 nos996
	JR_EQ8 0 nos996 motornotbusy996
  motorwaiting996:
	OUTPUT_TEST layer996 nos996 busy996
	JR_EQ8 busy996 0 motornotbusy996
	SLEEP
	JR motorwaiting996
  motornotbusy996:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB997 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB997:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer998
	DATA8 nos998
	DATA8 busy998
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer998 nos998
	JR_EQ8 0 nos998 motornotbusy998
  motorwaiting998:
	OUTPUT_TEST layer998 nos998 busy998
	JR_EQ8 busy998 0 motornotbusy998
	SLEEP
	JR motorwaiting998
  motornotbusy998:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer1001
	DATA8 nos1001
	DATA8 busy1001
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1001 nos1001
	JR_EQ8 0 nos1001 motornotbusy1001
  motorwaiting1001:
	OUTPUT_TEST layer1001 nos1001 busy1001
	JR_EQ8 busy1001 0 motornotbusy1001
	SLEEP
	JR motorwaiting1001
  motornotbusy1001:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1002 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1002:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer1003
	DATA8 nos1003
	DATA8 busy1003
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1003 nos1003
	JR_EQ8 0 nos1003 motornotbusy1003
  motorwaiting1003:
	OUTPUT_TEST layer1003 nos1003 busy1003
	JR_EQ8 busy1003 0 motornotbusy1003
	SLEEP
	JR motorwaiting1003
  motornotbusy1003:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1004 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1004:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer1007
	DATA8 nos1007
	DATA8 busy1007
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1007 nos1007
	JR_EQ8 0 nos1007 motornotbusy1007
  motorwaiting1007:
	OUTPUT_TEST layer1007 nos1007 busy1007
	JR_EQ8 busy1007 0 motornotbusy1007
	SLEEP
	JR motorwaiting1007
  motornotbusy1007:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1008 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1008:
    DATA32 milliseconds1009
	MOVEF_32 1000.0 milliseconds1009
	DATA32 timer1009
	TIMER_WAIT milliseconds1009 timer1009
	TIMER_READY timer1009
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1011:
    JR_GTF VGV_I 20.0 endfor1011
  forbody1011:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds1014
	MOVEF_32 30.0 milliseconds1014
	DATA32 timer1014
	TIMER_WAIT milliseconds1014 timer1014
	TIMER_READY timer1014
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1011
  endfor1011:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1020
	DATA8 nos1020
	DATA8 busy1020
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1020 nos1020
	JR_EQ8 0 nos1020 motornotbusy1020
  motorwaiting1020:
	OUTPUT_TEST layer1020 nos1020 busy1020
	JR_EQ8 busy1020 0 motornotbusy1020
	SLEEP
	JR motorwaiting1020
  motornotbusy1020:
    MULF 30.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1023
	MOVEF_32 1000.0 milliseconds1023
	DATA32 timer1023
	TIMER_WAIT milliseconds1023 timer1023
	TIMER_READY timer1023
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1024 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1024:
  else981_1:
  endif981:
  else970_2:
  endif970:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1025 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1025:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer1027
	DATA8 nos1027
	DATA8 busy1027
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1027 nos1027
	JR_EQ8 0 nos1027 motornotbusy1027
  motorwaiting1027:
	OUTPUT_TEST layer1027 nos1027 busy1027
	JR_EQ8 busy1027 0 motornotbusy1027
	SLEEP
	JR motorwaiting1027
  motornotbusy1027:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 104.0 0.0 'True' 

	DATA8 layer1029
	DATA8 nos1029
	DATA8 busy1029
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1029 nos1029
	JR_EQ8 0 nos1029 motornotbusy1029
  motorwaiting1029:
	OUTPUT_TEST layer1029 nos1029 busy1029
	JR_EQ8 busy1029 0 motornotbusy1029
	SLEEP
	JR motorwaiting1029
  motornotbusy1029:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 102.0 VGV_A
  while1031:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 100.0 endwhile1031
  whilebody1031:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB1033 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB1033:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 100.0 whilebody1031
  endwhile1031:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1038:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 6.0 endwhile1038
  whilebody1038:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 6.0 whilebody1038
  endwhile1038:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1041 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1041:
    DATA8 layer1042
	DATA8 no1042
	DATA8 mode81042
	
	MOVEF_8 VGV_LINE_SENSOR no1042
	SUB8 no1042 1 no1042
	DIV8 no1042 4 layer1042
	MATH MOD8 no1042 4 no1042

	MOVEF_8 0.0 mode81042
	
	INPUT_DEVICE READY_RAW layer1042 no1042 0 mode81042 0
    MOVEF_F 110.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1043:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1044 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1044:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else1046_1
    DATA8 layer1047
	DATA8 no1047
	DATA8 mode81047
	
	MOVEF_8 VGV_LEFT_SENSOR no1047
	SUB8 no1047 1 no1047
	DIV8 no1047 4 layer1047
	MATH MOD8 no1047 4 no1047

	MOVEF_8 2.0 mode81047
	
	INPUT_DEVICE READY_RAW layer1047 no1047 0 mode81047 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1049
	DATA8 no1049
	DATA8 mode81049
	
	MOVEF_8 VGV_LEFT_SENSOR no1049
	SUB8 no1049 1 no1049
	DIV8 no1049 4 layer1049
	MATH MOD8 no1049 4 no1049

	MOVEF_8 1.0 mode81049
	
	INPUT_DEVICE READY_RAW layer1049 no1049 0 mode81049 0
    JR_LTEQF VGV_G 100.0 else1050_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1051 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1051:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif1050
  else1050_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1053 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1053:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1054 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1054:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1055 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1055:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1056 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1056:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1057 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1057:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else1050_2:
  endif1050:
    JR endif1046
  else1046_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1060_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1060_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1062 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1062:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1063 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1063:
  else1060_1:
  endif1060:
  else1046_2:
  endif1046:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1064 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1064:
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1065_1
    WRITE32 ENDSUB_F_KICK_NEW_FIRE_0:CALLSUB1067 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_NEW_FIRE_0
CALLSUB1067:
  else1065_1:
  endif1065:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1068 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1068:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1069 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1069:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else1071_1
    DATA8 layer1072
	DATA8 no1072
	DATA8 mode81072
	
	MOVEF_8 VGV_LEFT_SENSOR no1072
	SUB8 no1072 1 no1072
	DIV8 no1072 4 layer1072
	MATH MOD8 no1072 4 no1072

	MOVEF_8 2.0 mode81072
	
	INPUT_DEVICE READY_RAW layer1072 no1072 0 mode81072 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1074
	DATA8 no1074
	DATA8 mode81074
	
	MOVEF_8 VGV_LEFT_SENSOR no1074
	SUB8 no1074 1 no1074
	DIV8 no1074 4 layer1074
	MATH MOD8 no1074 4 no1074

	MOVEF_8 1.0 mode81074
	
	INPUT_DEVICE READY_RAW layer1074 no1074 0 mode81074 0
    JR_LTEQF VGV_G 70.0 else1075_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1076 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1076:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif1075
  else1075_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1078 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1078:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1079 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1079:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else1075_2:
  endif1075:
    JR endif1071
  else1071_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1082_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1082_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1084 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1084:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB1085 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB1085:
  else1082_1:
  endif1082:
  else1071_2:
  endif1071:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1086 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1086:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer1089
	DATA8 nos1089
	DATA8 busy1089
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1089 nos1089
	JR_EQ8 0 nos1089 motornotbusy1089
  motorwaiting1089:
	OUTPUT_TEST layer1089 nos1089 busy1089
	JR_EQ8 busy1089 0 motornotbusy1089
	SLEEP
	JR motorwaiting1089
  motornotbusy1089:
    ADDF VGV_A 7.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1092:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 310.0 endwhile1092
  whilebody1092:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB1094 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB1094:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 310.0 whilebody1092
  endwhile1092:
    MOVEF_F 105.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1096 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1096:
    DATA8 layer1097
	DATA8 no1097
	DATA8 mode81097
	
	MOVEF_8 VGV_LEFT_SENSOR no1097
	SUB8 no1097 1 no1097
	DIV8 no1097 4 layer1097
	MATH MOD8 no1097 4 no1097

	MOVEF_8 1.0 mode81097
	
	INPUT_DEVICE READY_RAW layer1097 no1097 0 mode81097 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1099 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1099:
    JR_LTEQF VGV_B 55.0 else1100_1
    DATA8 layer1101
	DATA8 no1101
	DATA8 mode81101
	
	MOVEF_8 VGV_LEFT_SENSOR no1101
	SUB8 no1101 1 no1101
	DIV8 no1101 4 layer1101
	MATH MOD8 no1101 4 no1101

	MOVEF_8 2.0 mode81101
	
	INPUT_DEVICE READY_RAW layer1101 no1101 0 mode81101 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1103
	DATA8 no1103
	DATA8 mode81103
	
	MOVEF_8 VGV_LEFT_SENSOR no1103
	SUB8 no1103 1 no1103
	DIV8 no1103 4 layer1103
	MATH MOD8 no1103 4 no1103

	MOVEF_8 1.0 mode81103
	
	INPUT_DEVICE READY_RAW layer1103 no1103 0 mode81103 0
    JR_LTEQF VGV_G 70.0 else1104_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1105:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif1104
  else1104_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1107:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1108:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1109:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1110:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else1104_2:
  endif1104:
    JR endif1100
  else1100_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1113_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1113_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1115:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1116:
  else1113_1:
  endif1113:
  else1100_2:
  endif1100:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1117 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1117:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1118_1
    WRITE32 ENDSUB_F_KICK_NEW_FIRE_0:CALLSUB1120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_NEW_FIRE_0
CALLSUB1120:
  else1118_1:
  endif1118:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1121:
    DATA8 layer1122
	DATA8 no1122
	DATA8 mode81122
	
	MOVEF_8 VGV_LINE_SENSOR no1122
	SUB8 no1122 1 no1122
	DIV8 no1122 4 layer1122
	MATH MOD8 no1122 4 no1122

	MOVEF_8 0.0 mode81122
	
	INPUT_DEVICE READY_RAW layer1122 no1122 0 mode81122 0
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'False'

	DATA8 layer1125
	DATA8 nos1125
	DATA8 busy1125
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1125 nos1125
	JR_EQ8 0 nos1125 motornotbusy1125
  motorwaiting1125:
	OUTPUT_TEST layer1125 nos1125 busy1125
	JR_EQ8 busy1125 0 motornotbusy1125
	SLEEP
	JR motorwaiting1125
  motornotbusy1125:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1129:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile1129
  whilebody1129:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody1129
  endwhile1129:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1132:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 200.0 0.0 'False' 

	DATA8 layer1134
	DATA8 nos1134
	DATA8 busy1134
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1134 nos1134
	JR_EQ8 0 nos1134 motornotbusy1134
  motorwaiting1134:
	OUTPUT_TEST layer1134 nos1134 busy1134
	JR_EQ8 busy1134 0 motornotbusy1134
	SLEEP
	JR motorwaiting1134
  motornotbusy1134:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
  while1137:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile1137
  whilebody1137:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody1137
  endwhile1137:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer1141
	DATA8 nos1141
	DATA8 busy1141
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1141 nos1141
	JR_EQ8 0 nos1141 motornotbusy1141
  motorwaiting1141:
	OUTPUT_TEST layer1141 nos1141 busy1141
	JR_EQ8 busy1141 0 motornotbusy1141
	SLEEP
	JR motorwaiting1141
  motornotbusy1141:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1142:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1144:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile1144
  whilebody1144:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB1146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB1146:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody1144
  endwhile1144:
  while1148:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 5.0 endwhile1148
  whilebody1148:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB1150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB1150:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 5.0 whilebody1148
  endwhile1148:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1152:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer1155
	DATA8 nos1155
	DATA8 busy1155
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1155 nos1155
	JR_EQ8 0 nos1155 motornotbusy1155
  motorwaiting1155:
	OUTPUT_TEST layer1155 nos1155 busy1155
	JR_EQ8 busy1155 0 motornotbusy1155
	SLEEP
	JR motorwaiting1155
  motornotbusy1155:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1156:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1157:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1160
	DATA8 nos1160
	DATA8 busy1160
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1160 nos1160
	JR_EQ8 0 nos1160 motornotbusy1160
  motorwaiting1160:
	OUTPUT_TEST layer1160 nos1160 busy1160
	JR_EQ8 busy1160 0 motornotbusy1160
	SLEEP
	JR motorwaiting1160
  motornotbusy1160:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1161:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1162:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 25.0 'False'

	DATA8 layer1165
	DATA8 nos1165
	DATA8 busy1165
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1165 nos1165
	JR_EQ8 0 nos1165 motornotbusy1165
  motorwaiting1165:
	OUTPUT_TEST layer1165 nos1165 busy1165
	JR_EQ8 busy1165 0 motornotbusy1165
	SLEEP
	JR motorwaiting1165
  motornotbusy1165:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1167:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile1167
  whilebody1167:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF F.0 17.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf1173
    DATA8 flag1173
    DIVF F.0 10.0 tmpf1173
    CP_EQF 0.0 10.0 flag1173
    SELECTF flag1173 0.0 tmpf1173 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 20.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -20.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody1167
  endwhile1167:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 135.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 135.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1183:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1184:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1185:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1187:
    JR_LTEQF VGV_B 60.0 else1188_1
    DATA8 layer1189
	DATA8 no1189
	DATA8 mode81189
	
	MOVEF_8 VGV_LEFT_SENSOR no1189
	SUB8 no1189 1 no1189
	DIV8 no1189 4 layer1189
	MATH MOD8 no1189 4 no1189

	MOVEF_8 2.0 mode81189
	
	INPUT_DEVICE READY_RAW layer1189 no1189 0 mode81189 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1190:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1192
	DATA8 no1192
	DATA8 mode81192
	
	MOVEF_8 VGV_LEFT_SENSOR no1192
	SUB8 no1192 1 no1192
	DIV8 no1192 4 layer1192
	MATH MOD8 no1192 4 no1192

	MOVEF_8 1.0 mode81192
	
	INPUT_DEVICE READY_RAW layer1192 no1192 0 mode81192 0
    JR_LTEQF VGV_G 80.0 else1193_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1194:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif1193
  else1193_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'FIre' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1196:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1197:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else1193_2:
  endif1193:
    JR endif1188
  else1188_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1200_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1200_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1202:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1203:
    MULF 10.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 10.0 0.0 'True' 

	DATA8 layer1205
	DATA8 nos1205
	DATA8 busy1205
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1205 nos1205
	JR_EQ8 0 nos1205 motornotbusy1205
  motorwaiting1205:
	OUTPUT_TEST layer1205 nos1205 busy1205
	JR_EQ8 busy1205 0 motornotbusy1205
	SLEEP
	JR motorwaiting1205
  motornotbusy1205:
  else1200_1:
  endif1200:
  else1188_2:
  endif1188:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1206:
    MOVEF_F 710.0 VGV_C
    STRINGS DUPLICATE 'unknown' VGV_YELLOW_OBJECT
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1207_1
    CALL EQ_STRING VGV_WHITE 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1207_1
    STRINGS DUPLICATE 'unknown' VGV_YELLOW_OBJECT
    JR_NEQF VGV_MEN_COUNT 1.0 else1210_1
    STRINGS DUPLICATE 'man' VGV_YELLOW_OBJECT
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif1210
  else1210_1:
    JR_NEQF VGV_FIRE_COUNT 1.0 else1210_2
    STRINGS DUPLICATE 'fire' VGV_YELLOW_OBJECT
    JR endif1210
  else1210_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1210_3
    STRINGS DUPLICATE 'chem' VGV_YELLOW_OBJECT
    JR endif1210
  else1210_3:
    JR_NEQF VGV_MEN_COUNT 2.0 else1210_4
    JR_NEQF VGV_FIRE_COUNT 2.0 else1210_4
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1210_4
    STRINGS DUPLICATE 'none' VGV_YELLOW_OBJECT
  else1210_4:
  endif1210:
  else1207_1:
  endif1207:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or1214
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1213_1
  or1214:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 20.0 VLV_MIN_POWER_5
    MOVEF_F 515.0 VLV_DEG_5
    MOVEF_F 200.0 VLV_ACCELERATION_5
    MOVEF_F 200.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1217:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1218:
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1219_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1221:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1223:
    JR_LTEQF VGV_B 50.0 else1224_1
    DATA8 layer1225
	DATA8 no1225
	DATA8 mode81225
	
	MOVEF_8 VGV_LEFT_SENSOR no1225
	SUB8 no1225 1 no1225
	DIV8 no1225 4 layer1225
	MATH MOD8 no1225 4 no1225

	MOVEF_8 2.0 mode81225
	
	INPUT_DEVICE READY_RAW layer1225 no1225 0 mode81225 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1226:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1228
	DATA8 no1228
	DATA8 mode81228
	
	MOVEF_8 VGV_LEFT_SENSOR no1228
	SUB8 no1228 1 no1228
	DIV8 no1228 4 layer1228
	MATH MOD8 no1228 4 no1228

	MOVEF_8 1.0 mode81228
	
	INPUT_DEVICE READY_RAW layer1228 no1228 0 mode81228 0
    JR_LTEQF VGV_G 70.0 else1229_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1230:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif1229
  else1229_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1232:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1233:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1234:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1235:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else1229_2:
  endif1229:
    JR endif1224
  else1224_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds1241
	MOVEF_32 3000.0 milliseconds1241
	DATA32 timer1241
	TIMER_WAIT milliseconds1241 timer1241
	TIMER_READY timer1241
    JR_GTEQF VGV_ULTRA 85.0 else1242_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1242_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1244:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1245:
  else1242_1:
  endif1242:
  else1224_2:
  endif1224:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1246:
  else1219_1:
  endif1219:
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1247_1
    WRITE32 ENDSUB_F_KICK_NEW_FIRE_0:CALLSUB1249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_NEW_FIRE_0
CALLSUB1249:
  else1247_1:
  endif1247:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1250_1
    STRINGS DUPLICATE 'unknown' VGV_YELLOW_OBJECT
    JR_NEQF VGV_MEN_COUNT 1.0 else1252_1
    STRINGS DUPLICATE 'man' VGV_YELLOW_OBJECT
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif1252
  else1252_1:
    JR_NEQF VGV_FIRE_COUNT 1.0 else1252_2
    STRINGS DUPLICATE 'fire' VGV_YELLOW_OBJECT
    JR endif1252
  else1252_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1252_3
    STRINGS DUPLICATE 'chem' VGV_YELLOW_OBJECT
    JR endif1252
  else1252_3:
    JR_NEQF VGV_MEN_COUNT 2.0 else1252_4
    JR_NEQF VGV_FIRE_COUNT 2.0 else1252_4
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1252_4
    STRINGS DUPLICATE 'none' VGV_YELLOW_OBJECT
  else1252_4:
  endif1252:
  else1250_1:
  endif1250:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1255_1
    CALL EQ_STRING VGV_YELLOW_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1257_1
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 30.0 0.0 'True' 

	DATA8 layer1260
	DATA8 nos1260
	DATA8 busy1260
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1260 nos1260
	JR_EQ8 0 nos1260 motornotbusy1260
  motorwaiting1260:
	OUTPUT_TEST layer1260 nos1260 busy1260
	JR_EQ8 busy1260 0 motornotbusy1260
	SLEEP
	JR motorwaiting1260
  motornotbusy1260:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 80.0 VLV_DEG_5
    MOVEF_F 40.0 VLV_ACCELERATION_5
    MOVEF_F 40.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1261:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1262:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1263:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 80.0 VLV_DEG_6
    MOVEF_F 40.0 VLV_ACCELERATION_6
    MOVEF_F 40.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB1264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB1264:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1265:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 35.0 0.0 'True' 

	DATA8 layer1267
	DATA8 nos1267
	DATA8 busy1267
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1267 nos1267
	JR_EQ8 0 nos1267 motornotbusy1267
  motorwaiting1267:
	OUTPUT_TEST layer1267 nos1267 busy1267
	JR_EQ8 busy1267 0 motornotbusy1267
	SLEEP
	JR motorwaiting1267
  motornotbusy1267:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1268:
    JR endif1257
  else1257_1:
    CALL EQ_STRING VGV_YELLOW_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1257_2
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 160.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1270:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1271:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB1272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB1272:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 160.0 VLV_DEG_6
    MOVEF_F 70.0 VLV_ACCELERATION_6
    MOVEF_F 70.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB1273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB1273:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1274:
    STRINGS DUPLICATE 'True' VGV_CHEM
    JR endif1257
  else1257_2:
    CALL EQ_STRING VGV_YELLOW_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1257_3
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif1257
  else1257_3:
    CALL EQ_STRING VGV_YELLOW_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1257_4
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 30.0 0.0 'True' 

	DATA8 layer1278
	DATA8 nos1278
	DATA8 busy1278
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1278 nos1278
	JR_EQ8 0 nos1278 motornotbusy1278
  motorwaiting1278:
	OUTPUT_TEST layer1278 nos1278 busy1278
	JR_EQ8 busy1278 0 motornotbusy1278
	SLEEP
	JR motorwaiting1278
  motornotbusy1278:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 100.0 VLV_DEG_5
    MOVEF_F 40.0 VLV_ACCELERATION_5
    MOVEF_F 40.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1279:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1280:
    CALL MOTOR.START VGV_WATER_MOTOR -50.0
    DATA32 milliseconds1282
	MOVEF_32 1000.0 milliseconds1282
	DATA32 timer1282
	TIMER_WAIT milliseconds1282 timer1282
	TIMER_READY timer1282
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 100.0 VLV_DEG_6
    MOVEF_F 40.0 VLV_ACCELERATION_6
    MOVEF_F 40.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB1284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB1284:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1285:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 35.0 0.0 'True' 

	DATA8 layer1287
	DATA8 nos1287
	DATA8 busy1287
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1287 nos1287
	JR_EQ8 0 nos1287 motornotbusy1287
  motorwaiting1287:
	OUTPUT_TEST layer1287 nos1287 busy1287
	JR_EQ8 busy1287 0 motornotbusy1287
	SLEEP
	JR motorwaiting1287
  motornotbusy1287:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1288:
  else1257_4:
  endif1257:
    STRINGS DUPLICATE 'True' VGV_YELLOW
  else1255_1:
  endif1255:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 165.0 'True'

	DATA8 layer1291
	DATA8 nos1291
	DATA8 busy1291
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1291 nos1291
	JR_EQ8 0 nos1291 motornotbusy1291
  motorwaiting1291:
	OUTPUT_TEST layer1291 nos1291 busy1291
	JR_EQ8 busy1291 0 motornotbusy1291
	SLEEP
	JR motorwaiting1291
  motornotbusy1291:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB1292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB1292:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 380.0 'True'

	DATA8 layer1295
	DATA8 nos1295
	DATA8 busy1295
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1295 nos1295
	JR_EQ8 0 nos1295 motornotbusy1295
  motorwaiting1295:
	OUTPUT_TEST layer1295 nos1295 busy1295
	JR_EQ8 busy1295 0 motornotbusy1295
	SLEEP
	JR motorwaiting1295
  motornotbusy1295:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB1296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB1296:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 300.0 VLV_DEG_5
    MOVEF_F 100.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1297:
    JR endif1213
  else1213_1:
    MOVEF_F 200.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1298:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 370.0 'True'

	DATA8 layer1301
	DATA8 nos1301
	DATA8 busy1301
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1301 nos1301
	JR_EQ8 0 nos1301 motornotbusy1301
  motorwaiting1301:
	OUTPUT_TEST layer1301 nos1301 busy1301
	JR_EQ8 busy1301 0 motornotbusy1301
	SLEEP
	JR motorwaiting1301
  motornotbusy1301:
    SUBF VGV_C 220.0 VGV_C
  else1213_2:
  endif1213:
    MOVEF_F 490.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1304:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile1304
  whilebody1304:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB1306 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB1306:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody1304
  endwhile1304:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB1308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB1308:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1309_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 115.0 0.0 'True' 

	DATA8 layer1311
	DATA8 nos1311
	DATA8 busy1311
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1311 nos1311
	JR_EQ8 0 nos1311 motornotbusy1311
  motorwaiting1311:
	OUTPUT_TEST layer1311 nos1311 busy1311
	JR_EQ8 busy1311 0 motornotbusy1311
	SLEEP
	JR motorwaiting1311
  motornotbusy1311:
  else1309_1:
  endif1309:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1312:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 300.0 VLV_DEG_6
    MOVEF_F 100.0 VLV_ACCELERATION_6
    MOVEF_F 100.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB1313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB1313:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1314:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1315_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer1317
	DATA8 nos1317
	DATA8 busy1317
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1317 nos1317
	JR_EQ8 0 nos1317 motornotbusy1317
  motorwaiting1317:
	OUTPUT_TEST layer1317 nos1317 busy1317
	JR_EQ8 busy1317 0 motornotbusy1317
	SLEEP
	JR motorwaiting1317
  motornotbusy1317:
  else1315_1:
  endif1315:
    CALL EQ_STRING VGV_START_FROM_RIGHT 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1318_1
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1322
	DATA8 nos1322
	DATA8 busy1322
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1322 nos1322
	JR_EQ8 0 nos1322 motornotbusy1322
  motorwaiting1322:
	OUTPUT_TEST layer1322 nos1322 busy1322
	JR_EQ8 busy1322 0 motornotbusy1322
	SLEEP
	JR motorwaiting1322
  motornotbusy1322:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1326
	MOVEF_32 2000.0 milliseconds1326
	DATA32 timer1326
	TIMER_WAIT milliseconds1326 timer1326
	TIMER_READY timer1326
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1327:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 220.0 'True'

	DATA8 layer1330
	DATA8 nos1330
	DATA8 busy1330
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1330 nos1330
	JR_EQ8 0 nos1330 motornotbusy1330
  motorwaiting1330:
	OUTPUT_TEST layer1330 nos1330 busy1330
	JR_EQ8 busy1330 0 motornotbusy1330
	SLEEP
	JR motorwaiting1330
  motornotbusy1330:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1332
	DATA8 nos1332
	DATA8 busy1332
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1332 nos1332
	JR_EQ8 0 nos1332 motornotbusy1332
  motorwaiting1332:
	OUTPUT_TEST layer1332 nos1332 busy1332
	JR_EQ8 busy1332 0 motornotbusy1332
	SLEEP
	JR motorwaiting1332
  motornotbusy1332:
    MOVEF_F 107.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1334:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 1000.0 endwhile1334
  whilebody1334:
    WRITE32 ENDSUB_F_ULTRASONIC_SUPERFAST_0:CALLSUB1336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SUPERFAST_0
CALLSUB1336:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 1000.0 whilebody1334
  endwhile1334:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1341
	MOVEF_32 3000.0 milliseconds1341
	DATA32 timer1341
	TIMER_WAIT milliseconds1341 timer1341
	TIMER_READY timer1341
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1342:
    WRITE32 ENDSUB_F_TAKES_NORMAL_0:CALLSUB1343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKES_NORMAL_0
CALLSUB1343:
    JR endif1318
  else1318_1:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1346
	DATA8 nos1346
	DATA8 busy1346
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1346 nos1346
	JR_EQ8 0 nos1346 motornotbusy1346
  motorwaiting1346:
	OUTPUT_TEST layer1346 nos1346 busy1346
	JR_EQ8 busy1346 0 motornotbusy1346
	SLEEP
	JR motorwaiting1346
  motornotbusy1346:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1350
	MOVEF_32 2000.0 milliseconds1350
	DATA32 timer1350
	TIMER_WAIT milliseconds1350 timer1350
	TIMER_READY timer1350
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1351:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 190.0 0.0 'True' 

	DATA8 layer1353
	DATA8 nos1353
	DATA8 busy1353
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1353 nos1353
	JR_EQ8 0 nos1353 motornotbusy1353
  motorwaiting1353:
	OUTPUT_TEST layer1353 nos1353 busy1353
	JR_EQ8 busy1353 0 motornotbusy1353
	SLEEP
	JR motorwaiting1353
  motornotbusy1353:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 140.0 0.0 'True' 

	DATA8 layer1355
	DATA8 nos1355
	DATA8 busy1355
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1355 nos1355
	JR_EQ8 0 nos1355 motornotbusy1355
  motorwaiting1355:
	OUTPUT_TEST layer1355 nos1355 busy1355
	JR_EQ8 busy1355 0 motornotbusy1355
	SLEEP
	JR motorwaiting1355
  motornotbusy1355:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer1357
	DATA8 nos1357
	DATA8 busy1357
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1357 nos1357
	JR_EQ8 0 nos1357 motornotbusy1357
  motorwaiting1357:
	OUTPUT_TEST layer1357 nos1357 busy1357
	JR_EQ8 busy1357 0 motornotbusy1357
	SLEEP
	JR motorwaiting1357
  motornotbusy1357:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer1359
	DATA8 nos1359
	DATA8 busy1359
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1359 nos1359
	JR_EQ8 0 nos1359 motornotbusy1359
  motorwaiting1359:
	OUTPUT_TEST layer1359 nos1359 busy1359
	JR_EQ8 busy1359 0 motornotbusy1359
	SLEEP
	JR motorwaiting1359
  motornotbusy1359:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 93.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1364:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 1050.0 endwhile1364
  whilebody1364:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 1050.0 whilebody1364
  endwhile1364:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1370
	MOVEF_32 3000.0 milliseconds1370
	DATA32 timer1370
	TIMER_WAIT milliseconds1370 timer1370
	TIMER_READY timer1370
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1371:
    WRITE32 ENDSUB_F_TAKES_INVERSED_0:CALLSUB1372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKES_INVERSED_0
CALLSUB1372:
  else1318_2:
  endif1318:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 20.0 'True'

	DATA8 layer1375
	DATA8 nos1375
	DATA8 busy1375
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1375 nos1375
	JR_EQ8 0 nos1375 motornotbusy1375
  motorwaiting1375:
	OUTPUT_TEST layer1375 nos1375 busy1375
	JR_EQ8 busy1375 0 motornotbusy1375
	SLEEP
	JR motorwaiting1375
  motornotbusy1375:
    TIMER_READ timeMC9tmp
	SUB32 timeMC9tmp timeMC9 timeMC9tmp
	MOVE32_F timeMC9tmp VGV_T
    DATAF tmpf1377
    DATA8 flag1377
    DIVF VGV_T 60000.0 tmpf1377
    CP_EQF 0.0 60000.0 flag1377
    SELECTF flag1377 0.0 tmpf1377 F.0

    MATH FLOOR F.0 VGV_MINS
    MATH MOD VGV_T 60000.0 F.1
    DATAF tmpf1380
    DATA8 flag1380
    DIVF F.1 1000.0 tmpf1380
    CP_EQF 0.0 1000.0 flag1380
    SELECTF flag1380 0.0 tmpf1380 F.0

    MATH FLOOR F.0 VGV_SECS
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MINS '%g' 99 S.1
    CALL TEXT.APPEND S.1 ':' S.0
    STRINGS VALUE_FORMATTED VGV_SECS '%g' 99 S.1
    CALL TEXT.APPEND S.0 S.1 VGV_STR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_STR
    DATA32 milliseconds1388
	MOVEF_32 100000000.0 milliseconds1388
	DATA32 timer1388
	TIMER_WAIT milliseconds1388 timer1388
	TIMER_READY timer1388
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_ULTRASONIC_POWER_2:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VLV_V_1
    SUBF VLV_V_1 VLV_U_1 VLV_NOWERROR_1
    SUBF VGV_LASTERROR VLV_NOWERROR_1 VLV_DIF_1
    ADDF VGV_INTEGRAL VLV_NOWERROR_1 F.0
    DATAF tmpf1393
    DATA8 flag1393
    DIVF F.0 10.0 tmpf1393
    CP_EQF 0.0 10.0 flag1393
    SELECTF flag1393 0.0 tmpf1393 VLV_INTEGRAL_1

    SUBF VLV_NOWERROR_1 VGV_LASTERROR VLV_DERIVATIVE_1
    MULF VLV_NOWERROR_1 VGV_P_U F.0
    MULF VLV_INTEGRAL_1 VGV_D_U F.1
    ADDF F.0 F.1 VLV_UP_1
    ADDF VLV_POWER_1 VLV_UP_1 F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF VLV_POWER_1 VLV_UP_1 F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VLV_NOWERROR_1 VLV_LASTERROR_1
RETSUB_F_ULTRASONIC_POWER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_POWER_2:
SUB_F_AFTER_ACTION_0:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1404:
    DATA32 milliseconds1405
	MOVEF_32 300.0 milliseconds1405
	DATA32 timer1405
	TIMER_WAIT milliseconds1405 timer1405
	TIMER_READY timer1405
RETSUB_F_AFTER_ACTION_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_AFTER_ACTION_0:
SUB_F_ULTRASONIC_ZAMED_5:
    SUBF VLV_DEGREES_3 VLV_ZAMED_DEGREES_3 VLV_NORMAL_DEGREES_3
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1408:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VLV_NORMAL_DEGREES_3 endwhile1408
  whilebody1408:
    MOVEF_F VLV_BASE_POWER_3 VLV_POWER_1
    MOVEF_F VLV_U_3 VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB1410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB1410:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VLV_NORMAL_DEGREES_3 whilebody1408
  endwhile1408:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_3
  while1414:
    JR_GTEQF VLV_C_3 VLV_ZAMED_DEGREES_3 endwhile1414
  whilebody1414:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.1
    DATAF tmpf1416
    DATA8 flag1416
    DIVF F.1 VLV_ZAMED_DEGREES_3 tmpf1416
    CP_EQF 0.0 VLV_ZAMED_DEGREES_3 flag1416
    SELECTF flag1416 0.0 tmpf1416 F.0

    MULF F.0 VLV_BASE_POWER_3 VLV_MINUS_3
    SUBF VLV_BASE_POWER_3 VLV_MINUS_3 VLV_POWER_3
    JR_GTEQF VLV_POWER_3 VLV_MIN_POWER_3 else1419_1
    MOVEF_F VLV_MIN_POWER_3 VLV_POWER_3
  else1419_1:
  endif1419:
    MOVEF_F VLV_POWER_3 VLV_POWER_1
    MOVEF_F VLV_U_3 VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB1420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB1420:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_3
    JR_LTF VLV_C_3 VLV_ZAMED_DEGREES_3 whilebody1414
  endwhile1414:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1422:
RETSUB_F_ULTRASONIC_ZAMED_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_ZAMED_5:
SUB_F_RESET_0:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_MOVE_FORWARD_ACCELERATION_5:
    SUBF VLV_DEG_5 VLV_ACCELERATION_5 F.0
    SUBF F.0 VLV_ZAME_5 VLV_NORMAL_DEGREES_5
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1427:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
  while1429:
    JR_GTEQF VLV_C_5 VLV_ACCELERATION_5 endwhile1429
  whilebody1429:
    DATAF tmpf1430
    DATA8 flag1430
    DIVF VLV_C_5 VLV_ACCELERATION_5 tmpf1430
    CP_EQF 0.0 VLV_ACCELERATION_5 flag1430
    SELECTF flag1430 0.0 tmpf1430 VLV_P_5

    SUBF VLV_BASE_POWER_5 VLV_MIN_POWER_5 F.1
    MULF VLV_P_5 F.1 F.0
    ADDF F.0 VLV_MIN_POWER_5 VLV_POWER_5
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_P_5 VLV_DELTA_5
    SUBF VLV_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
    JR_LTF VLV_C_5 VLV_ACCELERATION_5 whilebody1429
  endwhile1429:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1446:
    MOVEF_F 0.0 VLV_C_5
  while1447:
    JR_GTEQF VLV_C_5 VLV_NORMAL_DEGREES_5 endwhile1447
  whilebody1447:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 1.0 VLV_DELTA_5
    SUBF VLV_BASE_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_BASE_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
    JR_LTF VLV_C_5 VLV_NORMAL_DEGREES_5 whilebody1447
  endwhile1447:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1460 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1460:
    MOVEF_F 0.0 VLV_C_5
  while1461:
    JR_GTEQF VLV_C_5 VLV_ZAME_5 endwhile1461
  whilebody1461:
    DATAF tmpf1462
    DATA8 flag1462
    DIVF VLV_C_5 VLV_ZAME_5 tmpf1462
    CP_EQF 0.0 VLV_ZAME_5 flag1462
    SELECTF flag1462 0.0 tmpf1462 VLV_P_5

    SUBF VLV_BASE_POWER_5 VLV_MIN_POWER_5 F.1
    SUBF 1.0 VLV_P_5 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_5 VLV_POWER_5
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    SUBF 1.0 VLV_P_5 F.1
    MULF F.0 F.1 VLV_DELTA_5
    SUBF VLV_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
    JR_LTF VLV_C_5 VLV_ZAME_5 whilebody1461
  endwhile1461:
RETSUB_F_MOVE_FORWARD_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:
SUB_F_MOVE_BACKWARD_ACCELERATION_5:
    SUBF VLV_DEG_6 VLV_ACCELERATION_6 F.0
    SUBF F.0 VLV_ZAME_6 VLV_NORMAL_DEGREES_6
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1482:
    MOVEF_F 0.0 VLV_C_6
  while1483:
    JR_GTEQF VLV_C_6 VLV_ACCELERATION_6 endwhile1483
  whilebody1483:
    DATAF tmpf1484
    DATA8 flag1484
    DIVF VLV_C_6 VLV_ACCELERATION_6 tmpf1484
    CP_EQF 0.0 VLV_ACCELERATION_6 flag1484
    SELECTF flag1484 0.0 tmpf1484 VLV_P_6

    SUBF VLV_BASE_POWER_6 VLV_MIN_POWER_6 F.1
    MULF VLV_P_6 F.1 F.0
    ADDF F.0 VLV_MIN_POWER_6 VLV_POWER_6
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.4
    MULF F.4 VGV_RIGHT_FORWARD F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_P_6 F.0
    MULF F.0 -1.0 VLV_DELTA_6
    SUBF VLV_POWER_6 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF VLV_POWER_6 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_6 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_6 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_6
    JR_LTF VLV_C_6 VLV_ACCELERATION_6 whilebody1483
  endwhile1483:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1504:
    MOVEF_F 0.0 VLV_C_6
  while1505:
    JR_GTEQF VLV_C_6 VLV_NORMAL_DEGREES_6 endwhile1505
  whilebody1505:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 -1.0 VLV_DELTA_6
    SUBF VLV_BASE_POWER_6 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF VLV_BASE_POWER_6 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_6 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_6 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_6
    JR_LTF VLV_C_6 VLV_NORMAL_DEGREES_6 whilebody1505
  endwhile1505:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1521:
    MOVEF_F 0.0 VLV_C_6
  while1522:
    JR_GTEQF VLV_C_6 VLV_ZAME_6 endwhile1522
  whilebody1522:
    DATAF tmpf1523
    DATA8 flag1523
    DIVF VLV_C_6 VLV_ZAME_6 tmpf1523
    CP_EQF 0.0 VLV_ZAME_6 flag1523
    SELECTF flag1523 0.0 tmpf1523 VLV_P_6

    SUBF VLV_BASE_POWER_6 VLV_MIN_POWER_6 F.1
    SUBF 1.0 VLV_P_6 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_6 VLV_POWER_6
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.4
    MULF F.4 VGV_RIGHT_FORWARD F.3
    SUBF F.2 F.3 F.1
    SUBF 1.0 VLV_P_6 F.2
    MULF F.1 F.2 F.0
    MULF F.0 -1.0 VLV_DELTA_6
    SUBF VLV_POWER_6 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF VLV_POWER_6 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_6 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_6 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_6
    JR_LTF VLV_C_6 VLV_ZAME_6 whilebody1522
  endwhile1522:
RETSUB_F_MOVE_BACKWARD_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:
SUB_F_MOTOR_FORWARD_ACCELERATION_7:
    SUBF VLV_DEG_7 VLV_ACCELERATION_7 F.0
    SUBF F.0 VLV_ZAME_7 VLV_NORMAL_DEG_7
    CALL MOTOR.RESETCOUNT VLV_MOTOR_7
    MOVEF_F 0.0 VLV_C_7
  while1548:
    JR_GTEQF VLV_C_7 VLV_ACCELERATION_7 endwhile1548
  whilebody1548:
    DATAF tmpf1549
    DATA8 flag1549
    DIVF VLV_C_7 VLV_ACCELERATION_7 tmpf1549
    CP_EQF 0.0 VLV_ACCELERATION_7 flag1549
    SELECTF flag1549 0.0 tmpf1549 VLV_P_7

    SUBF VLV_BASE_POWER_7 VLV_MIN_POWER_7 F.1
    MULF F.1 VLV_P_7 F.0
    ADDF F.0 VLV_MIN_POWER_7 VLV_POWER_7
    MATH FLOOR VLV_POWER_7 F.0
    MULF F.0 VLV_FORWARD_7 VLV_POWER_7
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_POWER_7 '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    CALL MOTOR.START VLV_MOTOR_7 VLV_POWER_7
    CALL MOTOR.GETCOUNT VLV_MOTOR_7 F.0
    MULF F.0 VLV_FORWARD_7 VLV_C_7
    DATA32 milliseconds1563
	MOVEF_32 10.0 milliseconds1563
	DATA32 timer1563
	TIMER_WAIT milliseconds1563 timer1563
	TIMER_READY timer1563
    JR_LTF VLV_C_7 VLV_ACCELERATION_7 whilebody1548
  endwhile1548:
    MULF VLV_BASE_POWER_7 VLV_FORWARD_7 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_7 F.0 0.0 VLV_NORMAL_DEG_7 0.0 'False' 

	DATA8 layer1565
	DATA8 nos1565
	DATA8 busy1565
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_7 layer1565 nos1565
	JR_EQ8 0 nos1565 motornotbusy1565
  motorwaiting1565:
	OUTPUT_TEST layer1565 nos1565 busy1565
	JR_EQ8 busy1565 0 motornotbusy1565
	SLEEP
	JR motorwaiting1565
  motornotbusy1565:
    CALL MOTOR.RESETCOUNT VLV_MOTOR_7
    MOVEF_F 0.0 VLV_C_7
  while1567:
    JR_GTEQF VLV_C_7 VLV_ZAME_7 endwhile1567
  whilebody1567:
    DATAF tmpf1568
    DATA8 flag1568
    DIVF VLV_C_7 VLV_ZAME_7 tmpf1568
    CP_EQF 0.0 VLV_ZAME_7 flag1568
    SELECTF flag1568 0.0 tmpf1568 VLV_P_7

    SUBF VLV_BASE_POWER_7 VLV_MIN_POWER_7 F.1
    SUBF 1.0 VLV_P_7 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_7 VLV_POWER_7
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_POWER_7 '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    MULF VLV_POWER_7 VLV_FORWARD_7 F.0
    CALL MOTOR.START VLV_MOTOR_7 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_7 F.0
    MULF F.0 VLV_FORWARD_7 VLV_C_7
    DATA32 milliseconds1582
	MOVEF_32 10.0 milliseconds1582
	DATA32 timer1582
	TIMER_WAIT milliseconds1582 timer1582
	TIMER_READY timer1582
    JR_LTF VLV_C_7 VLV_ZAME_7 whilebody1567
  endwhile1567:
RETSUB_F_MOTOR_FORWARD_ACCELERATION_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:
SUB_F_MOTOR_BACKWARD_ACCELERATION_7:
    SUBF VLV_DEG_8 VLV_ACCELERATION_8 F.0
    SUBF F.0 VLV_ZAME_8 VLV_NORMAL_DEG_8
    CALL MOTOR.RESETCOUNT VLV_MOTOR_8
    MOVEF_F 0.0 VLV_C_8
  while1586:
    JR_GTEQF VLV_C_8 VLV_ACCELERATION_8 endwhile1586
  whilebody1586:
    DATAF tmpf1587
    DATA8 flag1587
    DIVF VLV_C_8 VLV_ACCELERATION_8 tmpf1587
    CP_EQF 0.0 VLV_ACCELERATION_8 flag1587
    SELECTF flag1587 0.0 tmpf1587 F.1

    SUBF VLV_BASE_POWER_8 VLV_MIN_POWER_8 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_8 VLV_POWER_8
    MULF VLV_FORWARD_8 VLV_POWER_8 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VLV_MOTOR_8 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_8 F.1
    MULF F.1 VLV_FORWARD_8 F.0
    MULF F.0 -1.0 VLV_C_8
    DATA32 milliseconds1597
	MOVEF_32 10.0 milliseconds1597
	DATA32 timer1597
	TIMER_WAIT milliseconds1597 timer1597
	TIMER_READY timer1597
    JR_LTF VLV_C_8 VLV_ACCELERATION_8 whilebody1586
  endwhile1586:
    MULF VLV_FORWARD_8 VLV_BASE_POWER_8 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_8 F.0 0.0 VLV_NORMAL_DEG_8 0.0 'False' 

	DATA8 layer1600
	DATA8 nos1600
	DATA8 busy1600
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_8 layer1600 nos1600
	JR_EQ8 0 nos1600 motornotbusy1600
  motorwaiting1600:
	OUTPUT_TEST layer1600 nos1600 busy1600
	JR_EQ8 busy1600 0 motornotbusy1600
	SLEEP
	JR motorwaiting1600
  motornotbusy1600:
    CALL MOTOR.RESETCOUNT VLV_MOTOR_8
    MOVEF_F 0.0 VLV_C_8
  while1602:
    JR_GTEQF VLV_C_8 VLV_ZAME_8 endwhile1602
  whilebody1602:
    DATAF tmpf1603
    DATA8 flag1603
    DIVF VLV_C_8 VLV_ZAME_8 tmpf1603
    CP_EQF 0.0 VLV_ZAME_8 flag1603
    SELECTF flag1603 0.0 tmpf1603 VLV_P_8

    SUBF VLV_BASE_POWER_8 VLV_MIN_POWER_8 F.1
    SUBF 1.0 VLV_P_8 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_8 VLV_POWER_8
    MULF VLV_FORWARD_8 VLV_POWER_8 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VLV_MOTOR_8 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_8 F.1
    MULF F.1 VLV_FORWARD_8 F.0
    MULF F.0 -1.0 VLV_C_8
    DATA32 milliseconds1614
	MOVEF_32 10.0 milliseconds1614
	DATA32 timer1614
	TIMER_WAIT milliseconds1614 timer1614
	TIMER_READY timer1614
    JR_LTF VLV_C_8 VLV_ZAME_8 whilebody1602
  endwhile1602:
RETSUB_F_MOTOR_BACKWARD_ACCELERATION_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
