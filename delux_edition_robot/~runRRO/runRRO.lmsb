DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_10
DATAF VLV_MIN_POWER_10
DATAF VLV_DEG_10
DATAF VLV_COEF_10
DATAF VLV_BASE_POWER_14
DATAF VLV_MIN_POWER_14
DATAF VLV_DEG_14
DATAF VLV_COEF_14
DATAS VLV_MOTOR_13 252
DATAF VLV_FORWARD_13
DATAF VLV_DEG_13
DATAF VLV_MAX_POWER_13
DATAS VLV_ACCELERATION_13 252
DATAS VLV_ZAME_13 252
DATAS VLV_TO_STOP_13 252
DATAF VLV_TIME_2
DATAF VLV_PERCENT_5
DATAF VLV_POWER_1
DATAF VLV_A_8
DATAF VLV_DEG_12
DATAF VLV_POWER_12
DATAS VLV_FINISH_FORWARD_15 252
DATAF VLV_POWER_11
DATAF VLV_L_7
DATAS VLV_IS_INVERTED_23 252
DATAS VLV_IS_INVERTED_24 252
DATAS VLV_LONG_21 252
DATAS VLV_NEAR_21 252
DATAS VLV_SHOULD_MOVE_BACKWARD_21 252
DATAS VLV_IS_INVERTED_21 252
DATAS VLV_IS_INVERTED_25 252
DATAS VLV_TO_DELAY_26 252
DATAF VLV_L_6
DATAF VLV_COEF_16
DATAF VLV_COEF_17
DATAS VLV_IS_INVERTED_18 252
DATAS VLV_IS_INVERTED_19 252
DATAF VLV_MINUS_DEG_19
DATAF VLV_MINUS_DEG_20
DATAS VLV_IS_INVERTED_22 252
DATAS VLV_MOTOR1_22 252
DATAS VLV_MOTOR2_22 252
DATAF VLV_FORWARD1_22
DATAF VLV_FORWARD2_22
DATAF VLV_COEF_22
DATAF VGV_P
DATAF VLV_P_20
DATAF VLV_MINUS_DEG_21
DATAS VLV_MOTOR1_23 252
DATAS VLV_MOTOR2_23 252
DATAF VLV_FORWARD1_23
DATAF VLV_FORWARD2_23
DATAF VLV_COEF_23
DATAS VLV_MOTOR1_24 252
DATAS VLV_MOTOR2_24 252
DATAF VLV_FORWARD1_24
DATAF VLV_FORWARD2_24
DATAF VLV_COEF_24
DATAF VLV_P_24
DATAS VLV_MOTOR1_25 252
DATAS VLV_MOTOR2_25 252
DATAF VLV_FORWARD1_25
DATAF VLV_FORWARD2_25
DATAF VLV_COEF_25
DATAF VGV_LINE
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_ULTRASONIC
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERTED_MOTOR 252
DATAS VGV_MOTORS 252
DATAF VGV_LEFT_FORWARD
DATAF VGV_RIGHT_FORWARD
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_MAX
DATAF VGV_LEFT_MIN
DATAF VGV_LAST_ERR
DATAF VGV_LAST_MOTOR_ERR
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_WATER_STATE
DATAF VGV_FIRE_COUNT
DATAF VGV_MEN_COUNT
DATAS VGV_CHEM 252
DATAS VGV_TAKE_CHEM_IN_YELLOW 252
DATAF VGV_CUBES_COUNT
DATAS VGV_START 252
DATAF VGV_A
DATAF VGV_R
DATAS VGV_OBEJCT 252
DATAS VGV_OBJECT 252
DATAF VGV_DEG
DATAF VGV_G
DATAS VGV_TAKE_LEFT 252
DATAS VGV_TAKE_RIGHT 252
DATAF VGV_W
DATAF VGV_ULTRA
DATAS VGV_IS_FIRST_BLUE_OBJECT_CHEM 252
DATAS VGV_IS_SECOND_BLUE_OBJECT_CHEM 252
DATAS VGV_IS_ON_SECOND_BLUE 252
DATAS VGV_WHITE_OBJECT 252
DATAF VGV_MINUS_DEG
DATAS VGV_CH 252
DATAF VLV_ERR_6
DATAF VLV_DIFF_6
DATAF VLV_DELTA_6
DATAF VLV_LEFT_POWER_6
DATAF VLV_RIGHT_POWER_6
DATAF VLV_ERR_7
DATAF VLV_DIFF_7
DATAF VLV_DELTA_7
DATAF VLV_LEFT_POWER_7
DATAF VLV_RIGHT_POWER_7
DATAF VLV_L_8
DATAF VLV_ERR_8
DATAF VLV_DIFF_8
DATAF VLV_DELTA_8
DATAF VLV_LEFT_POWER_8
DATAF VLV_RIGHT_POWER_8
DATAF VLV_L_10
DATAF VLV_P_10
DATAF VLV_POWER_10
DATAF VLV_R_10
DATAF VLV_DELTA_10
DATAF VLV_LEFT_POWER_10
DATAF VLV_RIGHT_POWER_10
DATAF VLV_L_11
DATAF VLV_R_11
DATAF VLV_ERR_11
DATAF VLV_DIFF_11
DATAF VLV_DELTA_11
DATAF VLV_LEFT_POWER_11
DATAF VLV_RIGHT_POWER_11
DATAF VLV_L_12
DATAF VLV_NORMAL_DEG_13
DATAF VLV_ACCELERATION_DEG_13
DATAF VLV_ZAME_DEG_13
DATAF VLV_M_13
DATAF VLV_MIN_POWER_13
DATAF VLV_P_13
DATAF VLV_POWER_13
DATAF VLV_L_14
DATAF VLV_P_14
DATAF VLV_R_14
DATAF VLV_DELTA_14
DATAF VLV_POWER_14
DATAF VLV_LEFT_POWER_14
DATAF VLV_RIGHT_POWER_14
DATAS VLV_CHEM_15 252
DATAS VLV_MOT_18 252
DATAF VLV_FORWARD_18
DATAF VLV_COEF_18
DATAF VLV_COEF_19
DATAF VLV_DEG_20
DATAF VLV_MILLISECOND_26
DATAF VLV_SECONDS_26
DATAF VLV_MINUTES_26
DATAS VLV_TEXT_26 252
DATA32 RUNCOUNTER_F_KICK_WATER_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_10
    MOVEF_F 0.0 VLV_MIN_POWER_10
    MOVEF_F 0.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_COEF_10
    MOVEF_F 0.0 VLV_BASE_POWER_14
    MOVEF_F 0.0 VLV_MIN_POWER_14
    MOVEF_F 0.0 VLV_DEG_14
    MOVEF_F 0.0 VLV_COEF_14
    STRINGS DUPLICATE '' VLV_MOTOR_13
    MOVEF_F 0.0 VLV_FORWARD_13
    MOVEF_F 0.0 VLV_DEG_13
    MOVEF_F 0.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE '' VLV_ACCELERATION_13
    STRINGS DUPLICATE '' VLV_ZAME_13
    STRINGS DUPLICATE '' VLV_TO_STOP_13
    MOVEF_F 0.0 VLV_TIME_2
    MOVEF_F 0.0 VLV_PERCENT_5
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_A_8
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_POWER_12
    STRINGS DUPLICATE '' VLV_FINISH_FORWARD_15
    MOVEF_F 0.0 VLV_POWER_11
    MOVEF_F 0.0 VLV_L_7
    STRINGS DUPLICATE '' VLV_IS_INVERTED_23
    STRINGS DUPLICATE '' VLV_IS_INVERTED_24
    STRINGS DUPLICATE '' VLV_LONG_21
    STRINGS DUPLICATE '' VLV_NEAR_21
    STRINGS DUPLICATE '' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_25
    STRINGS DUPLICATE '' VLV_TO_DELAY_26
    MOVEF_F 0.0 VLV_L_6
    MOVEF_F 0.0 VLV_COEF_16
    MOVEF_F 0.0 VLV_COEF_17
    STRINGS DUPLICATE '' VLV_IS_INVERTED_18
    STRINGS DUPLICATE '' VLV_IS_INVERTED_19
    MOVEF_F 0.0 VLV_MINUS_DEG_19
    MOVEF_F 0.0 VLV_MINUS_DEG_20
    STRINGS DUPLICATE '' VLV_IS_INVERTED_22
    STRINGS DUPLICATE '' VLV_MOTOR1_22
    STRINGS DUPLICATE '' VLV_MOTOR2_22
    MOVEF_F 0.0 VLV_FORWARD1_22
    MOVEF_F 0.0 VLV_FORWARD2_22
    MOVEF_F 0.0 VLV_COEF_22
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VLV_P_20
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    STRINGS DUPLICATE '' VLV_MOTOR1_23
    STRINGS DUPLICATE '' VLV_MOTOR2_23
    MOVEF_F 0.0 VLV_FORWARD1_23
    MOVEF_F 0.0 VLV_FORWARD2_23
    MOVEF_F 0.0 VLV_COEF_23
    STRINGS DUPLICATE '' VLV_MOTOR1_24
    STRINGS DUPLICATE '' VLV_MOTOR2_24
    MOVEF_F 0.0 VLV_FORWARD1_24
    MOVEF_F 0.0 VLV_FORWARD2_24
    MOVEF_F 0.0 VLV_COEF_24
    MOVEF_F 0.0 VLV_P_24
    STRINGS DUPLICATE '' VLV_MOTOR1_25
    STRINGS DUPLICATE '' VLV_MOTOR2_25
    MOVEF_F 0.0 VLV_FORWARD1_25
    MOVEF_F 0.0 VLV_FORWARD2_25
    MOVEF_F 0.0 VLV_COEF_25
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_START
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_R
    STRINGS DUPLICATE '' VGV_OBEJCT
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_TAKE_LEFT
    STRINGS DUPLICATE '' VGV_TAKE_RIGHT
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_ULTRA
    STRINGS DUPLICATE '' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_ON_SECOND_BLUE
    STRINGS DUPLICATE '' VGV_WHITE_OBJECT
    MOVEF_F 0.0 VGV_MINUS_DEG
    STRINGS DUPLICATE '' VGV_CH
    MOVEF_F 0.0 VLV_ERR_6
    MOVEF_F 0.0 VLV_DIFF_6
    MOVEF_F 0.0 VLV_DELTA_6
    MOVEF_F 0.0 VLV_LEFT_POWER_6
    MOVEF_F 0.0 VLV_RIGHT_POWER_6
    MOVEF_F 0.0 VLV_ERR_7
    MOVEF_F 0.0 VLV_DIFF_7
    MOVEF_F 0.0 VLV_DELTA_7
    MOVEF_F 0.0 VLV_LEFT_POWER_7
    MOVEF_F 0.0 VLV_RIGHT_POWER_7
    MOVEF_F 0.0 VLV_L_8
    MOVEF_F 0.0 VLV_ERR_8
    MOVEF_F 0.0 VLV_DIFF_8
    MOVEF_F 0.0 VLV_DELTA_8
    MOVEF_F 0.0 VLV_LEFT_POWER_8
    MOVEF_F 0.0 VLV_RIGHT_POWER_8
    MOVEF_F 0.0 VLV_L_10
    MOVEF_F 0.0 VLV_P_10
    MOVEF_F 0.0 VLV_POWER_10
    MOVEF_F 0.0 VLV_R_10
    MOVEF_F 0.0 VLV_DELTA_10
    MOVEF_F 0.0 VLV_LEFT_POWER_10
    MOVEF_F 0.0 VLV_RIGHT_POWER_10
    MOVEF_F 0.0 VLV_L_11
    MOVEF_F 0.0 VLV_R_11
    MOVEF_F 0.0 VLV_ERR_11
    MOVEF_F 0.0 VLV_DIFF_11
    MOVEF_F 0.0 VLV_DELTA_11
    MOVEF_F 0.0 VLV_LEFT_POWER_11
    MOVEF_F 0.0 VLV_RIGHT_POWER_11
    MOVEF_F 0.0 VLV_L_12
    MOVEF_F 0.0 VLV_NORMAL_DEG_13
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_13
    MOVEF_F 0.0 VLV_ZAME_DEG_13
    MOVEF_F 0.0 VLV_M_13
    MOVEF_F 0.0 VLV_MIN_POWER_13
    MOVEF_F 0.0 VLV_P_13
    MOVEF_F 0.0 VLV_POWER_13
    MOVEF_F 0.0 VLV_L_14
    MOVEF_F 0.0 VLV_P_14
    MOVEF_F 0.0 VLV_R_14
    MOVEF_F 0.0 VLV_DELTA_14
    MOVEF_F 0.0 VLV_POWER_14
    MOVEF_F 0.0 VLV_LEFT_POWER_14
    MOVEF_F 0.0 VLV_RIGHT_POWER_14
    STRINGS DUPLICATE '' VLV_CHEM_15
    STRINGS DUPLICATE '' VLV_MOT_18
    MOVEF_F 0.0 VLV_FORWARD_18
    MOVEF_F 0.0 VLV_COEF_18
    MOVEF_F 0.0 VLV_COEF_19
    MOVEF_F 0.0 VLV_DEG_20
    MOVEF_F 0.0 VLV_MILLISECOND_26
    MOVEF_F 0.0 VLV_SECONDS_26
    MOVEF_F 0.0 VLV_MINUTES_26
    STRINGS DUPLICATE '' VLV_TEXT_26
    MOVE32_32 0 RUNCOUNTER_F_KICK_WATER_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_KICK_WATER_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_KICK_WATER_0 0
    CALL GETANDINC32 RUNCOUNTER_F_KICK_WATER_0 -1 RUNCOUNTER_F_KICK_WATER_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_KICK_WATER_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1049
    WRITE32 ENDSUB_F_KICK_WATER_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
  dispatch1049:
    MOVEF_F 0.0 VLV_BASE_POWER_10
    MOVEF_F 0.0 VLV_MIN_POWER_10
    MOVEF_F 0.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_COEF_10
    MOVEF_F 0.0 VLV_BASE_POWER_14
    MOVEF_F 0.0 VLV_MIN_POWER_14
    MOVEF_F 0.0 VLV_DEG_14
    MOVEF_F 0.0 VLV_COEF_14
    STRINGS DUPLICATE '' VLV_MOTOR_13
    MOVEF_F 0.0 VLV_FORWARD_13
    MOVEF_F 0.0 VLV_DEG_13
    MOVEF_F 0.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE '' VLV_ACCELERATION_13
    STRINGS DUPLICATE '' VLV_ZAME_13
    STRINGS DUPLICATE '' VLV_TO_STOP_13
    MOVEF_F 0.0 VLV_TIME_2
    MOVEF_F 0.0 VLV_PERCENT_5
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_A_8
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_POWER_12
    STRINGS DUPLICATE '' VLV_FINISH_FORWARD_15
    MOVEF_F 0.0 VLV_POWER_11
    MOVEF_F 0.0 VLV_L_7
    STRINGS DUPLICATE '' VLV_IS_INVERTED_23
    STRINGS DUPLICATE '' VLV_IS_INVERTED_24
    STRINGS DUPLICATE '' VLV_LONG_21
    STRINGS DUPLICATE '' VLV_NEAR_21
    STRINGS DUPLICATE '' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_25
    STRINGS DUPLICATE '' VLV_TO_DELAY_26
    MOVEF_F 0.0 VLV_L_6
    MOVEF_F 0.0 VLV_COEF_16
    MOVEF_F 0.0 VLV_COEF_17
    STRINGS DUPLICATE '' VLV_IS_INVERTED_18
    STRINGS DUPLICATE '' VLV_IS_INVERTED_19
    MOVEF_F 0.0 VLV_MINUS_DEG_19
    MOVEF_F 0.0 VLV_MINUS_DEG_20
    STRINGS DUPLICATE '' VLV_IS_INVERTED_22
    STRINGS DUPLICATE '' VLV_MOTOR1_22
    STRINGS DUPLICATE '' VLV_MOTOR2_22
    MOVEF_F 0.0 VLV_FORWARD1_22
    MOVEF_F 0.0 VLV_FORWARD2_22
    MOVEF_F 0.0 VLV_COEF_22
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VLV_P_20
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    STRINGS DUPLICATE '' VLV_MOTOR1_23
    STRINGS DUPLICATE '' VLV_MOTOR2_23
    MOVEF_F 0.0 VLV_FORWARD1_23
    MOVEF_F 0.0 VLV_FORWARD2_23
    MOVEF_F 0.0 VLV_COEF_23
    STRINGS DUPLICATE '' VLV_MOTOR1_24
    STRINGS DUPLICATE '' VLV_MOTOR2_24
    MOVEF_F 0.0 VLV_FORWARD1_24
    MOVEF_F 0.0 VLV_FORWARD2_24
    MOVEF_F 0.0 VLV_COEF_24
    MOVEF_F 0.0 VLV_P_24
    STRINGS DUPLICATE '' VLV_MOTOR1_25
    STRINGS DUPLICATE '' VLV_MOTOR2_25
    MOVEF_F 0.0 VLV_FORWARD1_25
    MOVEF_F 0.0 VLV_FORWARD2_25
    MOVEF_F 0.0 VLV_COEF_25
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_START
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_R
    STRINGS DUPLICATE '' VGV_OBEJCT
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_TAKE_LEFT
    STRINGS DUPLICATE '' VGV_TAKE_RIGHT
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_ULTRA
    STRINGS DUPLICATE '' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_ON_SECOND_BLUE
    STRINGS DUPLICATE '' VGV_WHITE_OBJECT
    MOVEF_F 0.0 VGV_MINUS_DEG
    STRINGS DUPLICATE '' VGV_CH
    MOVEF_F 1.0 VGV_LINE
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERTED_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 40.0 VGV_LEFT_MAX
    MOVEF_F 5.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 2.0 VGV_CUBES_COUNT
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_LEFT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_RIGHT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB7 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB7:
    SOUND_READY
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB10:
ENDTHREAD:
    RETURN
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB12:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB13 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB13:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB16 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB16:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer17
	DATA8 nos17
	DATA8 busy17
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer17 nos17
	JR_EQ8 0 nos17 motornotbusy17
  motorwaiting17:
	OUTPUT_TEST layer17 nos17 busy17
	JR_EQ8 busy17 0 motornotbusy17
	SLEEP
	JR motorwaiting17
  motornotbusy17:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB18 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB18:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB19 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB19:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB20 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB20:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer21
	DATA8 nos21
	DATA8 busy21
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer21 nos21
	JR_EQ8 0 nos21 motornotbusy21
  motorwaiting21:
	OUTPUT_TEST layer21 nos21 busy21
	JR_EQ8 busy21 0 motornotbusy21
	SLEEP
	JR motorwaiting21
  motornotbusy21:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB22 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB22:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 15.0 VLV_MIN_POWER_14
    MOVEF_F 60.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB23 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB23:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB24 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB24:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB25 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB25:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 85.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB26 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB26:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB27 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB27:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB28:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB29 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB29:
    STRINGS DUPLICATE 'True' VGV_CHEM
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else30_1
    CALL MOTOR.START VGV_WATER_MOTOR 50.0
    DATA32 milliseconds32
	MOVEF_32 500.0 milliseconds32
	DATA32 timer32
	TIMER_WAIT milliseconds32 timer32
	TIMER_READY timer32
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif30
  else30_1:
    CALL MOTOR.START VGV_WATER_MOTOR -50.0
    DATA32 milliseconds36
	MOVEF_32 500.0 milliseconds36
	DATA32 timer36
	TIMER_WAIT milliseconds36 timer36
	TIMER_READY timer36
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 50.0 0.0 20.0 0.0 'True' 

	DATA8 layer38
	DATA8 nos38
	DATA8 busy38
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer38 nos38
	JR_EQ8 0 nos38 motornotbusy38
  motorwaiting38:
	OUTPUT_TEST layer38 nos38 busy38
	JR_EQ8 busy38 0 motornotbusy38
	SLEEP
	JR motorwaiting38
  motornotbusy38:
  else30_2:
  endif30:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_MAIN_0:
    STRINGS DUPLICATE 'left' VGV_START
    TIMER_READ timeMC9
    MOVEF_F 97.0 VGV_A
    MULF 80.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 85.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    WRITE32 ENDSUB_F_RESET_0:CALLSUB44 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB44:
  while45:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    JR_GTEQF F.0 1000.0 endwhile45
  whilebody45:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    JR_LTF F.0 1000.0 whilebody45
  endwhile45:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB48 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB48:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while49:
    JR_GTEQF VGV_P 50.0 endwhile49
  whilebody49:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB50 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB50:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_LTF VGV_P 50.0 whilebody49
  endwhile49:
  while51:
    JR_LTEQF VGV_P 20.0 endwhile51
  whilebody51:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB52 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB52:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_GTF VGV_P 20.0 whilebody51
  endwhile51:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 180.0 VLV_DEG_13
    MOVEF_F 50.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB55 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB55:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 180.0 VLV_DEG_13
    MOVEF_F 50.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB56 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB56:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB57 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB57:
    DATA32 milliseconds58
	MOVEF_32 1000.0 milliseconds58
	DATA32 timer58
	TIMER_WAIT milliseconds58 timer58
	TIMER_READY timer58
    WRITE32 ENDSUB_F_STOP_0:CALLSUB59 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB59:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 70.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB60:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB62 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB62:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB63 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB63:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB64 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB64:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while65:
    JR_LTEQF VGV_P 23.0 endwhile65
  whilebody65:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB66:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB67 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB67:
    JR_GTF VGV_P 23.0 whilebody65
  endwhile65:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 0.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB68 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB68:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB69 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB69:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB70 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB70:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBEJCT
    JR_LTEQF VGV_R 150.0 else72_1
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    STRINGS DUPLICATE 'human' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif72
  else72_1:
    JR_LTEQF VGV_R 60.0 else72_2
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    DATA32 tmp75
    CALL GETANDINC32 RUNCOUNTER_F_KICK_WATER_0 1  RUNCOUNTER_F_KICK_WATER_0 tmp75
    JR_NEQ32 0 tmp75 alreadylaunched75
    OBJECT_START TF_KICK_WATER_0
  alreadylaunched75:
    JR endif72
  else72_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else72_3
    JR_LTEQF VGV_R 15.0 else72_3
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB77:
  else72_3:
  endif72:
    MOVEF_F 525.0 VGV_DEG
    CALL NE_STRING VGV_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else78_1
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 120.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB80 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB80:
    SUBF VGV_DEG 120.0 VGV_DEG
  else78_1:
  endif78:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB82:
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else83_1
  while85:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 120.0 F.1
    JR_GTEQF F.0 F.1 endwhile85
  whilebody85:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB89:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 120.0 F.1
    JR_LTF F.0 F.1 whilebody85
  endwhile85:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 15.0 VLV_MIN_POWER_14
    MOVEF_F 120.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB93:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB94:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB95:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 80.0 else97_1
    DATA8 layer98
	DATA8 no98
	DATA8 mode898
	
	MOVEF_8 VGV_RIGHT_SENSOR no98
	SUB8 no98 1 no98
	DIV8 no98 4 layer98
	MATH MOD8 no98 4 no98

	MOVEF_8 2.0 mode898
	
	INPUT_DEVICE READY_RAW layer98 no98 0 mode898 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB99 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB99:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer101
	DATA8 no101
	DATA8 mode8101
	
	MOVEF_8 VGV_RIGHT_SENSOR no101
	SUB8 no101 1 no101
	DIV8 no101 4 layer101
	MATH MOD8 no101 4 no101

	MOVEF_8 1.0 mode8101
	
	INPUT_DEVICE READY_RAW layer101 no101 0 mode8101 0
    JR_LTEQF VGV_G 100.0 else102_1
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    STRINGS DUPLICATE 'human' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif102
  else102_1:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB105:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 15.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB106:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB107:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB108:
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB109:
  else102_2:
  endif102:
    JR endif97
  else97_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else97_2
    JR_LTEQF VGV_R 20.0 else97_2
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB111:
  else97_2:
  endif97:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB112:
    JR endif83
  else83_1:
  while113:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 VGV_DEG endwhile113
  whilebody113:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB116:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 VGV_DEG whilebody113
  endwhile113:
  else83_2:
  endif83:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB119:
    MOVEF_F 96.0 VGV_A
  while120:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 520.0 endwhile120
  whilebody120:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB123:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 520.0 whilebody120
  endwhile120:
    MULF 60.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF 60.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds130
	MOVEF_32 1000.0 milliseconds130
	DATA32 timer130
	TIMER_WAIT milliseconds130 timer130
	TIMER_READY timer130
    WRITE32 ENDSUB_F_STOP_0:CALLSUB131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB131:
    STRINGS DUPLICATE 'False' VGV_TAKE_LEFT
    STRINGS DUPLICATE 'False' VGV_TAKE_RIGHT
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB132:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 80.0 else134_1
    DATA8 layer135
	DATA8 no135
	DATA8 mode8135
	
	MOVEF_8 VGV_RIGHT_SENSOR no135
	SUB8 no135 1 no135
	DIV8 no135 4 layer135
	MATH MOD8 no135 4 no135

	MOVEF_8 2.0 mode8135
	
	INPUT_DEVICE READY_RAW layer135 no135 0 mode8135 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB136:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer138
	DATA8 no138
	DATA8 mode8138
	
	MOVEF_8 VGV_RIGHT_SENSOR no138
	SUB8 no138 1 no138
	DIV8 no138 4 layer138
	MATH MOD8 no138 4 no138

	MOVEF_8 1.0 mode8138
	
	INPUT_DEVICE READY_RAW layer138 no138 0 mode8138 0
    JR_LTEQF VGV_G 100.0 else139_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    STRINGS DUPLICATE 'R: man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif139
  else139_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB142:
  else139_2:
  endif139:
    JR endif134
  else134_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else134_2
    DATA8 layer144
	DATA8 no144
	DATA8 mode8144
	
	MOVEF_8 VGV_RIGHT_SENSOR no144
	SUB8 no144 1 no144
	DIV8 no144 4 layer144
	MATH MOD8 no144 4 no144

	MOVEF_8 4.0 mode8144
	
	INPUT_DEVICE READY_RAW layer144 no144 0 mode8144 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB145:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA8 layer150
	DATA8 no150
	DATA8 mode8150
	
	MOVEF_8 VGV_RIGHT_SENSOR no150
	SUB8 no150 1 no150
	DIV8 no150 4 layer150
	MATH MOD8 no150 4 no150

	MOVEF_8 1.0 mode8150
	
	INPUT_DEVICE READY_RAW layer150 no150 0 mode8150 0
    JR_LTEQF VGV_W 30.0 else151_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_TAKE_RIGHT
    STRINGS DUPLICATE 'True' VGV_CHEM
  else151_1:
  endif151:
  else134_2:
  endif134:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else152_1
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 70.0 else155_1
    DATA8 layer156
	DATA8 no156
	DATA8 mode8156
	
	MOVEF_8 VGV_LEFT_SENSOR no156
	SUB8 no156 1 no156
	DIV8 no156 4 layer156
	MATH MOD8 no156 4 no156

	MOVEF_8 2.0 mode8156
	
	INPUT_DEVICE READY_RAW layer156 no156 0 mode8156 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB157:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer159
	DATA8 no159
	DATA8 mode8159
	
	MOVEF_8 VGV_LEFT_SENSOR no159
	SUB8 no159 1 no159
	DIV8 no159 4 layer159
	MATH MOD8 no159 4 no159

	MOVEF_8 1.0 mode8159
	
	INPUT_DEVICE READY_RAW layer159 no159 0 mode8159 0
    JR_LTEQF VGV_G 100.0 else160_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    STRINGS DUPLICATE 'L: man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif160
  else160_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB163:
  else160_2:
  endif160:
    JR endif155
  else155_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else155_2
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 40.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB166:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB167:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    MULF 80.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    DATA32 milliseconds171
	MOVEF_32 1000.0 milliseconds171
	DATA32 timer171
	TIMER_WAIT milliseconds171 timer171
	TIMER_READY timer171
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    JR_GTEQF VGV_ULTRA 75.0 else173_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_TAKE_LEFT
  else173_1:
  endif173:
  else155_2:
  endif155:
  else152_1:
  endif152:
    CALL EQ_STRING VGV_TAKE_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else174_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB176:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 60.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB177:
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB180:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer181
	DATA8 nos181
	DATA8 busy181
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer181 nos181
	JR_EQ8 0 nos181 motornotbusy181
  motorwaiting181:
	OUTPUT_TEST layer181 nos181 busy181
	JR_EQ8 busy181 0 motornotbusy181
	SLEEP
	JR motorwaiting181
  motornotbusy181:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB182:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB183:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB184:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer185
	DATA8 nos185
	DATA8 busy185
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer185 nos185
	JR_EQ8 0 nos185 motornotbusy185
  motorwaiting185:
	OUTPUT_TEST layer185 nos185 busy185
	JR_EQ8 busy185 0 motornotbusy185
	SLEEP
	JR motorwaiting185
  motornotbusy185:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB186:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB187:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB188 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB188:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB189:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB190:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB191:
    DATA32 milliseconds192
	MOVEF_32 1000.0 milliseconds192
	DATA32 timer192
	TIMER_WAIT milliseconds192 timer192
	TIMER_READY timer192
    WRITE32 ENDSUB_F_STOP_0:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB193:
    JR endif174
  else174_1:
    CALL EQ_STRING VGV_TAKE_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else174_2
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB195:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 60.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB196:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB199:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer200
	DATA8 nos200
	DATA8 busy200
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer200 nos200
	JR_EQ8 0 nos200 motornotbusy200
  motorwaiting200:
	OUTPUT_TEST layer200 nos200 busy200
	JR_EQ8 busy200 0 motornotbusy200
	SLEEP
	JR motorwaiting200
  motornotbusy200:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB201:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB202:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB203:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer204
	DATA8 nos204
	DATA8 busy204
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer204 nos204
	JR_EQ8 0 nos204 motornotbusy204
  motorwaiting204:
	OUTPUT_TEST layer204 nos204 busy204
	JR_EQ8 busy204 0 motornotbusy204
	SLEEP
	JR motorwaiting204
  motornotbusy204:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB205:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB206:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB207:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB208:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB209:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB210:
    DATA32 milliseconds211
	MOVEF_32 1000.0 milliseconds211
	DATA32 timer211
	TIMER_WAIT milliseconds211 timer211
	TIMER_READY timer211
    WRITE32 ENDSUB_F_STOP_0:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB212:
  else174_2:
  endif174:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB213:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB216:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB217:
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB218:
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 120.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB219:
    MOVEF_F 185.0 VLV_DEG_12
    MOVEF_F 40.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB220:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 120.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB221:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB222:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB223:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 160.0 else225_1
    JR endif225
  else225_1:
    JR_LTEQF VGV_R 80.0 else225_2
    DATA8 layer226
	DATA8 no226
	DATA8 mode8226
	
	MOVEF_8 VGV_RIGHT_SENSOR no226
	SUB8 no226 1 no226
	DIV8 no226 4 layer226
	MATH MOD8 no226 4 no226

	MOVEF_8 2.0 mode8226
	
	INPUT_DEVICE READY_RAW layer226 no226 0 mode8226 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB227:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer229
	DATA8 no229
	DATA8 mode8229
	
	MOVEF_8 VGV_RIGHT_SENSOR no229
	SUB8 no229 1 no229
	DIV8 no229 4 layer229
	MATH MOD8 no229 4 no229

	MOVEF_8 1.0 mode8229
	
	INPUT_DEVICE READY_RAW layer229 no229 0 mode8229 0
    JR_LTEQF VGV_G 80.0 else230_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif230
  else230_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB233:
  else230_2:
  endif230:
    JR endif225
  else225_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else225_3
    DATA8 layer235
	DATA8 no235
	DATA8 mode8235
	
	MOVEF_8 VGV_RIGHT_SENSOR no235
	SUB8 no235 1 no235
	DIV8 no235 4 layer235
	MATH MOD8 no235 4 no235

	MOVEF_8 4.0 mode8235
	
	INPUT_DEVICE READY_RAW layer235 no235 0 mode8235 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB236:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    DATA8 layer238
	DATA8 no238
	DATA8 mode8238
	
	MOVEF_8 VGV_RIGHT_SENSOR no238
	SUB8 no238 1 no238
	DIV8 no238 4 layer238
	MATH MOD8 no238 4 no238

	MOVEF_8 1.0 mode8238
	
	INPUT_DEVICE READY_RAW layer238 no238 0 mode8238 0
    JR_LTEQF VGV_W 45.0 else239_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_TAKE_CHEM_IN_YELLOW
  else239_1:
  endif239:
  else225_3:
  endif225:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 255.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB240 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB240:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB241:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 260.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB242:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB243:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB244:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else245_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB247:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 90.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB248:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB249:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB250:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 50.0 else252_1
    DATA8 layer253
	DATA8 no253
	DATA8 mode8253
	
	MOVEF_8 VGV_LEFT_SENSOR no253
	SUB8 no253 1 no253
	DIV8 no253 4 layer253
	MATH MOD8 no253 4 no253

	MOVEF_8 2.0 mode8253
	
	INPUT_DEVICE READY_RAW layer253 no253 0 mode8253 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB254:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer256
	DATA8 no256
	DATA8 mode8256
	
	MOVEF_8 VGV_LEFT_SENSOR no256
	SUB8 no256 1 no256
	DIV8 no256 4 layer256
	MATH MOD8 no256 4 no256

	MOVEF_8 1.0 mode8256
	
	INPUT_DEVICE READY_RAW layer256 no256 0 mode8256 0
    JR_LTEQF VGV_G 70.0 else257_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif257
  else257_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB260:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB261:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB262:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB263:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB264:
  else257_2:
  endif257:
    JR endif252
  else252_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else252_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB266:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 70.0 else268_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VLV_FINISH_FORWARD_15
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB269:
  else268_1:
  endif268:
  else252_2:
  endif252:
    JR endif245
  else245_1:
    MOVEF_F 165.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB270:
  else245_2:
  endif245:
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB271:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB272:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    DATA8 flag274
	CP_GTF F.0 95.0 flag274
	SELECTF flag274 F.0 95.0 VGV_A
  while275:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 300.0 endwhile275
  whilebody275:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB278:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 300.0 whilebody275
  endwhile275:
    MULF 40.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF 40.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds285
	MOVEF_32 1000.0 milliseconds285
	DATA32 timer285
	TIMER_WAIT milliseconds285 timer285
	TIMER_READY timer285
    WRITE32 ENDSUB_F_STOP_0:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB286:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 160.0 else288_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif288
  else288_1:
    JR_LTEQF VGV_R 80.0 else288_2
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'fire' VGV_OBEJCT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB291 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB291:
    JR endif288
  else288_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else288_3
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB293:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 70.0 else295_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB296:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 80.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB297:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB298:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer299
	DATA8 nos299
	DATA8 busy299
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer299 nos299
	JR_EQ8 0 nos299 motornotbusy299
  motorwaiting299:
	OUTPUT_TEST layer299 nos299 busy299
	JR_EQ8 busy299 0 motornotbusy299
	SLEEP
	JR motorwaiting299
  motornotbusy299:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 160.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB300:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer301
	DATA8 nos301
	DATA8 busy301
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer301 nos301
	JR_EQ8 0 nos301 motornotbusy301
  motorwaiting301:
	OUTPUT_TEST layer301 nos301 busy301
	JR_EQ8 busy301 0 motornotbusy301
	SLEEP
	JR motorwaiting301
  motornotbusy301:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 160.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB303 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB303:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB304:
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB305:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB306 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB306:
  else295_1:
  endif295:
  else288_3:
  endif288:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 240.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB308:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 105.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB309:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB310:
    MOVEF_F 1200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB311 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB311:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB312:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 120.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB313:
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else314_1
    MOVEF_F 175.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB316:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 15.0 VLV_MIN_POWER_14
    MOVEF_F 120.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB317:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB318:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB319:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 80.0 else321_1
    DATA8 layer322
	DATA8 no322
	DATA8 mode8322
	
	MOVEF_8 VGV_LEFT_SENSOR no322
	SUB8 no322 1 no322
	DIV8 no322 4 layer322
	MATH MOD8 no322 4 no322

	MOVEF_8 2.0 mode8322
	
	INPUT_DEVICE READY_RAW layer322 no322 0 mode8322 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB323:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer325
	DATA8 no325
	DATA8 mode8325
	
	MOVEF_8 VGV_LEFT_SENSOR no325
	SUB8 no325 1 no325
	DIV8 no325 4 layer325
	MATH MOD8 no325 4 no325

	MOVEF_8 1.0 mode8325
	
	INPUT_DEVICE READY_RAW layer325 no325 0 mode8325 0
    JR_LTEQF VGV_G 80.0 else326_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif326
  else326_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB329:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB330 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB330:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB331 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB331:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB332:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB333:
  else326_2:
  endif326:
    JR endif321
  else321_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else321_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB335:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 90.0 else340_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB341 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB341:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB342:
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB345:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer346
	DATA8 nos346
	DATA8 busy346
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer346 nos346
	JR_EQ8 0 nos346 motornotbusy346
  motorwaiting346:
	OUTPUT_TEST layer346 nos346 busy346
	JR_EQ8 busy346 0 motornotbusy346
	SLEEP
	JR motorwaiting346
  motornotbusy346:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB347:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB348:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB349:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer350
	DATA8 nos350
	DATA8 busy350
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer350 nos350
	JR_EQ8 0 nos350 motornotbusy350
  motorwaiting350:
	OUTPUT_TEST layer350 nos350 busy350
	JR_EQ8 busy350 0 motornotbusy350
	SLEEP
	JR motorwaiting350
  motornotbusy350:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 55.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB351:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 15.0 VLV_MIN_POWER_14
    MOVEF_F 55.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB352:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB353:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB354:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 105.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB355:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB356:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB357:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 110.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB358:
  else340_1:
  endif340:
  else321_2:
  endif321:
    CALL EQ_STRING VGV_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or360
    CALL EQ_STRING VGV_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else359_1
  or360:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB363:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 70.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB364:
    JR endif359
  else359_1:
    MOVEF_F 80.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB365:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 70.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB366:
  else359_2:
  endif359:
    JR endif314
  else314_1:
    MOVEF_F 450.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB367:
  else314_2:
  endif314:
    STRINGS DUPLICATE 'False' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VGV_IS_ON_SECOND_BLUE
    WRITE32 ENDSUB_F_STOP_0:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB368:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB369:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 60.0 else371_1
    DATA8 layer372
	DATA8 no372
	DATA8 mode8372
	
	MOVEF_8 VGV_LEFT_SENSOR no372
	SUB8 no372 1 no372
	DIV8 no372 4 layer372
	MATH MOD8 no372 4 no372

	MOVEF_8 2.0 mode8372
	
	INPUT_DEVICE READY_RAW layer372 no372 0 mode8372 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB373:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer375
	DATA8 no375
	DATA8 mode8375
	
	MOVEF_8 VGV_LEFT_SENSOR no375
	SUB8 no375 1 no375
	DIV8 no375 4 layer375
	MATH MOD8 no375 4 no375

	MOVEF_8 1.0 mode8375
	
	INPUT_DEVICE READY_RAW layer375 no375 0 mode8375 0
    JR_LTEQF VGV_G 100.0 else376_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif376
  else376_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB379:
  else376_2:
  endif376:
    JR endif371
  else371_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else371_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB381:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 80.0 else386_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 145.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB387:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 145.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB388:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB389:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB390:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB392 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB392:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer393
	DATA8 nos393
	DATA8 busy393
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer393 nos393
	JR_EQ8 0 nos393 motornotbusy393
  motorwaiting393:
	OUTPUT_TEST layer393 nos393 busy393
	JR_EQ8 busy393 0 motornotbusy393
	SLEEP
	JR motorwaiting393
  motornotbusy393:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB394:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB395:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB396:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB397:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer398
	DATA8 nos398
	DATA8 busy398
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer398 nos398
	JR_EQ8 0 nos398 motornotbusy398
  motorwaiting398:
	OUTPUT_TEST layer398 nos398 busy398
	JR_EQ8 busy398 0 motornotbusy398
	SLEEP
	JR motorwaiting398
  motornotbusy398:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB399:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB400:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB401:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB402:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB403:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB404:
  else386_1:
  endif386:
  else371_2:
  endif371:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else405_1
    STRINGS DUPLICATE 'True' VGV_IS_ON_SECOND_BLUE
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB407:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB408:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_A
  while410:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 310.0 endwhile410
  whilebody410:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB413:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 310.0 whilebody410
  endwhile410:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB416:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB417:
    STRINGS DUPLICATE 'none' VGV_OBJECT
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB418:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 60.0 else420_1
    DATA8 layer421
	DATA8 no421
	DATA8 mode8421
	
	MOVEF_8 VGV_LEFT_SENSOR no421
	SUB8 no421 1 no421
	DIV8 no421 4 layer421
	MATH MOD8 no421 4 no421

	MOVEF_8 2.0 mode8421
	
	INPUT_DEVICE READY_RAW layer421 no421 0 mode8421 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB422:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer424
	DATA8 no424
	DATA8 mode8424
	
	MOVEF_8 VGV_LEFT_SENSOR no424
	SUB8 no424 1 no424
	DIV8 no424 4 layer424
	MATH MOD8 no424 4 no424

	MOVEF_8 1.0 mode8424
	
	INPUT_DEVICE READY_RAW layer424 no424 0 mode8424 0
    JR_LTEQF VGV_G 80.0 else425_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif425
  else425_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Trie' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB428:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB429:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB430:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB431:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB432:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB433:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB434:
  else425_2:
  endif425:
    JR endif420
  else420_1:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB435:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 80.0 else437_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'Treu' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VLV_FINISH_FORWARD_15
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB438:
  else437_1:
  endif437:
  else420_2:
  endif420:
  else405_1:
  endif405:
    STRINGS DUPLICATE 'none' VGV_WHITE_OBJECT
    JR_GTEQF VGV_MEN_COUNT 2.0 else439_1
    STRINGS DUPLICATE 'man' VGV_WHITE_OBJECT
    JR endif439
  else439_1:
    JR_GTEQF VGV_FIRE_COUNT 2.0 else439_2
    STRINGS DUPLICATE 'fire' VGV_WHITE_OBJECT
    JR endif439
  else439_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else439_3
    STRINGS DUPLICATE 'chem' VGV_WHITE_OBJECT
  else439_3:
  endif439:
    CALL EQ_STRING VGV_WHITE_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else441_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
  else441_1:
  endif441:
    CALL EQ_STRING VGV_WHITE_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or445
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or445
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else444_1
  or445:
    CALL EQ_STRING VGV_IS_ON_SECOND_BLUE 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else449_1
    CALL EQ_STRING VGV_IS_SECOND_BLUE_OBJECT_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else451_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 30.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB453:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 30.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB454:
    JR endif451
  else451_1:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 10.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB455:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB456:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB457:
  else451_2:
  endif451:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB460 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB460:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB461:
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB462:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB463:
    JR endif449
  else449_1:
    CALL EQ_STRING VGV_IS_FIRST_BLUE_OBJECT_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else464_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB466:
    MOVEF_F 215.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB467:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB468 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB468:
    JR endif464
  else464_1:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 75.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB469:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 75.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB470:
  else464_2:
  endif464:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB471:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB473:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB474:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB475:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB476:
  else449_2:
  endif449:
    MOVEF_F 100.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB477 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB477:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB478:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB479:
    DATA8 layer480
	DATA8 no480
	DATA8 mode8480
	
	MOVEF_8 VGV_LINE no480
	SUB8 no480 1 no480
	DIV8 no480 4 layer480
	MATH MOD8 no480 4 no480

	MOVEF_8 2.0 mode8480
	
	INPUT_DEVICE READY_RAW layer480 no480 0 mode8480 0
  while481:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 130.0 endwhile481
  whilebody481:
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB484:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 130.0 whilebody481
  endwhile481:
  while487:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_EQF F.0 6.0 endwhile487
  whilebody487:
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB489:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_NEQF F.0 6.0 whilebody487
  endwhile487:
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else491_1
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else491_1
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB494:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB495:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB496:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB497:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB498:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB499 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB499:
    JR endif491
  else491_1:
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else491_2
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB501:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB502:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB503:
    JR endif491
  else491_2:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else491_3
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 170.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB505:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB506:
  else491_3:
  endif491:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else507_1
    DATA8 layer509
	DATA8 no509
	DATA8 mode8509
	
	MOVEF_8 VGV_LINE no509
	SUB8 no509 1 no509
	DIV8 no509 4 layer509
	MATH MOD8 no509 4 no509

	MOVEF_8 2.0 mode8509
	
	INPUT_DEVICE READY_RAW layer509 no509 0 mode8509 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB510:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB511:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB512 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB512:
  while513:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_EQF F.0 4.0 endwhile513
  whilebody513:
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB515:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_NEQF F.0 4.0 whilebody513
  endwhile513:
    MOVEF_F 250.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB517:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB518:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB519:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB521:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer522
	DATA8 nos522
	DATA8 busy522
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer522 nos522
	JR_EQ8 0 nos522 motornotbusy522
  motorwaiting522:
	OUTPUT_TEST layer522 nos522 busy522
	JR_EQ8 busy522 0 motornotbusy522
	SLEEP
	JR motorwaiting522
  motornotbusy522:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 65.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB523 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB523:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 65.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB524:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB525:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer526
	DATA8 nos526
	DATA8 busy526
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer526 nos526
	JR_EQ8 0 nos526 motornotbusy526
  motorwaiting526:
	OUTPUT_TEST layer526 nos526 busy526
	JR_EQ8 busy526 0 motornotbusy526
	SLEEP
	JR motorwaiting526
  motornotbusy526:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB527:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB528:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB529:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB530:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 177.0 'True'

	DATA8 layer534
	DATA8 nos534
	DATA8 busy534
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer534 nos534
	JR_EQ8 0 nos534 motornotbusy534
  motorwaiting534:
	OUTPUT_TEST layer534 nos534 busy534
	JR_EQ8 busy534 0 motornotbusy534
	SLEEP
	JR motorwaiting534
  motornotbusy534:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB535:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB536:
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB537:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB538:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB539:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 210.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB540 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB540:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB541:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 210.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB542 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB542:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB543:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB544 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB544:
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB545:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB546 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB546:
  else507_1:
  endif507:
    CALL EQ_STRING VGV_WHITE_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else547_1
    DATA8 layer549
	DATA8 no549
	DATA8 mode8549
	
	MOVEF_8 VGV_LINE no549
	SUB8 no549 1 no549
	DIV8 no549 4 layer549
	MATH MOD8 no549 4 no549

	MOVEF_8 0.0 mode8549
	
	INPUT_DEVICE READY_RAW layer549 no549 0 mode8549 0
    MOVEF_F 100.0 VGV_MINUS_DEG
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else550_1
    ADDF VGV_MINUS_DEG 200.0 VGV_MINUS_DEG
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB553 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB553:
  else550_1:
  endif550:
    SUBF 420.0 VGV_MINUS_DEG VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB555 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB555:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB556 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB556:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB557:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB558:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB559:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB560:
    STRINGS DUPLICATE 'False' VGV_CH
    DATA8 layer561
	DATA8 no561
	DATA8 mode8561
	
	MOVEF_8 VGV_RIGHT_SENSOR no561
	SUB8 no561 1 no561
	DIV8 no561 4 layer561
	MATH MOD8 no561 4 no561

	MOVEF_8 4.0 mode8561
	
	INPUT_DEVICE READY_RAW layer561 no561 0 mode8561 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB562 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB562:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    JR_LTEQF VGV_W 40.0 else564_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif564
  else564_1:
    DATA8 layer565
	DATA8 no565
	DATA8 mode8565
	
	MOVEF_8 VGV_RIGHT_SENSOR no565
	SUB8 no565 1 no565
	DIV8 no565 4 layer565
	MATH MOD8 no565 4 no565

	MOVEF_8 0.0 mode8565
	
	INPUT_DEVICE READY_RAW layer565 no565 0 mode8565 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 25.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB567 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB567:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB568:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 F.0
    JR_NEQF F.0 12.0 else569_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif569
  else569_1:
    DATA8 layer571
	DATA8 no571
	DATA8 mode8571
	
	MOVEF_8 VGV_RIGHT_SENSOR no571
	SUB8 no571 1 no571
	DIV8 no571 4 layer571
	MATH MOD8 no571 4 no571

	MOVEF_8 4.0 mode8571
	
	INPUT_DEVICE READY_RAW layer571 no571 0 mode8571 0
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB572:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    JR_LTEQF VGV_W 40.0 else574_1
    STRINGS DUPLICATE 'True' VGV_CH
  else574_1:
  endif574:
  else569_2:
  endif569:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 25.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB575:
  else564_2:
  endif564:
    CALL EQ_STRING VGV_CH 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else576_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB578:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB579:
    MOVEF_F 30.0 VLV_DEG_12
    MOVEF_F -30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB580:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 80.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB581:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB582:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB583:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB584:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer585
	DATA8 nos585
	DATA8 busy585
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer585 nos585
	JR_EQ8 0 nos585 motornotbusy585
  motorwaiting585:
	OUTPUT_TEST layer585 nos585 busy585
	JR_EQ8 busy585 0 motornotbusy585
	SLEEP
	JR motorwaiting585
  motornotbusy585:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB586:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB587 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB587:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB588:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer589
	DATA8 nos589
	DATA8 busy589
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer589 nos589
	JR_EQ8 0 nos589 motornotbusy589
  motorwaiting589:
	OUTPUT_TEST layer589 nos589 busy589
	JR_EQ8 busy589 0 motornotbusy589
	SLEEP
	JR motorwaiting589
  motornotbusy589:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB590:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB591:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB592:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB593:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB594:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB596:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB597:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB598:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 490.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB599:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB600:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 120.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB601:
    JR endif576
  else576_1:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 230.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB603:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer604
	DATA8 nos604
	DATA8 busy604
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer604 nos604
	JR_EQ8 0 nos604 motornotbusy604
  motorwaiting604:
	OUTPUT_TEST layer604 nos604 busy604
	JR_EQ8 busy604 0 motornotbusy604
	SLEEP
	JR motorwaiting604
  motornotbusy604:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB605:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB606:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 60.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB607:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB608:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 70.0 VLV_DEG_13
    MOVEF_F 25.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB609:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer610
	DATA8 nos610
	DATA8 busy610
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer610 nos610
	JR_EQ8 0 nos610 motornotbusy610
  motorwaiting610:
	OUTPUT_TEST layer610 nos610 busy610
	JR_EQ8 busy610 0 motornotbusy610
	SLEEP
	JR motorwaiting610
  motornotbusy610:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 230.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB612:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 80.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB613:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 130.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB614:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 170.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB615:
  else576_2:
  endif576:
    JR endif547
  else547_1:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else547_2
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 55.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB617 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB617:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 55.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB618:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB619:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB620:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 140.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB621:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB622:
  else547_2:
  endif547:
    MOVEF_F 200.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB623 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB623:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB624:
  while625:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 600.0 endwhile625
  whilebody625:
    MOVEF_F 471.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB628:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 600.0 whilebody625
  endwhile625:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB631 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB631:
    JR endif444
  else444_1:
    CALL EQ_STRING VGV_IS_ON_SECOND_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else632_1
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB634:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB635:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_A
  while637:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 310.0 endwhile637
  whilebody637:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB640 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB640:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 310.0 whilebody637
  endwhile637:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB643:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB644:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB645:
  else632_1:
  endif632:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB646 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB646:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB647:
    DATA8 layer648
	DATA8 no648
	DATA8 mode8648
	
	MOVEF_8 VGV_LINE no648
	SUB8 no648 1 no648
	DIV8 no648 4 layer648
	MATH MOD8 no648 4 no648

	MOVEF_8 0.0 mode8648
	
	INPUT_DEVICE READY_RAW layer648 no648 0 mode8648 0
  while649:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 330.0 endwhile649
  whilebody649:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB652 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB652:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 330.0 whilebody649
  endwhile649:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB655 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB655:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while656:
    JR_LTEQF VGV_P 20.0 endwhile656
  whilebody656:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB657:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB658 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB658:
    JR_GTF VGV_P 20.0 whilebody656
  endwhile656:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB659:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 200.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'Fales' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB660:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB663:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while664:
    JR_GTEQF VGV_P 20.0 endwhile664
  whilebody664:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB665:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_LTF VGV_P 20.0 whilebody664
  endwhile664:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer667
	DATA8 nos667
	DATA8 busy667
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer667 nos667
	JR_EQ8 0 nos667 motornotbusy667
  motorwaiting667:
	OUTPUT_TEST layer667 nos667 busy667
	JR_EQ8 busy667 0 motornotbusy667
	SLEEP
	JR motorwaiting667
  motornotbusy667:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB668 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB668:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB669:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB670:
  while671:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 200.0 endwhile671
  whilebody671:
    MOVEF_F -100.0 VLV_L_7
    WRITE32 ENDSUB_F_LINE_SLOW_1:CALLSUB674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_SLOW_1
CALLSUB674:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 200.0 whilebody671
  endwhile671:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB677 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB677:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while678:
    JR_LTEQF VGV_P 10.0 endwhile678
  whilebody678:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB679:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F -100.0 VLV_L_7
    WRITE32 ENDSUB_F_LINE_SLOW_1:CALLSUB680 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_SLOW_1
CALLSUB680:
    JR_GTF VGV_P 10.0 whilebody678
  endwhile678:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB681:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 380.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB682:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 42.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB683:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 42.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB684 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB684:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB685 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB685:
  else444_2:
  endif444:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer686
	DATA8 nos686
	DATA8 busy686
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer686 nos686
	JR_EQ8 0 nos686 motornotbusy686
  motorwaiting686:
	OUTPUT_TEST layer686 nos686 busy686
	JR_EQ8 busy686 0 motornotbusy686
	SLEEP
	JR motorwaiting686
  motornotbusy686:
    CALL EQ_STRING VGV_START 'left' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else687_1
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_23
    WRITE32 ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:CALLSUB689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FROM_PROTECTED_TO_FINISH_1
CALLSUB689:
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_24
    WRITE32 ENDSUB_F_TAKE_CUBES_1:CALLSUB690 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_1
CALLSUB690:
    STRINGS DUPLICATE VGV_BROWN_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_RED_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB691 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB691:
    STRINGS DUPLICATE VGV_WHITE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_YELLOW_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB692 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB692:
    STRINGS DUPLICATE VGV_BLUE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_GREEN_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'False' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB693:
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_25
    WRITE32 ENDSUB_F_FINISH_AFTER_DELIVERIES_1:CALLSUB694 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_DELIVERIES_1
CALLSUB694:
    JR endif687
  else687_1:
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_23
    WRITE32 ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:CALLSUB695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FROM_PROTECTED_TO_FINISH_1
CALLSUB695:
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_24
    WRITE32 ENDSUB_F_TAKE_CUBES_1:CALLSUB696 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_1
CALLSUB696:
    STRINGS DUPLICATE VGV_BLUE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_GREEN_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB697 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB697:
    STRINGS DUPLICATE VGV_WHITE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_YELLOW_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB698:
    STRINGS DUPLICATE VGV_BROWN_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_RED_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'False' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB699 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB699:
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_25
    WRITE32 ENDSUB_F_FINISH_AFTER_DELIVERIES_1:CALLSUB700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_DELIVERIES_1
CALLSUB700:
  else687_2:
  endif687:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB701:
    STRINGS DUPLICATE 'True' VLV_TO_DELAY_26
    WRITE32 ENDSUB_F_SHOW_TIME_1:CALLSUB702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SHOW_TIME_1
CALLSUB702:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_MOVEMENT_INIT_1:
    MULF VLV_POWER_1 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF VLV_POWER_1 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
RETSUB_F_MOVEMENT_INIT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVEMENT_INIT_1:
SUB_F_DELAY_1:
    DATA32 milliseconds707
	MOVEF_32 VLV_TIME_2 milliseconds707
	DATA32 timer707
	TIMER_WAIT milliseconds707 timer707
	TIMER_READY timer707
RETSUB_F_DELAY_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_1:
SUB_F_RESET_0:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 2
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_STOP_0:
    OUTPUT_POWER 0 3 0
	OUTPUT_STOP 0 3 1
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_READ_PERCENT_1:
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf714
    DATA8 flag714
    DIVF F.1 F.2 tmpf714
    CP_EQF 0.0 F.2 flag714
    SELECTF flag714 0.0 tmpf714 F.0

    MULF F.0 100.0 VLV_PERCENT_5
RETSUB_F_READ_PERCENT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_READ_PERCENT_1:
SUB_F_LINE_1:
    JR_NEQF VLV_L_6 -100.0 else716_1
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf720
    DATA8 flag720
    DIVF F.1 F.2 tmpf720
    CP_EQF 0.0 F.2 flag720
    SELECTF flag720 0.0 tmpf720 F.0

    MULF F.0 150.0 VLV_L_6
  else716_1:
  endif716:
    SUBF VLV_L_6 50.0 VLV_ERR_6
    SUBF VLV_ERR_6 VGV_LAST_ERR VLV_DIFF_6
    MULF VLV_ERR_6 1.0 F.0
    MULF VLV_DIFF_6 7.0 F.1
    ADDF F.0 F.1 VLV_DELTA_6
    SUBF 80.0 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF 80.0 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VLV_LEFT_POWER_6 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_6 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_6 VGV_LAST_ERR
    DATA32 milliseconds733
	MOVEF_32 5.0 milliseconds733
	DATA32 timer733
	TIMER_WAIT milliseconds733 timer733
	TIMER_READY timer733
RETSUB_F_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_1:
SUB_F_LINE_SLOW_1:
    JR_NEQF VLV_L_7 -100.0 else734_1
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf738
    DATA8 flag738
    DIVF F.1 F.2 tmpf738
    CP_EQF 0.0 F.2 flag738
    SELECTF flag738 0.0 tmpf738 F.0

    MULF F.0 150.0 VLV_L_7
  else734_1:
  endif734:
    SUBF VLV_L_7 50.0 VLV_ERR_7
    SUBF VLV_ERR_7 VGV_LAST_ERR VLV_DIFF_7
    MULF VLV_ERR_7 0.5 F.0
    MULF VLV_DIFF_7 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_7
    SUBF 30.0 VLV_DELTA_7 VLV_LEFT_POWER_7
    ADDF 30.0 VLV_DELTA_7 VLV_RIGHT_POWER_7
    MULF VLV_LEFT_POWER_7 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_7 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_7 VGV_LAST_ERR
    DATA32 milliseconds751
	MOVEF_32 5.0 milliseconds751
	DATA32 timer751
	TIMER_WAIT milliseconds751 timer751
	TIMER_READY timer751
RETSUB_F_LINE_SLOW_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_SLOW_1:
SUB_F_ULTRA_LINE_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VLV_L_8
    SUBF VLV_L_8 VLV_A_8 VLV_ERR_8
    SUBF VLV_ERR_8 VGV_LAST_ERR VLV_DIFF_8
    MULF VLV_ERR_8 0.8 F.0
    MULF VLV_DIFF_8 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_8
    SUBF 40.0 VLV_DELTA_8 VLV_LEFT_POWER_8
    ADDF 40.0 VLV_DELTA_8 VLV_RIGHT_POWER_8
    MULF VLV_LEFT_POWER_8 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_8 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_8 VGV_LAST_ERR
RETSUB_F_ULTRA_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRA_LINE_1:
SUB_F_SPEEDUP_4:
    MOVEF_F 15.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB764 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB764:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB765 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB765:
    MOVEF_F 0.0 VLV_L_10
  while766:
    JR_GTEQF VLV_L_10 VLV_DEG_10 endwhile766
  whilebody766:
    DATAF tmpf767
    DATA8 flag767
    DIVF VLV_L_10 VLV_DEG_10 tmpf767
    CP_EQF 0.0 VLV_DEG_10 flag767
    SELECTF flag767 0.0 tmpf767 VLV_P_10

    SUBF VLV_BASE_POWER_10 VLV_MIN_POWER_10 F.1
    MULF F.1 VLV_P_10 F.0
    ADDF F.0 VLV_MIN_POWER_10 VLV_POWER_10
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_10 VLV_L_10
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_10 VLV_R_10
    SUBF VLV_L_10 VLV_R_10 F.0
    MULF F.0 VLV_P_10 VLV_DELTA_10
    SUBF VLV_POWER_10 VLV_DELTA_10 VLV_LEFT_POWER_10
    ADDF VLV_POWER_10 VLV_DELTA_10 VLV_RIGHT_POWER_10
    MULF VLV_LEFT_POWER_10 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_10 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_10 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_10 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    JR_LTF VLV_L_10 VLV_DEG_10 whilebody766
  endwhile766:
RETSUB_F_SPEEDUP_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPEEDUP_4:
SUB_F_SYNC_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_11
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_11
    SUBF VLV_L_11 VLV_R_11 VLV_ERR_11
    SUBF VLV_ERR_11 VGV_LAST_ERR VLV_DIFF_11
    MULF VLV_ERR_11 1.0 F.0
    MULF VLV_DIFF_11 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_11
    SUBF VLV_POWER_11 VLV_DELTA_11 VLV_LEFT_POWER_11
    ADDF VLV_POWER_11 VLV_DELTA_11 VLV_RIGHT_POWER_11
    MULF VLV_LEFT_POWER_11 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_11 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_11 VGV_LAST_ERR
RETSUB_F_SYNC_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SYNC_1:
SUB_F_FORWARD_DEG_2:
    MOVEF_F VLV_POWER_12 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB802 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB802:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB803:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_12
  while806:
    MATH ABS VLV_L_12 F.0
    MATH ABS VLV_DEG_12 F.1
    JR_GTEQF F.0 F.1 endwhile806
  whilebody806:
    MOVEF_F VLV_POWER_12 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB809 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB809:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_12
    MATH ABS VLV_L_12 F.0
    MATH ABS VLV_DEG_12 F.1
    JR_LTF F.0 F.1 whilebody806
  endwhile806:
RETSUB_F_FORWARD_DEG_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FORWARD_DEG_2:
SUB_F_MOVE_MOTOR_7:
    MOVEF_F VLV_DEG_13 VLV_NORMAL_DEG_13
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_13
    MOVEF_F 0.0 VLV_ZAME_DEG_13
    CALL EQ_STRING VLV_ACCELERATION_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else814_1
    DATAF tmpf816
    DATA8 flag816
    DIVF VLV_DEG_13 2.0 tmpf816
    CP_EQF 0.0 2.0 flag816
    SELECTF flag816 0.0 tmpf816 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag818
	CP_LTF F.0 120.0 flag818
	SELECTF flag818 F.0 120.0 VLV_ACCELERATION_DEG_13
    SUBF VLV_NORMAL_DEG_13 VLV_ACCELERATION_DEG_13 VLV_NORMAL_DEG_13
  else814_1:
  endif814:
    CALL EQ_STRING VLV_ZAME_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else820_1
    DATAF tmpf822
    DATA8 flag822
    DIVF VLV_DEG_13 2.0 tmpf822
    CP_EQF 0.0 2.0 flag822
    SELECTF flag822 0.0 tmpf822 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag824
	CP_LTF F.0 120.0 flag824
	SELECTF flag824 F.0 120.0 VLV_ZAME_DEG_13
    SUBF VLV_NORMAL_DEG_13 VLV_ZAME_DEG_13 VLV_NORMAL_DEG_13
  else820_1:
  endif820:
    CALL EQ_STRING VLV_ACCELERATION_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else826_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_13
    MOVEF_F 0.0 VLV_M_13
    MOVEF_F 10.0 VLV_MIN_POWER_13
    TIMER_READ timeMC1
  while830:
    JR_GTEQF VLV_M_13 VLV_ACCELERATION_DEG_13 endwhile830
  whilebody830:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTEQF F.0 700.0 else831_1
    JR_GTEQF VLV_M_13 20.0 else831_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB833 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB833:
    ADDF VLV_MIN_POWER_13 1.0 VLV_MIN_POWER_13
    TIMER_READ timeMC1
  else831_1:
  endif831:
    DATAF tmpf836
    DATA8 flag836
    DIVF VLV_M_13 VLV_ACCELERATION_DEG_13 tmpf836
    CP_EQF 0.0 VLV_ACCELERATION_DEG_13 flag836
    SELECTF flag836 0.0 tmpf836 VLV_P_13

    SUBF VLV_MAX_POWER_13 VLV_MIN_POWER_13 F.1
    MULF F.1 VLV_P_13 F.0
    ADDF F.0 VLV_MIN_POWER_13 VLV_POWER_13
    MULF VLV_POWER_13 VLV_FORWARD_13 F.0
    CALL MOTOR.START VLV_MOTOR_13 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_13 F.0
    MULF F.0 VLV_FORWARD_13 VLV_M_13
    DATA32 milliseconds844
	MOVEF_32 10.0 milliseconds844
	DATA32 timer844
	TIMER_WAIT milliseconds844 timer844
	TIMER_READY timer844
    JR_LTF VLV_M_13 VLV_ACCELERATION_DEG_13 whilebody830
  endwhile830:
  else826_1:
  endif826:
    JR_LTEQF VLV_NORMAL_DEG_13 0.0 else845_1
    MULF VLV_MAX_POWER_13 VLV_FORWARD_13 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_13 F.0 0.0 VLV_NORMAL_DEG_13 0.0 'False' 

	DATA8 layer847
	DATA8 nos847
	DATA8 busy847
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_13 layer847 nos847
	JR_EQ8 0 nos847 motornotbusy847
  motorwaiting847:
	OUTPUT_TEST layer847 nos847 busy847
	JR_EQ8 busy847 0 motornotbusy847
	SLEEP
	JR motorwaiting847
  motornotbusy847:
  else845_1:
  endif845:
    CALL EQ_STRING VLV_ZAME_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else848_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_13
    MOVEF_F 0.0 VLV_M_13
  while851:
    JR_GTEQF VLV_M_13 VLV_ZAME_DEG_13 endwhile851
  whilebody851:
    DATAF tmpf852
    DATA8 flag852
    DIVF VLV_M_13 VLV_ZAME_DEG_13 tmpf852
    CP_EQF 0.0 VLV_ZAME_DEG_13 flag852
    SELECTF flag852 0.0 tmpf852 F.0

    SUBF 1.0 F.0 VLV_P_13
    SUBF VLV_MAX_POWER_13 10.0 F.1
    MULF F.1 VLV_P_13 F.0
    ADDF F.0 10.0 VLV_POWER_13
    MULF VLV_POWER_13 VLV_FORWARD_13 F.0
    CALL MOTOR.START VLV_MOTOR_13 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_13 F.0
    MULF F.0 VLV_FORWARD_13 VLV_M_13
    DATA32 milliseconds861
	MOVEF_32 10.0 milliseconds861
	DATA32 timer861
	TIMER_WAIT milliseconds861 timer861
	TIMER_READY timer861
    JR_LTF VLV_M_13 VLV_ZAME_DEG_13 whilebody851
  endwhile851:
  else848_1:
  endif848:
    CALL EQ_STRING VLV_TO_STOP_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else862_1
    CALL MOTOR.STOP VLV_MOTOR_13 'True'
  else862_1:
  endif862:
RETSUB_F_MOVE_MOTOR_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_MOTOR_7:
SUB_F_ZAME_4:
    MOVEF_F VLV_BASE_POWER_14 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB865 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB865:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB866 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB866:
    MOVEF_F 0.0 VLV_L_14
  while867:
    JR_GTEQF VLV_L_14 VLV_DEG_14 endwhile867
  whilebody867:
    DATAF tmpf868
    DATA8 flag868
    DIVF VLV_L_14 VLV_DEG_14 tmpf868
    CP_EQF 0.0 VLV_DEG_14 flag868
    SELECTF flag868 0.0 tmpf868 VLV_P_14

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_14 VLV_L_14
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_14 VLV_R_14
    SUBF VLV_L_14 VLV_R_14 F.0
    SUBF 1.0 VLV_P_14 F.1
    MULF F.0 F.1 VLV_DELTA_14
    SUBF VLV_BASE_POWER_14 VLV_MIN_POWER_14 F.1
    SUBF 1.0 VLV_P_14 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_14 VLV_POWER_14
    SUBF VLV_POWER_14 VLV_DELTA_14 VLV_LEFT_POWER_14
    ADDF VLV_POWER_14 VLV_DELTA_14 VLV_RIGHT_POWER_14
    MULF VLV_LEFT_POWER_14 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_14 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_14 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_14 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds890
	MOVEF_32 10.0 milliseconds890
	DATA32 timer890
	TIMER_WAIT milliseconds890 timer890
	TIMER_READY timer890
    JR_LTF VLV_L_14 VLV_DEG_14 whilebody867
  endwhile867:
RETSUB_F_ZAME_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAME_4:
SUB_F_TAKE_CHEM_ON_LEFT_1:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB891 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB891:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB892 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB892:
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB895 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB895:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer896
	DATA8 nos896
	DATA8 busy896
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer896 nos896
	JR_EQ8 0 nos896 motornotbusy896
  motorwaiting896:
	OUTPUT_TEST layer896 nos896 busy896
	JR_EQ8 busy896 0 motornotbusy896
	SLEEP
	JR motorwaiting896
  motornotbusy896:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB897 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB897:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB898 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB898:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB899 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB899:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer900
	DATA8 nos900
	DATA8 busy900
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer900 nos900
	JR_EQ8 0 nos900 motornotbusy900
  motorwaiting900:
	OUTPUT_TEST layer900 nos900 busy900
	JR_EQ8 busy900 0 motornotbusy900
	SLEEP
	JR motorwaiting900
  motornotbusy900:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB901 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB901:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 15.0 VLV_MIN_POWER_14
    MOVEF_F 60.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB902 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB902:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB903 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB903:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB904 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB904:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 85.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB905 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB905:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB906 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB906:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB907 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB907:
    CALL EQ_STRING VLV_FINISH_FORWARD_15 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else908_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB910 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB910:
  else908_1:
  endif908:
    STRINGS DUPLICATE 'True' VLV_CHEM_15
RETSUB_F_TAKE_CHEM_ON_LEFT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_1:
SUB_F_OPEN_CUBES_1:
    MULF 50.0 VLV_COEF_16 F.0
    CALL MOTOR.START VGV_WATER_MOTOR F.0
    DATA32 milliseconds913
	MOVEF_32 700.0 milliseconds913
	DATA32 timer913
	TIMER_WAIT milliseconds913 timer913
	TIMER_READY timer913
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
RETSUB_F_OPEN_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_1:
SUB_F_CLOSE_CUBES_1:
    MULF -50.0 VLV_COEF_17 F.0
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR F.0 0.0 90.0 0.0 'True' 

	DATA8 layer916
	DATA8 nos916
	DATA8 busy916
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer916 nos916
	JR_EQ8 0 nos916 motornotbusy916
  motorwaiting916:
	OUTPUT_TEST layer916 nos916 busy916
	JR_EQ8 busy916 0 motornotbusy916
	SLEEP
	JR motorwaiting916
  motornotbusy916:
RETSUB_F_CLOSE_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_1:
SUB_F_DELIVER_LONG_1:
    CALL EQ_STRING VLV_IS_INVERTED_18 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else917_1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOT_18
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_18
    MOVEF_F 1.0 VLV_COEF_18
    JR endif917
  else917_1:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOT_18
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_18
    MOVEF_F -1.0 VLV_COEF_18
  else917_2:
  endif917:
    JR_NEQF VGV_CUBES_COUNT 2.0 else919_1
    MOVEF_F VLV_COEF_18 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB920 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB920:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD_18 VLV_FORWARD_13
    MOVEF_F 270.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB921 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB921:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB922 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB922:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MULF VLV_FORWARD_18 -1.0 VLV_FORWARD_13
    MOVEF_F 120.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB924 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB924:
    MOVEF_F VLV_COEF_18 VLV_COEF_17
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB925 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB925:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MULF VLV_FORWARD_18 -1.0 VLV_FORWARD_13
    MOVEF_F 145.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB927 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB927:
    MOVEF_F 1.0 VGV_CUBES_COUNT
    JR endif919
  else919_1:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD_18 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB928 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB928:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB929 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB929:
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB930:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB931 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB931:
    MOVEF_F VLV_COEF_18 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB932 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB932:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 45.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB933 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB933:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 45.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB934 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB934:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB935 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB935:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MULF VLV_FORWARD_18 -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB937 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB937:
    MOVEF_F 0.0 VGV_CUBES_COUNT
  else919_2:
  endif919:
RETSUB_F_DELIVER_LONG_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_LONG_1:
SUB_F_DELIVER_NEAR_2:
    CALL EQ_STRING VLV_IS_INVERTED_19 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else938_1
    MOVEF_F 1.0 VLV_COEF_19
    JR endif938
  else938_1:
    MOVEF_F -1.0 VLV_COEF_19
  else938_2:
  endif938:
    MOVEF_F 0.0 VLV_MINUS_DEG_19
    MOVEF_F VLV_COEF_19 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB940 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB940:
    JR_NEQF VGV_CUBES_COUNT 2.0 else941_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 30.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB942 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB942:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB943 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB943:
    MOVEF_F VLV_COEF_19 VLV_COEF_17
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB944 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB944:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 30.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB945 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB945:
    MOVEF_F 1.0 VGV_CUBES_COUNT
    MOVEF_F 40.0 VLV_MINUS_DEG_19
  else941_1:
  endif941:
RETSUB_F_DELIVER_NEAR_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_NEAR_2:
SUB_F_MOVE_TO_NEXT_ZONE_1:
    SUBF 180.0 VLV_MINUS_DEG_20 VLV_DEG_20
    WRITE32 ENDSUB_F_RESET_0:CALLSUB947 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB947:
    MOVEF_F -30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB948 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB948:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB949 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB949:
    MOVEF_F VLV_PERCENT_5 VLV_P_20
  while950:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 VLV_DEG_20 or951
    JR_LTEQF VLV_P_20 20.0 endwhile950
  or951:
  whilebody950:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB954 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB954:
    MOVEF_F VLV_PERCENT_5 VLV_P_20
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 VLV_DEG_20 whilebody950
    JR_GTF VLV_P_20 20.0 whilebody950
  endwhile950:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB957 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB957:
RETSUB_F_MOVE_TO_NEXT_ZONE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_TO_NEXT_ZONE_1:
SUB_F_DELIVER_GROUP_4:
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    CALL EQ_STRING VLV_LONG_21 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else958_1
    STRINGS DUPLICATE VLV_IS_INVERTED_21 VLV_IS_INVERTED_18
    WRITE32 ENDSUB_F_DELIVER_LONG_1:CALLSUB960 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_LONG_1
CALLSUB960:
  else958_1:
  endif958:
    CALL EQ_STRING VLV_NEAR_21 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else961_1
    STRINGS DUPLICATE VLV_IS_INVERTED_21 VLV_IS_INVERTED_19
    WRITE32 ENDSUB_F_DELIVER_NEAR_2:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_NEAR_2
CALLSUB963:
    MOVEF_F VLV_MINUS_DEG_19 VLV_MINUS_DEG_21
  else961_1:
  endif961:
    CALL EQ_STRING VLV_SHOULD_MOVE_BACKWARD_21 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else964_1
    MOVEF_F VLV_MINUS_DEG_21 VLV_MINUS_DEG_20
    WRITE32 ENDSUB_F_MOVE_TO_NEXT_ZONE_1:CALLSUB966 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_TO_NEXT_ZONE_1
CALLSUB966:
  else964_1:
  endif964:
RETSUB_F_DELIVER_GROUP_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_GROUP_4:
SUB_F_GET_MOTORS_6:
    CALL EQ_STRING VLV_IS_INVERTED_22 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else967_1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR1_22
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR2_22
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD1_22
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD2_22
    MOVEF_F 1.0 VLV_COEF_22
    JR endif967
  else967_1:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR1_22
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR2_22
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD1_22
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD2_22
    MOVEF_F -1.0 VLV_COEF_22
  else967_2:
  endif967:
RETSUB_F_GET_MOTORS_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GET_MOTORS_6:
SUB_F_FROM_PROTECTED_TO_FINISH_1:
    STRINGS DUPLICATE VLV_IS_INVERTED_23 VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB969 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB969:
    STRINGS DUPLICATE VLV_MOTOR1_22 VLV_MOTOR1_23
    STRINGS DUPLICATE VLV_MOTOR2_22 VLV_MOTOR2_23
    MOVEF_F VLV_FORWARD1_22 VLV_FORWARD1_23
    MOVEF_F VLV_FORWARD2_22 VLV_FORWARD2_23
    MOVEF_F VLV_COEF_22 VLV_COEF_23
    MOVEF_F 50.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB970 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB970:
    CALL MOTOR.STOP VLV_MOTOR1_23 'True'
    STRINGS DUPLICATE VLV_MOTOR2_23 VLV_MOTOR_13
    MULF VLV_FORWARD2_23 -1.0 VLV_FORWARD_13
    MOVEF_F 340.0 VLV_DEG_13
    MOVEF_F 50.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'False' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB973 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB973:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB974 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB974:
    MOVEF_F 1700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB975 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB975:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB976 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB976:
    STRINGS DUPLICATE VLV_MOTOR2_23 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD2_23 VLV_FORWARD_13
    MOVEF_F 410.0 VLV_DEG_13
    MOVEF_F 50.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB977 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB977:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB978 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB978:
    MULF 80.0 VLV_FORWARD1_23 F.0
    CALL MOTOR.START VLV_MOTOR1_23 F.0
    MULF 90.0 VLV_FORWARD2_23 F.0
    CALL MOTOR.START VLV_MOTOR2_23 F.0
  while983:
    CALL MOTOR.GETCOUNT VLV_MOTOR1_23 F.1
    MULF F.1 VLV_FORWARD1_23 F.0
    JR_GTEQF F.0 800.0 endwhile983
  whilebody983:
    CALL MOTOR.GETCOUNT VLV_MOTOR1_23 F.1
    MULF F.1 VLV_FORWARD1_23 F.0
    JR_LTF F.0 800.0 whilebody983
  endwhile983:
    MULF 50.0 VLV_FORWARD1_23 F.0
    CALL MOTOR.START VLV_MOTOR1_23 F.0
    MULF 50.0 VLV_FORWARD2_23 F.0
    CALL MOTOR.START VLV_MOTOR2_23 F.0
    DATA32 milliseconds992
	MOVEF_32 1200.0 milliseconds992
	DATA32 timer992
	TIMER_WAIT milliseconds992 timer992
	TIMER_READY timer992
    WRITE32 ENDSUB_F_STOP_0:CALLSUB993 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB993:
RETSUB_F_FROM_PROTECTED_TO_FINISH_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:
SUB_F_TAKE_CUBES_1:
    STRINGS DUPLICATE VLV_IS_INVERTED_24 VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB994 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB994:
    STRINGS DUPLICATE VLV_MOTOR1_22 VLV_MOTOR1_24
    STRINGS DUPLICATE VLV_MOTOR2_22 VLV_MOTOR2_24
    MOVEF_F VLV_FORWARD1_22 VLV_FORWARD1_24
    MOVEF_F VLV_FORWARD2_22 VLV_FORWARD2_24
    MOVEF_F VLV_COEF_22 VLV_COEF_24
    MOVEF_F VLV_COEF_24 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB995 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB995:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 75.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB996 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB996:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 75.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB997 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB997:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB998 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB998:
    STRINGS DUPLICATE VLV_MOTOR2_24 VLV_MOTOR_13
    MULF VLV_FORWARD2_24 -1.0 VLV_FORWARD_13
    MOVEF_F 180.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1000 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1000:
    STRINGS DUPLICATE VLV_MOTOR1_24 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD1_24 VLV_FORWARD_13
    MOVEF_F 40.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1001 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1001:
    MULF VLV_FORWARD2_24 -30.0 F.0
    CALL MOTOR.START VLV_MOTOR2_24 F.0
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1004 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1004:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1005 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1005:
    MULF VLV_FORWARD1_24 -40.0 F.0
    CALL MOTOR.START VLV_MOTOR1_24 F.0
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1008 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1008:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1009 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1009:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1010 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1010:
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1011 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1011:
    MOVEF_F 800.0 VLV_DEG_12
    MOVEF_F 40.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB1012 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB1012:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 30.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB1013 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB1013:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1014 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1014:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 80.0 0.0 'True' 

	DATA8 layer1015
	DATA8 nos1015
	DATA8 busy1015
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer1015 nos1015
	JR_EQ8 0 nos1015 motornotbusy1015
  motorwaiting1015:
	OUTPUT_TEST layer1015 nos1015 busy1015
	JR_EQ8 busy1015 0 motornotbusy1015
	SLEEP
	JR motorwaiting1015
  motornotbusy1015:
    STRINGS DUPLICATE VLV_MOTOR2_24 VLV_MOTOR_13
    MULF VLV_FORWARD2_24 -1.0 VLV_FORWARD_13
    MOVEF_F 250.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1017 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1017:
    STRINGS DUPLICATE VLV_MOTOR1_24 VLV_MOTOR_13
    MULF VLV_FORWARD1_24 -1.0 VLV_FORWARD_13
    MOVEF_F 250.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1019 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1019:
    MOVEF_F -30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1020 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1020:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB1021 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB1021:
    MOVEF_F VLV_PERCENT_5 VLV_P_24
  while1022:
    JR_LTEQF VLV_P_24 20.0 endwhile1022
  whilebody1022:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB1023 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB1023:
    MOVEF_F VLV_PERCENT_5 VLV_P_24
    JR_GTF VLV_P_24 20.0 whilebody1022
  endwhile1022:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1024 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1024:
RETSUB_F_TAKE_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_1:
SUB_F_FINISH_AFTER_DELIVERIES_1:
    STRINGS DUPLICATE VLV_IS_INVERTED_25 VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB1025 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB1025:
    STRINGS DUPLICATE VLV_MOTOR1_22 VLV_MOTOR1_25
    STRINGS DUPLICATE VLV_MOTOR2_22 VLV_MOTOR2_25
    MOVEF_F VLV_FORWARD1_22 VLV_FORWARD1_25
    MOVEF_F VLV_FORWARD2_22 VLV_FORWARD2_25
    MOVEF_F VLV_COEF_22 VLV_COEF_25
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1026 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1026:
    MOVEF_F 1500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1027 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1027:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1028 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1028:
    STRINGS DUPLICATE VLV_MOTOR1_25 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD1_25 VLV_FORWARD_13
    MOVEF_F 210.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1029 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1029:
    STRINGS DUPLICATE VLV_MOTOR2_25 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD2_25 VLV_FORWARD_13
    MOVEF_F 150.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1030 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1030:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1031 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1031:
    MOVEF_F 2000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1032 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1032:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1033 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1033:
RETSUB_F_FINISH_AFTER_DELIVERIES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_DELIVERIES_1:
SUB_F_SHOW_TIME_1:
    TIMER_READ timeMC9tmp
	SUB32 timeMC9tmp timeMC9 timeMC9tmp
	MOVE32_F timeMC9tmp VLV_MILLISECOND_26
    DATAF tmpf1035
    DATA8 flag1035
    DIVF VLV_MILLISECOND_26 1000.0 tmpf1035
    CP_EQF 0.0 1000.0 flag1035
    SELECTF flag1035 0.0 tmpf1035 F.0

    MATH FLOOR F.0 VLV_SECONDS_26
    DATAF tmpf1037
    DATA8 flag1037
    DIVF VLV_SECONDS_26 60.0 tmpf1037
    CP_EQF 0.0 60.0 flag1037
    SELECTF flag1037 0.0 tmpf1037 F.0

    MATH FLOOR F.0 VLV_MINUTES_26
    MATH MOD VLV_SECONDS_26 60.0 VLV_SECONDS_26
    STRINGS VALUE_FORMATTED VLV_MINUTES_26 '%g' 99 S.1
    CALL TEXT.APPEND S.1 ':' S.0
    STRINGS VALUE_FORMATTED VLV_SECONDS_26 '%g' 99 S.1
    CALL TEXT.APPEND S.0 S.1 VLV_TEXT_26
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 VLV_TEXT_26
    CALL EQ_STRING VLV_TO_DELAY_26 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1046_1
    MOVEF_F 100000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1048 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1048:
  else1046_1:
  endif1046:
RETSUB_F_SHOW_TIME_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SHOW_TIME_1:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall NE_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 flag 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
isequal:
	STRINGS DUPLICATE 'False' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'True' result
	RETURN
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
