DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERSED_MOTOR 252
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_MOTORS 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_LINE_SENSOR
DATAF VGV_ULTRASONIC
DATAF VGV_RIGHT_FORWARD
DATAF VGV_LEFT_FORWARD
DATAF VGV_A
DATAF VGV_P
DATAF VGV_D
DATAF VGV_LASTERROR
DATAF VGV_NOWERROR
DATAF VGV_DIF
DATAF VGV_INTEGRAL
DATAF VGV_DERIVATIVE
DATAF VGV_UP
DATAF VGV_P_U
DATAF VGV_D_U
DATAF VGV_DEG
DATAS VGV_IS_CHEM_ON_RIGHT 252
DATAS VGV_IS_CHEM_ON_LEFT 252
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_CHEM 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_CUBES_COUNT
DATAF VGV_WATER_STATE
DATAS VGV_OBJECT 252
DATAF VGV_B
DATAF VGV_W
DATAS VGV_START_FROM_RIGHT 252
DATAF VGV_C
DATAF VGV_G
DATAF VGV_R_C
DATAF VGV_L_C
DATAF VGV_DIFF
DATAF VGV_R_P
DATAF VGV_L_P
DATAF VGV_I
DATAS VGV_TAKE_RED_RIGHT 252
DATAS VGV_TAKE_RED_LEFT 252
DATAF VGV_CHEM_BACK
DATAF VGV_NO_BACK
DATAF VGV_ULTRA
DATAF VGV_T
DATAF VGV_MINS
DATAF VGV_SECS
DATAS VGV_STR 252

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VGV_I
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_T
    MOVEF_F 0.0 VGV_MINS
    MOVEF_F 0.0 VGV_SECS
    STRINGS DUPLICATE '' VGV_STR
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VGV_I
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_T
    MOVEF_F 0.0 VGV_MINS
    MOVEF_F 0.0 VGV_SECS
    STRINGS DUPLICATE '' VGV_STR
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 1.0 VGV_LINE_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 1.0 VGV_P
    MOVEF_F 6.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 1.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 2.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE_SENSOR no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_RIGHT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_LEFT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 1.0 'Low battery'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB10:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB11 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB11:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB12:
ENDTHREAD:
    RETURN
SUB_F_LINE_0:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF 20.0 F.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf17
    DATA8 flag17
    DIVF F.0 10.0 tmpf17
    CP_EQF 0.0 10.0 flag17
    SELECTF flag17 0.0 tmpf17 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_LINE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_0:
SUB_F_ULTRASONIC_SLOW_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf30
    DATA8 flag30
    DIVF F.0 10.0 tmpf30
    CP_EQF 0.0 10.0 flag30
    SELECTF flag30 0.0 tmpf30 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 20.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 20.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SLOW_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SLOW_0:
SUB_F_ULTRASONIC_FAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf45
    DATA8 flag45
    DIVF F.0 10.0 tmpf45
    CP_EQF 0.0 10.0 flag45
    SELECTF flag45 0.0 tmpf45 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 30.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 30.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_FAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_FAST_0:
SUB_F_ULTRASONIC_SUPERFAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf60
    DATA8 flag60
    DIVF F.0 10.0 tmpf60
    CP_EQF 0.0 10.0 flag60
    SELECTF flag60 0.0 tmpf60 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 80.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 80.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SUPERFAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SUPERFAST_0:
SUB_F_STOP_0:
    CALL MOTOR.STOP VGV_MOTORS 'True'
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_STOP_RIGHT_0:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
RETSUB_F_STOP_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_RIGHT_0:
SUB_F_DELAY_0:
    DATA32 milliseconds73
	MOVEF_32 300.0 milliseconds73
	DATA32 timer73
	TIMER_WAIT milliseconds73 timer73
	TIMER_READY timer73
RETSUB_F_DELAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_0:
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_LEFT_0:
    MOVEF_F 280.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB75:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB76:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for78:
    JR_GTF VGV_I 20.0 endfor78
  forbody78:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds82
	MOVEF_32 10.0 milliseconds82
	DATA32 timer82
	TIMER_WAIT milliseconds82 timer82
	TIMER_READY timer82
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody78
  endfor78:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 360.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer88
	DATA8 nos88
	DATA8 busy88
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer88 nos88
	JR_EQ8 0 nos88 motornotbusy88
  motorwaiting88:
	OUTPUT_TEST layer88 nos88 busy88
	JR_EQ8 busy88 0 motornotbusy88
	SLEEP
	JR motorwaiting88
  motornotbusy88:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer89
	DATA8 nos89
	DATA8 busy89
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer89 nos89
	JR_EQ8 0 nos89 motornotbusy89
  motorwaiting89:
	OUTPUT_TEST layer89 nos89 busy89
	JR_EQ8 busy89 0 motornotbusy89
	SLEEP
	JR motorwaiting89
  motornotbusy89:
    MOVEF_F 70.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB90:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer91
	DATA8 nos91
	DATA8 busy91
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer91 nos91
	JR_EQ8 0 nos91 motornotbusy91
  motorwaiting91:
	OUTPUT_TEST layer91 nos91 busy91
	JR_EQ8 busy91 0 motornotbusy91
	SLEEP
	JR motorwaiting91
  motornotbusy91:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB92:
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB93:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for95:
    JR_GTF VGV_I 20.0 endfor95
  forbody95:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds98
	MOVEF_32 10.0 milliseconds98
	DATA32 timer98
	TIMER_WAIT milliseconds98 timer98
	TIMER_READY timer98
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody95
  endfor95:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 350.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer104
	DATA8 nos104
	DATA8 busy104
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer104 nos104
	JR_EQ8 0 nos104 motornotbusy104
  motorwaiting104:
	OUTPUT_TEST layer104 nos104 busy104
	JR_EQ8 busy104 0 motornotbusy104
	SLEEP
	JR motorwaiting104
  motornotbusy104:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB105:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB106:
    MOVEF_F 280.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB107:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB108:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB109:
RETSUB_F_TAKE_CHEM_ON_LEFT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_0:
SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for111:
    JR_GTF VGV_I 20.0 endfor111
  forbody111:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds117
	MOVEF_32 30.0 milliseconds117
	DATA32 timer117
	TIMER_WAIT milliseconds117 timer117
	TIMER_READY timer117
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody111
  endfor111:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 170.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer123
	DATA8 nos123
	DATA8 busy123
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer123 nos123
	JR_EQ8 0 nos123 motornotbusy123
  motorwaiting123:
	OUTPUT_TEST layer123 nos123 busy123
	JR_EQ8 busy123 0 motornotbusy123
	SLEEP
	JR motorwaiting123
  motornotbusy123:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB124:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer125
	DATA8 nos125
	DATA8 busy125
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer125 nos125
	JR_EQ8 0 nos125 motornotbusy125
  motorwaiting125:
	OUTPUT_TEST layer125 nos125 busy125
	JR_EQ8 busy125 0 motornotbusy125
	SLEEP
	JR motorwaiting125
  motornotbusy125:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for127:
    JR_GTF VGV_I 20.0 endfor127
  forbody127:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds130
	MOVEF_32 10.0 milliseconds130
	DATA32 timer130
	TIMER_WAIT milliseconds130 timer130
	TIMER_READY timer130
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody127
  endfor127:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer136
	DATA8 nos136
	DATA8 busy136
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer136 nos136
	JR_EQ8 0 nos136 motornotbusy136
  motorwaiting136:
	OUTPUT_TEST layer136 nos136 busy136
	JR_EQ8 busy136 0 motornotbusy136
	SLEEP
	JR motorwaiting136
  motornotbusy136:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB137:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer138
	DATA8 nos138
	DATA8 busy138
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer138 nos138
	JR_EQ8 0 nos138 motornotbusy138
  motorwaiting138:
	OUTPUT_TEST layer138 nos138 busy138
	JR_EQ8 busy138 0 motornotbusy138
	SLEEP
	JR motorwaiting138
  motornotbusy138:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB139:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB140:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for142:
    JR_GTF VGV_I 20.0 endfor142
  forbody142:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds146
	MOVEF_32 10.0 milliseconds146
	DATA32 timer146
	TIMER_WAIT milliseconds146 timer146
	TIMER_READY timer146
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody142
  endfor142:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer152
	DATA8 nos152
	DATA8 busy152
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer152 nos152
	JR_EQ8 0 nos152 motornotbusy152
  motorwaiting152:
	OUTPUT_TEST layer152 nos152 busy152
	JR_EQ8 busy152 0 motornotbusy152
	SLEEP
	JR motorwaiting152
  motornotbusy152:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB153:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB154:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for156:
    JR_GTF VGV_I 20.0 endfor156
  forbody156:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds160
	MOVEF_32 30.0 milliseconds160
	DATA32 timer160
	TIMER_WAIT milliseconds160 timer160
	TIMER_READY timer160
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody156
  endfor156:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 170.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer166
	DATA8 nos166
	DATA8 busy166
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer166 nos166
	JR_EQ8 0 nos166 motornotbusy166
  motorwaiting166:
	OUTPUT_TEST layer166 nos166 busy166
	JR_EQ8 busy166 0 motornotbusy166
	SLEEP
	JR motorwaiting166
  motornotbusy166:
RETSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for168:
    JR_GTF VGV_I 20.0 endfor168
  forbody168:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds174
	MOVEF_32 30.0 milliseconds174
	DATA32 timer174
	TIMER_WAIT milliseconds174 timer174
	TIMER_READY timer174
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody168
  endfor168:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer180
	DATA8 nos180
	DATA8 busy180
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer180 nos180
	JR_EQ8 0 nos180 motornotbusy180
  motorwaiting180:
	OUTPUT_TEST layer180 nos180 busy180
	JR_EQ8 busy180 0 motornotbusy180
	SLEEP
	JR motorwaiting180
  motornotbusy180:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB181:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer182
	DATA8 nos182
	DATA8 busy182
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer182 nos182
	JR_EQ8 0 nos182 motornotbusy182
  motorwaiting182:
	OUTPUT_TEST layer182 nos182 busy182
	JR_EQ8 busy182 0 motornotbusy182
	SLEEP
	JR motorwaiting182
  motornotbusy182:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for184:
    JR_GTF VGV_I 20.0 endfor184
  forbody184:
    MULF VGV_I VGV_LEFT_FORWARD F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds187
	MOVEF_32 10.0 milliseconds187
	DATA32 timer187
	TIMER_WAIT milliseconds187 timer187
	TIMER_READY timer187
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody184
  endfor184:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer193
	DATA8 nos193
	DATA8 busy193
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer193 nos193
	JR_EQ8 0 nos193 motornotbusy193
  motorwaiting193:
	OUTPUT_TEST layer193 nos193 busy193
	JR_EQ8 busy193 0 motornotbusy193
	SLEEP
	JR motorwaiting193
  motornotbusy193:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB194 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB194:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer195
	DATA8 nos195
	DATA8 busy195
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer195 nos195
	JR_EQ8 0 nos195 motornotbusy195
  motorwaiting195:
	OUTPUT_TEST layer195 nos195 busy195
	JR_EQ8 busy195 0 motornotbusy195
	SLEEP
	JR motorwaiting195
  motornotbusy195:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB196:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB197:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for199:
    JR_GTF VGV_I 20.0 endfor199
  forbody199:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds203
	MOVEF_32 10.0 milliseconds203
	DATA32 timer203
	TIMER_WAIT milliseconds203 timer203
	TIMER_READY timer203
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody199
  endfor199:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer209
	DATA8 nos209
	DATA8 busy209
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer209 nos209
	JR_EQ8 0 nos209 motornotbusy209
  motorwaiting209:
	OUTPUT_TEST layer209 nos209 busy209
	JR_EQ8 busy209 0 motornotbusy209
	SLEEP
	JR motorwaiting209
  motornotbusy209:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB210:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB211:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for213:
    JR_GTF VGV_I 20.0 endfor213
  forbody213:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds217
	MOVEF_32 30.0 milliseconds217
	DATA32 timer217
	TIMER_WAIT milliseconds217 timer217
	TIMER_READY timer217
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody213
  endfor213:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer223
	DATA8 nos223
	DATA8 busy223
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer223 nos223
	JR_EQ8 0 nos223 motornotbusy223
  motorwaiting223:
	OUTPUT_TEST layer223 nos223 busy223
	JR_EQ8 busy223 0 motornotbusy223
	SLEEP
	JR motorwaiting223
  motornotbusy223:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else224_1
    CALL MOTOR.START VGV_WATER_MOTOR -30.0
    DATA32 milliseconds226
	MOVEF_32 1500.0 milliseconds226
	DATA32 timer226
	TIMER_WAIT milliseconds226 timer226
	TIMER_READY timer226
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 30.0 0.0 40.0 0.0 'True' 

	DATA8 layer228
	DATA8 nos228
	DATA8 busy228
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer228 nos228
	JR_EQ8 0 nos228 motornotbusy228
  motorwaiting228:
	OUTPUT_TEST layer228 nos228 busy228
	JR_EQ8 busy228 0 motornotbusy228
	SLEEP
	JR motorwaiting228
  motornotbusy228:
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif224
  else224_1:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds230
	MOVEF_32 2000.0 milliseconds230
	DATA32 timer230
	TIMER_WAIT milliseconds230 timer230
	TIMER_READY timer230
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -30.0 0.0 40.0 0.0 'True' 

	DATA8 layer232
	DATA8 nos232
	DATA8 busy232
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer232 nos232
	JR_EQ8 0 nos232 motornotbusy232
  motorwaiting232:
	OUTPUT_TEST layer232 nos232 busy232
	JR_EQ8 busy232 0 motornotbusy232
	SLEEP
	JR motorwaiting232
  motornotbusy232:
  else224_2:
  endif224:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_UPDATE_DISPLAY_0:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_OBJECT
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.1
    CALL TEXT.APPEND 'Red: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.1
    CALL TEXT.APPEND 'White: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 75.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_UPDATE_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UPDATE_DISPLAY_0:
SUB_F_RESET_VALUES_0:
    STRINGS DUPLICATE 'None' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
RETSUB_F_RESET_VALUES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_VALUES_0:
SUB_F_CLOSE_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -10.0 0.0 70.0 0.0 'True' 

	DATA8 layer243
	DATA8 nos243
	DATA8 busy243
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer243 nos243
	JR_EQ8 0 nos243 motornotbusy243
  motorwaiting243:
	OUTPUT_TEST layer243 nos243 busy243
	JR_EQ8 busy243 0 motornotbusy243
	SLEEP
	JR motorwaiting243
  motornotbusy243:
RETSUB_F_CLOSE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_0:
SUB_F_OPEN_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 10.0 0.0 70.0 0.0 'True' 

	DATA8 layer244
	DATA8 nos244
	DATA8 busy244
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer244 nos244
	JR_EQ8 0 nos244 motornotbusy244
  motorwaiting244:
	OUTPUT_TEST layer244 nos244 busy244
	JR_EQ8 busy244 0 motornotbusy244
	SLEEP
	JR motorwaiting244
  motornotbusy244:
RETSUB_F_OPEN_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_0:
SUB_F_TAKE_CUBES_0:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds246
	MOVEF_32 500.0 milliseconds246
	DATA32 timer246
	TIMER_WAIT milliseconds246 timer246
	TIMER_READY timer246
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    WRITE32 ENDSUB_F_STOP_0:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB248:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB249:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer252
	DATA8 nos252
	DATA8 busy252
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer252 nos252
	JR_EQ8 0 nos252 motornotbusy252
  motorwaiting252:
	OUTPUT_TEST layer252 nos252 busy252
	JR_EQ8 busy252 0 motornotbusy252
	SLEEP
	JR motorwaiting252
  motornotbusy252:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB253:
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR -20.0 0.0 360.0 0.0 'True' 

	DATA8 layer254
	DATA8 nos254
	DATA8 busy254
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer254 nos254
	JR_EQ8 0 nos254 motornotbusy254
  motorwaiting254:
	OUTPUT_TEST layer254 nos254 busy254
	JR_EQ8 busy254 0 motornotbusy254
	SLEEP
	JR motorwaiting254
  motornotbusy254:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds258
	MOVEF_32 1000.0 milliseconds258
	DATA32 timer258
	TIMER_WAIT milliseconds258 timer258
	TIMER_READY timer258
    WRITE32 ENDSUB_F_STOP_0:CALLSUB259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB259:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 227.0 VGV_A
  while261:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 930.0 endwhile261
  whilebody261:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB263:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 930.0 whilebody261
  endwhile261:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB265:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer266
	DATA8 nos266
	DATA8 busy266
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer266 nos266
	JR_EQ8 0 nos266 motornotbusy266
  motorwaiting266:
	OUTPUT_TEST layer266 nos266 busy266
	JR_EQ8 busy266 0 motornotbusy266
	SLEEP
	JR motorwaiting266
  motornotbusy266:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB267:
RETSUB_F_TAKE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_0:
SUB_F_TAKE_LONG_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer269
	DATA8 nos269
	DATA8 busy269
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer269 nos269
	JR_EQ8 0 nos269 motornotbusy269
  motorwaiting269:
	OUTPUT_TEST layer269 nos269 busy269
	JR_EQ8 busy269 0 motornotbusy269
	SLEEP
	JR motorwaiting269
  motornotbusy269:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer272
	DATA8 nos272
	DATA8 busy272
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer272 nos272
	JR_EQ8 0 nos272 motornotbusy272
  motorwaiting272:
	OUTPUT_TEST layer272 nos272 busy272
	JR_EQ8 busy272 0 motornotbusy272
	SLEEP
	JR motorwaiting272
  motornotbusy272:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB273:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer276
	DATA8 nos276
	DATA8 busy276
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer276 nos276
	JR_EQ8 0 nos276 motornotbusy276
  motorwaiting276:
	OUTPUT_TEST layer276 nos276 busy276
	JR_EQ8 busy276 0 motornotbusy276
	SLEEP
	JR motorwaiting276
  motornotbusy276:
    JR_NEQF VGV_CUBES_COUNT 2.0 else277_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB278:
  else277_1:
  endif277:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 38.0 'True'

	DATA8 layer281
	DATA8 nos281
	DATA8 busy281
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer281 nos281
	JR_EQ8 0 nos281 motornotbusy281
  motorwaiting281:
	OUTPUT_TEST layer281 nos281 busy281
	JR_EQ8 busy281 0 motornotbusy281
	SLEEP
	JR motorwaiting281
  motornotbusy281:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer283
	DATA8 nos283
	DATA8 busy283
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer283 nos283
	JR_EQ8 0 nos283 motornotbusy283
  motorwaiting283:
	OUTPUT_TEST layer283 nos283 busy283
	JR_EQ8 busy283 0 motornotbusy283
	SLEEP
	JR motorwaiting283
  motornotbusy283:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_0:
SUB_F_TAKE_NEAR_0:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer285
	DATA8 nos285
	DATA8 busy285
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer285 nos285
	JR_EQ8 0 nos285 motornotbusy285
  motorwaiting285:
	OUTPUT_TEST layer285 nos285 busy285
	JR_EQ8 busy285 0 motornotbusy285
	SLEEP
	JR motorwaiting285
  motornotbusy285:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer287
	DATA8 nos287
	DATA8 busy287
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer287 nos287
	JR_EQ8 0 nos287 motornotbusy287
  motorwaiting287:
	OUTPUT_TEST layer287 nos287 busy287
	JR_EQ8 busy287 0 motornotbusy287
	SLEEP
	JR motorwaiting287
  motornotbusy287:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB288:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    MULF 20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer291
	DATA8 nos291
	DATA8 busy291
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer291 nos291
	JR_EQ8 0 nos291 motornotbusy291
  motorwaiting291:
	OUTPUT_TEST layer291 nos291 busy291
	JR_EQ8 busy291 0 motornotbusy291
	SLEEP
	JR motorwaiting291
  motornotbusy291:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB292:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer295
	DATA8 nos295
	DATA8 busy295
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer295 nos295
	JR_EQ8 0 nos295 motornotbusy295
  motorwaiting295:
	OUTPUT_TEST layer295 nos295 busy295
	JR_EQ8 busy295 0 motornotbusy295
	SLEEP
	JR motorwaiting295
  motornotbusy295:
    JR_NEQF VGV_CUBES_COUNT 2.0 else296_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB297:
  else296_1:
  endif296:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer300
	DATA8 nos300
	DATA8 busy300
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer300 nos300
	JR_EQ8 0 nos300 motornotbusy300
  motorwaiting300:
	OUTPUT_TEST layer300 nos300 busy300
	JR_EQ8 busy300 0 motornotbusy300
	SLEEP
	JR motorwaiting300
  motornotbusy300:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer302
	DATA8 nos302
	DATA8 busy302
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer302 nos302
	JR_EQ8 0 nos302 motornotbusy302
  motorwaiting302:
	OUTPUT_TEST layer302 nos302 busy302
	JR_EQ8 busy302 0 motornotbusy302
	SLEEP
	JR motorwaiting302
  motornotbusy302:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer304
	DATA8 nos304
	DATA8 busy304
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer304 nos304
	JR_EQ8 0 nos304 motornotbusy304
  motorwaiting304:
	OUTPUT_TEST layer304 nos304 busy304
	JR_EQ8 busy304 0 motornotbusy304
	SLEEP
	JR motorwaiting304
  motornotbusy304:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB305:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer308
	DATA8 nos308
	DATA8 busy308
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer308 nos308
	JR_EQ8 0 nos308 motornotbusy308
  motorwaiting308:
	OUTPUT_TEST layer308 nos308 busy308
	JR_EQ8 busy308 0 motornotbusy308
	SLEEP
	JR motorwaiting308
  motornotbusy308:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_0:
SUB_F_TAKE_BOTH_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer310
	DATA8 nos310
	DATA8 busy310
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer310 nos310
	JR_EQ8 0 nos310 motornotbusy310
  motorwaiting310:
	OUTPUT_TEST layer310 nos310 busy310
	JR_EQ8 busy310 0 motornotbusy310
	SLEEP
	JR motorwaiting310
  motornotbusy310:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer313
	DATA8 nos313
	DATA8 busy313
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer313 nos313
	JR_EQ8 0 nos313 motornotbusy313
  motorwaiting313:
	OUTPUT_TEST layer313 nos313 busy313
	JR_EQ8 busy313 0 motornotbusy313
	SLEEP
	JR motorwaiting313
  motornotbusy313:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB314:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer317
	DATA8 nos317
	DATA8 busy317
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer317 nos317
	JR_EQ8 0 nos317 motornotbusy317
  motorwaiting317:
	OUTPUT_TEST layer317 nos317 busy317
	JR_EQ8 busy317 0 motornotbusy317
	SLEEP
	JR motorwaiting317
  motornotbusy317:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB318:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer321
	DATA8 nos321
	DATA8 busy321
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer321 nos321
	JR_EQ8 0 nos321 motornotbusy321
  motorwaiting321:
	OUTPUT_TEST layer321 nos321 busy321
	JR_EQ8 busy321 0 motornotbusy321
	SLEEP
	JR motorwaiting321
  motornotbusy321:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer323
	DATA8 nos323
	DATA8 busy323
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer323 nos323
	JR_EQ8 0 nos323 motornotbusy323
  motorwaiting323:
	OUTPUT_TEST layer323 nos323 busy323
	JR_EQ8 busy323 0 motornotbusy323
	SLEEP
	JR motorwaiting323
  motornotbusy323:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer326
	DATA8 nos326
	DATA8 busy326
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer326 nos326
	JR_EQ8 0 nos326 motornotbusy326
  motorwaiting326:
	OUTPUT_TEST layer326 nos326 busy326
	JR_EQ8 busy326 0 motornotbusy326
	SLEEP
	JR motorwaiting326
  motornotbusy326:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB327:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer330
	DATA8 nos330
	DATA8 busy330
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer330 nos330
	JR_EQ8 0 nos330 motornotbusy330
  motorwaiting330:
	OUTPUT_TEST layer330 nos330 busy330
	JR_EQ8 busy330 0 motornotbusy330
	SLEEP
	JR motorwaiting330
  motornotbusy330:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer332
	DATA8 nos332
	DATA8 busy332
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer332 nos332
	JR_EQ8 0 nos332 motornotbusy332
  motorwaiting332:
	OUTPUT_TEST layer332 nos332 busy332
	JR_EQ8 busy332 0 motornotbusy332
	SLEEP
	JR motorwaiting332
  motornotbusy332:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer334
	DATA8 nos334
	DATA8 busy334
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer334 nos334
	JR_EQ8 0 nos334 motornotbusy334
  motorwaiting334:
	OUTPUT_TEST layer334 nos334 busy334
	JR_EQ8 busy334 0 motornotbusy334
	SLEEP
	JR motorwaiting334
  motornotbusy334:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer337
	DATA8 nos337
	DATA8 busy337
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer337 nos337
	JR_EQ8 0 nos337 motornotbusy337
  motorwaiting337:
	OUTPUT_TEST layer337 nos337 busy337
	JR_EQ8 busy337 0 motornotbusy337
	SLEEP
	JR motorwaiting337
  motornotbusy337:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_0:
SUB_F_TAKE_NEAR_DOUBLE_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer339
	DATA8 nos339
	DATA8 busy339
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer339 nos339
	JR_EQ8 0 nos339 motornotbusy339
  motorwaiting339:
	OUTPUT_TEST layer339 nos339 busy339
	JR_EQ8 busy339 0 motornotbusy339
	SLEEP
	JR motorwaiting339
  motornotbusy339:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer341
	DATA8 nos341
	DATA8 busy341
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer341 nos341
	JR_EQ8 0 nos341 motornotbusy341
  motorwaiting341:
	OUTPUT_TEST layer341 nos341 busy341
	JR_EQ8 busy341 0 motornotbusy341
	SLEEP
	JR motorwaiting341
  motornotbusy341:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer344
	DATA8 nos344
	DATA8 busy344
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer344 nos344
	JR_EQ8 0 nos344 motornotbusy344
  motorwaiting344:
	OUTPUT_TEST layer344 nos344 busy344
	JR_EQ8 busy344 0 motornotbusy344
	SLEEP
	JR motorwaiting344
  motornotbusy344:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB345:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer348
	DATA8 nos348
	DATA8 busy348
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer348 nos348
	JR_EQ8 0 nos348 motornotbusy348
  motorwaiting348:
	OUTPUT_TEST layer348 nos348 busy348
	JR_EQ8 busy348 0 motornotbusy348
	SLEEP
	JR motorwaiting348
  motornotbusy348:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB349:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer352
	DATA8 nos352
	DATA8 busy352
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer352 nos352
	JR_EQ8 0 nos352 motornotbusy352
  motorwaiting352:
	OUTPUT_TEST layer352 nos352 busy352
	JR_EQ8 busy352 0 motornotbusy352
	SLEEP
	JR motorwaiting352
  motornotbusy352:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB353:
RETSUB_F_TAKE_NEAR_DOUBLE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer355
	DATA8 nos355
	DATA8 busy355
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer355 nos355
	JR_EQ8 0 nos355 motornotbusy355
  motorwaiting355:
	OUTPUT_TEST layer355 nos355 busy355
	JR_EQ8 busy355 0 motornotbusy355
	SLEEP
	JR motorwaiting355
  motornotbusy355:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer357
	DATA8 nos357
	DATA8 busy357
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer357 nos357
	JR_EQ8 0 nos357 motornotbusy357
  motorwaiting357:
	OUTPUT_TEST layer357 nos357 busy357
	JR_EQ8 busy357 0 motornotbusy357
	SLEEP
	JR motorwaiting357
  motornotbusy357:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer360
	DATA8 nos360
	DATA8 busy360
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer360 nos360
	JR_EQ8 0 nos360 motornotbusy360
  motorwaiting360:
	OUTPUT_TEST layer360 nos360 busy360
	JR_EQ8 busy360 0 motornotbusy360
	SLEEP
	JR motorwaiting360
  motornotbusy360:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB361:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer364
	DATA8 nos364
	DATA8 busy364
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer364 nos364
	JR_EQ8 0 nos364 motornotbusy364
  motorwaiting364:
	OUTPUT_TEST layer364 nos364 busy364
	JR_EQ8 busy364 0 motornotbusy364
	SLEEP
	JR motorwaiting364
  motornotbusy364:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB365:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer368
	DATA8 nos368
	DATA8 busy368
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer368 nos368
	JR_EQ8 0 nos368 motornotbusy368
  motorwaiting368:
	OUTPUT_TEST layer368 nos368 busy368
	JR_EQ8 busy368 0 motornotbusy368
	SLEEP
	JR motorwaiting368
  motornotbusy368:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB369:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
SUB_F_FINISH_AFTER_NEAR_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds373
	MOVEF_32 1500.0 milliseconds373
	DATA32 timer373
	TIMER_WAIT milliseconds373 timer373
	TIMER_READY timer373
    WRITE32 ENDSUB_F_STOP_0:CALLSUB374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB374:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer376
	DATA8 nos376
	DATA8 busy376
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer376 nos376
	JR_EQ8 0 nos376 motornotbusy376
  motorwaiting376:
	OUTPUT_TEST layer376 nos376 busy376
	JR_EQ8 busy376 0 motornotbusy376
	SLEEP
	JR motorwaiting376
  motornotbusy376:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer378
	DATA8 nos378
	DATA8 busy378
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer378 nos378
	JR_EQ8 0 nos378 motornotbusy378
  motorwaiting378:
	OUTPUT_TEST layer378 nos378 busy378
	JR_EQ8 busy378 0 motornotbusy378
	SLEEP
	JR motorwaiting378
  motornotbusy378:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds382
	MOVEF_32 1000.0 milliseconds382
	DATA32 timer382
	TIMER_WAIT milliseconds382 timer382
	TIMER_READY timer382
    WRITE32 ENDSUB_F_STOP_0:CALLSUB383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB383:
RETSUB_F_FINISH_AFTER_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_0:
SUB_F_GO_FORWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_0:
SUB_F_GO_FORWARD_RIGHT_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 21.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_RIGHT_0:
SUB_F_GO_BACKWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF -20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF -20.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_BACKWARD_0:
SUB_F_MOVE_FORWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while422:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile422
  whilebody422:
    WRITE32 ENDSUB_F_GO_FORWARD_0:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_0
CALLSUB424:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody422
  endwhile422:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB426:
RETSUB_F_MOVE_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_0:
SUB_F_MOVE_BACKWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while429:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_LTEQF F.0 F.1 endwhile429
  whilebody429:
    WRITE32 ENDSUB_F_GO_BACKWARD_0:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_0
CALLSUB432:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_GTF F.0 F.1 whilebody429
  endwhile429:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB435:
RETSUB_F_MOVE_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_0:
SUB_F_MAIN_0:
    TIMER_READ timeMC9
    STRINGS DUPLICATE 'False' VGV_START_FROM_RIGHT
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else437_1
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 53.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds442
	MOVEF_32 2000.0 milliseconds442
	DATA32 timer442
	TIMER_WAIT milliseconds442 timer442
	TIMER_READY timer442
    WRITE32 ENDSUB_F_STOP_0:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB443:
    MULF VGV_RIGHT_FORWARD -30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds446
	MOVEF_32 1000.0 milliseconds446
	DATA32 timer446
	TIMER_WAIT milliseconds446 timer446
	TIMER_READY timer446
    WRITE32 ENDSUB_F_STOP_0:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB447:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB448:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 200.0 0.0 'True' 

	DATA8 layer450
	DATA8 nos450
	DATA8 busy450
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer450 nos450
	JR_EQ8 0 nos450 motornotbusy450
  motorwaiting450:
	OUTPUT_TEST layer450 nos450 busy450
	JR_EQ8 busy450 0 motornotbusy450
	SLEEP
	JR motorwaiting450
  motornotbusy450:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB451:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer453
	DATA8 nos453
	DATA8 busy453
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer453 nos453
	JR_EQ8 0 nos453 motornotbusy453
  motorwaiting453:
	OUTPUT_TEST layer453 nos453 busy453
	JR_EQ8 busy453 0 motornotbusy453
	SLEEP
	JR motorwaiting453
  motornotbusy453:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB454:
  else437_1:
  endif437:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB455:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 80.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    MOVEF_F 1200.0 VGV_DEG
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else460_1
    MOVEF_F 1100.0 VGV_DEG
  else460_1:
  endif460:
  while462:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile462
  whilebody462:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody462
  endwhile462:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 55.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while468:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile468
  whilebody468:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody468
  endwhile468:
  while471:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile471
  whilebody471:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody471
  endwhile471:
    WRITE32 ENDSUB_F_STOP_RIGHT_0:CALLSUB474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_RIGHT_0
CALLSUB474:
    MOVEF_F 105.0 VGV_A
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB475:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 290.0 0.0 'True' 

	DATA8 layer477
	DATA8 nos477
	DATA8 busy477
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer477 nos477
	JR_EQ8 0 nos477 motornotbusy477
  motorwaiting477:
	OUTPUT_TEST layer477 nos477 busy477
	JR_EQ8 busy477 0 motornotbusy477
	SLEEP
	JR motorwaiting477
  motornotbusy477:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB478:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 240.0 0.0 'True' 

	DATA8 layer480
	DATA8 nos480
	DATA8 busy480
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer480 nos480
	JR_EQ8 0 nos480 motornotbusy480
  motorwaiting480:
	OUTPUT_TEST layer480 nos480 busy480
	JR_EQ8 busy480 0 motornotbusy480
	SLEEP
	JR motorwaiting480
  motornotbusy480:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while482:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile482
  whilebody482:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB484:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody482
  endwhile482:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB486:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB487:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    MOVEF_F 500.0 VGV_C
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB489:
    JR_LTEQF VGV_B 80.0 else490_1
    DATA8 layer491
	DATA8 no491
	DATA8 mode8491
	
	MOVEF_8 VGV_RIGHT_SENSOR no491
	SUB8 no491 1 no491
	DIV8 no491 4 layer491
	MATH MOD8 no491 4 no491

	MOVEF_8 2.0 mode8491
	
	INPUT_DEVICE READY_RAW layer491 no491 0 mode8491 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer493
	DATA8 no493
	DATA8 mode8493
	
	MOVEF_8 VGV_RIGHT_SENSOR no493
	SUB8 no493 1 no493
	DIV8 no493 4 layer493
	MATH MOD8 no493 4 no493

	MOVEF_8 1.0 mode8493
	
	INPUT_DEVICE READY_RAW layer493 no493 0 mode8493 0
    JR_LTEQF VGV_G 100.0 else494_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB495:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif494
  else494_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB496:
    STRINGS DUPLICATE 'True' VGV_BROWN
    MOVEF_F 95.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB497:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB498:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB499 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB499:
  else494_2:
  endif494:
    JR endif490
  else490_1:
    JR_LTEQF VGV_B 5.0 else490_2
    DATA8 layer500
	DATA8 no500
	DATA8 mode8500
	
	MOVEF_8 VGV_RIGHT_SENSOR no500
	SUB8 no500 1 no500
	DIV8 no500 4 layer500
	MATH MOD8 no500 4 no500

	MOVEF_8 4.0 mode8500
	
	INPUT_DEVICE READY_RAW layer500 no500 0 mode8500 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    DATA8 layer502
	DATA8 no502
	DATA8 mode8502
	
	MOVEF_8 VGV_RIGHT_SENSOR no502
	SUB8 no502 1 no502
	DIV8 no502 4 layer502
	MATH MOD8 no502 4 no502

	MOVEF_8 1.0 mode8502
	
	INPUT_DEVICE READY_RAW layer502 no502 0 mode8502 0
    STRINGS DUPLICATE 'None' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB503:
    JR_LTEQF VGV_W 29.0 else504_1
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB505:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB506:
  else504_1:
  endif504:
  else490_2:
  endif490:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB507:
    DATA8 layer508
	DATA8 no508
	DATA8 mode8508
	
	MOVEF_8 VGV_LINE_SENSOR no508
	SUB8 no508 1 no508
	DIV8 no508 4 layer508
	MATH MOD8 no508 4 no508

	MOVEF_8 2.0 mode8508
	
	INPUT_DEVICE READY_RAW layer508 no508 0 mode8508 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    WRITE32 ENDSUB_F_STOP_0:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB510:
  while511:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C or512
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 5.0 endwhile511
  or512:
  whilebody511:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB515:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody511
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 5.0 whilebody511
  endwhile511:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB518:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB519:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB520:
    MOVEF_F 350.0 VGV_C
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else521_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB523 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB523:
    MOVEF_F 90.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB524:
    ADDF VGV_C 110.0 VGV_C
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB526:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB528:
    JR_LTEQF VGV_B 80.0 else529_1
    DATA8 layer530
	DATA8 no530
	DATA8 mode8530
	
	MOVEF_8 VGV_RIGHT_SENSOR no530
	SUB8 no530 1 no530
	DIV8 no530 4 layer530
	MATH MOD8 no530 4 no530

	MOVEF_8 2.0 mode8530
	
	INPUT_DEVICE READY_RAW layer530 no530 0 mode8530 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer532
	DATA8 no532
	DATA8 mode8532
	
	MOVEF_8 VGV_RIGHT_SENSOR no532
	SUB8 no532 1 no532
	DIV8 no532 4 layer532
	MATH MOD8 no532 4 no532

	MOVEF_8 1.0 mode8532
	
	INPUT_DEVICE READY_RAW layer532 no532 0 mode8532 0
    JR_LTEQF VGV_G 100.0 else533_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB534:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif533
  else533_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB535:
    STRINGS DUPLICATE 'True' VGV_BROWN
    MOVEF_F 80.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB536:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB537:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB538:
  else533_2:
  endif533:
    JR endif529
  else529_1:
    JR_GTF VGV_B 12.0 or539
    JR_GTEQF VGV_B 16.0 else529_2
  or539:
    DATA8 layer540
	DATA8 no540
	DATA8 mode8540
	
	MOVEF_8 VGV_RIGHT_SENSOR no540
	SUB8 no540 1 no540
	DIV8 no540 4 layer540
	MATH MOD8 no540 4 no540

	MOVEF_8 4.0 mode8540
	
	INPUT_DEVICE READY_RAW layer540 no540 0 mode8540 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB542 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB542:
    DATA8 layer543
	DATA8 no543
	DATA8 mode8543
	
	MOVEF_8 VGV_RIGHT_SENSOR no543
	SUB8 no543 1 no543
	DIV8 no543 4 layer543
	MATH MOD8 no543 4 no543

	MOVEF_8 1.0 mode8543
	
	INPUT_DEVICE READY_RAW layer543 no543 0 mode8543 0
    JR_GTF VGV_W 55.0 or545
    JR_GTEQF VGV_W 15.0 else544_1
  or545:
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB546 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB546:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB547:
  else544_1:
  endif544:
  else529_2:
  endif529:
  else521_1:
  endif521:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB548:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while550:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile550
  whilebody550:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB552 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB552:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody550
  endwhile550:
    MOVEF_F 1.0 VGV_P_U
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else554_1
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    JR endif554
  else554_1:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  else554_2:
  endif554:
    DATA32 milliseconds562
	MOVEF_32 1000.0 milliseconds562
	DATA32 timer562
	TIMER_WAIT milliseconds562 timer562
	TIMER_READY timer562
    WRITE32 ENDSUB_F_STOP_0:CALLSUB563 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB563:
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_LEFT
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB564:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB566:
    JR_LTEQF VGV_B 85.0 else567_1
    DATA8 layer568
	DATA8 no568
	DATA8 mode8568
	
	MOVEF_8 VGV_RIGHT_SENSOR no568
	SUB8 no568 1 no568
	DIV8 no568 4 layer568
	MATH MOD8 no568 4 no568

	MOVEF_8 2.0 mode8568
	
	INPUT_DEVICE READY_RAW layer568 no568 0 mode8568 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB569:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer571
	DATA8 no571
	DATA8 mode8571
	
	MOVEF_8 VGV_RIGHT_SENSOR no571
	SUB8 no571 1 no571
	DIV8 no571 4 layer571
	MATH MOD8 no571 4 no571

	MOVEF_8 1.0 mode8571
	
	INPUT_DEVICE READY_RAW layer571 no571 0 mode8571 0
    JR_LTEQF VGV_G 100.0 else572_1
    STRINGS DUPLICATE 'R: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB573:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif572
  else572_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB574:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB575:
  else572_2:
  endif572:
    JR endif567
  else567_1:
    JR_LTEQF VGV_B 10.0 else567_2
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB576:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_RIGHT
  else567_2:
  endif567:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB577:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else578_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB580:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB582:
    JR_LTEQF VGV_B 90.0 else583_1
    DATA8 layer584
	DATA8 no584
	DATA8 mode8584
	
	MOVEF_8 VGV_LEFT_SENSOR no584
	SUB8 no584 1 no584
	DIV8 no584 4 layer584
	MATH MOD8 no584 4 no584

	MOVEF_8 2.0 mode8584
	
	INPUT_DEVICE READY_RAW layer584 no584 0 mode8584 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB585:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer587
	DATA8 no587
	DATA8 mode8587
	
	MOVEF_8 VGV_LEFT_SENSOR no587
	SUB8 no587 1 no587
	DIV8 no587 4 layer587
	MATH MOD8 no587 4 no587

	MOVEF_8 1.0 mode8587
	
	INPUT_DEVICE READY_RAW layer587 no587 0 mode8587 0
    JR_LTEQF VGV_G 100.0 else588_1
    STRINGS DUPLICATE 'L: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB589 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB589:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif588
  else588_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB590:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB591:
  else588_2:
  endif588:
    JR endif583
  else583_1:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 30.0 0.0 'True' 

	DATA8 layer593
	DATA8 nos593
	DATA8 busy593
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer593 nos593
	JR_EQ8 0 nos593 motornotbusy593
  motorwaiting593:
	OUTPUT_TEST layer593 nos593 busy593
	JR_EQ8 busy593 0 motornotbusy593
	SLEEP
	JR motorwaiting593
  motornotbusy593:
    DATA32 milliseconds594
	MOVEF_32 500.0 milliseconds594
	DATA32 timer594
	TIMER_WAIT milliseconds594 timer594
	TIMER_READY timer594
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds601
	MOVEF_32 500.0 milliseconds601
	DATA32 timer601
	TIMER_WAIT milliseconds601 timer601
	TIMER_READY timer601
    JR_LTEQF VGV_B 28.0 else602_1
    WRITE32 ENDSUB_F_STOP_0:CALLSUB603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB603:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB604:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_LEFT
  else602_1:
  endif602:
  else583_2:
  endif583:
  else578_1:
  endif578:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB605:
    MOVEF_F 130.0 VGV_CHEM_BACK
    MOVEF_F 120.0 VGV_NO_BACK
    CALL EQ_STRING VGV_TAKE_RED_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else606_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for609:
    JR_GTF VGV_I 20.0 endfor609
  forbody609:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds615
	MOVEF_32 30.0 milliseconds615
	DATA32 timer615
	TIMER_WAIT milliseconds615 timer615
	TIMER_READY timer615
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody609
  endfor609:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer621
	DATA8 nos621
	DATA8 busy621
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer621 nos621
	JR_EQ8 0 nos621 motornotbusy621
  motorwaiting621:
	OUTPUT_TEST layer621 nos621 busy621
	JR_EQ8 busy621 0 motornotbusy621
	SLEEP
	JR motorwaiting621
  motornotbusy621:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB622:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer624
	DATA8 nos624
	DATA8 busy624
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer624 nos624
	JR_EQ8 0 nos624 motornotbusy624
  motorwaiting624:
	OUTPUT_TEST layer624 nos624 busy624
	JR_EQ8 busy624 0 motornotbusy624
	SLEEP
	JR motorwaiting624
  motornotbusy624:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB625:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer626
	DATA8 nos626
	DATA8 busy626
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer626 nos626
	JR_EQ8 0 nos626 motornotbusy626
  motorwaiting626:
	OUTPUT_TEST layer626 nos626 busy626
	JR_EQ8 busy626 0 motornotbusy626
	SLEEP
	JR motorwaiting626
  motornotbusy626:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for628:
    JR_GTF VGV_I 20.0 endfor628
  forbody628:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds632
	MOVEF_32 20.0 milliseconds632
	DATA32 timer632
	TIMER_WAIT milliseconds632 timer632
	TIMER_READY timer632
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody628
  endfor628:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer638
	DATA8 nos638
	DATA8 busy638
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer638 nos638
	JR_EQ8 0 nos638 motornotbusy638
  motorwaiting638:
	OUTPUT_TEST layer638 nos638 busy638
	JR_EQ8 busy638 0 motornotbusy638
	SLEEP
	JR motorwaiting638
  motornotbusy638:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB639 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB639:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer640
	DATA8 nos640
	DATA8 busy640
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer640 nos640
	JR_EQ8 0 nos640 motornotbusy640
  motorwaiting640:
	OUTPUT_TEST layer640 nos640 busy640
	JR_EQ8 busy640 0 motornotbusy640
	SLEEP
	JR motorwaiting640
  motornotbusy640:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB641:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for643:
    JR_GTF VGV_I 20.0 endfor643
  forbody643:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds649
	MOVEF_32 20.0 milliseconds649
	DATA32 timer649
	TIMER_WAIT milliseconds649 timer649
	TIMER_READY timer649
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody643
  endfor643:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer655
	DATA8 nos655
	DATA8 busy655
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer655 nos655
	JR_EQ8 0 nos655 motornotbusy655
  motorwaiting655:
	OUTPUT_TEST layer655 nos655 busy655
	JR_EQ8 busy655 0 motornotbusy655
	SLEEP
	JR motorwaiting655
  motornotbusy655:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB656 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB656:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB657:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer659
	DATA8 nos659
	DATA8 busy659
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer659 nos659
	JR_EQ8 0 nos659 motornotbusy659
  motorwaiting659:
	OUTPUT_TEST layer659 nos659 busy659
	JR_EQ8 busy659 0 motornotbusy659
	SLEEP
	JR motorwaiting659
  motornotbusy659:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB660:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds664
	MOVEF_32 1500.0 milliseconds664
	DATA32 timer664
	TIMER_WAIT milliseconds664 timer664
	TIMER_READY timer664
    WRITE32 ENDSUB_F_STOP_0:CALLSUB665 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB665:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB666 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB666:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for668:
    JR_GTF VGV_I 20.0 endfor668
  forbody668:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds674
	MOVEF_32 20.0 milliseconds674
	DATA32 timer674
	TIMER_WAIT milliseconds674 timer674
	TIMER_READY timer674
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody668
  endfor668:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer680
	DATA8 nos680
	DATA8 busy680
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer680 nos680
	JR_EQ8 0 nos680 motornotbusy680
  motorwaiting680:
	OUTPUT_TEST layer680 nos680 busy680
	JR_EQ8 busy680 0 motornotbusy680
	SLEEP
	JR motorwaiting680
  motornotbusy680:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB681:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB682:
    JR endif606
  else606_1:
    CALL EQ_STRING VGV_TAKE_RED_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else606_2
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for685:
    JR_GTF VGV_I 20.0 endfor685
  forbody685:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds691
	MOVEF_32 30.0 milliseconds691
	DATA32 timer691
	TIMER_WAIT milliseconds691 timer691
	TIMER_READY timer691
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody685
  endfor685:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer697
	DATA8 nos697
	DATA8 busy697
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer697 nos697
	JR_EQ8 0 nos697 motornotbusy697
  motorwaiting697:
	OUTPUT_TEST layer697 nos697 busy697
	JR_EQ8 busy697 0 motornotbusy697
	SLEEP
	JR motorwaiting697
  motornotbusy697:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB698:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer700
	DATA8 nos700
	DATA8 busy700
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer700 nos700
	JR_EQ8 0 nos700 motornotbusy700
  motorwaiting700:
	OUTPUT_TEST layer700 nos700 busy700
	JR_EQ8 busy700 0 motornotbusy700
	SLEEP
	JR motorwaiting700
  motornotbusy700:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB701:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer702
	DATA8 nos702
	DATA8 busy702
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer702 nos702
	JR_EQ8 0 nos702 motornotbusy702
  motorwaiting702:
	OUTPUT_TEST layer702 nos702 busy702
	JR_EQ8 busy702 0 motornotbusy702
	SLEEP
	JR motorwaiting702
  motornotbusy702:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for704:
    JR_GTF VGV_I 20.0 endfor704
  forbody704:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds708
	MOVEF_32 20.0 milliseconds708
	DATA32 timer708
	TIMER_WAIT milliseconds708 timer708
	TIMER_READY timer708
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody704
  endfor704:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer714
	DATA8 nos714
	DATA8 busy714
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer714 nos714
	JR_EQ8 0 nos714 motornotbusy714
  motorwaiting714:
	OUTPUT_TEST layer714 nos714 busy714
	JR_EQ8 busy714 0 motornotbusy714
	SLEEP
	JR motorwaiting714
  motornotbusy714:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB715:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer716
	DATA8 nos716
	DATA8 busy716
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer716 nos716
	JR_EQ8 0 nos716 motornotbusy716
  motorwaiting716:
	OUTPUT_TEST layer716 nos716 busy716
	JR_EQ8 busy716 0 motornotbusy716
	SLEEP
	JR motorwaiting716
  motornotbusy716:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB717 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB717:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for719:
    JR_GTF VGV_I 20.0 endfor719
  forbody719:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds725
	MOVEF_32 20.0 milliseconds725
	DATA32 timer725
	TIMER_WAIT milliseconds725 timer725
	TIMER_READY timer725
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody719
  endfor719:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer731
	DATA8 nos731
	DATA8 busy731
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer731 nos731
	JR_EQ8 0 nos731 motornotbusy731
  motorwaiting731:
	OUTPUT_TEST layer731 nos731 busy731
	JR_EQ8 busy731 0 motornotbusy731
	SLEEP
	JR motorwaiting731
  motornotbusy731:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB732 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB732:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB733:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer735
	DATA8 nos735
	DATA8 busy735
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer735 nos735
	JR_EQ8 0 nos735 motornotbusy735
  motorwaiting735:
	OUTPUT_TEST layer735 nos735 busy735
	JR_EQ8 busy735 0 motornotbusy735
	SLEEP
	JR motorwaiting735
  motornotbusy735:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB736:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds740
	MOVEF_32 1000.0 milliseconds740
	DATA32 timer740
	TIMER_WAIT milliseconds740 timer740
	TIMER_READY timer740
    WRITE32 ENDSUB_F_STOP_0:CALLSUB741 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB741:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB742:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for744:
    JR_GTF VGV_I 20.0 endfor744
  forbody744:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds750
	MOVEF_32 20.0 milliseconds750
	DATA32 timer750
	TIMER_WAIT milliseconds750 timer750
	TIMER_READY timer750
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody744
  endfor744:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer756
	DATA8 nos756
	DATA8 busy756
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer756 nos756
	JR_EQ8 0 nos756 motornotbusy756
  motorwaiting756:
	OUTPUT_TEST layer756 nos756 busy756
	JR_EQ8 busy756 0 motornotbusy756
	SLEEP
	JR motorwaiting756
  motornotbusy756:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB757 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB757:
    JR endif606
  else606_2:
    MOVEF_F VGV_NO_BACK VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB758 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB758:
  else606_3:
  endif606:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer761
	DATA8 nos761
	DATA8 busy761
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer761 nos761
	JR_EQ8 0 nos761 motornotbusy761
  motorwaiting761:
	OUTPUT_TEST layer761 nos761 busy761
	JR_EQ8 busy761 0 motornotbusy761
	SLEEP
	JR motorwaiting761
  motornotbusy761:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB762:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB763 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB763:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds767
	MOVEF_32 700.0 milliseconds767
	DATA32 timer767
	TIMER_WAIT milliseconds767 timer767
	TIMER_READY timer767
    WRITE32 ENDSUB_F_STOP_0:CALLSUB768 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB768:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    ADDF F.0 5.0 VGV_A
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 430.0 'True'

	DATA8 layer773
	DATA8 nos773
	DATA8 busy773
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer773 nos773
	JR_EQ8 0 nos773 motornotbusy773
  motorwaiting773:
	OUTPUT_TEST layer773 nos773 busy773
	JR_EQ8 busy773 0 motornotbusy773
	SLEEP
	JR motorwaiting773
  motornotbusy773:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while775:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile775
  whilebody775:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB777 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB777:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody775
  endwhile775:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA8 layer783
	DATA8 no783
	DATA8 mode8783
	
	MOVEF_8 VGV_LINE_SENSOR no783
	SUB8 no783 1 no783
	DIV8 no783 4 layer783
	MATH MOD8 no783 4 no783

	MOVEF_8 0.0 mode8783
	
	INPUT_DEVICE READY_RAW layer783 no783 0 mode8783 0
  while784:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 or785
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 220.0 endwhile784
  or785:
  whilebody784:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 whilebody784
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 220.0 whilebody784
  endwhile784:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB790 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB790:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB791 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB791:
    MOVEF_F 92.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB792:
    DATA8 layer793
	DATA8 no793
	DATA8 mode8793
	
	MOVEF_8 VGV_LINE_SENSOR no793
	SUB8 no793 1 no793
	DIV8 no793 4 layer793
	MATH MOD8 no793 4 no793

	MOVEF_8 0.0 mode8793
	
	INPUT_DEVICE READY_RAW layer793 no793 0 mode8793 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB794:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB796:
    JR_LTEQF VGV_B 45.0 else797_1
    DATA8 layer798
	DATA8 no798
	DATA8 mode8798
	
	MOVEF_8 VGV_LEFT_SENSOR no798
	SUB8 no798 1 no798
	DIV8 no798 4 layer798
	MATH MOD8 no798 4 no798

	MOVEF_8 2.0 mode8798
	
	INPUT_DEVICE READY_RAW layer798 no798 0 mode8798 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB799 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB799:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer801
	DATA8 no801
	DATA8 mode8801
	
	MOVEF_8 VGV_LEFT_SENSOR no801
	SUB8 no801 1 no801
	DIV8 no801 4 layer801
	MATH MOD8 no801 4 no801

	MOVEF_8 1.0 mode8801
	
	INPUT_DEVICE READY_RAW layer801 no801 0 mode8801 0
    JR_LTEQF VGV_G 100.0 else802_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB803 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB803:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif802
  else802_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB804:
    MOVEF_F 100.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB805:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB806 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB806:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB807 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB807:
  else802_2:
  endif802:
    JR endif797
  else797_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds812
	MOVEF_32 1000.0 milliseconds812
	DATA32 timer812
	TIMER_WAIT milliseconds812 timer812
	TIMER_READY timer812
    JR_GTEQF VGV_ULTRA 85.0 else813_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB814 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB814:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB815 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB815:
  else813_1:
  endif813:
  else797_2:
  endif797:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB816 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB816:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB817 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB817:
    SUBF VGV_A 0.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while820:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 250.0 endwhile820
  whilebody820:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB822 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB822:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 250.0 whilebody820
  endwhile820:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds827
	MOVEF_32 2000.0 milliseconds827
	DATA32 timer827
	TIMER_WAIT milliseconds827 timer827
	TIMER_READY timer827
    WRITE32 ENDSUB_F_STOP_0:CALLSUB828 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB828:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB829 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB829:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB831 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB831:
    JR_LTEQF VGV_B 55.0 else832_1
    DATA8 layer833
	DATA8 no833
	DATA8 mode8833
	
	MOVEF_8 VGV_LEFT_SENSOR no833
	SUB8 no833 1 no833
	DIV8 no833 4 layer833
	MATH MOD8 no833 4 no833

	MOVEF_8 2.0 mode8833
	
	INPUT_DEVICE READY_RAW layer833 no833 0 mode8833 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB834 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB834:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer836
	DATA8 no836
	DATA8 mode8836
	
	MOVEF_8 VGV_LEFT_SENSOR no836
	SUB8 no836 1 no836
	DIV8 no836 4 layer836
	MATH MOD8 no836 4 no836

	MOVEF_8 1.0 mode8836
	
	INPUT_DEVICE READY_RAW layer836 no836 0 mode8836 0
    JR_LTEQF VGV_G 70.0 else837_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB838:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif837
  else837_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB839 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB839:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB840 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB840:
  else837_2:
  endif837:
    JR endif832
  else832_1:
    JR_LTEQF VGV_B 15.0 else832_2
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds845
	MOVEF_32 1000.0 milliseconds845
	DATA32 timer845
	TIMER_WAIT milliseconds845 timer845
	TIMER_READY timer845
    JR_GTEQF VGV_ULTRA 85.0 else846_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB847 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB847:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB848 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB848:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for850:
    JR_GTF VGV_I 20.0 endfor850
  forbody850:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds854
	MOVEF_32 30.0 milliseconds854
	DATA32 timer854
	TIMER_WAIT milliseconds854 timer854
	TIMER_READY timer854
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody850
  endfor850:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer860
	DATA8 nos860
	DATA8 busy860
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer860 nos860
	JR_EQ8 0 nos860 motornotbusy860
  motorwaiting860:
	OUTPUT_TEST layer860 nos860 busy860
	JR_EQ8 busy860 0 motornotbusy860
	SLEEP
	JR motorwaiting860
  motornotbusy860:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB861 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB861:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer862
	DATA8 nos862
	DATA8 busy862
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer862 nos862
	JR_EQ8 0 nos862 motornotbusy862
  motorwaiting862:
	OUTPUT_TEST layer862 nos862 busy862
	JR_EQ8 busy862 0 motornotbusy862
	SLEEP
	JR motorwaiting862
  motornotbusy862:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer865
	DATA8 nos865
	DATA8 busy865
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer865 nos865
	JR_EQ8 0 nos865 motornotbusy865
  motorwaiting865:
	OUTPUT_TEST layer865 nos865 busy865
	JR_EQ8 busy865 0 motornotbusy865
	SLEEP
	JR motorwaiting865
  motornotbusy865:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB866 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB866:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer867
	DATA8 nos867
	DATA8 busy867
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer867 nos867
	JR_EQ8 0 nos867 motornotbusy867
  motorwaiting867:
	OUTPUT_TEST layer867 nos867 busy867
	JR_EQ8 busy867 0 motornotbusy867
	SLEEP
	JR motorwaiting867
  motornotbusy867:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB868 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB868:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer871
	DATA8 nos871
	DATA8 busy871
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer871 nos871
	JR_EQ8 0 nos871 motornotbusy871
  motorwaiting871:
	OUTPUT_TEST layer871 nos871 busy871
	JR_EQ8 busy871 0 motornotbusy871
	SLEEP
	JR motorwaiting871
  motornotbusy871:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB872 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB872:
    DATA32 milliseconds873
	MOVEF_32 1000.0 milliseconds873
	DATA32 timer873
	TIMER_WAIT milliseconds873 timer873
	TIMER_READY timer873
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for875:
    JR_GTF VGV_I 20.0 endfor875
  forbody875:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds878
	MOVEF_32 30.0 milliseconds878
	DATA32 timer878
	TIMER_WAIT milliseconds878 timer878
	TIMER_READY timer878
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody875
  endfor875:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer884
	DATA8 nos884
	DATA8 busy884
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer884 nos884
	JR_EQ8 0 nos884 motornotbusy884
  motorwaiting884:
	OUTPUT_TEST layer884 nos884 busy884
	JR_EQ8 busy884 0 motornotbusy884
	SLEEP
	JR motorwaiting884
  motornotbusy884:
    MULF 30.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds887
	MOVEF_32 1000.0 milliseconds887
	DATA32 timer887
	TIMER_WAIT milliseconds887 timer887
	TIMER_READY timer887
    WRITE32 ENDSUB_F_STOP_0:CALLSUB888 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB888:
  else846_1:
  endif846:
  else832_2:
  endif832:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB889 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB889:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer891
	DATA8 nos891
	DATA8 busy891
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer891 nos891
	JR_EQ8 0 nos891 motornotbusy891
  motorwaiting891:
	OUTPUT_TEST layer891 nos891 busy891
	JR_EQ8 busy891 0 motornotbusy891
	SLEEP
	JR motorwaiting891
  motornotbusy891:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 104.0 0.0 'True' 

	DATA8 layer893
	DATA8 nos893
	DATA8 busy893
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer893 nos893
	JR_EQ8 0 nos893 motornotbusy893
  motorwaiting893:
	OUTPUT_TEST layer893 nos893 busy893
	JR_EQ8 busy893 0 motornotbusy893
	SLEEP
	JR motorwaiting893
  motornotbusy893:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 102.0 VGV_A
  while895:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 100.0 endwhile895
  whilebody895:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB897 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB897:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 100.0 whilebody895
  endwhile895:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while902:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 6.0 endwhile902
  whilebody902:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 6.0 whilebody902
  endwhile902:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB905 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB905:
    DATA8 layer906
	DATA8 no906
	DATA8 mode8906
	
	MOVEF_8 VGV_LINE_SENSOR no906
	SUB8 no906 1 no906
	DIV8 no906 4 layer906
	MATH MOD8 no906 4 no906

	MOVEF_8 0.0 mode8906
	
	INPUT_DEVICE READY_RAW layer906 no906 0 mode8906 0
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else907_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB909 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB909:
    MOVEF_F 110.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB910 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB910:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB911 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB911:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else913_1
    DATA8 layer914
	DATA8 no914
	DATA8 mode8914
	
	MOVEF_8 VGV_LEFT_SENSOR no914
	SUB8 no914 1 no914
	DIV8 no914 4 layer914
	MATH MOD8 no914 4 no914

	MOVEF_8 2.0 mode8914
	
	INPUT_DEVICE READY_RAW layer914 no914 0 mode8914 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB915 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB915:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer917
	DATA8 no917
	DATA8 mode8917
	
	MOVEF_8 VGV_LEFT_SENSOR no917
	SUB8 no917 1 no917
	DIV8 no917 4 layer917
	MATH MOD8 no917 4 no917

	MOVEF_8 1.0 mode8917
	
	INPUT_DEVICE READY_RAW layer917 no917 0 mode8917 0
    JR_LTEQF VGV_G 100.0 else918_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB919 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB919:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif918
  else918_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB920 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB920:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB921 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB921:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB922 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB922:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB923 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB923:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB924 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB924:
  else918_2:
  endif918:
    JR endif913
  else913_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else926_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB927 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB927:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB928 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB928:
  else926_1:
  endif926:
  else913_2:
  endif913:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB929 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB929:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB930:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB931 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB931:
    JR endif907
  else907_1:
    MOVEF_F 60.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB932 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB932:
  else907_2:
  endif907:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB933 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB933:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else935_1
    DATA8 layer936
	DATA8 no936
	DATA8 mode8936
	
	MOVEF_8 VGV_LEFT_SENSOR no936
	SUB8 no936 1 no936
	DIV8 no936 4 layer936
	MATH MOD8 no936 4 no936

	MOVEF_8 2.0 mode8936
	
	INPUT_DEVICE READY_RAW layer936 no936 0 mode8936 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB937 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB937:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer939
	DATA8 no939
	DATA8 mode8939
	
	MOVEF_8 VGV_LEFT_SENSOR no939
	SUB8 no939 1 no939
	DIV8 no939 4 layer939
	MATH MOD8 no939 4 no939

	MOVEF_8 1.0 mode8939
	
	INPUT_DEVICE READY_RAW layer939 no939 0 mode8939 0
    JR_LTEQF VGV_G 70.0 else940_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB941 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB941:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif940
  else940_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB942 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB942:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB943 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB943:
  else940_2:
  endif940:
    JR endif935
  else935_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else945_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB946 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB946:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB947 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB947:
  else945_1:
  endif945:
  else935_2:
  endif935:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB948 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB948:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer951
	DATA8 nos951
	DATA8 busy951
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer951 nos951
	JR_EQ8 0 nos951 motornotbusy951
  motorwaiting951:
	OUTPUT_TEST layer951 nos951 busy951
	JR_EQ8 busy951 0 motornotbusy951
	SLEEP
	JR motorwaiting951
  motornotbusy951:
    ADDF VGV_A 7.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while954:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 310.0 endwhile954
  whilebody954:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB956 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB956:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 310.0 whilebody954
  endwhile954:
    MOVEF_F 120.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB958 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB958:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else959_1
    DATA8 layer961
	DATA8 no961
	DATA8 mode8961
	
	MOVEF_8 VGV_LEFT_SENSOR no961
	SUB8 no961 1 no961
	DIV8 no961 4 layer961
	MATH MOD8 no961 4 no961

	MOVEF_8 1.0 mode8961
	
	INPUT_DEVICE READY_RAW layer961 no961 0 mode8961 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB962 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB962:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB964 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB964:
    JR_LTEQF VGV_B 55.0 else965_1
    DATA8 layer966
	DATA8 no966
	DATA8 mode8966
	
	MOVEF_8 VGV_LEFT_SENSOR no966
	SUB8 no966 1 no966
	DIV8 no966 4 layer966
	MATH MOD8 no966 4 no966

	MOVEF_8 2.0 mode8966
	
	INPUT_DEVICE READY_RAW layer966 no966 0 mode8966 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB967 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB967:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer969
	DATA8 no969
	DATA8 mode8969
	
	MOVEF_8 VGV_LEFT_SENSOR no969
	SUB8 no969 1 no969
	DIV8 no969 4 layer969
	MATH MOD8 no969 4 no969

	MOVEF_8 1.0 mode8969
	
	INPUT_DEVICE READY_RAW layer969 no969 0 mode8969 0
    JR_LTEQF VGV_G 70.0 else970_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB971 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB971:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif970
  else970_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB972 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB972:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB973 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB973:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB974 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB974:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB975 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB975:
  else970_2:
  endif970:
    JR endif965
  else965_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else977_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB978 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB978:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB979 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB979:
  else977_1:
  endif977:
  else965_2:
  endif965:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB980 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB980:
  else959_1:
  endif959:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB981 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB981:
    DATA8 layer982
	DATA8 no982
	DATA8 mode8982
	
	MOVEF_8 VGV_LINE_SENSOR no982
	SUB8 no982 1 no982
	DIV8 no982 4 layer982
	MATH MOD8 no982 4 no982

	MOVEF_8 0.0 mode8982
	
	INPUT_DEVICE READY_RAW layer982 no982 0 mode8982 0
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'False'

	DATA8 layer985
	DATA8 nos985
	DATA8 busy985
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer985 nos985
	JR_EQ8 0 nos985 motornotbusy985
  motorwaiting985:
	OUTPUT_TEST layer985 nos985 busy985
	JR_EQ8 busy985 0 motornotbusy985
	SLEEP
	JR motorwaiting985
  motornotbusy985:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while989:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile989
  whilebody989:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody989
  endwhile989:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB992 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB992:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 200.0 0.0 'False' 

	DATA8 layer994
	DATA8 nos994
	DATA8 busy994
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer994 nos994
	JR_EQ8 0 nos994 motornotbusy994
  motorwaiting994:
	OUTPUT_TEST layer994 nos994 busy994
	JR_EQ8 busy994 0 motornotbusy994
	SLEEP
	JR motorwaiting994
  motornotbusy994:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
  while997:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile997
  whilebody997:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody997
  endwhile997:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer1001
	DATA8 nos1001
	DATA8 busy1001
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1001 nos1001
	JR_EQ8 0 nos1001 motornotbusy1001
  motorwaiting1001:
	OUTPUT_TEST layer1001 nos1001 busy1001
	JR_EQ8 busy1001 0 motornotbusy1001
	SLEEP
	JR motorwaiting1001
  motornotbusy1001:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1002 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1002:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1004:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile1004
  whilebody1004:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB1006 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB1006:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody1004
  endwhile1004:
  while1008:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 5.0 endwhile1008
  whilebody1008:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB1010 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB1010:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 5.0 whilebody1008
  endwhile1008:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1012 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1012:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer1015
	DATA8 nos1015
	DATA8 busy1015
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1015 nos1015
	JR_EQ8 0 nos1015 motornotbusy1015
  motorwaiting1015:
	OUTPUT_TEST layer1015 nos1015 busy1015
	JR_EQ8 busy1015 0 motornotbusy1015
	SLEEP
	JR motorwaiting1015
  motornotbusy1015:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1016 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1016:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1017 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1017:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1020
	DATA8 nos1020
	DATA8 busy1020
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1020 nos1020
	JR_EQ8 0 nos1020 motornotbusy1020
  motorwaiting1020:
	OUTPUT_TEST layer1020 nos1020 busy1020
	JR_EQ8 busy1020 0 motornotbusy1020
	SLEEP
	JR motorwaiting1020
  motornotbusy1020:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1021 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1021:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1022 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1022:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 25.0 'False'

	DATA8 layer1025
	DATA8 nos1025
	DATA8 busy1025
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1025 nos1025
	JR_EQ8 0 nos1025 motornotbusy1025
  motorwaiting1025:
	OUTPUT_TEST layer1025 nos1025 busy1025
	JR_EQ8 busy1025 0 motornotbusy1025
	SLEEP
	JR motorwaiting1025
  motornotbusy1025:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1027:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile1027
  whilebody1027:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF F.0 17.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf1033
    DATA8 flag1033
    DIVF F.0 10.0 tmpf1033
    CP_EQF 0.0 10.0 flag1033
    SELECTF flag1033 0.0 tmpf1033 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody1027
  endwhile1027:
    MOVEF_F 135.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1043:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1044 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1044:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1045 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1045:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1047 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1047:
    JR_LTEQF VGV_B 140.0 else1048_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1049 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1049:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif1048
  else1048_1:
    JR_LTEQF VGV_B 80.0 else1048_2
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'FIre' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1050 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1050:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1051 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1051:
    JR endif1048
  else1048_2:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1053_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'True' VGV_CHEM
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1054 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1054:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1055 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1055:
  else1053_1:
  endif1053:
  else1048_3:
  endif1048:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1056 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1056:
    MOVEF_F 710.0 VGV_C
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or1058
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1057_1
  or1058:
    MULF 10.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 15.0 0.0 'True' 

	DATA8 layer1062
	DATA8 nos1062
	DATA8 busy1062
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1062 nos1062
	JR_EQ8 0 nos1062 motornotbusy1062
  motorwaiting1062:
	OUTPUT_TEST layer1062 nos1062 busy1062
	JR_EQ8 busy1062 0 motornotbusy1062
	SLEEP
	JR motorwaiting1062
  motornotbusy1062:
    MOVEF_F 525.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1063 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1063:
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1064_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1066 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1066:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1068 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1068:
    JR_LTEQF VGV_B 50.0 else1069_1
    DATA8 layer1070
	DATA8 no1070
	DATA8 mode81070
	
	MOVEF_8 VGV_LEFT_SENSOR no1070
	SUB8 no1070 1 no1070
	DIV8 no1070 4 layer1070
	MATH MOD8 no1070 4 no1070

	MOVEF_8 2.0 mode81070
	
	INPUT_DEVICE READY_RAW layer1070 no1070 0 mode81070 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1071 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1071:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1073
	DATA8 no1073
	DATA8 mode81073
	
	MOVEF_8 VGV_LEFT_SENSOR no1073
	SUB8 no1073 1 no1073
	DIV8 no1073 4 layer1073
	MATH MOD8 no1073 4 no1073

	MOVEF_8 1.0 mode81073
	
	INPUT_DEVICE READY_RAW layer1073 no1073 0 mode81073 0
    JR_LTEQF VGV_G 100.0 else1074_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1075 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1075:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif1074
  else1074_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1076 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1076:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1077 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1077:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1078 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1078:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1079 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1079:
  else1074_2:
  endif1074:
    JR endif1069
  else1069_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1081_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1082 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1082:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer1085
	DATA8 nos1085
	DATA8 busy1085
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1085 nos1085
	JR_EQ8 0 nos1085 motornotbusy1085
  motorwaiting1085:
	OUTPUT_TEST layer1085 nos1085 busy1085
	JR_EQ8 busy1085 0 motornotbusy1085
	SLEEP
	JR motorwaiting1085
  motornotbusy1085:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1086 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1086:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer1087
	DATA8 nos1087
	DATA8 busy1087
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1087 nos1087
	JR_EQ8 0 nos1087 motornotbusy1087
  motorwaiting1087:
	OUTPUT_TEST layer1087 nos1087 busy1087
	JR_EQ8 busy1087 0 motornotbusy1087
	SLEEP
	JR motorwaiting1087
  motornotbusy1087:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1089:
    JR_GTF VGV_I 20.0 endfor1089
  forbody1089:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1092
	MOVEF_32 10.0 milliseconds1092
	DATA32 timer1092
	TIMER_WAIT milliseconds1092 timer1092
	TIMER_READY timer1092
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1089
  endfor1089:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1098
	DATA8 nos1098
	DATA8 busy1098
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1098 nos1098
	JR_EQ8 0 nos1098 motornotbusy1098
  motorwaiting1098:
	OUTPUT_TEST layer1098 nos1098 busy1098
	JR_EQ8 busy1098 0 motornotbusy1098
	SLEEP
	JR motorwaiting1098
  motornotbusy1098:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1099 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1099:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer1100
	DATA8 nos1100
	DATA8 busy1100
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1100 nos1100
	JR_EQ8 0 nos1100 motornotbusy1100
  motorwaiting1100:
	OUTPUT_TEST layer1100 nos1100 busy1100
	JR_EQ8 busy1100 0 motornotbusy1100
	SLEEP
	JR motorwaiting1100
  motornotbusy1100:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1101:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1102:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1104:
    JR_GTF VGV_I 20.0 endfor1104
  forbody1104:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1108
	MOVEF_32 10.0 milliseconds1108
	DATA32 timer1108
	TIMER_WAIT milliseconds1108 timer1108
	TIMER_READY timer1108
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1104
  endfor1104:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1114
	DATA8 nos1114
	DATA8 busy1114
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1114 nos1114
	JR_EQ8 0 nos1114 motornotbusy1114
  motorwaiting1114:
	OUTPUT_TEST layer1114 nos1114 busy1114
	JR_EQ8 busy1114 0 motornotbusy1114
	SLEEP
	JR motorwaiting1114
  motornotbusy1114:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1115:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1116:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer1119
	DATA8 nos1119
	DATA8 busy1119
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1119 nos1119
	JR_EQ8 0 nos1119 motornotbusy1119
  motorwaiting1119:
	OUTPUT_TEST layer1119 nos1119 busy1119
	JR_EQ8 busy1119 0 motornotbusy1119
	SLEEP
	JR motorwaiting1119
  motornotbusy1119:
  else1081_1:
  endif1081:
  else1069_2:
  endif1069:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1120:
  else1064_1:
  endif1064:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1121_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1123:
    MOVEF_F 160.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1124:
    DATA8 layer1125
	DATA8 no1125
	DATA8 mode81125
	
	MOVEF_8 VGV_LEFT_SENSOR no1125
	SUB8 no1125 1 no1125
	DIV8 no1125 4 layer1125
	MATH MOD8 no1125 4 no1125

	MOVEF_8 1.0 mode81125
	
	INPUT_DEVICE READY_RAW layer1125 no1125 0 mode81125 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1126:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1128:
    JR_LTEQF VGV_B 40.0 else1129_1
    DATA8 layer1130
	DATA8 no1130
	DATA8 mode81130
	
	MOVEF_8 VGV_LEFT_SENSOR no1130
	SUB8 no1130 1 no1130
	DIV8 no1130 4 layer1130
	MATH MOD8 no1130 4 no1130

	MOVEF_8 2.0 mode81130
	
	INPUT_DEVICE READY_RAW layer1130 no1130 0 mode81130 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1131:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1133
	DATA8 no1133
	DATA8 mode81133
	
	MOVEF_8 VGV_LEFT_SENSOR no1133
	SUB8 no1133 1 no1133
	DIV8 no1133 4 layer1133
	MATH MOD8 no1133 4 no1133

	MOVEF_8 1.0 mode81133
	
	INPUT_DEVICE READY_RAW layer1133 no1133 0 mode81133 0
    JR_LTEQF VGV_G 50.0 else1134_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1135:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif1134
  else1134_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1136:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1137:
  else1134_2:
  endif1134:
    JR endif1129
  else1129_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1139_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1140:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB1141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB1141:
  else1139_1:
  endif1139:
  else1129_2:
  endif1129:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1142:
    MOVEF_F 160.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1143:
  else1121_1:
  endif1121:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 165.0 'True'

	DATA8 layer1146
	DATA8 nos1146
	DATA8 busy1146
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1146 nos1146
	JR_EQ8 0 nos1146 motornotbusy1146
  motorwaiting1146:
	OUTPUT_TEST layer1146 nos1146 busy1146
	JR_EQ8 busy1146 0 motornotbusy1146
	SLEEP
	JR motorwaiting1146
  motornotbusy1146:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1147:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1148:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 380.0 'True'

	DATA8 layer1151
	DATA8 nos1151
	DATA8 busy1151
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1151 nos1151
	JR_EQ8 0 nos1151 motornotbusy1151
  motorwaiting1151:
	OUTPUT_TEST layer1151 nos1151 busy1151
	JR_EQ8 busy1151 0 motornotbusy1151
	SLEEP
	JR motorwaiting1151
  motornotbusy1151:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1152:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1153:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1156
	DATA8 nos1156
	DATA8 busy1156
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1156 nos1156
	JR_EQ8 0 nos1156 motornotbusy1156
  motorwaiting1156:
	OUTPUT_TEST layer1156 nos1156 busy1156
	JR_EQ8 busy1156 0 motornotbusy1156
	SLEEP
	JR motorwaiting1156
  motornotbusy1156:
    JR endif1057
  else1057_1:
    MOVEF_F 200.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1157:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 370.0 'True'

	DATA8 layer1160
	DATA8 nos1160
	DATA8 busy1160
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1160 nos1160
	JR_EQ8 0 nos1160 motornotbusy1160
  motorwaiting1160:
	OUTPUT_TEST layer1160 nos1160 busy1160
	JR_EQ8 busy1160 0 motornotbusy1160
	SLEEP
	JR motorwaiting1160
  motornotbusy1160:
    SUBF VGV_C 220.0 VGV_C
  else1057_2:
  endif1057:
    MOVEF_F 485.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1163:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile1163
  whilebody1163:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB1165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB1165:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody1163
  endwhile1163:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1167:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1168:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1169_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 115.0 0.0 'True' 

	DATA8 layer1171
	DATA8 nos1171
	DATA8 busy1171
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1171 nos1171
	JR_EQ8 0 nos1171 motornotbusy1171
  motorwaiting1171:
	OUTPUT_TEST layer1171 nos1171 busy1171
	JR_EQ8 busy1171 0 motornotbusy1171
	SLEEP
	JR motorwaiting1171
  motornotbusy1171:
  else1169_1:
  endif1169:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1172:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1175
	DATA8 nos1175
	DATA8 busy1175
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1175 nos1175
	JR_EQ8 0 nos1175 motornotbusy1175
  motorwaiting1175:
	OUTPUT_TEST layer1175 nos1175 busy1175
	JR_EQ8 busy1175 0 motornotbusy1175
	SLEEP
	JR motorwaiting1175
  motornotbusy1175:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1176:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1177_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer1179
	DATA8 nos1179
	DATA8 busy1179
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1179 nos1179
	JR_EQ8 0 nos1179 motornotbusy1179
  motorwaiting1179:
	OUTPUT_TEST layer1179 nos1179 busy1179
	JR_EQ8 busy1179 0 motornotbusy1179
	SLEEP
	JR motorwaiting1179
  motornotbusy1179:
  else1177_1:
  endif1177:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1182
	DATA8 nos1182
	DATA8 busy1182
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1182 nos1182
	JR_EQ8 0 nos1182 motornotbusy1182
  motorwaiting1182:
	OUTPUT_TEST layer1182 nos1182 busy1182
	JR_EQ8 busy1182 0 motornotbusy1182
	SLEEP
	JR motorwaiting1182
  motornotbusy1182:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 60.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1186
	MOVEF_32 1200.0 milliseconds1186
	DATA32 timer1186
	TIMER_WAIT milliseconds1186 timer1186
	TIMER_READY timer1186
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1187:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 220.0 'True'

	DATA8 layer1190
	DATA8 nos1190
	DATA8 busy1190
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1190 nos1190
	JR_EQ8 0 nos1190 motornotbusy1190
  motorwaiting1190:
	OUTPUT_TEST layer1190 nos1190 busy1190
	JR_EQ8 busy1190 0 motornotbusy1190
	SLEEP
	JR motorwaiting1190
  motornotbusy1190:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1192
	DATA8 nos1192
	DATA8 busy1192
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1192 nos1192
	JR_EQ8 0 nos1192 motornotbusy1192
  motorwaiting1192:
	OUTPUT_TEST layer1192 nos1192 busy1192
	JR_EQ8 busy1192 0 motornotbusy1192
	SLEEP
	JR motorwaiting1192
  motornotbusy1192:
    MOVEF_F 107.0 VGV_A
    TIMER_READ timeMC1
  while1194:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 4500.0 endwhile1194
  whilebody1194:
    WRITE32 ENDSUB_F_ULTRASONIC_SUPERFAST_0:CALLSUB1196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SUPERFAST_0
CALLSUB1196:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 4500.0 whilebody1194
  endwhile1194:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1198:
    WRITE32 ENDSUB_F_TAKE_CUBES_0:CALLSUB1199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_0
CALLSUB1199:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1202
	DATA8 nos1202
	DATA8 busy1202
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1202 nos1202
	JR_EQ8 0 nos1202 motornotbusy1202
  motorwaiting1202:
	OUTPUT_TEST layer1202 nos1202 busy1202
	JR_EQ8 busy1202 0 motornotbusy1202
	SLEEP
	JR motorwaiting1202
  motornotbusy1202:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1203_1
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1203_1
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB1206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB1206:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1207:
    JR endif1203
  else1203_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1203_2
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1203_2
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1212
	DATA8 nos1212
	DATA8 busy1212
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1212 nos1212
	JR_EQ8 0 nos1212 motornotbusy1212
  motorwaiting1212:
	OUTPUT_TEST layer1212 nos1212 busy1212
	JR_EQ8 busy1212 0 motornotbusy1212
	SLEEP
	JR motorwaiting1212
  motornotbusy1212:
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB1213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB1213:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1214:
    JR endif1203
  else1203_2:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1203_3
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1203_3
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:CALLSUB1217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_LONG_0
CALLSUB1217:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB1218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB1218:
    JR endif1203
  else1203_3:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1219_1
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1219_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1222:
    JR endif1219
  else1219_1:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1219_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1224:
    JR endif1219
  else1219_2:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1219_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1226:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1229
	DATA8 nos1229
	DATA8 busy1229
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1229 nos1229
	JR_EQ8 0 nos1229 motornotbusy1229
  motorwaiting1229:
	OUTPUT_TEST layer1229 nos1229 busy1229
	JR_EQ8 busy1229 0 motornotbusy1229
	SLEEP
	JR motorwaiting1229
  motornotbusy1229:
    JR endif1219
  else1219_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1232
	DATA8 nos1232
	DATA8 busy1232
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1232 nos1232
	JR_EQ8 0 nos1232 motornotbusy1232
  motorwaiting1232:
	OUTPUT_TEST layer1232 nos1232 busy1232
	JR_EQ8 busy1232 0 motornotbusy1232
	SLEEP
	JR motorwaiting1232
  motornotbusy1232:
  else1219_4:
  endif1219:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1233_1
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1233_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1236:
    JR endif1233
  else1233_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1233_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1238:
    JR endif1233
  else1233_2:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1233_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1240 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1240:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1243
	DATA8 nos1243
	DATA8 busy1243
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1243 nos1243
	JR_EQ8 0 nos1243 motornotbusy1243
  motorwaiting1243:
	OUTPUT_TEST layer1243 nos1243 busy1243
	JR_EQ8 busy1243 0 motornotbusy1243
	SLEEP
	JR motorwaiting1243
  motornotbusy1243:
    JR endif1233
  else1233_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1246
	DATA8 nos1246
	DATA8 busy1246
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1246 nos1246
	JR_EQ8 0 nos1246 motornotbusy1246
  motorwaiting1246:
	OUTPUT_TEST layer1246 nos1246 busy1246
	JR_EQ8 busy1246 0 motornotbusy1246
	SLEEP
	JR motorwaiting1246
  motornotbusy1246:
  else1233_4:
  endif1233:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1247_1
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1247_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1250:
    JR endif1247
  else1247_1:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1247_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1252:
    JR endif1247
  else1247_2:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1247_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1254:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1257
	DATA8 nos1257
	DATA8 busy1257
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1257 nos1257
	JR_EQ8 0 nos1257 motornotbusy1257
  motorwaiting1257:
	OUTPUT_TEST layer1257 nos1257 busy1257
	JR_EQ8 busy1257 0 motornotbusy1257
	SLEEP
	JR motorwaiting1257
  motornotbusy1257:
    JR endif1247
  else1247_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1260
	DATA8 nos1260
	DATA8 busy1260
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1260 nos1260
	JR_EQ8 0 nos1260 motornotbusy1260
  motorwaiting1260:
	OUTPUT_TEST layer1260 nos1260 busy1260
	JR_EQ8 busy1260 0 motornotbusy1260
	SLEEP
	JR motorwaiting1260
  motornotbusy1260:
  else1247_4:
  endif1247:
    MULF -15.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1262
	DATA8 nos1262
	DATA8 busy1262
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1262 nos1262
	JR_EQ8 0 nos1262 motornotbusy1262
  motorwaiting1262:
	OUTPUT_TEST layer1262 nos1262 busy1262
	JR_EQ8 busy1262 0 motornotbusy1262
	SLEEP
	JR motorwaiting1262
  motornotbusy1262:
    MULF VGV_LEFT_FORWARD -25.0 F.0
    MULF VGV_RIGHT_FORWARD -25.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1266
	MOVEF_32 1500.0 milliseconds1266
	DATA32 timer1266
	TIMER_WAIT milliseconds1266 timer1266
	TIMER_READY timer1266
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1267:
  else1203_4:
  endif1203:
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1268_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 55.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1274:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 1200.0 endwhile1274
  whilebody1274:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 1200.0 whilebody1274
  endwhile1274:
  while1277:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 25.0 endwhile1277
  whilebody1277:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 25.0 whilebody1277
  endwhile1277:
  while1280:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile1280
  whilebody1280:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody1280
  endwhile1280:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1283:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1284:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 365.0 0.0 'True' 

	DATA8 layer1286
	DATA8 nos1286
	DATA8 busy1286
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1286 nos1286
	JR_EQ8 0 nos1286 motornotbusy1286
  motorwaiting1286:
	OUTPUT_TEST layer1286 nos1286 busy1286
	JR_EQ8 busy1286 0 motornotbusy1286
	SLEEP
	JR motorwaiting1286
  motornotbusy1286:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1290 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1290:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1293
	DATA8 nos1293
	DATA8 busy1293
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1293 nos1293
	JR_EQ8 0 nos1293 motornotbusy1293
  motorwaiting1293:
	OUTPUT_TEST layer1293 nos1293 busy1293
	JR_EQ8 busy1293 0 motornotbusy1293
	SLEEP
	JR motorwaiting1293
  motornotbusy1293:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 300.0 0.0 'True' 

	DATA8 layer1295
	DATA8 nos1295
	DATA8 busy1295
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1295 nos1295
	JR_EQ8 0 nos1295 motornotbusy1295
  motorwaiting1295:
	OUTPUT_TEST layer1295 nos1295 busy1295
	JR_EQ8 busy1295 0 motornotbusy1295
	SLEEP
	JR motorwaiting1295
  motornotbusy1295:
    MULF VGV_LEFT_FORWARD 55.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1299
	MOVEF_32 4000.0 milliseconds1299
	DATA32 timer1299
	TIMER_WAIT milliseconds1299 timer1299
	TIMER_READY timer1299
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1300:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 20.0 'True'

	DATA8 layer1303
	DATA8 nos1303
	DATA8 busy1303
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1303 nos1303
	JR_EQ8 0 nos1303 motornotbusy1303
  motorwaiting1303:
	OUTPUT_TEST layer1303 nos1303 busy1303
	JR_EQ8 busy1303 0 motornotbusy1303
	SLEEP
	JR motorwaiting1303
  motornotbusy1303:
  else1268_1:
  endif1268:
    TIMER_READ timeMC9tmp
	SUB32 timeMC9tmp timeMC9 timeMC9tmp
	MOVE32_F timeMC9tmp VGV_T
    DATAF tmpf1305
    DATA8 flag1305
    DIVF VGV_T 60000.0 tmpf1305
    CP_EQF 0.0 60000.0 flag1305
    SELECTF flag1305 0.0 tmpf1305 F.0

    MATH FLOOR F.0 VGV_MINS
    MATH MOD VGV_T 60000.0 F.1
    DATAF tmpf1308
    DATA8 flag1308
    DIVF F.1 1000.0 tmpf1308
    CP_EQF 0.0 1000.0 flag1308
    SELECTF flag1308 0.0 tmpf1308 F.0

    MATH FLOOR F.0 VGV_SECS
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MINS '%g' 99 S.1
    CALL TEXT.APPEND S.1 ':' S.0
    STRINGS VALUE_FORMATTED VGV_SECS '%g' 99 S.1
    CALL TEXT.APPEND S.0 S.1 VGV_STR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_STR
    DATA32 milliseconds1316
	MOVEF_32 100000000.0 milliseconds1316
	DATA32 timer1316
	TIMER_WAIT milliseconds1316 timer1316
	TIMER_READY timer1316
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
