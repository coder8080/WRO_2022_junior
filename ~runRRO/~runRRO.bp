lv_motor_11 = ""
lv_forward_11 = 0
lv_deg_11 = 0
lv_max_power_11 = 0
lv_acceleration_11 = ""
lv_zame_11 = ""
lv_to_stop_11 = ""
lv_deg_10 = 0
lv_power_1 = 0
lv_base_power_13 = 0
lv_min_power_13 = 0
lv_deg_13 = 0
lv_time_4 = 0
lv_motor_12 = ""
lv_forward_12 = 0
lv_deg_12 = 0
lv_max_power_12 = 0
lv_acceleration_12 = ""
lv_zame_12 = ""
lv_to_stop_12 = ""
lv_l_2 = 0
lv_r_2 = 0
lv_power_8 = 0
lv_deg_8 = 0
gv_left_line = 0
gv_right_line = 0
gv_left_sensor = 0
gv_right_sensor = 0
gv_left_motor = ""
gv_right_motor = ""
gv_not_inverted_motor = ""
gv_motors = ""
gv_left_forward = 0
gv_right_forward = 0
gv_grabber_motor = ""
gv_water_motor = ""
gv_left_max = 0
gv_left_min = 0
gv_right_max = 0
gv_right_min = 0
gv_last_err = 0
gv_last_motor_err = 0
gv_l = 0
gv_r = 0
gv_left_line = 1
gv_right_line = 2
gv_left_sensor = 3
gv_right_sensor = 4
gv_left_motor = "A"
gv_right_motor = "B"
gv_not_inverted_motor = "B"
gv_motors = gv_left_motor + gv_right_motor
gv_left_forward = - 1
gv_right_forward = 1
gv_grabber_motor = "C"
gv_water_motor = "D"
gv_left_max = 49
gv_left_min = 4
gv_right_max = 46
gv_right_min = 4
gv_last_err = 0
gv_last_motor_err = 0
Sensor.SetMode ( gv_left_line , 0 )
Sensor.SetMode ( gv_right_line , 0 )
Sensor.SetMode ( gv_right_sensor , 4 )
If EV3.BatteryVoltage < 8 Then
f_beep_0 ()
Speaker.Wait ()
f_beep_0 ()
EndIf
f_main_0 ()
Sub f_beep_0
Speaker.Tone ( 100 , 500 , 200 )
EndSub
Sub f_main_0
lv_motor_11 = gv_left_motor
lv_forward_11 = gv_left_forward
lv_deg_11 = 320
lv_max_power_11 = 40
lv_acceleration_11 = "True"
lv_zame_11 = "True"
lv_to_stop_11 = "True"
f_move_motor_forward_7 ()
lv_motor_11 = gv_right_motor
lv_forward_11 = gv_right_forward
lv_deg_11 = 320
lv_max_power_11 = 40
lv_acceleration_11 = "True"
lv_zame_11 = "True"
lv_to_stop_11 = "True"
f_move_motor_forward_7 ()
lv_deg_10 = 1200
f_forward_deg_1 ()
lv_power_1 = 80
f_movement_init_1 ()
While Sensor.ReadPercent ( gv_left_line ) < 30 Or Sensor.ReadPercent ( gv_right_line ) < 30
f_sync_0 ()
EndWhile
While Sensor.ReadPercent ( gv_left_line ) > 10 Or Sensor.ReadPercent ( gv_right_line ) > 10
f_sync_0 ()
EndWhile
lv_base_power_13 = 80
lv_min_power_13 = 15
lv_deg_13 = 40
f_zame_3 ()
f_stop_0 ()
f_reset_0 ()
lv_time_4 = 250
f_delay_1 ()
lv_motor_12 = gv_right_motor
lv_forward_12 = gv_right_forward
lv_deg_12 = 490
lv_max_power_12 = 40
lv_acceleration_12 = "True"
lv_zame_12 = "False"
lv_to_stop_12 = "False"
f_move_motor_backward_7 ()
lv_power_1 = - 50
f_movement_init_1 ()
Program.Delay ( 700 )
f_stop_0 ()
lv_deg_10 = 70
f_forward_deg_1 ()
MotorA.OffAndBrake ()
lv_motor_11 = gv_right_motor
lv_forward_11 = gv_right_forward
lv_deg_11 = 540
lv_max_power_11 = 40
lv_acceleration_11 = "False"
lv_zame_11 = "True"
lv_to_stop_11 = "True"
f_move_motor_forward_7 ()
f_reset_0 ()
lv_power_1 = 80
f_movement_init_1 ()
gv_l = ( Sensor.ReadPercent ( gv_left_line ) - gv_left_min ) / ( gv_left_max - gv_left_min ) * 100
gv_r = ( Sensor.ReadPercent ( gv_right_line ) - gv_right_min ) / ( gv_right_max - gv_right_min ) * 100
While gv_l > 50 Or gv_r > 50
lv_l_2 = gv_l
lv_r_2 = gv_r
f_line_2 ()
gv_l = ( Sensor.ReadPercent ( gv_left_line ) - gv_left_min ) / ( gv_left_max - gv_left_min ) * 100
gv_r = ( Sensor.ReadPercent ( gv_right_line ) - gv_right_min ) / ( gv_right_max - gv_right_min ) * 100
EndWhile
Thread.Run = f_beep_0
lv_deg_10 = 630
f_forward_deg_1 ()
Thread.Run = f_beep_0
lv_deg_10 = 930 - 120
f_forward_deg_1 ()
lv_base_power_13 = 80
lv_min_power_13 = 0
lv_deg_13 = 120
f_zame_3 ()
f_stop_0 ()
Thread.Run = f_beep_0
lv_time_4 = 700
f_delay_1 ()
lv_power_8 = 30
lv_deg_8 = 70
f_speedup_backward_2 ()
EndSub
Sub f_movement_init_1
MotorA.StartPower ( lv_power_1 * gv_left_forward )
MotorB.StartPower ( lv_power_1 * gv_right_forward )
EndSub
Sub f_line_2
If lv_l_2 = - 100 Then
lv_l_2 = ( Sensor.ReadPercent ( gv_left_line ) - gv_left_min ) / ( gv_left_max - gv_left_min ) * 100
EndIf
If lv_r_2 = - 100 Then
lv_r_2 = ( Sensor.ReadPercent ( gv_right_line ) - gv_right_min ) / ( gv_right_max - gv_right_min ) * 100
EndIf
lv_err_2 = lv_r_2 - lv_l_2
lv_diff_2 = lv_err_2 - gv_last_err
lv_delta_2 = lv_err_2 * 0.3 + lv_diff_2 * 1
lv_left_power_2 = 80 - lv_delta_2
lv_right_power_2 = 80 + lv_delta_2
MotorA.SetPower ( lv_left_power_2 * gv_left_forward )
MotorB.SetPower ( lv_right_power_2 * gv_right_forward )
gv_last_err = lv_err_2
EndSub
Sub f_delay_1
Program.Delay ( lv_time_4 )
EndSub
Sub f_reset_0
MotorA.ResetCount ()
MotorB.ResetCount ()
EndSub
Sub f_stop_0
MotorAB.OffAndBrake ()
EndSub
Sub f_speedup_backward_2
lv_power_1 = - 10
f_movement_init_1 ()
f_reset_0 ()
lv_l_8 = 0
While lv_l_8 < lv_deg_8
lv_p_8 = lv_l_8 / lv_deg_8
lv_power_8 = ( lv_power_8 - 10 ) * lv_p_8 + 10
lv_l_8 = MotorA.GetTacho () * gv_left_forward * - 1
lv_r_8 = MotorB.GetTacho () * gv_right_forward * - 1
lv_delta_8 = ( lv_l_8 - lv_r_8 ) * lv_p_8
lv_left_power_8 = lv_power_8 - lv_delta_8
lv_right_power_8 = lv_power_8 + lv_delta_8
MotorA.SetPower ( lv_left_power_8 * gv_left_forward * - 1 )
MotorB.SetPower ( lv_right_power_8 * gv_right_forward * - 1 )
EndWhile
EndSub
Sub f_sync_0
lv_l_9 = MotorA.GetTacho () * gv_left_forward
lv_r_9 = MotorB.GetTacho () * gv_right_forward
lv_err_9 = lv_l_9 - lv_r_9
lv_diff_9 = lv_err_9 - gv_last_err
lv_delta_9 = lv_err_9 * 1 + lv_diff_9 * 0
lv_left_power_9 = 80 - lv_delta_9
lv_right_power_9 = 80 + lv_delta_9
MotorA.SetPower ( lv_left_power_9 * gv_left_forward )
MotorB.SetSpeed ( lv_right_power_9 * gv_right_forward )
gv_last_err = lv_err_9
EndSub
Sub f_forward_deg_1
lv_power_1 = 80
f_movement_init_1 ()
f_reset_0 ()
lv_l_10 = MotorA.GetTacho () * gv_left_forward
While lv_l_10 < lv_deg_10
f_sync_0 ()
lv_l_10 = MotorA.GetTacho () * gv_left_forward
EndWhile
EndSub
Sub f_move_motor_forward_7
lv_normal_deg_11 = lv_deg_11
If lv_acceleration_11 = "True" Then
lv_normal_deg_11 = lv_normal_deg_11 - 120
EndIf
If lv_zame_11 = "True" Then
lv_normal_deg_11 = lv_normal_deg_11 - 120
EndIf
If lv_acceleration_11 = "True" Then
Motor.ResetCount ( lv_motor_11 )
lv_m_11 = 0
While lv_m_11 < 120
lv_p_11 = lv_m_11 / 120
lv_power_11 = ( lv_max_power_11 - 10 ) * lv_p_11 + 10
Motor.Start ( lv_motor_11 , lv_power_11 * lv_forward_11 )
lv_m_11 = Motor.GetCount ( lv_motor_11 ) * lv_forward_11
Program.Delay ( 10 )
EndWhile
EndIf
Motor.Move ( lv_motor_11 , lv_max_power_11 * lv_forward_11 , lv_normal_deg_11 , "False" )
If lv_zame_11 = "True" Then
Motor.ResetCount ( lv_motor_11 )
lv_m_11 = 0
While lv_m_11 < 120
lv_p_11 = 1 - ( lv_m_11 / 120 )
lv_power_11 = ( lv_max_power_11 - 10 ) * lv_p_11 + 10
Motor.Start ( lv_motor_11 , lv_power_11 * lv_forward_11 )
lv_m_11 = Motor.GetCount ( lv_motor_11 ) * lv_forward_11
Program.Delay ( 10 )
EndWhile
EndIf
If lv_to_stop_11 = "True" Then
Motor.Stop ( lv_motor_11 , "True" )
EndIf
EndSub
Sub f_move_motor_backward_7
Motor.Start ( lv_motor_12 , - 10 * lv_forward_12 )
lv_normal_deg_12 = lv_deg_12
If lv_acceleration_12 = "True" Then
lv_normal_deg_12 = lv_normal_deg_12 - 120
EndIf
If lv_zame_12 = "True" Then
lv_normal_deg_12 = lv_normal_deg_12 - 120
EndIf
If lv_acceleration_12 = "True" Then
Motor.ResetCount ( lv_motor_12 )
lv_m_12 = 0
While lv_m_12 < 120
lv_p_12 = lv_m_12 / 120
lv_power_12 = ( lv_max_power_12 - 10 ) * lv_p_12 + 10
Motor.Start ( lv_motor_12 , lv_power_12 * - 1 * lv_forward_12 )
lv_m_12 = Motor.GetCount ( lv_motor_12 ) * - 1 * lv_forward_12
If lv_m_12 < 0 Then
lv_m_12 = 0
EndIf
Program.Delay ( 10 )
EndWhile
EndIf
Motor.Move ( lv_motor_12 , lv_max_power_12 * - 1 * lv_forward_12 , lv_normal_deg_12 , "False" )
If lv_zame_12 = "True" Then
Motor.ResetCount ( lv_motor_12 )
lv_m_12 = 0
While lv_m_12 < 120
lv_p_12 = 1 - ( lv_m_12 / 120 )
lv_power_12 = ( lv_max_power_12 - 10 ) * lv_p_12 + 10
Motor.Start ( lv_motor_12 , lv_power_12 * - 1 * lv_forward_12 )
lv_m_12 = Motor.GetCount ( lv_motor_12 ) * - 1 * lv_forward_12
Program.Delay ( 10 )
EndWhile
EndIf
If lv_to_stop_12 = "True" Then
Motor.Stop ( lv_motor_12 , "True" )
EndIf
EndSub
Sub f_zame_3
lv_power_1 = lv_base_power_13
f_movement_init_1 ()
f_reset_0 ()
lv_l_13 = MotorA.GetTacho () * gv_left_forward
While lv_l_13 < lv_deg_13
lv_p_13 = lv_l_13 / lv_deg_13
lv_l_13 = MotorA.GetTacho () * gv_left_forward
lv_r_13 = MotorB.GetTacho () * gv_right_forward
lv_delta_13 = ( lv_l_13 - lv_r_13 ) * ( 1 - lv_p_13 )
lv_power_13 = ( lv_base_power_13 - lv_min_power_13 ) * ( 1 - lv_p_13 ) + lv_min_power_13
lv_left_power_13 = lv_power_13 - lv_delta_13
lv_right_power_13 = lv_power_13 + lv_delta_13
MotorA.SetPower ( lv_left_power_13 * gv_left_forward )
MotorB.SetPower ( lv_right_power_13 * gv_right_forward )
Program.Delay ( 10 )
EndWhile
EndSub
