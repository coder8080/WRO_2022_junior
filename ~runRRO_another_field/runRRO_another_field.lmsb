DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_5
DATAF VLV_MIN_POWER_5
DATAF VLV_DEG_5
DATAF VLV_ACCELERATION_5
DATAF VLV_ZAME_5
DATAS VLV_MOTOR_8 252
DATAF VLV_FORWARD_8
DATAF VLV_BASE_POWER_8
DATAF VLV_MIN_POWER_8
DATAF VLV_DEG_8
DATAF VLV_ACCELERATION_8
DATAF VLV_ZAME_8
DATAF VLV_BASE_POWER_6
DATAF VLV_MIN_POWER_6
DATAF VLV_DEG_6
DATAF VLV_ACCELERATION_6
DATAF VLV_ZAME_6
DATAS VLV_MOTOR_7 252
DATAF VLV_FORWARD_7
DATAF VLV_BASE_POWER_7
DATAF VLV_MIN_POWER_7
DATAF VLV_DEG_7
DATAF VLV_ACCELERATION_7
DATAF VLV_ZAME_7
DATAF VLV_U_3
DATAF VLV_BASE_POWER_3
DATAF VLV_MIN_POWER_3
DATAF VLV_DEGREES_3
DATAF VLV_ZAMED_DEGREES_3
DATAF VLV_POWER_1
DATAF VLV_U_1
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAF VGV_RIGHT_FORWARD
DATAF VGV_LEFT_FORWARD
DATAS VGV_NOT_INVERSED_MOTOR 252
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_MOTORS 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_LINE_SENSOR
DATAF VGV_ULTRASONIC
DATAF VGV_A
DATAF VGV_P
DATAF VGV_D
DATAF VGV_LASTERROR
DATAF VGV_INTEGRAL
DATAF VGV_P_U
DATAF VGV_D_U
DATAF VGV_DEG
DATAF VGV_B
DATAF VGV_W
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_MEN_COUNT
DATAS VGV_CHEM 252
DATAF VGV_FIRE_COUNT
DATAS VGV_IS_CHEM_ON_RIGHT 252
DATAS VGV_IS_CHEM_ON_LEFT 252
DATAF VGV_CUBES_COUNT
DATAF VGV_WATER_STATE
DATAS VGV_OBJECT 252
DATAS VGV_START_FROM_RIGHT 252
DATAF VGV_NOWERROR
DATAF VGV_DIF
DATAF VGV_DERIVATIVE
DATAF VGV_UP
DATAF VGV_C
DATAF VGV_G
DATAS VGV_TAKE_RED_RIGHT 252
DATAS VGV_TAKE_RED_LEFT 252
DATAF VGV_CHEM_BACK
DATAF VGV_NO_BACK
DATAF VGV_HALF
DATAF VGV_ULTRA
DATAF VGV_I
DATAF VGV_R_C
DATAF VGV_L_C
DATAF VGV_DIFF
DATAF VGV_R_P
DATAF VGV_L_P
DATAS VGV_YELLOW_OBJECT 252
DATAF VGV_T
DATAF VGV_MINS
DATAF VGV_SECS
DATAS VGV_STR 252
DATAF VLV_V_1
DATAF VLV_NOWERROR_1
DATAF VLV_DIF_1
DATAF VLV_INTEGRAL_1
DATAF VLV_DERIVATIVE_1
DATAF VLV_UP_1
DATAF VLV_LASTERROR_1
DATAF VLV_NORMAL_DEGREES_3
DATAF VLV_C_3
DATAF VLV_MINUS_3
DATAF VLV_POWER_3
DATAF VLV_NORMAL_DEGREES_5
DATAF VLV_C_5
DATAF VLV_P_5
DATAF VLV_POWER_5
DATAF VLV_DELTA_5
DATAF VLV_LEFT_POWER_5
DATAF VLV_RIGHT_POWER_5
DATAF VLV_NORMAL_DEGREES_6
DATAF VLV_C_6
DATAF VLV_P_6
DATAF VLV_POWER_6
DATAF VLV_DELTA_6
DATAF VLV_LEFT_POWER_6
DATAF VLV_RIGHT_POWER_6
DATAF VLV_NORMAL_DEG_7
DATAF VLV_C_7
DATAF VLV_P_7
DATAF VLV_POWER_7
DATAF VLV_NORMAL_DEG_8
DATAF VLV_C_8
DATAF VLV_POWER_8
DATAF VLV_P_8

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_5
    MOVEF_F 0.0 VLV_MIN_POWER_5
    MOVEF_F 0.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    STRINGS DUPLICATE '' VLV_MOTOR_8
    MOVEF_F 0.0 VLV_FORWARD_8
    MOVEF_F 0.0 VLV_BASE_POWER_8
    MOVEF_F 0.0 VLV_MIN_POWER_8
    MOVEF_F 0.0 VLV_DEG_8
    MOVEF_F 0.0 VLV_ACCELERATION_8
    MOVEF_F 0.0 VLV_ZAME_8
    MOVEF_F 0.0 VLV_BASE_POWER_6
    MOVEF_F 0.0 VLV_MIN_POWER_6
    MOVEF_F 0.0 VLV_DEG_6
    MOVEF_F 0.0 VLV_ACCELERATION_6
    MOVEF_F 0.0 VLV_ZAME_6
    STRINGS DUPLICATE '' VLV_MOTOR_7
    MOVEF_F 0.0 VLV_FORWARD_7
    MOVEF_F 0.0 VLV_BASE_POWER_7
    MOVEF_F 0.0 VLV_MIN_POWER_7
    MOVEF_F 0.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    MOVEF_F 0.0 VLV_U_3
    MOVEF_F 0.0 VLV_BASE_POWER_3
    MOVEF_F 0.0 VLV_MIN_POWER_3
    MOVEF_F 0.0 VLV_DEGREES_3
    MOVEF_F 0.0 VLV_ZAMED_DEGREES_3
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_U_1
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_HALF
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    STRINGS DUPLICATE '' VGV_YELLOW_OBJECT
    MOVEF_F 0.0 VGV_T
    MOVEF_F 0.0 VGV_MINS
    MOVEF_F 0.0 VGV_SECS
    STRINGS DUPLICATE '' VGV_STR
    MOVEF_F 0.0 VLV_V_1
    MOVEF_F 0.0 VLV_NOWERROR_1
    MOVEF_F 0.0 VLV_DIF_1
    MOVEF_F 0.0 VLV_INTEGRAL_1
    MOVEF_F 0.0 VLV_DERIVATIVE_1
    MOVEF_F 0.0 VLV_UP_1
    MOVEF_F 0.0 VLV_LASTERROR_1
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_3
    MOVEF_F 0.0 VLV_C_3
    MOVEF_F 0.0 VLV_MINUS_3
    MOVEF_F 0.0 VLV_POWER_3
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_5
    MOVEF_F 0.0 VLV_C_5
    MOVEF_F 0.0 VLV_P_5
    MOVEF_F 0.0 VLV_POWER_5
    MOVEF_F 0.0 VLV_DELTA_5
    MOVEF_F 0.0 VLV_LEFT_POWER_5
    MOVEF_F 0.0 VLV_RIGHT_POWER_5
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_6
    MOVEF_F 0.0 VLV_C_6
    MOVEF_F 0.0 VLV_P_6
    MOVEF_F 0.0 VLV_POWER_6
    MOVEF_F 0.0 VLV_DELTA_6
    MOVEF_F 0.0 VLV_LEFT_POWER_6
    MOVEF_F 0.0 VLV_RIGHT_POWER_6
    MOVEF_F 0.0 VLV_NORMAL_DEG_7
    MOVEF_F 0.0 VLV_C_7
    MOVEF_F 0.0 VLV_P_7
    MOVEF_F 0.0 VLV_POWER_7
    MOVEF_F 0.0 VLV_NORMAL_DEG_8
    MOVEF_F 0.0 VLV_C_8
    MOVEF_F 0.0 VLV_POWER_8
    MOVEF_F 0.0 VLV_P_8
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    MOVEF_F 0.0 VLV_BASE_POWER_5
    MOVEF_F 0.0 VLV_MIN_POWER_5
    MOVEF_F 0.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    STRINGS DUPLICATE '' VLV_MOTOR_8
    MOVEF_F 0.0 VLV_FORWARD_8
    MOVEF_F 0.0 VLV_BASE_POWER_8
    MOVEF_F 0.0 VLV_MIN_POWER_8
    MOVEF_F 0.0 VLV_DEG_8
    MOVEF_F 0.0 VLV_ACCELERATION_8
    MOVEF_F 0.0 VLV_ZAME_8
    MOVEF_F 0.0 VLV_BASE_POWER_6
    MOVEF_F 0.0 VLV_MIN_POWER_6
    MOVEF_F 0.0 VLV_DEG_6
    MOVEF_F 0.0 VLV_ACCELERATION_6
    MOVEF_F 0.0 VLV_ZAME_6
    STRINGS DUPLICATE '' VLV_MOTOR_7
    MOVEF_F 0.0 VLV_FORWARD_7
    MOVEF_F 0.0 VLV_BASE_POWER_7
    MOVEF_F 0.0 VLV_MIN_POWER_7
    MOVEF_F 0.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    MOVEF_F 0.0 VLV_U_3
    MOVEF_F 0.0 VLV_BASE_POWER_3
    MOVEF_F 0.0 VLV_MIN_POWER_3
    MOVEF_F 0.0 VLV_DEGREES_3
    MOVEF_F 0.0 VLV_ZAMED_DEGREES_3
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_U_1
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_HALF
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_I
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    STRINGS DUPLICATE '' VGV_YELLOW_OBJECT
    MOVEF_F 0.0 VGV_T
    MOVEF_F 0.0 VGV_MINS
    MOVEF_F 0.0 VGV_SECS
    STRINGS DUPLICATE '' VGV_STR
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE 'B' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 1.0 VGV_LINE_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 1.0 VGV_P
    MOVEF_F 6.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 1.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE 'False' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 2.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE_SENSOR no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_RIGHT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_LEFT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 1.0 'Low battery'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB10:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB11 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB11:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB12:
ENDTHREAD:
    RETURN
SUB_F_LINE_0:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF 20.0 F.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf17
    DATA8 flag17
    DIVF F.0 10.0 tmpf17
    CP_EQF 0.0 10.0 flag17
    SELECTF flag17 0.0 tmpf17 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_LINE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_0:
SUB_F_ULTRASONIC_SLOW_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf30
    DATA8 flag30
    DIVF F.0 10.0 tmpf30
    CP_EQF 0.0 10.0 flag30
    SELECTF flag30 0.0 tmpf30 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 20.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 20.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SLOW_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SLOW_0:
SUB_F_ULTRASONIC_FAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf45
    DATA8 flag45
    DIVF F.0 10.0 tmpf45
    CP_EQF 0.0 10.0 flag45
    SELECTF flag45 0.0 tmpf45 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 30.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 30.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_FAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_FAST_0:
SUB_F_ULTRASONIC_SUPERFAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf60
    DATA8 flag60
    DIVF F.0 10.0 tmpf60
    CP_EQF 0.0 10.0 flag60
    SELECTF flag60 0.0 tmpf60 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 80.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 80.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SUPERFAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SUPERFAST_0:
SUB_F_STOP_0:
    CALL MOTOR.STOP VGV_MOTORS 'True'
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_STOP_RIGHT_0:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
RETSUB_F_STOP_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_RIGHT_0:
SUB_F_DELAY_0:
    DATA32 milliseconds73
	MOVEF_32 300.0 milliseconds73
	DATA32 timer73
	TIMER_WAIT milliseconds73 timer73
	TIMER_READY timer73
RETSUB_F_DELAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_0:
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_LEFT_0:
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 280.0 VLV_DEG_5
    MOVEF_F 100.0 VLV_ACCELERATION_5
    MOVEF_F 100.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB75:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB76:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 370.0 VLV_DEG_8
    MOVEF_F 100.0 VLV_ACCELERATION_8
    MOVEF_F 100.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB77:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB78:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer79
	DATA8 nos79
	DATA8 busy79
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer79 nos79
	JR_EQ8 0 nos79 motornotbusy79
  motorwaiting79:
	OUTPUT_TEST layer79 nos79 busy79
	JR_EQ8 busy79 0 motornotbusy79
	SLEEP
	JR motorwaiting79
  motornotbusy79:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 70.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB80 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB80:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB81:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer82
	DATA8 nos82
	DATA8 busy82
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer82 nos82
	JR_EQ8 0 nos82 motornotbusy82
  motorwaiting82:
	OUTPUT_TEST layer82 nos82 busy82
	JR_EQ8 busy82 0 motornotbusy82
	SLEEP
	JR motorwaiting82
  motornotbusy82:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB83:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 90.0 VLV_DEG_6
    MOVEF_F 0.0 VLV_ACCELERATION_6
    MOVEF_F 70.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB84 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB84:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB85 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB85:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 370.0 VLV_DEG_7
    MOVEF_F 100.0 VLV_ACCELERATION_7
    MOVEF_F 100.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB86:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB87:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 280.0 VLV_DEG_6
    MOVEF_F 100.0 VLV_ACCELERATION_6
    MOVEF_F 100.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB88:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB89:
RETSUB_F_TAKE_CHEM_ON_LEFT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_0:
SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 170.0 VLV_DEG_6
    MOVEF_F 70.0 VLV_ACCELERATION_6
    MOVEF_F 70.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB90:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB91:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer92
	DATA8 nos92
	DATA8 busy92
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer92 nos92
	JR_EQ8 0 nos92 motornotbusy92
  motorwaiting92:
	OUTPUT_TEST layer92 nos92 busy92
	JR_EQ8 busy92 0 motornotbusy92
	SLEEP
	JR motorwaiting92
  motornotbusy92:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 160.0 VLV_DEG_7
    MOVEF_F 70.0 VLV_ACCELERATION_7
    MOVEF_F 70.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB93:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB94:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer95
	DATA8 nos95
	DATA8 busy95
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer95 nos95
	JR_EQ8 0 nos95 motornotbusy95
  motorwaiting95:
	OUTPUT_TEST layer95 nos95 busy95
	JR_EQ8 busy95 0 motornotbusy95
	SLEEP
	JR motorwaiting95
  motornotbusy95:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB96:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 160.0 VLV_DEG_8
    MOVEF_F 70.0 VLV_ACCELERATION_8
    MOVEF_F 70.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB97:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB98:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 170.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB99 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB99:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB100:
RETSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 170.0 VLV_DEG_6
    MOVEF_F 70.0 VLV_ACCELERATION_6
    MOVEF_F 70.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB101:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB102:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer103
	DATA8 nos103
	DATA8 busy103
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer103 nos103
	JR_EQ8 0 nos103 motornotbusy103
  motorwaiting103:
	OUTPUT_TEST layer103 nos103 busy103
	JR_EQ8 busy103 0 motornotbusy103
	SLEEP
	JR motorwaiting103
  motornotbusy103:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 160.0 VLV_DEG_7
    MOVEF_F 70.0 VLV_ACCELERATION_7
    MOVEF_F 70.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB104:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB105:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer106
	DATA8 nos106
	DATA8 busy106
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer106 nos106
	JR_EQ8 0 nos106 motornotbusy106
  motorwaiting106:
	OUTPUT_TEST layer106 nos106 busy106
	JR_EQ8 busy106 0 motornotbusy106
	SLEEP
	JR motorwaiting106
  motornotbusy106:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB107:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 160.0 VLV_DEG_8
    MOVEF_F 70.0 VLV_ACCELERATION_8
    MOVEF_F 70.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB108:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB109:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 170.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB110:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB111:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else112_1
    CALL MOTOR.START VGV_WATER_MOTOR -30.0
    DATA32 milliseconds114
	MOVEF_32 1500.0 milliseconds114
	DATA32 timer114
	TIMER_WAIT milliseconds114 timer114
	TIMER_READY timer114
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 30.0 0.0 40.0 0.0 'True' 

	DATA8 layer116
	DATA8 nos116
	DATA8 busy116
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer116 nos116
	JR_EQ8 0 nos116 motornotbusy116
  motorwaiting116:
	OUTPUT_TEST layer116 nos116 busy116
	JR_EQ8 busy116 0 motornotbusy116
	SLEEP
	JR motorwaiting116
  motornotbusy116:
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif112
  else112_1:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds118
	MOVEF_32 2000.0 milliseconds118
	DATA32 timer118
	TIMER_WAIT milliseconds118 timer118
	TIMER_READY timer118
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -30.0 0.0 40.0 0.0 'True' 

	DATA8 layer120
	DATA8 nos120
	DATA8 busy120
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer120 nos120
	JR_EQ8 0 nos120 motornotbusy120
  motorwaiting120:
	OUTPUT_TEST layer120 nos120 busy120
	JR_EQ8 busy120 0 motornotbusy120
	SLEEP
	JR motorwaiting120
  motornotbusy120:
  else112_2:
  endif112:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_UPDATE_DISPLAY_0:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_OBJECT
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.1
    CALL TEXT.APPEND 'Red: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.1
    CALL TEXT.APPEND 'White: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 75.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_UPDATE_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UPDATE_DISPLAY_0:
SUB_F_RESET_VALUES_0:
    STRINGS DUPLICATE 'None' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
RETSUB_F_RESET_VALUES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_VALUES_0:
SUB_F_CLOSE_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -10.0 0.0 70.0 0.0 'True' 

	DATA8 layer131
	DATA8 nos131
	DATA8 busy131
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer131 nos131
	JR_EQ8 0 nos131 motornotbusy131
  motorwaiting131:
	OUTPUT_TEST layer131 nos131 busy131
	JR_EQ8 busy131 0 motornotbusy131
	SLEEP
	JR motorwaiting131
  motornotbusy131:
RETSUB_F_CLOSE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_0:
SUB_F_OPEN_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 10.0 0.0 70.0 0.0 'True' 

	DATA8 layer132
	DATA8 nos132
	DATA8 busy132
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer132 nos132
	JR_EQ8 0 nos132 motornotbusy132
  motorwaiting132:
	OUTPUT_TEST layer132 nos132 busy132
	JR_EQ8 busy132 0 motornotbusy132
	SLEEP
	JR motorwaiting132
  motornotbusy132:
RETSUB_F_OPEN_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_0:
SUB_F_TAKE_CUBES_0:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds134
	MOVEF_32 500.0 milliseconds134
	DATA32 timer134
	TIMER_WAIT milliseconds134 timer134
	TIMER_READY timer134
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer138
	DATA8 nos138
	DATA8 busy138
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer138 nos138
	JR_EQ8 0 nos138 motornotbusy138
  motorwaiting138:
	OUTPUT_TEST layer138 nos138 busy138
	JR_EQ8 busy138 0 motornotbusy138
	SLEEP
	JR motorwaiting138
  motornotbusy138:
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR -20.0 0.0 360.0 0.0 'True' 

	DATA8 layer139
	DATA8 nos139
	DATA8 busy139
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer139 nos139
	JR_EQ8 0 nos139 motornotbusy139
  motorwaiting139:
	OUTPUT_TEST layer139 nos139 busy139
	JR_EQ8 busy139 0 motornotbusy139
	SLEEP
	JR motorwaiting139
  motornotbusy139:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds143
	MOVEF_32 700.0 milliseconds143
	DATA32 timer143
	TIMER_WAIT milliseconds143 timer143
	TIMER_READY timer143
    WRITE32 ENDSUB_F_STOP_0:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB144:
    MOVEF_F 229.0 VLV_U_3
    MOVEF_F 50.0 VLV_BASE_POWER_3
    MOVEF_F 20.0 VLV_MIN_POWER_3
    MOVEF_F 930.0 VLV_DEGREES_3
    MOVEF_F 200.0 VLV_ZAMED_DEGREES_3
    WRITE32 ENDSUB_F_ULTRASONIC_ZAMED_5:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_ZAMED_5
CALLSUB145:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer146
	DATA8 nos146
	DATA8 busy146
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer146 nos146
	JR_EQ8 0 nos146 motornotbusy146
  motorwaiting146:
	OUTPUT_TEST layer146 nos146 busy146
	JR_EQ8 busy146 0 motornotbusy146
	SLEEP
	JR motorwaiting146
  motornotbusy146:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB147:
RETSUB_F_TAKE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_0:
SUB_F_TAKE_CUBES_INVERSED_0:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds149
	MOVEF_32 500.0 milliseconds149
	DATA32 timer149
	TIMER_WAIT milliseconds149 timer149
	TIMER_READY timer149
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer153
	DATA8 nos153
	DATA8 busy153
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer153 nos153
	JR_EQ8 0 nos153 motornotbusy153
  motorwaiting153:
	OUTPUT_TEST layer153 nos153 busy153
	JR_EQ8 busy153 0 motornotbusy153
	SLEEP
	JR motorwaiting153
  motornotbusy153:
    MULF -30.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds156
	MOVEF_32 3000.0 milliseconds156
	DATA32 timer156
	TIMER_WAIT milliseconds156 timer156
	TIMER_READY timer156
    WRITE32 ENDSUB_F_STOP_0:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB157:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds161
	MOVEF_32 1000.0 milliseconds161
	DATA32 timer161
	TIMER_WAIT milliseconds161 timer161
	TIMER_READY timer161
    WRITE32 ENDSUB_F_STOP_0:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB162:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 20.0 VLV_MIN_POWER_5
    MOVEF_F 930.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 200.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB164:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB165:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer166
	DATA8 nos166
	DATA8 busy166
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer166 nos166
	JR_EQ8 0 nos166 motornotbusy166
  motorwaiting166:
	OUTPUT_TEST layer166 nos166 busy166
	JR_EQ8 busy166 0 motornotbusy166
	SLEEP
	JR motorwaiting166
  motornotbusy166:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB167:
RETSUB_F_TAKE_CUBES_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_INVERSED_0:
SUB_F_TAKE_LONG_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer169
	DATA8 nos169
	DATA8 busy169
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer169 nos169
	JR_EQ8 0 nos169 motornotbusy169
  motorwaiting169:
	OUTPUT_TEST layer169 nos169 busy169
	JR_EQ8 busy169 0 motornotbusy169
	SLEEP
	JR motorwaiting169
  motornotbusy169:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds173
	MOVEF_32 1000.0 milliseconds173
	DATA32 timer173
	TIMER_WAIT milliseconds173 timer173
	TIMER_READY timer173
    WRITE32 ENDSUB_F_STOP_0:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB174:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB175:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer178
	DATA8 nos178
	DATA8 busy178
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer178 nos178
	JR_EQ8 0 nos178 motornotbusy178
  motorwaiting178:
	OUTPUT_TEST layer178 nos178 busy178
	JR_EQ8 busy178 0 motornotbusy178
	SLEEP
	JR motorwaiting178
  motornotbusy178:
    JR_NEQF VGV_CUBES_COUNT 2.0 else179_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB180:
  else179_1:
  endif179:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer183
	DATA8 nos183
	DATA8 busy183
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer183 nos183
	JR_EQ8 0 nos183 motornotbusy183
  motorwaiting183:
	OUTPUT_TEST layer183 nos183 busy183
	JR_EQ8 busy183 0 motornotbusy183
	SLEEP
	JR motorwaiting183
  motornotbusy183:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer185
	DATA8 nos185
	DATA8 busy185
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer185 nos185
	JR_EQ8 0 nos185 motornotbusy185
  motorwaiting185:
	OUTPUT_TEST layer185 nos185 busy185
	JR_EQ8 busy185 0 motornotbusy185
	SLEEP
	JR motorwaiting185
  motornotbusy185:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_0:
SUB_F_TAKE_LONG_INVERSED_0:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer187
	DATA8 nos187
	DATA8 busy187
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer187 nos187
	JR_EQ8 0 nos187 motornotbusy187
  motorwaiting187:
	OUTPUT_TEST layer187 nos187 busy187
	JR_EQ8 busy187 0 motornotbusy187
	SLEEP
	JR motorwaiting187
  motornotbusy187:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds191
	MOVEF_32 1000.0 milliseconds191
	DATA32 timer191
	TIMER_WAIT milliseconds191 timer191
	TIMER_READY timer191
    WRITE32 ENDSUB_F_STOP_0:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB192:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB193:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer196
	DATA8 nos196
	DATA8 busy196
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer196 nos196
	JR_EQ8 0 nos196 motornotbusy196
  motorwaiting196:
	OUTPUT_TEST layer196 nos196 busy196
	JR_EQ8 busy196 0 motornotbusy196
	SLEEP
	JR motorwaiting196
  motornotbusy196:
    JR_NEQF VGV_CUBES_COUNT 2.0 else197_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB198:
  else197_1:
  endif197:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer201
	DATA8 nos201
	DATA8 busy201
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer201 nos201
	JR_EQ8 0 nos201 motornotbusy201
  motorwaiting201:
	OUTPUT_TEST layer201 nos201 busy201
	JR_EQ8 busy201 0 motornotbusy201
	SLEEP
	JR motorwaiting201
  motornotbusy201:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer203
	DATA8 nos203
	DATA8 busy203
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer203 nos203
	JR_EQ8 0 nos203 motornotbusy203
  motorwaiting203:
	OUTPUT_TEST layer203 nos203 busy203
	JR_EQ8 busy203 0 motornotbusy203
	SLEEP
	JR motorwaiting203
  motornotbusy203:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_INVERSED_0:
SUB_F_TAKE_NEAR_0:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer205
	DATA8 nos205
	DATA8 busy205
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer205 nos205
	JR_EQ8 0 nos205 motornotbusy205
  motorwaiting205:
	OUTPUT_TEST layer205 nos205 busy205
	JR_EQ8 busy205 0 motornotbusy205
	SLEEP
	JR motorwaiting205
  motornotbusy205:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer207
	DATA8 nos207
	DATA8 busy207
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer207 nos207
	JR_EQ8 0 nos207 motornotbusy207
  motorwaiting207:
	OUTPUT_TEST layer207 nos207 busy207
	JR_EQ8 busy207 0 motornotbusy207
	SLEEP
	JR motorwaiting207
  motornotbusy207:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB208:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    MULF 20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer211
	DATA8 nos211
	DATA8 busy211
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer211 nos211
	JR_EQ8 0 nos211 motornotbusy211
  motorwaiting211:
	OUTPUT_TEST layer211 nos211 busy211
	JR_EQ8 busy211 0 motornotbusy211
	SLEEP
	JR motorwaiting211
  motornotbusy211:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB212:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer215
	DATA8 nos215
	DATA8 busy215
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer215 nos215
	JR_EQ8 0 nos215 motornotbusy215
  motorwaiting215:
	OUTPUT_TEST layer215 nos215 busy215
	JR_EQ8 busy215 0 motornotbusy215
	SLEEP
	JR motorwaiting215
  motornotbusy215:
    JR_NEQF VGV_CUBES_COUNT 2.0 else216_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB217:
  else216_1:
  endif216:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer220
	DATA8 nos220
	DATA8 busy220
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer220 nos220
	JR_EQ8 0 nos220 motornotbusy220
  motorwaiting220:
	OUTPUT_TEST layer220 nos220 busy220
	JR_EQ8 busy220 0 motornotbusy220
	SLEEP
	JR motorwaiting220
  motornotbusy220:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer222
	DATA8 nos222
	DATA8 busy222
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer222 nos222
	JR_EQ8 0 nos222 motornotbusy222
  motorwaiting222:
	OUTPUT_TEST layer222 nos222 busy222
	JR_EQ8 busy222 0 motornotbusy222
	SLEEP
	JR motorwaiting222
  motornotbusy222:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer224
	DATA8 nos224
	DATA8 busy224
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer224 nos224
	JR_EQ8 0 nos224 motornotbusy224
  motorwaiting224:
	OUTPUT_TEST layer224 nos224 busy224
	JR_EQ8 busy224 0 motornotbusy224
	SLEEP
	JR motorwaiting224
  motornotbusy224:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB225:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer228
	DATA8 nos228
	DATA8 busy228
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer228 nos228
	JR_EQ8 0 nos228 motornotbusy228
  motorwaiting228:
	OUTPUT_TEST layer228 nos228 busy228
	JR_EQ8 busy228 0 motornotbusy228
	SLEEP
	JR motorwaiting228
  motornotbusy228:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_0:
SUB_F_TAKE_NEAR_INVERSED_0:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer230
	DATA8 nos230
	DATA8 busy230
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer230 nos230
	JR_EQ8 0 nos230 motornotbusy230
  motorwaiting230:
	OUTPUT_TEST layer230 nos230 busy230
	JR_EQ8 busy230 0 motornotbusy230
	SLEEP
	JR motorwaiting230
  motornotbusy230:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer232
	DATA8 nos232
	DATA8 busy232
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer232 nos232
	JR_EQ8 0 nos232 motornotbusy232
  motorwaiting232:
	OUTPUT_TEST layer232 nos232 busy232
	JR_EQ8 busy232 0 motornotbusy232
	SLEEP
	JR motorwaiting232
  motornotbusy232:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB233:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    MULF 20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer236
	DATA8 nos236
	DATA8 busy236
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer236 nos236
	JR_EQ8 0 nos236 motornotbusy236
  motorwaiting236:
	OUTPUT_TEST layer236 nos236 busy236
	JR_EQ8 busy236 0 motornotbusy236
	SLEEP
	JR motorwaiting236
  motornotbusy236:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB237:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer240
	DATA8 nos240
	DATA8 busy240
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer240 nos240
	JR_EQ8 0 nos240 motornotbusy240
  motorwaiting240:
	OUTPUT_TEST layer240 nos240 busy240
	JR_EQ8 busy240 0 motornotbusy240
	SLEEP
	JR motorwaiting240
  motornotbusy240:
    JR_NEQF VGV_CUBES_COUNT 2.0 else241_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB242:
  else241_1:
  endif241:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer245
	DATA8 nos245
	DATA8 busy245
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer245 nos245
	JR_EQ8 0 nos245 motornotbusy245
  motorwaiting245:
	OUTPUT_TEST layer245 nos245 busy245
	JR_EQ8 busy245 0 motornotbusy245
	SLEEP
	JR motorwaiting245
  motornotbusy245:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer247
	DATA8 nos247
	DATA8 busy247
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer247 nos247
	JR_EQ8 0 nos247 motornotbusy247
  motorwaiting247:
	OUTPUT_TEST layer247 nos247 busy247
	JR_EQ8 busy247 0 motornotbusy247
	SLEEP
	JR motorwaiting247
  motornotbusy247:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer249
	DATA8 nos249
	DATA8 busy249
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer249 nos249
	JR_EQ8 0 nos249 motornotbusy249
  motorwaiting249:
	OUTPUT_TEST layer249 nos249 busy249
	JR_EQ8 busy249 0 motornotbusy249
	SLEEP
	JR motorwaiting249
  motornotbusy249:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB250:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer253
	DATA8 nos253
	DATA8 busy253
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer253 nos253
	JR_EQ8 0 nos253 motornotbusy253
  motorwaiting253:
	OUTPUT_TEST layer253 nos253 busy253
	JR_EQ8 busy253 0 motornotbusy253
	SLEEP
	JR motorwaiting253
  motornotbusy253:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_INVERSED_0:
SUB_F_TAKE_BOTH_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer255
	DATA8 nos255
	DATA8 busy255
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer255 nos255
	JR_EQ8 0 nos255 motornotbusy255
  motorwaiting255:
	OUTPUT_TEST layer255 nos255 busy255
	JR_EQ8 busy255 0 motornotbusy255
	SLEEP
	JR motorwaiting255
  motornotbusy255:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer258
	DATA8 nos258
	DATA8 busy258
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer258 nos258
	JR_EQ8 0 nos258 motornotbusy258
  motorwaiting258:
	OUTPUT_TEST layer258 nos258 busy258
	JR_EQ8 busy258 0 motornotbusy258
	SLEEP
	JR motorwaiting258
  motornotbusy258:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB259:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer262
	DATA8 nos262
	DATA8 busy262
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer262 nos262
	JR_EQ8 0 nos262 motornotbusy262
  motorwaiting262:
	OUTPUT_TEST layer262 nos262 busy262
	JR_EQ8 busy262 0 motornotbusy262
	SLEEP
	JR motorwaiting262
  motornotbusy262:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB263:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer266
	DATA8 nos266
	DATA8 busy266
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer266 nos266
	JR_EQ8 0 nos266 motornotbusy266
  motorwaiting266:
	OUTPUT_TEST layer266 nos266 busy266
	JR_EQ8 busy266 0 motornotbusy266
	SLEEP
	JR motorwaiting266
  motornotbusy266:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer268
	DATA8 nos268
	DATA8 busy268
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer268 nos268
	JR_EQ8 0 nos268 motornotbusy268
  motorwaiting268:
	OUTPUT_TEST layer268 nos268 busy268
	JR_EQ8 busy268 0 motornotbusy268
	SLEEP
	JR motorwaiting268
  motornotbusy268:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer271
	DATA8 nos271
	DATA8 busy271
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer271 nos271
	JR_EQ8 0 nos271 motornotbusy271
  motorwaiting271:
	OUTPUT_TEST layer271 nos271 busy271
	JR_EQ8 busy271 0 motornotbusy271
	SLEEP
	JR motorwaiting271
  motornotbusy271:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB272:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer275
	DATA8 nos275
	DATA8 busy275
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer275 nos275
	JR_EQ8 0 nos275 motornotbusy275
  motorwaiting275:
	OUTPUT_TEST layer275 nos275 busy275
	JR_EQ8 busy275 0 motornotbusy275
	SLEEP
	JR motorwaiting275
  motornotbusy275:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer277
	DATA8 nos277
	DATA8 busy277
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer277 nos277
	JR_EQ8 0 nos277 motornotbusy277
  motorwaiting277:
	OUTPUT_TEST layer277 nos277 busy277
	JR_EQ8 busy277 0 motornotbusy277
	SLEEP
	JR motorwaiting277
  motornotbusy277:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer279
	DATA8 nos279
	DATA8 busy279
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer279 nos279
	JR_EQ8 0 nos279 motornotbusy279
  motorwaiting279:
	OUTPUT_TEST layer279 nos279 busy279
	JR_EQ8 busy279 0 motornotbusy279
	SLEEP
	JR motorwaiting279
  motornotbusy279:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer282
	DATA8 nos282
	DATA8 busy282
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer282 nos282
	JR_EQ8 0 nos282 motornotbusy282
  motorwaiting282:
	OUTPUT_TEST layer282 nos282 busy282
	JR_EQ8 busy282 0 motornotbusy282
	SLEEP
	JR motorwaiting282
  motornotbusy282:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_0:
SUB_F_TAKE_BOTH_INVERSED_0:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer284
	DATA8 nos284
	DATA8 busy284
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer284 nos284
	JR_EQ8 0 nos284 motornotbusy284
  motorwaiting284:
	OUTPUT_TEST layer284 nos284 busy284
	JR_EQ8 busy284 0 motornotbusy284
	SLEEP
	JR motorwaiting284
  motornotbusy284:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer287
	DATA8 nos287
	DATA8 busy287
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer287 nos287
	JR_EQ8 0 nos287 motornotbusy287
  motorwaiting287:
	OUTPUT_TEST layer287 nos287 busy287
	JR_EQ8 busy287 0 motornotbusy287
	SLEEP
	JR motorwaiting287
  motornotbusy287:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB288:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer291
	DATA8 nos291
	DATA8 busy291
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer291 nos291
	JR_EQ8 0 nos291 motornotbusy291
  motorwaiting291:
	OUTPUT_TEST layer291 nos291 busy291
	JR_EQ8 busy291 0 motornotbusy291
	SLEEP
	JR motorwaiting291
  motornotbusy291:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB292:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer295
	DATA8 nos295
	DATA8 busy295
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer295 nos295
	JR_EQ8 0 nos295 motornotbusy295
  motorwaiting295:
	OUTPUT_TEST layer295 nos295 busy295
	JR_EQ8 busy295 0 motornotbusy295
	SLEEP
	JR motorwaiting295
  motornotbusy295:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer297
	DATA8 nos297
	DATA8 busy297
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer297 nos297
	JR_EQ8 0 nos297 motornotbusy297
  motorwaiting297:
	OUTPUT_TEST layer297 nos297 busy297
	JR_EQ8 busy297 0 motornotbusy297
	SLEEP
	JR motorwaiting297
  motornotbusy297:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer300
	DATA8 nos300
	DATA8 busy300
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer300 nos300
	JR_EQ8 0 nos300 motornotbusy300
  motorwaiting300:
	OUTPUT_TEST layer300 nos300 busy300
	JR_EQ8 busy300 0 motornotbusy300
	SLEEP
	JR motorwaiting300
  motornotbusy300:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB301:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer304
	DATA8 nos304
	DATA8 busy304
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer304 nos304
	JR_EQ8 0 nos304 motornotbusy304
  motorwaiting304:
	OUTPUT_TEST layer304 nos304 busy304
	JR_EQ8 busy304 0 motornotbusy304
	SLEEP
	JR motorwaiting304
  motornotbusy304:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer306
	DATA8 nos306
	DATA8 busy306
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer306 nos306
	JR_EQ8 0 nos306 motornotbusy306
  motorwaiting306:
	OUTPUT_TEST layer306 nos306 busy306
	JR_EQ8 busy306 0 motornotbusy306
	SLEEP
	JR motorwaiting306
  motornotbusy306:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer308
	DATA8 nos308
	DATA8 busy308
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer308 nos308
	JR_EQ8 0 nos308 motornotbusy308
  motorwaiting308:
	OUTPUT_TEST layer308 nos308 busy308
	JR_EQ8 busy308 0 motornotbusy308
	SLEEP
	JR motorwaiting308
  motornotbusy308:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer311
	DATA8 nos311
	DATA8 busy311
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer311 nos311
	JR_EQ8 0 nos311 motornotbusy311
  motorwaiting311:
	OUTPUT_TEST layer311 nos311 busy311
	JR_EQ8 busy311 0 motornotbusy311
	SLEEP
	JR motorwaiting311
  motornotbusy311:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_INVERSED_0:
SUB_F_TAKE_NEAR_DOUBLE_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer313
	DATA8 nos313
	DATA8 busy313
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer313 nos313
	JR_EQ8 0 nos313 motornotbusy313
  motorwaiting313:
	OUTPUT_TEST layer313 nos313 busy313
	JR_EQ8 busy313 0 motornotbusy313
	SLEEP
	JR motorwaiting313
  motornotbusy313:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer315
	DATA8 nos315
	DATA8 busy315
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer315 nos315
	JR_EQ8 0 nos315 motornotbusy315
  motorwaiting315:
	OUTPUT_TEST layer315 nos315 busy315
	JR_EQ8 busy315 0 motornotbusy315
	SLEEP
	JR motorwaiting315
  motornotbusy315:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer318
	DATA8 nos318
	DATA8 busy318
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer318 nos318
	JR_EQ8 0 nos318 motornotbusy318
  motorwaiting318:
	OUTPUT_TEST layer318 nos318 busy318
	JR_EQ8 busy318 0 motornotbusy318
	SLEEP
	JR motorwaiting318
  motornotbusy318:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB319:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer322
	DATA8 nos322
	DATA8 busy322
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer322 nos322
	JR_EQ8 0 nos322 motornotbusy322
  motorwaiting322:
	OUTPUT_TEST layer322 nos322 busy322
	JR_EQ8 busy322 0 motornotbusy322
	SLEEP
	JR motorwaiting322
  motornotbusy322:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB323:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer326
	DATA8 nos326
	DATA8 busy326
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer326 nos326
	JR_EQ8 0 nos326 motornotbusy326
  motorwaiting326:
	OUTPUT_TEST layer326 nos326 busy326
	JR_EQ8 busy326 0 motornotbusy326
	SLEEP
	JR motorwaiting326
  motornotbusy326:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB327:
RETSUB_F_TAKE_NEAR_DOUBLE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_0:
SUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer329
	DATA8 nos329
	DATA8 busy329
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer329 nos329
	JR_EQ8 0 nos329 motornotbusy329
  motorwaiting329:
	OUTPUT_TEST layer329 nos329 busy329
	JR_EQ8 busy329 0 motornotbusy329
	SLEEP
	JR motorwaiting329
  motornotbusy329:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer331
	DATA8 nos331
	DATA8 busy331
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer331 nos331
	JR_EQ8 0 nos331 motornotbusy331
  motorwaiting331:
	OUTPUT_TEST layer331 nos331 busy331
	JR_EQ8 busy331 0 motornotbusy331
	SLEEP
	JR motorwaiting331
  motornotbusy331:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer334
	DATA8 nos334
	DATA8 busy334
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer334 nos334
	JR_EQ8 0 nos334 motornotbusy334
  motorwaiting334:
	OUTPUT_TEST layer334 nos334 busy334
	JR_EQ8 busy334 0 motornotbusy334
	SLEEP
	JR motorwaiting334
  motornotbusy334:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB335:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer338
	DATA8 nos338
	DATA8 busy338
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer338 nos338
	JR_EQ8 0 nos338 motornotbusy338
  motorwaiting338:
	OUTPUT_TEST layer338 nos338 busy338
	JR_EQ8 busy338 0 motornotbusy338
	SLEEP
	JR motorwaiting338
  motornotbusy338:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB339:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer342
	DATA8 nos342
	DATA8 busy342
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer342 nos342
	JR_EQ8 0 nos342 motornotbusy342
  motorwaiting342:
	OUTPUT_TEST layer342 nos342 busy342
	JR_EQ8 busy342 0 motornotbusy342
	SLEEP
	JR motorwaiting342
  motornotbusy342:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB343:
RETSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer345
	DATA8 nos345
	DATA8 busy345
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer345 nos345
	JR_EQ8 0 nos345 motornotbusy345
  motorwaiting345:
	OUTPUT_TEST layer345 nos345 busy345
	JR_EQ8 busy345 0 motornotbusy345
	SLEEP
	JR motorwaiting345
  motornotbusy345:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer347
	DATA8 nos347
	DATA8 busy347
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer347 nos347
	JR_EQ8 0 nos347 motornotbusy347
  motorwaiting347:
	OUTPUT_TEST layer347 nos347 busy347
	JR_EQ8 busy347 0 motornotbusy347
	SLEEP
	JR motorwaiting347
  motornotbusy347:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer350
	DATA8 nos350
	DATA8 busy350
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer350 nos350
	JR_EQ8 0 nos350 motornotbusy350
  motorwaiting350:
	OUTPUT_TEST layer350 nos350 busy350
	JR_EQ8 busy350 0 motornotbusy350
	SLEEP
	JR motorwaiting350
  motornotbusy350:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB351:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer354
	DATA8 nos354
	DATA8 busy354
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer354 nos354
	JR_EQ8 0 nos354 motornotbusy354
  motorwaiting354:
	OUTPUT_TEST layer354 nos354 busy354
	JR_EQ8 busy354 0 motornotbusy354
	SLEEP
	JR motorwaiting354
  motornotbusy354:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB355:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer358
	DATA8 nos358
	DATA8 busy358
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer358 nos358
	JR_EQ8 0 nos358 motornotbusy358
  motorwaiting358:
	OUTPUT_TEST layer358 nos358 busy358
	JR_EQ8 busy358 0 motornotbusy358
	SLEEP
	JR motorwaiting358
  motornotbusy358:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB359:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer361
	DATA8 nos361
	DATA8 busy361
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer361 nos361
	JR_EQ8 0 nos361 motornotbusy361
  motorwaiting361:
	OUTPUT_TEST layer361 nos361 busy361
	JR_EQ8 busy361 0 motornotbusy361
	SLEEP
	JR motorwaiting361
  motornotbusy361:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer363
	DATA8 nos363
	DATA8 busy363
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer363 nos363
	JR_EQ8 0 nos363 motornotbusy363
  motorwaiting363:
	OUTPUT_TEST layer363 nos363 busy363
	JR_EQ8 busy363 0 motornotbusy363
	SLEEP
	JR motorwaiting363
  motornotbusy363:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer366
	DATA8 nos366
	DATA8 busy366
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer366 nos366
	JR_EQ8 0 nos366 motornotbusy366
  motorwaiting366:
	OUTPUT_TEST layer366 nos366 busy366
	JR_EQ8 busy366 0 motornotbusy366
	SLEEP
	JR motorwaiting366
  motornotbusy366:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB367:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer370
	DATA8 nos370
	DATA8 busy370
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer370 nos370
	JR_EQ8 0 nos370 motornotbusy370
  motorwaiting370:
	OUTPUT_TEST layer370 nos370 busy370
	JR_EQ8 busy370 0 motornotbusy370
	SLEEP
	JR motorwaiting370
  motornotbusy370:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB371:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer374
	DATA8 nos374
	DATA8 busy374
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer374 nos374
	JR_EQ8 0 nos374 motornotbusy374
  motorwaiting374:
	OUTPUT_TEST layer374 nos374 busy374
	JR_EQ8 busy374 0 motornotbusy374
	SLEEP
	JR motorwaiting374
  motornotbusy374:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB375:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
SUB_F_FINISH_AFTER_NEAR_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds379
	MOVEF_32 1500.0 milliseconds379
	DATA32 timer379
	TIMER_WAIT milliseconds379 timer379
	TIMER_READY timer379
    WRITE32 ENDSUB_F_STOP_0:CALLSUB380 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB380:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer382
	DATA8 nos382
	DATA8 busy382
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer382 nos382
	JR_EQ8 0 nos382 motornotbusy382
  motorwaiting382:
	OUTPUT_TEST layer382 nos382 busy382
	JR_EQ8 busy382 0 motornotbusy382
	SLEEP
	JR motorwaiting382
  motornotbusy382:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer384
	DATA8 nos384
	DATA8 busy384
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer384 nos384
	JR_EQ8 0 nos384 motornotbusy384
  motorwaiting384:
	OUTPUT_TEST layer384 nos384 busy384
	JR_EQ8 busy384 0 motornotbusy384
	SLEEP
	JR motorwaiting384
  motornotbusy384:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds388
	MOVEF_32 1000.0 milliseconds388
	DATA32 timer388
	TIMER_WAIT milliseconds388 timer388
	TIMER_READY timer388
    WRITE32 ENDSUB_F_STOP_0:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB389:
RETSUB_F_FINISH_AFTER_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_0:
SUB_F_FINISH_AFTER_NEAR_INVERSED_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds393
	MOVEF_32 1500.0 milliseconds393
	DATA32 timer393
	TIMER_WAIT milliseconds393 timer393
	TIMER_READY timer393
    WRITE32 ENDSUB_F_STOP_0:CALLSUB394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB394:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer396
	DATA8 nos396
	DATA8 busy396
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer396 nos396
	JR_EQ8 0 nos396 motornotbusy396
  motorwaiting396:
	OUTPUT_TEST layer396 nos396 busy396
	JR_EQ8 busy396 0 motornotbusy396
	SLEEP
	JR motorwaiting396
  motornotbusy396:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer398
	DATA8 nos398
	DATA8 busy398
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer398 nos398
	JR_EQ8 0 nos398 motornotbusy398
  motorwaiting398:
	OUTPUT_TEST layer398 nos398 busy398
	JR_EQ8 busy398 0 motornotbusy398
	SLEEP
	JR motorwaiting398
  motornotbusy398:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds402
	MOVEF_32 1000.0 milliseconds402
	DATA32 timer402
	TIMER_WAIT milliseconds402 timer402
	TIMER_READY timer402
    WRITE32 ENDSUB_F_STOP_0:CALLSUB403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB403:
RETSUB_F_FINISH_AFTER_NEAR_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:
SUB_F_TAKES_INVERSED_0:
    WRITE32 ENDSUB_F_TAKE_CUBES_INVERSED_0:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_INVERSED_0
CALLSUB404:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer407
	DATA8 nos407
	DATA8 busy407
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer407 nos407
	JR_EQ8 0 nos407 motornotbusy407
  motorwaiting407:
	OUTPUT_TEST layer407 nos407 busy407
	JR_EQ8 busy407 0 motornotbusy407
	SLEEP
	JR motorwaiting407
  motornotbusy407:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else408_1
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else408_1
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_INVERSED_0
CALLSUB411:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB412:
    JR endif408
  else408_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else408_2
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else408_2
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer417
	DATA8 nos417
	DATA8 busy417
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer417 nos417
	JR_EQ8 0 nos417 motornotbusy417
  motorwaiting417:
	OUTPUT_TEST layer417 nos417 busy417
	JR_EQ8 busy417 0 motornotbusy417
	SLEEP
	JR motorwaiting417
  motornotbusy417:
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_INVERSED_0
CALLSUB418:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB419:
    JR endif408
  else408_2:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else408_3
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else408_3
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:CALLSUB422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0
CALLSUB422:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB423 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB423:
    JR endif408
  else408_3:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else424_1
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else424_1
    WRITE32 ENDSUB_F_TAKE_BOTH_INVERSED_0:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_INVERSED_0
CALLSUB427:
    JR endif424
  else424_1:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else424_2
    WRITE32 ENDSUB_F_TAKE_NEAR_INVERSED_0:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_INVERSED_0
CALLSUB429:
    JR endif424
  else424_2:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else424_3
    WRITE32 ENDSUB_F_TAKE_LONG_INVERSED_0:CALLSUB431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_INVERSED_0
CALLSUB431:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer434
	DATA8 nos434
	DATA8 busy434
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer434 nos434
	JR_EQ8 0 nos434 motornotbusy434
  motorwaiting434:
	OUTPUT_TEST layer434 nos434 busy434
	JR_EQ8 busy434 0 motornotbusy434
	SLEEP
	JR motorwaiting434
  motornotbusy434:
    JR endif424
  else424_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer437
	DATA8 nos437
	DATA8 busy437
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer437 nos437
	JR_EQ8 0 nos437 motornotbusy437
  motorwaiting437:
	OUTPUT_TEST layer437 nos437 busy437
	JR_EQ8 busy437 0 motornotbusy437
	SLEEP
	JR motorwaiting437
  motornotbusy437:
  else424_4:
  endif424:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else438_1
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else438_1
    WRITE32 ENDSUB_F_TAKE_BOTH_INVERSED_0:CALLSUB441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_INVERSED_0
CALLSUB441:
    JR endif438
  else438_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else438_2
    WRITE32 ENDSUB_F_TAKE_NEAR_INVERSED_0:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_INVERSED_0
CALLSUB443:
    JR endif438
  else438_2:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else438_3
    WRITE32 ENDSUB_F_TAKE_LONG_INVERSED_0:CALLSUB445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_INVERSED_0
CALLSUB445:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer448
	DATA8 nos448
	DATA8 busy448
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer448 nos448
	JR_EQ8 0 nos448 motornotbusy448
  motorwaiting448:
	OUTPUT_TEST layer448 nos448 busy448
	JR_EQ8 busy448 0 motornotbusy448
	SLEEP
	JR motorwaiting448
  motornotbusy448:
    JR endif438
  else438_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer451
	DATA8 nos451
	DATA8 busy451
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer451 nos451
	JR_EQ8 0 nos451 motornotbusy451
  motorwaiting451:
	OUTPUT_TEST layer451 nos451 busy451
	JR_EQ8 busy451 0 motornotbusy451
	SLEEP
	JR motorwaiting451
  motornotbusy451:
  else438_4:
  endif438:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else452_1
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else452_1
    WRITE32 ENDSUB_F_TAKE_BOTH_INVERSED_0:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_INVERSED_0
CALLSUB455:
    JR endif452
  else452_1:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else452_2
    WRITE32 ENDSUB_F_TAKE_NEAR_INVERSED_0:CALLSUB457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_INVERSED_0
CALLSUB457:
    JR endif452
  else452_2:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else452_3
    WRITE32 ENDSUB_F_TAKE_LONG_INVERSED_0:CALLSUB459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_INVERSED_0
CALLSUB459:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer462
	DATA8 nos462
	DATA8 busy462
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer462 nos462
	JR_EQ8 0 nos462 motornotbusy462
  motorwaiting462:
	OUTPUT_TEST layer462 nos462 busy462
	JR_EQ8 busy462 0 motornotbusy462
	SLEEP
	JR motorwaiting462
  motornotbusy462:
    JR endif452
  else452_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer465
	DATA8 nos465
	DATA8 busy465
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer465 nos465
	JR_EQ8 0 nos465 motornotbusy465
  motorwaiting465:
	OUTPUT_TEST layer465 nos465 busy465
	JR_EQ8 busy465 0 motornotbusy465
	SLEEP
	JR motorwaiting465
  motornotbusy465:
  else452_4:
  endif452:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer467
	DATA8 nos467
	DATA8 busy467
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer467 nos467
	JR_EQ8 0 nos467 motornotbusy467
  motorwaiting467:
	OUTPUT_TEST layer467 nos467 busy467
	JR_EQ8 busy467 0 motornotbusy467
	SLEEP
	JR motorwaiting467
  motornotbusy467:
    MULF VGV_LEFT_FORWARD -25.0 F.0
    MULF VGV_RIGHT_FORWARD -25.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds471
	MOVEF_32 1500.0 milliseconds471
	DATA32 timer471
	TIMER_WAIT milliseconds471 timer471
	TIMER_READY timer471
    WRITE32 ENDSUB_F_STOP_0:CALLSUB472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB472:
  else408_4:
  endif408:
RETSUB_F_TAKES_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKES_INVERSED_0:
SUB_F_TAKES_NORMAL_0:
    WRITE32 ENDSUB_F_TAKE_CUBES_0:CALLSUB473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_0
CALLSUB473:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer476
	DATA8 nos476
	DATA8 busy476
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer476 nos476
	JR_EQ8 0 nos476 motornotbusy476
  motorwaiting476:
	OUTPUT_TEST layer476 nos476 busy476
	JR_EQ8 busy476 0 motornotbusy476
	SLEEP
	JR motorwaiting476
  motornotbusy476:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else477_1
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else477_1
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB480:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB481:
    JR endif477
  else477_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else477_2
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else477_2
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer486
	DATA8 nos486
	DATA8 busy486
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer486 nos486
	JR_EQ8 0 nos486 motornotbusy486
  motorwaiting486:
	OUTPUT_TEST layer486 nos486 busy486
	JR_EQ8 busy486 0 motornotbusy486
	SLEEP
	JR motorwaiting486
  motornotbusy486:
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB487:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB488:
    JR endif477
  else477_2:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else477_3
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else477_3
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_LONG_0
CALLSUB491:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB492:
    JR endif477
  else477_3:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else493_1
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else493_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB496:
    JR endif493
  else493_1:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else493_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB498:
    JR endif493
  else493_2:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else493_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB500:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer503
	DATA8 nos503
	DATA8 busy503
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer503 nos503
	JR_EQ8 0 nos503 motornotbusy503
  motorwaiting503:
	OUTPUT_TEST layer503 nos503 busy503
	JR_EQ8 busy503 0 motornotbusy503
	SLEEP
	JR motorwaiting503
  motornotbusy503:
    JR endif493
  else493_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer506
	DATA8 nos506
	DATA8 busy506
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer506 nos506
	JR_EQ8 0 nos506 motornotbusy506
  motorwaiting506:
	OUTPUT_TEST layer506 nos506 busy506
	JR_EQ8 busy506 0 motornotbusy506
	SLEEP
	JR motorwaiting506
  motornotbusy506:
  else493_4:
  endif493:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else507_1
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else507_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB510:
    JR endif507
  else507_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else507_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB512 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB512:
    JR endif507
  else507_2:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else507_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB514:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer517
	DATA8 nos517
	DATA8 busy517
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer517 nos517
	JR_EQ8 0 nos517 motornotbusy517
  motorwaiting517:
	OUTPUT_TEST layer517 nos517 busy517
	JR_EQ8 busy517 0 motornotbusy517
	SLEEP
	JR motorwaiting517
  motornotbusy517:
    JR endif507
  else507_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer520
	DATA8 nos520
	DATA8 busy520
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer520 nos520
	JR_EQ8 0 nos520 motornotbusy520
  motorwaiting520:
	OUTPUT_TEST layer520 nos520 busy520
	JR_EQ8 busy520 0 motornotbusy520
	SLEEP
	JR motorwaiting520
  motornotbusy520:
  else507_4:
  endif507:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else521_1
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else521_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB524:
    JR endif521
  else521_1:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else521_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB526:
    JR endif521
  else521_2:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else521_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB528:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer531
	DATA8 nos531
	DATA8 busy531
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer531 nos531
	JR_EQ8 0 nos531 motornotbusy531
  motorwaiting531:
	OUTPUT_TEST layer531 nos531 busy531
	JR_EQ8 busy531 0 motornotbusy531
	SLEEP
	JR motorwaiting531
  motornotbusy531:
    JR endif521
  else521_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer534
	DATA8 nos534
	DATA8 busy534
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer534 nos534
	JR_EQ8 0 nos534 motornotbusy534
  motorwaiting534:
	OUTPUT_TEST layer534 nos534 busy534
	JR_EQ8 busy534 0 motornotbusy534
	SLEEP
	JR motorwaiting534
  motornotbusy534:
  else521_4:
  endif521:
    MULF -15.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer536
	DATA8 nos536
	DATA8 busy536
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer536 nos536
	JR_EQ8 0 nos536 motornotbusy536
  motorwaiting536:
	OUTPUT_TEST layer536 nos536 busy536
	JR_EQ8 busy536 0 motornotbusy536
	SLEEP
	JR motorwaiting536
  motornotbusy536:
    MULF VGV_LEFT_FORWARD -25.0 F.0
    MULF VGV_RIGHT_FORWARD -25.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds540
	MOVEF_32 1500.0 milliseconds540
	DATA32 timer540
	TIMER_WAIT milliseconds540 timer540
	TIMER_READY timer540
    WRITE32 ENDSUB_F_STOP_0:CALLSUB541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB541:
  else477_4:
  endif477:
RETSUB_F_TAKES_NORMAL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKES_NORMAL_0:
SUB_F_GO_FORWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 25.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 25.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_0:
SUB_F_GO_BACKWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 0.5 VGV_DIFF
    SUBF -25.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF -25.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_BACKWARD_0:
SUB_F_MOVE_FORWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while568:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile568
  whilebody568:
    WRITE32 ENDSUB_F_GO_FORWARD_0:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_0
CALLSUB570:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody568
  endwhile568:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB572:
RETSUB_F_MOVE_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_0:
SUB_F_MOVE_BACKWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while575:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_LTEQF F.0 F.1 endwhile575
  whilebody575:
    WRITE32 ENDSUB_F_GO_BACKWARD_0:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_0
CALLSUB578:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_GTF F.0 F.1 whilebody575
  endwhile575:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB581:
RETSUB_F_MOVE_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_0:
SUB_F_MAIN_0:
    STRINGS DUPLICATE 'True' VGV_START_FROM_RIGHT
    TIMER_READ timeMC9
    MOVEF_F 97.0 VGV_A
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB583:
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else584_1
    MULF VGV_LEFT_FORWARD 100.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    MOVEF_F 100.0 VGV_DEG
  while589:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile589
  whilebody589:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody589
  endwhile589:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while595:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile595
  whilebody595:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody595
  endwhile595:
  while598:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 15.0 endwhile598
  whilebody598:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 15.0 whilebody598
  endwhile598:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB601:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 460.0 0.0 'True' 

	DATA8 layer603
	DATA8 nos603
	DATA8 busy603
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer603 nos603
	JR_EQ8 0 nos603 motornotbusy603
  motorwaiting603:
	OUTPUT_TEST layer603 nos603 busy603
	JR_EQ8 busy603 0 motornotbusy603
	SLEEP
	JR motorwaiting603
  motornotbusy603:
    MULF VGV_LEFT_FORWARD -40.0 F.0
    MULF VGV_RIGHT_FORWARD -40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds607
	MOVEF_32 1000.0 milliseconds607
	DATA32 timer607
	TIMER_WAIT milliseconds607 timer607
	TIMER_READY timer607
    WRITE32 ENDSUB_F_STOP_0:CALLSUB608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB608:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds612
	MOVEF_32 2500.0 milliseconds612
	DATA32 timer612
	TIMER_WAIT milliseconds612 timer612
	TIMER_READY timer612
    WRITE32 ENDSUB_F_STOP_0:CALLSUB613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB613:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer615
	DATA8 nos615
	DATA8 busy615
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer615 nos615
	JR_EQ8 0 nos615 motornotbusy615
  motorwaiting615:
	OUTPUT_TEST layer615 nos615 busy615
	JR_EQ8 busy615 0 motornotbusy615
	SLEEP
	JR motorwaiting615
  motornotbusy615:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 125.0 0.0 'True' 

	DATA8 layer617
	DATA8 nos617
	DATA8 busy617
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer617 nos617
	JR_EQ8 0 nos617 motornotbusy617
  motorwaiting617:
	OUTPUT_TEST layer617 nos617 busy617
	JR_EQ8 busy617 0 motornotbusy617
	SLEEP
	JR motorwaiting617
  motornotbusy617:
    DATA32 milliseconds618
	MOVEF_32 1000.0 milliseconds618
	DATA32 timer618
	TIMER_WAIT milliseconds618 timer618
	TIMER_READY timer618
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while622:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile622
  whilebody622:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody622
  endwhile622:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while626:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 500.0 endwhile626
  whilebody626:
    MOVEF_F 20.0 VLV_POWER_1
    MOVEF_F VGV_A VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB628:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 500.0 whilebody626
  endwhile626:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB630 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB630:
    JR endif584
  else584_1:
    MOVEF_F 1200.0 VGV_DEG
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 80.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while635:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile635
  whilebody635:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody635
  endwhile635:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 55.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while641:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile641
  whilebody641:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody641
  endwhile641:
  while644:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile644
  whilebody644:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody644
  endwhile644:
    WRITE32 ENDSUB_F_STOP_RIGHT_0:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_RIGHT_0
CALLSUB647:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB648:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer650
	DATA8 nos650
	DATA8 busy650
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer650 nos650
	JR_EQ8 0 nos650 motornotbusy650
  motorwaiting650:
	OUTPUT_TEST layer650 nos650 busy650
	JR_EQ8 busy650 0 motornotbusy650
	SLEEP
	JR motorwaiting650
  motornotbusy650:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB651 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB651:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 235.0 0.0 'True' 

	DATA8 layer653
	DATA8 nos653
	DATA8 busy653
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer653 nos653
	JR_EQ8 0 nos653 motornotbusy653
  motorwaiting653:
	OUTPUT_TEST layer653 nos653 busy653
	JR_EQ8 busy653 0 motornotbusy653
	SLEEP
	JR motorwaiting653
  motornotbusy653:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while655:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile655
  whilebody655:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB657:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody655
  endwhile655:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB659:
  else584_2:
  endif584:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB660:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    MOVEF_F 500.0 VGV_C
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB662:
    JR_LTEQF VGV_B 80.0 else663_1
    DATA8 layer664
	DATA8 no664
	DATA8 mode8664
	
	MOVEF_8 VGV_RIGHT_SENSOR no664
	SUB8 no664 1 no664
	DIV8 no664 4 layer664
	MATH MOD8 no664 4 no664

	MOVEF_8 2.0 mode8664
	
	INPUT_DEVICE READY_RAW layer664 no664 0 mode8664 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer666
	DATA8 no666
	DATA8 mode8666
	
	MOVEF_8 VGV_RIGHT_SENSOR no666
	SUB8 no666 1 no666
	DIV8 no666 4 layer666
	MATH MOD8 no666 4 no666

	MOVEF_8 1.0 mode8666
	
	INPUT_DEVICE READY_RAW layer666 no666 0 mode8666 0
    JR_LTEQF VGV_G 100.0 else667_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB669:
    JR endif667
  else667_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_BROWN
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB671 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB671:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB672:
  else667_2:
  endif667:
    JR endif663
  else663_1:
    JR_LTEQF VGV_B 5.0 else663_2
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else663_2
    DATA8 layer674
	DATA8 no674
	DATA8 mode8674
	
	MOVEF_8 VGV_RIGHT_SENSOR no674
	SUB8 no674 1 no674
	DIV8 no674 4 layer674
	MATH MOD8 no674 4 no674

	MOVEF_8 4.0 mode8674
	
	INPUT_DEVICE READY_RAW layer674 no674 0 mode8674 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    DATA8 layer676
	DATA8 no676
	DATA8 mode8676
	
	MOVEF_8 VGV_RIGHT_SENSOR no676
	SUB8 no676 1 no676
	DIV8 no676 4 layer676
	MATH MOD8 no676 4 no676

	MOVEF_8 1.0 mode8676
	
	INPUT_DEVICE READY_RAW layer676 no676 0 mode8676 0
    STRINGS DUPLICATE 'None' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB677 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB677:
    JR_LTEQF VGV_W 29.0 else678_1
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB679:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB680 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB680:
  else678_1:
  endif678:
  else663_2:
  endif663:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB681:
    DATA8 layer682
	DATA8 no682
	DATA8 mode8682
	
	MOVEF_8 VGV_LINE_SENSOR no682
	SUB8 no682 1 no682
	DIV8 no682 4 layer682
	MATH MOD8 no682 4 no682

	MOVEF_8 2.0 mode8682
	
	INPUT_DEVICE READY_RAW layer682 no682 0 mode8682 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    WRITE32 ENDSUB_F_STOP_0:CALLSUB684 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB684:
  while685:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C or686
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 5.0 endwhile685
  or686:
  whilebody685:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB689:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody685
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 5.0 whilebody685
  endwhile685:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB692 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB692:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB693:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB694 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB694:
    MOVEF_F 350.0 VGV_C
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else695_1
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 90.0 VLV_DEG_6
    MOVEF_F 40.0 VLV_ACCELERATION_6
    MOVEF_F 40.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB697 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB697:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB698:
    ADDF VGV_C 110.0 VGV_C
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB700:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB702:
    JR_LTEQF VGV_B 80.0 else703_1
    DATA8 layer704
	DATA8 no704
	DATA8 mode8704
	
	MOVEF_8 VGV_RIGHT_SENSOR no704
	SUB8 no704 1 no704
	DIV8 no704 4 layer704
	MATH MOD8 no704 4 no704

	MOVEF_8 2.0 mode8704
	
	INPUT_DEVICE READY_RAW layer704 no704 0 mode8704 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer706
	DATA8 no706
	DATA8 mode8706
	
	MOVEF_8 VGV_RIGHT_SENSOR no706
	SUB8 no706 1 no706
	DIV8 no706 4 layer706
	MATH MOD8 no706 4 no706

	MOVEF_8 1.0 mode8706
	
	INPUT_DEVICE READY_RAW layer706 no706 0 mode8706 0
    JR_LTEQF VGV_G 100.0 else707_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB709 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB709:
    JR endif707
  else707_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_BROWN
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB711 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB711:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 80.0 VLV_DEG_6
    MOVEF_F 40.0 VLV_ACCELERATION_6
    MOVEF_F 40.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB712 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB712:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB713:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB714:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 80.0 VLV_DEG_5
    MOVEF_F 40.0 VLV_ACCELERATION_5
    MOVEF_F 40.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB715:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB716 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB716:
  else707_2:
  endif707:
    JR endif703
  else703_1:
    JR_LTEQF VGV_B 17.0 else703_2
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else703_2
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB718:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB719:
  else703_2:
  endif703:
  else695_1:
  endif695:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB720:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while722:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile722
  whilebody722:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB724:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody722
  endwhile722:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else726_1
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    JR endif726
  else726_1:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  else726_2:
  endif726:
    DATA32 milliseconds734
	MOVEF_32 1000.0 milliseconds734
	DATA32 timer734
	TIMER_WAIT milliseconds734 timer734
	TIMER_READY timer734
    WRITE32 ENDSUB_F_STOP_0:CALLSUB735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB735:
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_LEFT
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB737:
    JR_LTEQF VGV_B 85.0 else738_1
    DATA8 layer739
	DATA8 no739
	DATA8 mode8739
	
	MOVEF_8 VGV_RIGHT_SENSOR no739
	SUB8 no739 1 no739
	DIV8 no739 4 layer739
	MATH MOD8 no739 4 no739

	MOVEF_8 2.0 mode8739
	
	INPUT_DEVICE READY_RAW layer739 no739 0 mode8739 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB740:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer742
	DATA8 no742
	DATA8 mode8742
	
	MOVEF_8 VGV_RIGHT_SENSOR no742
	SUB8 no742 1 no742
	DIV8 no742 4 layer742
	MATH MOD8 no742 4 no742

	MOVEF_8 1.0 mode8742
	
	INPUT_DEVICE READY_RAW layer742 no742 0 mode8742 0
    JR_LTEQF VGV_G 100.0 else743_1
    STRINGS DUPLICATE 'R: Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB745:
    JR endif743
  else743_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB747 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB747:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB748:
  else743_2:
  endif743:
    JR endif738
  else738_1:
    JR_LTEQF VGV_B 10.0 else738_2
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else738_2
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB750 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB750:
  else738_2:
  endif738:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB751 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB751:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else752_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB754 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB754:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB756 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB756:
    JR_LTEQF VGV_B 90.0 else757_1
    DATA8 layer758
	DATA8 no758
	DATA8 mode8758
	
	MOVEF_8 VGV_LEFT_SENSOR no758
	SUB8 no758 1 no758
	DIV8 no758 4 layer758
	MATH MOD8 no758 4 no758

	MOVEF_8 2.0 mode8758
	
	INPUT_DEVICE READY_RAW layer758 no758 0 mode8758 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB759:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer761
	DATA8 no761
	DATA8 mode8761
	
	MOVEF_8 VGV_LEFT_SENSOR no761
	SUB8 no761 1 no761
	DIV8 no761 4 layer761
	MATH MOD8 no761 4 no761

	MOVEF_8 1.0 mode8761
	
	INPUT_DEVICE READY_RAW layer761 no761 0 mode8761 0
    JR_LTEQF VGV_G 100.0 else762_1
    STRINGS DUPLICATE 'L: Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB764 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB764:
    JR endif762
  else762_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB766 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB766:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB767 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB767:
  else762_2:
  endif762:
    JR endif757
  else757_1:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 30.0 0.0 'True' 

	DATA8 layer769
	DATA8 nos769
	DATA8 busy769
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer769 nos769
	JR_EQ8 0 nos769 motornotbusy769
  motorwaiting769:
	OUTPUT_TEST layer769 nos769 busy769
	JR_EQ8 busy769 0 motornotbusy769
	SLEEP
	JR motorwaiting769
  motornotbusy769:
    DATA32 milliseconds770
	MOVEF_32 500.0 milliseconds770
	DATA32 timer770
	TIMER_WAIT milliseconds770 timer770
	TIMER_READY timer770
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds774
	MOVEF_32 500.0 milliseconds774
	DATA32 timer774
	TIMER_WAIT milliseconds774 timer774
	TIMER_READY timer774
    WRITE32 ENDSUB_F_STOP_0:CALLSUB775 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB775:
    JR_LTEQF VGV_B 28.0 else776_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else776_1
    WRITE32 ENDSUB_F_STOP_0:CALLSUB778 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB778:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB779 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB779:
  else776_1:
  endif776:
  else757_2:
  endif757:
  else752_1:
  endif752:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB780 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB780:
    MOVEF_F 140.0 VGV_CHEM_BACK
    MOVEF_F 130.0 VGV_NO_BACK
    CALL EQ_STRING VGV_TAKE_RED_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else781_1
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 280.0 VLV_DEG_6
    MOVEF_F 100.0 VLV_ACCELERATION_6
    MOVEF_F 100.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB783 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB783:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB784 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB784:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 70.0 VLV_DEG_7
    MOVEF_F 35.0 VLV_ACCELERATION_7
    MOVEF_F 35.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB785 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB785:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB786 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB786:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer787
	DATA8 nos787
	DATA8 busy787
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer787 nos787
	JR_EQ8 0 nos787 motornotbusy787
  motorwaiting787:
	OUTPUT_TEST layer787 nos787 busy787
	JR_EQ8 busy787 0 motornotbusy787
	SLEEP
	JR motorwaiting787
  motornotbusy787:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 150.0 VLV_DEG_5
    MOVEF_F 60.0 VLV_ACCELERATION_5
    MOVEF_F 60.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB788 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB788:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB789 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB789:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer790
	DATA8 nos790
	DATA8 busy790
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer790 nos790
	JR_EQ8 0 nos790 motornotbusy790
  motorwaiting790:
	OUTPUT_TEST layer790 nos790 busy790
	JR_EQ8 busy790 0 motornotbusy790
	SLEEP
	JR motorwaiting790
  motornotbusy790:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB791 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB791:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 150.0 VLV_DEG_6
    MOVEF_F 60.0 VLV_ACCELERATION_6
    MOVEF_F 60.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB792:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB793 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB793:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 70.0 VLV_DEG_8
    MOVEF_F 35.0 VLV_ACCELERATION_8
    MOVEF_F 35.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB794 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB794:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB795 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB795:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds799
	MOVEF_32 1500.0 milliseconds799
	DATA32 timer799
	TIMER_WAIT milliseconds799 timer799
	TIMER_READY timer799
    WRITE32 ENDSUB_F_STOP_0:CALLSUB800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB800:
    SUBF VGV_CHEM_BACK 30.0 F.1
    DATAF tmpf802
    DATA8 flag802
    DIVF F.1 2.0 tmpf802
    CP_EQF 0.0 2.0 flag802
    SELECTF flag802 0.0 tmpf802 F.0

    MATH FLOOR F.0 VGV_HALF
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F VGV_CHEM_BACK VLV_DEG_6
    MOVEF_F VGV_HALF VLV_ACCELERATION_6
    MOVEF_F VGV_HALF VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB804 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB804:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB805 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB805:
    JR endif781
  else781_1:
    CALL EQ_STRING VGV_TAKE_RED_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else781_2
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 280.0 VLV_DEG_6
    MOVEF_F 100.0 VLV_ACCELERATION_6
    MOVEF_F 100.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB807 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB807:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB808 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB808:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_7
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_7
    MOVEF_F 20.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 70.0 VLV_DEG_7
    MOVEF_F 35.0 VLV_ACCELERATION_7
    MOVEF_F 35.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB809 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB809:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB810 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB810:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer811
	DATA8 nos811
	DATA8 busy811
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer811 nos811
	JR_EQ8 0 nos811 motornotbusy811
  motorwaiting811:
	OUTPUT_TEST layer811 nos811 busy811
	JR_EQ8 busy811 0 motornotbusy811
	SLEEP
	JR motorwaiting811
  motornotbusy811:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 150.0 VLV_DEG_5
    MOVEF_F 60.0 VLV_ACCELERATION_5
    MOVEF_F 60.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB812 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB812:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB813 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB813:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer814
	DATA8 nos814
	DATA8 busy814
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer814 nos814
	JR_EQ8 0 nos814 motornotbusy814
  motorwaiting814:
	OUTPUT_TEST layer814 nos814 busy814
	JR_EQ8 busy814 0 motornotbusy814
	SLEEP
	JR motorwaiting814
  motornotbusy814:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB815 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB815:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 150.0 VLV_DEG_6
    MOVEF_F 60.0 VLV_ACCELERATION_6
    MOVEF_F 60.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB816 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB816:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB817 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB817:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_8
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_8
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 70.0 VLV_DEG_8
    MOVEF_F 35.0 VLV_ACCELERATION_8
    MOVEF_F 35.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB818 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB818:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB819 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB819:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds823
	MOVEF_32 1500.0 milliseconds823
	DATA32 timer823
	TIMER_WAIT milliseconds823 timer823
	TIMER_READY timer823
    WRITE32 ENDSUB_F_STOP_0:CALLSUB824 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB824:
    SUBF VGV_CHEM_BACK 30.0 F.1
    DATAF tmpf826
    DATA8 flag826
    DIVF F.1 2.0 tmpf826
    CP_EQF 0.0 2.0 flag826
    SELECTF flag826 0.0 tmpf826 F.0

    MATH FLOOR F.0 VGV_HALF
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F VGV_CHEM_BACK VLV_DEG_6
    MOVEF_F VGV_HALF VLV_ACCELERATION_6
    MOVEF_F VGV_HALF VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB828 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB828:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB829 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB829:
    JR endif781
  else781_2:
    SUBF VGV_NO_BACK 30.0 F.1
    DATAF tmpf831
    DATA8 flag831
    DIVF F.1 2.0 tmpf831
    CP_EQF 0.0 2.0 flag831
    SELECTF flag831 0.0 tmpf831 F.0

    MATH FLOOR F.0 VGV_HALF
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F VGV_NO_BACK VLV_DEG_6
    MOVEF_F VGV_HALF VLV_ACCELERATION_6
    MOVEF_F VGV_HALF VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB833 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB833:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB834 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB834:
  else781_3:
  endif781:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer837
	DATA8 nos837
	DATA8 busy837
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer837 nos837
	JR_EQ8 0 nos837 motornotbusy837
  motorwaiting837:
	OUTPUT_TEST layer837 nos837 busy837
	JR_EQ8 busy837 0 motornotbusy837
	SLEEP
	JR motorwaiting837
  motornotbusy837:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB838:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB839 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB839:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds843
	MOVEF_32 700.0 milliseconds843
	DATA32 timer843
	TIMER_WAIT milliseconds843 timer843
	TIMER_READY timer843
    WRITE32 ENDSUB_F_STOP_0:CALLSUB844 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB844:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    ADDF F.0 5.0 VGV_A
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 430.0 VLV_DEG_5
    MOVEF_F 100.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB847 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB847:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while849:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile849
  whilebody849:
    MOVEF_F 40.0 VLV_POWER_1
    MOVEF_F VGV_A VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB851 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB851:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody849
  endwhile849:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA8 layer857
	DATA8 no857
	DATA8 mode8857
	
	MOVEF_8 VGV_LINE_SENSOR no857
	SUB8 no857 1 no857
	DIV8 no857 4 layer857
	MATH MOD8 no857 4 no857

	MOVEF_8 0.0 mode8857
	
	INPUT_DEVICE READY_RAW layer857 no857 0 mode8857 0
  while858:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 or859
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 220.0 endwhile858
  or859:
  whilebody858:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 whilebody858
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 220.0 whilebody858
  endwhile858:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB864 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB864:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB865 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB865:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 92.0 VLV_DEG_6
    MOVEF_F 45.0 VLV_ACCELERATION_6
    MOVEF_F 45.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB866 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB866:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB867 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB867:
    DATA8 layer868
	DATA8 no868
	DATA8 mode8868
	
	MOVEF_8 VGV_LINE_SENSOR no868
	SUB8 no868 1 no868
	DIV8 no868 4 layer868
	MATH MOD8 no868 4 no868

	MOVEF_8 0.0 mode8868
	
	INPUT_DEVICE READY_RAW layer868 no868 0 mode8868 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB870 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB870:
    JR_LTEQF VGV_B 45.0 else871_1
    DATA8 layer872
	DATA8 no872
	DATA8 mode8872
	
	MOVEF_8 VGV_LEFT_SENSOR no872
	SUB8 no872 1 no872
	DIV8 no872 4 layer872
	MATH MOD8 no872 4 no872

	MOVEF_8 2.0 mode8872
	
	INPUT_DEVICE READY_RAW layer872 no872 0 mode8872 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer874
	DATA8 no874
	DATA8 mode8874
	
	MOVEF_8 VGV_LEFT_SENSOR no874
	SUB8 no874 1 no874
	DIV8 no874 4 layer874
	MATH MOD8 no874 4 no874

	MOVEF_8 1.0 mode8874
	
	INPUT_DEVICE READY_RAW layer874 no874 0 mode8874 0
    JR_LTEQF VGV_G 100.0 else875_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB876 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB876:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif875
  else875_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB878 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB878:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 100.0 VLV_DEG_6
    MOVEF_F 50.0 VLV_ACCELERATION_6
    MOVEF_F 50.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB879 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB879:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB880 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB880:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB881 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB881:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 100.0 VLV_DEG_5
    MOVEF_F 100.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB882 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB882:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else875_2:
  endif875:
    JR endif871
  else871_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds888
	MOVEF_32 1000.0 milliseconds888
	DATA32 timer888
	TIMER_WAIT milliseconds888 timer888
	TIMER_READY timer888
    JR_GTEQF VGV_ULTRA 85.0 else889_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else889_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB891 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB891:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB892 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB892:
  else889_1:
  endif889:
  else871_2:
  endif871:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB893 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB893:
    CALL EQ_STRING VGV_OBJECT 'Fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else894_1
    MOVEF_F 30.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 115.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB896 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB896:
    JR endif894
  else894_1:
    MOVEF_F 30.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 115.0 VLV_DEG_5
    MOVEF_F 115.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB897 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB897:
  else894_2:
  endif894:
    SUBF VGV_A 0.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while900:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 250.0 endwhile900
  whilebody900:
    MOVEF_F 40.0 VLV_POWER_1
    MOVEF_F VGV_A VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB902 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB902:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 250.0 whilebody900
  endwhile900:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds907
	MOVEF_32 1500.0 milliseconds907
	DATA32 timer907
	TIMER_WAIT milliseconds907 timer907
	TIMER_READY timer907
    WRITE32 ENDSUB_F_STOP_0:CALLSUB908 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB908:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB910 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB910:
    JR_LTEQF VGV_B 55.0 else911_1
    DATA8 layer912
	DATA8 no912
	DATA8 mode8912
	
	MOVEF_8 VGV_LEFT_SENSOR no912
	SUB8 no912 1 no912
	DIV8 no912 4 layer912
	MATH MOD8 no912 4 no912

	MOVEF_8 2.0 mode8912
	
	INPUT_DEVICE READY_RAW layer912 no912 0 mode8912 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer914
	DATA8 no914
	DATA8 mode8914
	
	MOVEF_8 VGV_LEFT_SENSOR no914
	SUB8 no914 1 no914
	DIV8 no914 4 layer914
	MATH MOD8 no914 4 no914

	MOVEF_8 1.0 mode8914
	
	INPUT_DEVICE READY_RAW layer914 no914 0 mode8914 0
    JR_LTEQF VGV_G 70.0 else915_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB917 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB917:
    JR endif915
  else915_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB919 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB919:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB920 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB920:
  else915_2:
  endif915:
    JR endif911
  else911_1:
    JR_LTEQF VGV_B 15.0 else911_2
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else922_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else922_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB924 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB924:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB925 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB925:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for927:
    JR_GTF VGV_I 20.0 endfor927
  forbody927:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds931
	MOVEF_32 30.0 milliseconds931
	DATA32 timer931
	TIMER_WAIT milliseconds931 timer931
	TIMER_READY timer931
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody927
  endfor927:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer937
	DATA8 nos937
	DATA8 busy937
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer937 nos937
	JR_EQ8 0 nos937 motornotbusy937
  motorwaiting937:
	OUTPUT_TEST layer937 nos937 busy937
	JR_EQ8 busy937 0 motornotbusy937
	SLEEP
	JR motorwaiting937
  motornotbusy937:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB938 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB938:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer939
	DATA8 nos939
	DATA8 busy939
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer939 nos939
	JR_EQ8 0 nos939 motornotbusy939
  motorwaiting939:
	OUTPUT_TEST layer939 nos939 busy939
	JR_EQ8 busy939 0 motornotbusy939
	SLEEP
	JR motorwaiting939
  motornotbusy939:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer942
	DATA8 nos942
	DATA8 busy942
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer942 nos942
	JR_EQ8 0 nos942 motornotbusy942
  motorwaiting942:
	OUTPUT_TEST layer942 nos942 busy942
	JR_EQ8 busy942 0 motornotbusy942
	SLEEP
	JR motorwaiting942
  motornotbusy942:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB943 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB943:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer944
	DATA8 nos944
	DATA8 busy944
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer944 nos944
	JR_EQ8 0 nos944 motornotbusy944
  motorwaiting944:
	OUTPUT_TEST layer944 nos944 busy944
	JR_EQ8 busy944 0 motornotbusy944
	SLEEP
	JR motorwaiting944
  motornotbusy944:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB945 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB945:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer948
	DATA8 nos948
	DATA8 busy948
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer948 nos948
	JR_EQ8 0 nos948 motornotbusy948
  motorwaiting948:
	OUTPUT_TEST layer948 nos948 busy948
	JR_EQ8 busy948 0 motornotbusy948
	SLEEP
	JR motorwaiting948
  motornotbusy948:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB949 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB949:
    DATA32 milliseconds950
	MOVEF_32 1000.0 milliseconds950
	DATA32 timer950
	TIMER_WAIT milliseconds950 timer950
	TIMER_READY timer950
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for952:
    JR_GTF VGV_I 20.0 endfor952
  forbody952:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds955
	MOVEF_32 30.0 milliseconds955
	DATA32 timer955
	TIMER_WAIT milliseconds955 timer955
	TIMER_READY timer955
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody952
  endfor952:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer961
	DATA8 nos961
	DATA8 busy961
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer961 nos961
	JR_EQ8 0 nos961 motornotbusy961
  motorwaiting961:
	OUTPUT_TEST layer961 nos961 busy961
	JR_EQ8 busy961 0 motornotbusy961
	SLEEP
	JR motorwaiting961
  motornotbusy961:
    MULF 30.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds964
	MOVEF_32 1000.0 milliseconds964
	DATA32 timer964
	TIMER_WAIT milliseconds964 timer964
	TIMER_READY timer964
    WRITE32 ENDSUB_F_STOP_0:CALLSUB965 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB965:
  else922_1:
  endif922:
  else911_2:
  endif911:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB966 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB966:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer968
	DATA8 nos968
	DATA8 busy968
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer968 nos968
	JR_EQ8 0 nos968 motornotbusy968
  motorwaiting968:
	OUTPUT_TEST layer968 nos968 busy968
	JR_EQ8 busy968 0 motornotbusy968
	SLEEP
	JR motorwaiting968
  motornotbusy968:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 104.0 0.0 'True' 

	DATA8 layer970
	DATA8 nos970
	DATA8 busy970
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer970 nos970
	JR_EQ8 0 nos970 motornotbusy970
  motorwaiting970:
	OUTPUT_TEST layer970 nos970 busy970
	JR_EQ8 busy970 0 motornotbusy970
	SLEEP
	JR motorwaiting970
  motornotbusy970:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 102.0 VGV_A
  while972:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 100.0 endwhile972
  whilebody972:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB974 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB974:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 100.0 whilebody972
  endwhile972:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while979:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 6.0 endwhile979
  whilebody979:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 6.0 whilebody979
  endwhile979:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB982 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB982:
    DATA8 layer983
	DATA8 no983
	DATA8 mode8983
	
	MOVEF_8 VGV_LINE_SENSOR no983
	SUB8 no983 1 no983
	DIV8 no983 4 layer983
	MATH MOD8 no983 4 no983

	MOVEF_8 0.0 mode8983
	
	INPUT_DEVICE READY_RAW layer983 no983 0 mode8983 0
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else984_1
    MOVEF_F 110.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB986 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB986:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB987 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB987:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else989_1
    DATA8 layer990
	DATA8 no990
	DATA8 mode8990
	
	MOVEF_8 VGV_LEFT_SENSOR no990
	SUB8 no990 1 no990
	DIV8 no990 4 layer990
	MATH MOD8 no990 4 no990

	MOVEF_8 2.0 mode8990
	
	INPUT_DEVICE READY_RAW layer990 no990 0 mode8990 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer992
	DATA8 no992
	DATA8 mode8992
	
	MOVEF_8 VGV_LEFT_SENSOR no992
	SUB8 no992 1 no992
	DIV8 no992 4 layer992
	MATH MOD8 no992 4 no992

	MOVEF_8 1.0 mode8992
	
	INPUT_DEVICE READY_RAW layer992 no992 0 mode8992 0
    JR_LTEQF VGV_G 100.0 else993_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB994 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB994:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif993
  else993_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB996 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB996:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB997 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB997:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB998 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB998:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB999 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB999:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1000 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1000:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else993_2:
  endif993:
    JR endif989
  else989_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1003_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1003_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1005 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1005:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1006 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1006:
  else1003_1:
  endif1003:
  else989_2:
  endif989:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1007 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1007:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1008 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1008:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1009 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1009:
    JR endif984
  else984_1:
    MOVEF_F 60.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1010 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1010:
  else984_2:
  endif984:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else1012_1
    DATA8 layer1013
	DATA8 no1013
	DATA8 mode81013
	
	MOVEF_8 VGV_LEFT_SENSOR no1013
	SUB8 no1013 1 no1013
	DIV8 no1013 4 layer1013
	MATH MOD8 no1013 4 no1013

	MOVEF_8 2.0 mode81013
	
	INPUT_DEVICE READY_RAW layer1013 no1013 0 mode81013 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1015
	DATA8 no1015
	DATA8 mode81015
	
	MOVEF_8 VGV_LEFT_SENSOR no1015
	SUB8 no1015 1 no1015
	DIV8 no1015 4 layer1015
	MATH MOD8 no1015 4 no1015

	MOVEF_8 1.0 mode81015
	
	INPUT_DEVICE READY_RAW layer1015 no1015 0 mode81015 0
    JR_LTEQF VGV_G 70.0 else1016_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1017 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1017:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif1016
  else1016_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1019 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1019:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1020 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1020:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else1016_2:
  endif1016:
    JR endif1012
  else1012_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1023_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1023_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1025 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1025:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB1026 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB1026:
  else1023_1:
  endif1023:
  else1012_2:
  endif1012:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1027 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1027:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer1030
	DATA8 nos1030
	DATA8 busy1030
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1030 nos1030
	JR_EQ8 0 nos1030 motornotbusy1030
  motorwaiting1030:
	OUTPUT_TEST layer1030 nos1030 busy1030
	JR_EQ8 busy1030 0 motornotbusy1030
	SLEEP
	JR motorwaiting1030
  motornotbusy1030:
    ADDF VGV_A 7.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1033:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 310.0 endwhile1033
  whilebody1033:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB1035 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB1035:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 310.0 whilebody1033
  endwhile1033:
    MOVEF_F 105.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1037 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1037:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1038_1
    DATA8 layer1040
	DATA8 no1040
	DATA8 mode81040
	
	MOVEF_8 VGV_LEFT_SENSOR no1040
	SUB8 no1040 1 no1040
	DIV8 no1040 4 layer1040
	MATH MOD8 no1040 4 no1040

	MOVEF_8 1.0 mode81040
	
	INPUT_DEVICE READY_RAW layer1040 no1040 0 mode81040 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1042 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1042:
    JR_LTEQF VGV_B 55.0 else1043_1
    DATA8 layer1044
	DATA8 no1044
	DATA8 mode81044
	
	MOVEF_8 VGV_LEFT_SENSOR no1044
	SUB8 no1044 1 no1044
	DIV8 no1044 4 layer1044
	MATH MOD8 no1044 4 no1044

	MOVEF_8 2.0 mode81044
	
	INPUT_DEVICE READY_RAW layer1044 no1044 0 mode81044 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1046
	DATA8 no1046
	DATA8 mode81046
	
	MOVEF_8 VGV_LEFT_SENSOR no1046
	SUB8 no1046 1 no1046
	DIV8 no1046 4 layer1046
	MATH MOD8 no1046 4 no1046

	MOVEF_8 1.0 mode81046
	
	INPUT_DEVICE READY_RAW layer1046 no1046 0 mode81046 0
    JR_LTEQF VGV_G 70.0 else1047_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1048 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1048:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif1047
  else1047_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1050 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1050:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1051 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1051:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1052 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1052:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1053 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1053:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else1047_2:
  endif1047:
    JR endif1043
  else1043_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1056_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1056_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1058 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1058:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1059:
  else1056_1:
  endif1056:
  else1043_2:
  endif1043:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1060 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1060:
  else1038_1:
  endif1038:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1061 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1061:
    DATA8 layer1062
	DATA8 no1062
	DATA8 mode81062
	
	MOVEF_8 VGV_LINE_SENSOR no1062
	SUB8 no1062 1 no1062
	DIV8 no1062 4 layer1062
	MATH MOD8 no1062 4 no1062

	MOVEF_8 0.0 mode81062
	
	INPUT_DEVICE READY_RAW layer1062 no1062 0 mode81062 0
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'False'

	DATA8 layer1065
	DATA8 nos1065
	DATA8 busy1065
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1065 nos1065
	JR_EQ8 0 nos1065 motornotbusy1065
  motorwaiting1065:
	OUTPUT_TEST layer1065 nos1065 busy1065
	JR_EQ8 busy1065 0 motornotbusy1065
	SLEEP
	JR motorwaiting1065
  motornotbusy1065:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1069:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile1069
  whilebody1069:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody1069
  endwhile1069:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1072 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1072:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 200.0 0.0 'False' 

	DATA8 layer1074
	DATA8 nos1074
	DATA8 busy1074
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1074 nos1074
	JR_EQ8 0 nos1074 motornotbusy1074
  motorwaiting1074:
	OUTPUT_TEST layer1074 nos1074 busy1074
	JR_EQ8 busy1074 0 motornotbusy1074
	SLEEP
	JR motorwaiting1074
  motornotbusy1074:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
  while1077:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile1077
  whilebody1077:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody1077
  endwhile1077:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer1081
	DATA8 nos1081
	DATA8 busy1081
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1081 nos1081
	JR_EQ8 0 nos1081 motornotbusy1081
  motorwaiting1081:
	OUTPUT_TEST layer1081 nos1081 busy1081
	JR_EQ8 busy1081 0 motornotbusy1081
	SLEEP
	JR motorwaiting1081
  motornotbusy1081:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1082 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1082:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1084:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile1084
  whilebody1084:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB1086 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB1086:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody1084
  endwhile1084:
  while1088:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 5.0 endwhile1088
  whilebody1088:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB1090 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB1090:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 5.0 whilebody1088
  endwhile1088:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1092 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1092:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer1095
	DATA8 nos1095
	DATA8 busy1095
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1095 nos1095
	JR_EQ8 0 nos1095 motornotbusy1095
  motorwaiting1095:
	OUTPUT_TEST layer1095 nos1095 busy1095
	JR_EQ8 busy1095 0 motornotbusy1095
	SLEEP
	JR motorwaiting1095
  motornotbusy1095:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1096 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1096:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1097 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1097:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1100
	DATA8 nos1100
	DATA8 busy1100
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1100 nos1100
	JR_EQ8 0 nos1100 motornotbusy1100
  motorwaiting1100:
	OUTPUT_TEST layer1100 nos1100 busy1100
	JR_EQ8 busy1100 0 motornotbusy1100
	SLEEP
	JR motorwaiting1100
  motornotbusy1100:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1101:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1102:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 25.0 'False'

	DATA8 layer1105
	DATA8 nos1105
	DATA8 busy1105
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1105 nos1105
	JR_EQ8 0 nos1105 motornotbusy1105
  motorwaiting1105:
	OUTPUT_TEST layer1105 nos1105 busy1105
	JR_EQ8 busy1105 0 motornotbusy1105
	SLEEP
	JR motorwaiting1105
  motornotbusy1105:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1107:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile1107
  whilebody1107:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF F.0 17.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf1113
    DATA8 flag1113
    DIVF F.0 10.0 tmpf1113
    CP_EQF 0.0 10.0 flag1113
    SELECTF flag1113 0.0 tmpf1113 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 20.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -20.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody1107
  endwhile1107:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 135.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 135.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1123:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1124:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1125:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1127:
    JR_LTEQF VGV_B 60.0 else1128_1
    DATA8 layer1129
	DATA8 no1129
	DATA8 mode81129
	
	MOVEF_8 VGV_LEFT_SENSOR no1129
	SUB8 no1129 1 no1129
	DIV8 no1129 4 layer1129
	MATH MOD8 no1129 4 no1129

	MOVEF_8 2.0 mode81129
	
	INPUT_DEVICE READY_RAW layer1129 no1129 0 mode81129 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1130 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1130:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1132
	DATA8 no1132
	DATA8 mode81132
	
	MOVEF_8 VGV_LEFT_SENSOR no1132
	SUB8 no1132 1 no1132
	DIV8 no1132 4 layer1132
	MATH MOD8 no1132 4 no1132

	MOVEF_8 1.0 mode81132
	
	INPUT_DEVICE READY_RAW layer1132 no1132 0 mode81132 0
    JR_LTEQF VGV_G 80.0 else1133_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1134:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif1133
  else1133_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'FIre' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1136:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1137:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else1133_2:
  endif1133:
    JR endif1128
  else1128_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1140_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1140_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1142:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1143:
    MULF 10.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 10.0 0.0 'True' 

	DATA8 layer1145
	DATA8 nos1145
	DATA8 busy1145
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1145 nos1145
	JR_EQ8 0 nos1145 motornotbusy1145
  motorwaiting1145:
	OUTPUT_TEST layer1145 nos1145 busy1145
	JR_EQ8 busy1145 0 motornotbusy1145
	SLEEP
	JR motorwaiting1145
  motornotbusy1145:
  else1140_1:
  endif1140:
  else1128_2:
  endif1128:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1146:
    MOVEF_F 710.0 VGV_C
    STRINGS DUPLICATE 'unknown' VGV_YELLOW_OBJECT
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1147_1
    CALL EQ_STRING VGV_WHITE 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1147_1
    STRINGS DUPLICATE 'unknown' VGV_YELLOW_OBJECT
    JR_NEQF VGV_MEN_COUNT 1.0 else1150_1
    STRINGS DUPLICATE 'man' VGV_YELLOW_OBJECT
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif1150
  else1150_1:
    JR_NEQF VGV_FIRE_COUNT 1.0 else1150_2
    STRINGS DUPLICATE 'fire' VGV_YELLOW_OBJECT
    JR endif1150
  else1150_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1150_3
    STRINGS DUPLICATE 'chem' VGV_YELLOW_OBJECT
    JR endif1150
  else1150_3:
    JR_NEQF VGV_MEN_COUNT 2.0 else1150_4
    JR_NEQF VGV_FIRE_COUNT 2.0 else1150_4
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1150_4
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'none' VGV_YELLOW_OBJECT
  else1150_4:
  endif1150:
  else1147_1:
  endif1147:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or1154
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1153_1
  or1154:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 20.0 VLV_MIN_POWER_5
    MOVEF_F 515.0 VLV_DEG_5
    MOVEF_F 200.0 VLV_ACCELERATION_5
    MOVEF_F 200.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1157:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1158:
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1159_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1161:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1163 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1163:
    JR_LTEQF VGV_B 50.0 else1164_1
    DATA8 layer1165
	DATA8 no1165
	DATA8 mode81165
	
	MOVEF_8 VGV_LEFT_SENSOR no1165
	SUB8 no1165 1 no1165
	DIV8 no1165 4 layer1165
	MATH MOD8 no1165 4 no1165

	MOVEF_8 2.0 mode81165
	
	INPUT_DEVICE READY_RAW layer1165 no1165 0 mode81165 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1166:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1168
	DATA8 no1168
	DATA8 mode81168
	
	MOVEF_8 VGV_LEFT_SENSOR no1168
	SUB8 no1168 1 no1168
	DIV8 no1168 4 layer1168
	MATH MOD8 no1168 4 no1168

	MOVEF_8 1.0 mode81168
	
	INPUT_DEVICE READY_RAW layer1168 no1168 0 mode81168 0
    JR_LTEQF VGV_G 70.0 else1169_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1170:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif1169
  else1169_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1172:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1173:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1174:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1175:
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
  else1169_2:
  endif1169:
    JR endif1164
  else1164_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA32 milliseconds1181
	MOVEF_32 3000.0 milliseconds1181
	DATA32 timer1181
	TIMER_WAIT milliseconds1181 timer1181
	TIMER_READY timer1181
    JR_GTEQF VGV_ULTRA 85.0 else1182_1
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1182_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1184:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB1185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB1185:
  else1182_1:
  endif1182:
  else1164_2:
  endif1164:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1186 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1186:
  else1159_1:
  endif1159:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1187_1
    STRINGS DUPLICATE 'unknown' VGV_YELLOW_OBJECT
    JR_NEQF VGV_MEN_COUNT 1.0 else1189_1
    STRINGS DUPLICATE 'man' VGV_YELLOW_OBJECT
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif1189
  else1189_1:
    JR_NEQF VGV_FIRE_COUNT 1.0 else1189_2
    STRINGS DUPLICATE 'fire' VGV_YELLOW_OBJECT
    JR endif1189
  else1189_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1189_3
    STRINGS DUPLICATE 'chem' VGV_YELLOW_OBJECT
    JR endif1189
  else1189_3:
    JR_NEQF VGV_MEN_COUNT 2.0 else1189_4
    JR_NEQF VGV_FIRE_COUNT 2.0 else1189_4
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1189_4
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'none' VGV_YELLOW_OBJECT
  else1189_4:
  endif1189:
  else1187_1:
  endif1187:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1192_1
    CALL EQ_STRING VGV_YELLOW_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1194_1
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 30.0 0.0 'True' 

	DATA8 layer1197
	DATA8 nos1197
	DATA8 busy1197
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1197 nos1197
	JR_EQ8 0 nos1197 motornotbusy1197
  motorwaiting1197:
	OUTPUT_TEST layer1197 nos1197 busy1197
	JR_EQ8 busy1197 0 motornotbusy1197
	SLEEP
	JR motorwaiting1197
  motornotbusy1197:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 80.0 VLV_DEG_5
    MOVEF_F 40.0 VLV_ACCELERATION_5
    MOVEF_F 40.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1198:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1199:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1200:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 80.0 VLV_DEG_6
    MOVEF_F 40.0 VLV_ACCELERATION_6
    MOVEF_F 40.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB1201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB1201:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1202:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 35.0 0.0 'True' 

	DATA8 layer1204
	DATA8 nos1204
	DATA8 busy1204
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1204 nos1204
	JR_EQ8 0 nos1204 motornotbusy1204
  motorwaiting1204:
	OUTPUT_TEST layer1204 nos1204 busy1204
	JR_EQ8 busy1204 0 motornotbusy1204
	SLEEP
	JR motorwaiting1204
  motornotbusy1204:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1205 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1205:
    JR endif1194
  else1194_1:
    CALL EQ_STRING VGV_YELLOW_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1194_2
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 160.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1207 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1207:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1208:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB1209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB1209:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 160.0 VLV_DEG_6
    MOVEF_F 70.0 VLV_ACCELERATION_6
    MOVEF_F 70.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB1210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB1210:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1211:
    STRINGS DUPLICATE 'True' VGV_CHEM
    JR endif1194
  else1194_2:
    CALL EQ_STRING VGV_YELLOW_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1194_3
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
  else1194_3:
  endif1194:
    STRINGS DUPLICATE 'True' VGV_YELLOW
  else1192_1:
  endif1192:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 165.0 'True'

	DATA8 layer1215
	DATA8 nos1215
	DATA8 busy1215
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1215 nos1215
	JR_EQ8 0 nos1215 motornotbusy1215
  motorwaiting1215:
	OUTPUT_TEST layer1215 nos1215 busy1215
	JR_EQ8 busy1215 0 motornotbusy1215
	SLEEP
	JR motorwaiting1215
  motornotbusy1215:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB1216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB1216:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 380.0 'True'

	DATA8 layer1219
	DATA8 nos1219
	DATA8 busy1219
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1219 nos1219
	JR_EQ8 0 nos1219 motornotbusy1219
  motorwaiting1219:
	OUTPUT_TEST layer1219 nos1219 busy1219
	JR_EQ8 busy1219 0 motornotbusy1219
	SLEEP
	JR motorwaiting1219
  motornotbusy1219:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB1220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB1220:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 300.0 VLV_DEG_5
    MOVEF_F 100.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB1221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB1221:
    JR endif1153
  else1153_1:
    MOVEF_F 200.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB1222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB1222:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 370.0 'True'

	DATA8 layer1225
	DATA8 nos1225
	DATA8 busy1225
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1225 nos1225
	JR_EQ8 0 nos1225 motornotbusy1225
  motorwaiting1225:
	OUTPUT_TEST layer1225 nos1225 busy1225
	JR_EQ8 busy1225 0 motornotbusy1225
	SLEEP
	JR motorwaiting1225
  motornotbusy1225:
    SUBF VGV_C 220.0 VGV_C
  else1153_2:
  endif1153:
    MOVEF_F 490.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1228:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile1228
  whilebody1228:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB1230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB1230:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody1228
  endwhile1228:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB1232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB1232:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1233_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 115.0 0.0 'True' 

	DATA8 layer1235
	DATA8 nos1235
	DATA8 busy1235
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1235 nos1235
	JR_EQ8 0 nos1235 motornotbusy1235
  motorwaiting1235:
	OUTPUT_TEST layer1235 nos1235 busy1235
	JR_EQ8 busy1235 0 motornotbusy1235
	SLEEP
	JR motorwaiting1235
  motornotbusy1235:
  else1233_1:
  endif1233:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1236:
    MOVEF_F 20.0 VLV_BASE_POWER_6
    MOVEF_F 10.0 VLV_MIN_POWER_6
    MOVEF_F 300.0 VLV_DEG_6
    MOVEF_F 100.0 VLV_ACCELERATION_6
    MOVEF_F 100.0 VLV_ZAME_6
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB1237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB1237:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1238:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1239_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer1241
	DATA8 nos1241
	DATA8 busy1241
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1241 nos1241
	JR_EQ8 0 nos1241 motornotbusy1241
  motorwaiting1241:
	OUTPUT_TEST layer1241 nos1241 busy1241
	JR_EQ8 busy1241 0 motornotbusy1241
	SLEEP
	JR motorwaiting1241
  motornotbusy1241:
  else1239_1:
  endif1239:
    CALL EQ_STRING VGV_START_FROM_RIGHT 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1242_1
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1246
	DATA8 nos1246
	DATA8 busy1246
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1246 nos1246
	JR_EQ8 0 nos1246 motornotbusy1246
  motorwaiting1246:
	OUTPUT_TEST layer1246 nos1246 busy1246
	JR_EQ8 busy1246 0 motornotbusy1246
	SLEEP
	JR motorwaiting1246
  motornotbusy1246:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1250
	MOVEF_32 2000.0 milliseconds1250
	DATA32 timer1250
	TIMER_WAIT milliseconds1250 timer1250
	TIMER_READY timer1250
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1251:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 220.0 'True'

	DATA8 layer1254
	DATA8 nos1254
	DATA8 busy1254
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1254 nos1254
	JR_EQ8 0 nos1254 motornotbusy1254
  motorwaiting1254:
	OUTPUT_TEST layer1254 nos1254 busy1254
	JR_EQ8 busy1254 0 motornotbusy1254
	SLEEP
	JR motorwaiting1254
  motornotbusy1254:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1256
	DATA8 nos1256
	DATA8 busy1256
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1256 nos1256
	JR_EQ8 0 nos1256 motornotbusy1256
  motorwaiting1256:
	OUTPUT_TEST layer1256 nos1256 busy1256
	JR_EQ8 busy1256 0 motornotbusy1256
	SLEEP
	JR motorwaiting1256
  motornotbusy1256:
    MOVEF_F 107.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1258:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 1000.0 endwhile1258
  whilebody1258:
    WRITE32 ENDSUB_F_ULTRASONIC_SUPERFAST_0:CALLSUB1260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SUPERFAST_0
CALLSUB1260:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 1000.0 whilebody1258
  endwhile1258:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1265
	MOVEF_32 3000.0 milliseconds1265
	DATA32 timer1265
	TIMER_WAIT milliseconds1265 timer1265
	TIMER_READY timer1265
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1266:
    WRITE32 ENDSUB_F_TAKES_NORMAL_0:CALLSUB1267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKES_NORMAL_0
CALLSUB1267:
    JR endif1242
  else1242_1:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1270
	DATA8 nos1270
	DATA8 busy1270
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1270 nos1270
	JR_EQ8 0 nos1270 motornotbusy1270
  motorwaiting1270:
	OUTPUT_TEST layer1270 nos1270 busy1270
	JR_EQ8 busy1270 0 motornotbusy1270
	SLEEP
	JR motorwaiting1270
  motornotbusy1270:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1274
	MOVEF_32 2000.0 milliseconds1274
	DATA32 timer1274
	TIMER_WAIT milliseconds1274 timer1274
	TIMER_READY timer1274
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1275:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 190.0 0.0 'True' 

	DATA8 layer1277
	DATA8 nos1277
	DATA8 busy1277
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1277 nos1277
	JR_EQ8 0 nos1277 motornotbusy1277
  motorwaiting1277:
	OUTPUT_TEST layer1277 nos1277 busy1277
	JR_EQ8 busy1277 0 motornotbusy1277
	SLEEP
	JR motorwaiting1277
  motornotbusy1277:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 140.0 0.0 'True' 

	DATA8 layer1279
	DATA8 nos1279
	DATA8 busy1279
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1279 nos1279
	JR_EQ8 0 nos1279 motornotbusy1279
  motorwaiting1279:
	OUTPUT_TEST layer1279 nos1279 busy1279
	JR_EQ8 busy1279 0 motornotbusy1279
	SLEEP
	JR motorwaiting1279
  motornotbusy1279:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer1281
	DATA8 nos1281
	DATA8 busy1281
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1281 nos1281
	JR_EQ8 0 nos1281 motornotbusy1281
  motorwaiting1281:
	OUTPUT_TEST layer1281 nos1281 busy1281
	JR_EQ8 busy1281 0 motornotbusy1281
	SLEEP
	JR motorwaiting1281
  motornotbusy1281:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer1283
	DATA8 nos1283
	DATA8 busy1283
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1283 nos1283
	JR_EQ8 0 nos1283 motornotbusy1283
  motorwaiting1283:
	OUTPUT_TEST layer1283 nos1283 busy1283
	JR_EQ8 busy1283 0 motornotbusy1283
	SLEEP
	JR motorwaiting1283
  motornotbusy1283:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 93.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1288:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 1050.0 endwhile1288
  whilebody1288:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 1050.0 whilebody1288
  endwhile1288:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1294
	MOVEF_32 3000.0 milliseconds1294
	DATA32 timer1294
	TIMER_WAIT milliseconds1294 timer1294
	TIMER_READY timer1294
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1295:
    WRITE32 ENDSUB_F_TAKES_INVERSED_0:CALLSUB1296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKES_INVERSED_0
CALLSUB1296:
  else1242_2:
  endif1242:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 20.0 'True'

	DATA8 layer1299
	DATA8 nos1299
	DATA8 busy1299
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1299 nos1299
	JR_EQ8 0 nos1299 motornotbusy1299
  motorwaiting1299:
	OUTPUT_TEST layer1299 nos1299 busy1299
	JR_EQ8 busy1299 0 motornotbusy1299
	SLEEP
	JR motorwaiting1299
  motornotbusy1299:
    TIMER_READ timeMC9tmp
	SUB32 timeMC9tmp timeMC9 timeMC9tmp
	MOVE32_F timeMC9tmp VGV_T
    DATAF tmpf1301
    DATA8 flag1301
    DIVF VGV_T 60000.0 tmpf1301
    CP_EQF 0.0 60000.0 flag1301
    SELECTF flag1301 0.0 tmpf1301 F.0

    MATH FLOOR F.0 VGV_MINS
    MATH MOD VGV_T 60000.0 F.1
    DATAF tmpf1304
    DATA8 flag1304
    DIVF F.1 1000.0 tmpf1304
    CP_EQF 0.0 1000.0 flag1304
    SELECTF flag1304 0.0 tmpf1304 F.0

    MATH FLOOR F.0 VGV_SECS
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_MINS '%g' 99 S.1
    CALL TEXT.APPEND S.1 ':' S.0
    STRINGS VALUE_FORMATTED VGV_SECS '%g' 99 S.1
    CALL TEXT.APPEND S.0 S.1 VGV_STR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_STR
    DATA32 milliseconds1312
	MOVEF_32 100000000.0 milliseconds1312
	DATA32 timer1312
	TIMER_WAIT milliseconds1312 timer1312
	TIMER_READY timer1312
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_ULTRASONIC_POWER_2:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VLV_V_1
    SUBF VLV_V_1 VLV_U_1 VLV_NOWERROR_1
    SUBF VGV_LASTERROR VLV_NOWERROR_1 VLV_DIF_1
    ADDF VGV_INTEGRAL VLV_NOWERROR_1 F.0
    DATAF tmpf1317
    DATA8 flag1317
    DIVF F.0 10.0 tmpf1317
    CP_EQF 0.0 10.0 flag1317
    SELECTF flag1317 0.0 tmpf1317 VLV_INTEGRAL_1

    SUBF VLV_NOWERROR_1 VGV_LASTERROR VLV_DERIVATIVE_1
    MULF VLV_NOWERROR_1 VGV_P_U F.0
    MULF VLV_INTEGRAL_1 VGV_D_U F.1
    ADDF F.0 F.1 VLV_UP_1
    ADDF VLV_POWER_1 VLV_UP_1 F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF VLV_POWER_1 VLV_UP_1 F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VLV_NOWERROR_1 VLV_LASTERROR_1
RETSUB_F_ULTRASONIC_POWER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_POWER_2:
SUB_F_AFTER_ACTION_0:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1328:
    DATA32 milliseconds1329
	MOVEF_32 300.0 milliseconds1329
	DATA32 timer1329
	TIMER_WAIT milliseconds1329 timer1329
	TIMER_READY timer1329
RETSUB_F_AFTER_ACTION_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_AFTER_ACTION_0:
SUB_F_ULTRASONIC_ZAMED_5:
    SUBF VLV_DEGREES_3 VLV_ZAMED_DEGREES_3 VLV_NORMAL_DEGREES_3
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1332:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VLV_NORMAL_DEGREES_3 endwhile1332
  whilebody1332:
    MOVEF_F VLV_BASE_POWER_3 VLV_POWER_1
    MOVEF_F VLV_U_3 VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB1334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB1334:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VLV_NORMAL_DEGREES_3 whilebody1332
  endwhile1332:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_3
  while1338:
    JR_GTEQF VLV_C_3 VLV_ZAMED_DEGREES_3 endwhile1338
  whilebody1338:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.1
    DATAF tmpf1340
    DATA8 flag1340
    DIVF F.1 VLV_ZAMED_DEGREES_3 tmpf1340
    CP_EQF 0.0 VLV_ZAMED_DEGREES_3 flag1340
    SELECTF flag1340 0.0 tmpf1340 F.0

    MULF F.0 VLV_BASE_POWER_3 VLV_MINUS_3
    SUBF VLV_BASE_POWER_3 VLV_MINUS_3 VLV_POWER_3
    JR_GTEQF VLV_POWER_3 VLV_MIN_POWER_3 else1343_1
    MOVEF_F VLV_MIN_POWER_3 VLV_POWER_3
  else1343_1:
  endif1343:
    MOVEF_F VLV_POWER_3 VLV_POWER_1
    MOVEF_F VLV_U_3 VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB1344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB1344:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_3
    JR_LTF VLV_C_3 VLV_ZAMED_DEGREES_3 whilebody1338
  endwhile1338:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1346:
RETSUB_F_ULTRASONIC_ZAMED_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_ZAMED_5:
SUB_F_RESET_0:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_MOVE_FORWARD_ACCELERATION_5:
    SUBF VLV_DEG_5 VLV_ACCELERATION_5 F.0
    SUBF F.0 VLV_ZAME_5 VLV_NORMAL_DEGREES_5
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1351:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
  while1353:
    JR_GTEQF VLV_C_5 VLV_ACCELERATION_5 endwhile1353
  whilebody1353:
    DATAF tmpf1354
    DATA8 flag1354
    DIVF VLV_C_5 VLV_ACCELERATION_5 tmpf1354
    CP_EQF 0.0 VLV_ACCELERATION_5 flag1354
    SELECTF flag1354 0.0 tmpf1354 VLV_P_5

    SUBF VLV_BASE_POWER_5 VLV_MIN_POWER_5 F.1
    MULF VLV_P_5 F.1 F.0
    ADDF F.0 VLV_MIN_POWER_5 VLV_POWER_5
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_P_5 VLV_DELTA_5
    SUBF VLV_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
    JR_LTF VLV_C_5 VLV_ACCELERATION_5 whilebody1353
  endwhile1353:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1370:
    MOVEF_F 0.0 VLV_C_5
  while1371:
    JR_GTEQF VLV_C_5 VLV_NORMAL_DEGREES_5 endwhile1371
  whilebody1371:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 1.0 VLV_DELTA_5
    SUBF VLV_BASE_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_BASE_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
    JR_LTF VLV_C_5 VLV_NORMAL_DEGREES_5 whilebody1371
  endwhile1371:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1384:
    MOVEF_F 0.0 VLV_C_5
  while1385:
    JR_GTEQF VLV_C_5 VLV_ZAME_5 endwhile1385
  whilebody1385:
    DATAF tmpf1386
    DATA8 flag1386
    DIVF VLV_C_5 VLV_ZAME_5 tmpf1386
    CP_EQF 0.0 VLV_ZAME_5 flag1386
    SELECTF flag1386 0.0 tmpf1386 VLV_P_5

    SUBF VLV_BASE_POWER_5 VLV_MIN_POWER_5 F.1
    SUBF 1.0 VLV_P_5 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_5 VLV_POWER_5
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    SUBF 1.0 VLV_P_5 F.1
    MULF F.0 F.1 VLV_DELTA_5
    SUBF VLV_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
    JR_LTF VLV_C_5 VLV_ZAME_5 whilebody1385
  endwhile1385:
RETSUB_F_MOVE_FORWARD_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:
SUB_F_MOVE_BACKWARD_ACCELERATION_5:
    SUBF VLV_DEG_6 VLV_ACCELERATION_6 F.0
    SUBF F.0 VLV_ZAME_6 VLV_NORMAL_DEGREES_6
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1406:
    MOVEF_F 0.0 VLV_C_6
  while1407:
    JR_GTEQF VLV_C_6 VLV_ACCELERATION_6 endwhile1407
  whilebody1407:
    DATAF tmpf1408
    DATA8 flag1408
    DIVF VLV_C_6 VLV_ACCELERATION_6 tmpf1408
    CP_EQF 0.0 VLV_ACCELERATION_6 flag1408
    SELECTF flag1408 0.0 tmpf1408 VLV_P_6

    SUBF VLV_BASE_POWER_6 VLV_MIN_POWER_6 F.1
    MULF VLV_P_6 F.1 F.0
    ADDF F.0 VLV_MIN_POWER_6 VLV_POWER_6
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.4
    MULF F.4 VGV_RIGHT_FORWARD F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_P_6 F.0
    MULF F.0 -1.0 VLV_DELTA_6
    SUBF VLV_POWER_6 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF VLV_POWER_6 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_6 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_6 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_6
    JR_LTF VLV_C_6 VLV_ACCELERATION_6 whilebody1407
  endwhile1407:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1428:
    MOVEF_F 0.0 VLV_C_6
  while1429:
    JR_GTEQF VLV_C_6 VLV_NORMAL_DEGREES_6 endwhile1429
  whilebody1429:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 -1.0 VLV_DELTA_6
    SUBF VLV_BASE_POWER_6 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF VLV_BASE_POWER_6 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_6 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_6 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_6
    JR_LTF VLV_C_6 VLV_NORMAL_DEGREES_6 whilebody1429
  endwhile1429:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1445:
    MOVEF_F 0.0 VLV_C_6
  while1446:
    JR_GTEQF VLV_C_6 VLV_ZAME_6 endwhile1446
  whilebody1446:
    DATAF tmpf1447
    DATA8 flag1447
    DIVF VLV_C_6 VLV_ZAME_6 tmpf1447
    CP_EQF 0.0 VLV_ZAME_6 flag1447
    SELECTF flag1447 0.0 tmpf1447 VLV_P_6

    SUBF VLV_BASE_POWER_6 VLV_MIN_POWER_6 F.1
    SUBF 1.0 VLV_P_6 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_6 VLV_POWER_6
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.4
    MULF F.4 VGV_RIGHT_FORWARD F.3
    SUBF F.2 F.3 F.1
    SUBF 1.0 VLV_P_6 F.2
    MULF F.1 F.2 F.0
    MULF F.0 -1.0 VLV_DELTA_6
    SUBF VLV_POWER_6 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF VLV_POWER_6 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_6 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_6 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_6
    JR_LTF VLV_C_6 VLV_ZAME_6 whilebody1446
  endwhile1446:
RETSUB_F_MOVE_BACKWARD_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:
SUB_F_MOTOR_FORWARD_ACCELERATION_7:
    SUBF VLV_DEG_7 VLV_ACCELERATION_7 F.0
    SUBF F.0 VLV_ZAME_7 VLV_NORMAL_DEG_7
    CALL MOTOR.RESETCOUNT VLV_MOTOR_7
    MOVEF_F 0.0 VLV_C_7
  while1472:
    JR_GTEQF VLV_C_7 VLV_ACCELERATION_7 endwhile1472
  whilebody1472:
    DATAF tmpf1473
    DATA8 flag1473
    DIVF VLV_C_7 VLV_ACCELERATION_7 tmpf1473
    CP_EQF 0.0 VLV_ACCELERATION_7 flag1473
    SELECTF flag1473 0.0 tmpf1473 VLV_P_7

    SUBF VLV_BASE_POWER_7 VLV_MIN_POWER_7 F.1
    MULF F.1 VLV_P_7 F.0
    ADDF F.0 VLV_MIN_POWER_7 VLV_POWER_7
    MATH FLOOR VLV_POWER_7 F.0
    MULF F.0 VLV_FORWARD_7 VLV_POWER_7
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_POWER_7 '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    CALL MOTOR.START VLV_MOTOR_7 VLV_POWER_7
    CALL MOTOR.GETCOUNT VLV_MOTOR_7 F.0
    MULF F.0 VLV_FORWARD_7 VLV_C_7
    DATA32 milliseconds1487
	MOVEF_32 10.0 milliseconds1487
	DATA32 timer1487
	TIMER_WAIT milliseconds1487 timer1487
	TIMER_READY timer1487
    JR_LTF VLV_C_7 VLV_ACCELERATION_7 whilebody1472
  endwhile1472:
    MULF VLV_BASE_POWER_7 VLV_FORWARD_7 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_7 F.0 0.0 VLV_NORMAL_DEG_7 0.0 'False' 

	DATA8 layer1489
	DATA8 nos1489
	DATA8 busy1489
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_7 layer1489 nos1489
	JR_EQ8 0 nos1489 motornotbusy1489
  motorwaiting1489:
	OUTPUT_TEST layer1489 nos1489 busy1489
	JR_EQ8 busy1489 0 motornotbusy1489
	SLEEP
	JR motorwaiting1489
  motornotbusy1489:
    CALL MOTOR.RESETCOUNT VLV_MOTOR_7
    MOVEF_F 0.0 VLV_C_7
  while1491:
    JR_GTEQF VLV_C_7 VLV_ZAME_7 endwhile1491
  whilebody1491:
    DATAF tmpf1492
    DATA8 flag1492
    DIVF VLV_C_7 VLV_ZAME_7 tmpf1492
    CP_EQF 0.0 VLV_ZAME_7 flag1492
    SELECTF flag1492 0.0 tmpf1492 VLV_P_7

    SUBF VLV_BASE_POWER_7 VLV_MIN_POWER_7 F.1
    SUBF 1.0 VLV_P_7 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_7 VLV_POWER_7
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_POWER_7 '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    MULF VLV_POWER_7 VLV_FORWARD_7 F.0
    CALL MOTOR.START VLV_MOTOR_7 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_7 F.0
    MULF F.0 VLV_FORWARD_7 VLV_C_7
    DATA32 milliseconds1506
	MOVEF_32 10.0 milliseconds1506
	DATA32 timer1506
	TIMER_WAIT milliseconds1506 timer1506
	TIMER_READY timer1506
    JR_LTF VLV_C_7 VLV_ZAME_7 whilebody1491
  endwhile1491:
RETSUB_F_MOTOR_FORWARD_ACCELERATION_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:
SUB_F_MOTOR_BACKWARD_ACCELERATION_7:
    SUBF VLV_DEG_8 VLV_ACCELERATION_8 F.0
    SUBF F.0 VLV_ZAME_8 VLV_NORMAL_DEG_8
    CALL MOTOR.RESETCOUNT VLV_MOTOR_8
    MOVEF_F 0.0 VLV_C_8
  while1510:
    JR_GTEQF VLV_C_8 VLV_ACCELERATION_8 endwhile1510
  whilebody1510:
    DATAF tmpf1511
    DATA8 flag1511
    DIVF VLV_C_8 VLV_ACCELERATION_8 tmpf1511
    CP_EQF 0.0 VLV_ACCELERATION_8 flag1511
    SELECTF flag1511 0.0 tmpf1511 F.1

    SUBF VLV_BASE_POWER_8 VLV_MIN_POWER_8 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_8 VLV_POWER_8
    MULF VLV_FORWARD_8 VLV_POWER_8 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VLV_MOTOR_8 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_8 F.1
    MULF F.1 VLV_FORWARD_8 F.0
    MULF F.0 -1.0 VLV_C_8
    DATA32 milliseconds1521
	MOVEF_32 10.0 milliseconds1521
	DATA32 timer1521
	TIMER_WAIT milliseconds1521 timer1521
	TIMER_READY timer1521
    JR_LTF VLV_C_8 VLV_ACCELERATION_8 whilebody1510
  endwhile1510:
    MULF VLV_FORWARD_8 VLV_BASE_POWER_8 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_8 F.0 0.0 VLV_NORMAL_DEG_8 0.0 'False' 

	DATA8 layer1524
	DATA8 nos1524
	DATA8 busy1524
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_8 layer1524 nos1524
	JR_EQ8 0 nos1524 motornotbusy1524
  motorwaiting1524:
	OUTPUT_TEST layer1524 nos1524 busy1524
	JR_EQ8 busy1524 0 motornotbusy1524
	SLEEP
	JR motorwaiting1524
  motornotbusy1524:
    CALL MOTOR.RESETCOUNT VLV_MOTOR_8
    MOVEF_F 0.0 VLV_C_8
  while1526:
    JR_GTEQF VLV_C_8 VLV_ZAME_8 endwhile1526
  whilebody1526:
    DATAF tmpf1527
    DATA8 flag1527
    DIVF VLV_C_8 VLV_ZAME_8 tmpf1527
    CP_EQF 0.0 VLV_ZAME_8 flag1527
    SELECTF flag1527 0.0 tmpf1527 VLV_P_8

    SUBF VLV_BASE_POWER_8 VLV_MIN_POWER_8 F.1
    SUBF 1.0 VLV_P_8 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_8 VLV_POWER_8
    MULF VLV_FORWARD_8 VLV_POWER_8 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VLV_MOTOR_8 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_8 F.1
    MULF F.1 VLV_FORWARD_8 F.0
    MULF F.0 -1.0 VLV_C_8
    DATA32 milliseconds1538
	MOVEF_32 10.0 milliseconds1538
	DATA32 timer1538
	TIMER_WAIT milliseconds1538 timer1538
	TIMER_READY timer1538
    JR_LTF VLV_C_8 VLV_ZAME_8 whilebody1526
  endwhile1526:
RETSUB_F_MOTOR_BACKWARD_ACCELERATION_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
