DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_12
DATAF VLV_MIN_POWER_12
DATAF VLV_DEG_12
DATAF VLV_COEF_12
DATAF VLV_BASE_POWER_17
DATAF VLV_MIN_POWER_17
DATAF VLV_DEG_17
DATAF VLV_COEF_17
DATAS VLV_MOTOR_16 252
DATAF VLV_FORWARD_16
DATAF VLV_DEG_16
DATAF VLV_MAX_POWER_16
DATAS VLV_ACCELERATION_16 252
DATAS VLV_ZAME_16 252
DATAS VLV_TO_STOP_16 252
DATAF VLV_TIME_2
DATAF VLV_PERCENT_7
DATAF VLV_POWER_1
DATAF VLV_A_10
DATAF VLV_POWER_14
DATAF VLV_PORT_5
DATAF VLV_MODE_5
DATAF VLV_D_5
DATAF VLV_RESULT_5
DATAF VLV_DEG_15
DATAF VLV_POWER_15
DATAS VLV_FINISH_FORWARD_18 252
DATAS VLV_TEXT_6 252
DATAF VLV_L_9
DATAS VLV_IS_INVERTED_26 252
DATAS VLV_IS_INVERTED_27 252
DATAS VLV_LONG_24 252
DATAS VLV_NEAR_24 252
DATAS VLV_SHOULD_MOVE_BACKWARD_24 252
DATAS VLV_IS_INVERTED_24 252
DATAS VLV_IS_INVERTED_28 252
DATAS VLV_TO_DELAY_29 252
DATAF VLV_L_8
DATAF VLV_COEF_19
DATAF VLV_COEF_20
DATAS VLV_IS_INVERTED_21 252
DATAS VLV_IS_INVERTED_22 252
DATAF VLV_MINUS_DEG_22
DATAF VLV_MINUS_DEG_23
DATAS VLV_IS_INVERTED_25 252
DATAS VLV_MOTOR1_25 252
DATAS VLV_MOTOR2_25 252
DATAF VLV_FORWARD1_25
DATAF VLV_FORWARD2_25
DATAF VLV_COEF_25
DATAF VGV_P
DATAF VGV_R
DATAF VGV_G
DATAF VGV_W
DATAF VLV_CUR_8
DATAF VLV_CUR_9
DATAF VLV_MINUS_DEG_24
DATAS VLV_MOTOR1_26 252
DATAS VLV_MOTOR2_26 252
DATAF VLV_FORWARD1_26
DATAF VLV_FORWARD2_26
DATAF VLV_COEF_26
DATAS VLV_MOTOR1_27 252
DATAS VLV_MOTOR2_27 252
DATAF VLV_FORWARD1_27
DATAF VLV_FORWARD2_27
DATAF VLV_COEF_27
DATAF VLV_P_27
DATAS VLV_MOTOR1_28 252
DATAS VLV_MOTOR2_28 252
DATAF VLV_FORWARD1_28
DATAF VLV_FORWARD2_28
DATAF VLV_COEF_28
DATAF VGV_LINE
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_ULTRASONIC
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERTED_MOTOR 252
DATAS VGV_MOTORS 252
DATAF VGV_LEFT_FORWARD
DATAF VGV_RIGHT_FORWARD
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_MAX
DATAF VGV_LEFT_MIN
DATAF VGV_LAST_ERR
DATAF VGV_LAST_MOTOR_ERR
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_WATER_STATE
DATAF VGV_FIRE_COUNT
DATAF VGV_MEN_COUNT
DATAS VGV_CHEM 252
DATAS VGV_TAKE_CHEM_IN_YELLOW 252
DATAF VGV_CUBES_COUNT
DATAF VGV_B
DATAS VGV_START 252
DATAF VGV_A
DATAS VGV_IS_SECOND_BROWN_CHEM 252
DATAS VGV_OBJECT 252
DATAF VGV_DEG
DATAS VGV_TAKE_LEFT 252
DATAS VGV_TAKE_RIGHT 252
DATAS VGV_IS_FIRE 252
DATAF VGV_ULTRA
DATAF VGV_COL
DATAS VGV_IS_SECOND_YELLOW_CHEM 252
DATAS VGV_CH 252
DATAF VGV_U
DATAS VGV_IS_FIRST_BLUE_OBJECT_CHEM 252
DATAS VGV_IS_SECOND_BLUE_OBJECT_CHEM 252
DATAS VGV_IS_ON_SECOND_BLUE 252
DATAS VGV_T 252
DATAS VGV_WHITE_OBJECT 252
DATAF VGV_MINUS_DEG
DATAF VLV_CURRENT_MODE_5
DATAF VLV_ERR_8
DATAF VLV_DIFF_8
DATAF VLV_DELTA_8
DATAF VLV_LEFT_POWER_8
DATAF VLV_RIGHT_POWER_8
DATAF VLV_ERR_9
DATAF VLV_DIFF_9
DATAF VLV_DELTA_9
DATAF VLV_LEFT_POWER_9
DATAF VLV_RIGHT_POWER_9
DATAF VLV_L_10
DATAF VLV_ERR_10
DATAF VLV_DIFF_10
DATAF VLV_DELTA_10
DATAF VLV_LEFT_POWER_10
DATAF VLV_RIGHT_POWER_10
DATAF VLV_L_12
DATAF VLV_P_12
DATAF VLV_POWER_12
DATAF VLV_R_12
DATAF VLV_DELTA_12
DATAF VLV_LEFT_POWER_12
DATAF VLV_RIGHT_POWER_12
DATAF VLV_L_14
DATAF VLV_R_14
DATAF VLV_ERR_14
DATAF VLV_DIFF_14
DATAF VLV_DELTA_14
DATAF VLV_LEFT_POWER_14
DATAF VLV_RIGHT_POWER_14
DATAF VLV_L_15
DATAF VLV_NORMAL_DEG_16
DATAF VLV_ACCELERATION_DEG_16
DATAF VLV_ZAME_DEG_16
DATAF VLV_M_16
DATAF VLV_MIN_POWER_16
DATAF VLV_P_16
DATAF VLV_POWER_16
DATAF VLV_L_17
DATAF VLV_P_17
DATAF VLV_R_17
DATAF VLV_DELTA_17
DATAF VLV_POWER_17
DATAF VLV_LEFT_POWER_17
DATAF VLV_RIGHT_POWER_17
DATAS VLV_MOT_21 252
DATAF VLV_FORWARD_21
DATAF VLV_COEF_21
DATAF VLV_COEF_22
DATAF VLV_DEG_23
ARRAY16 VLV_RGB_27 2
DATAF VLV_MILLISECOND_29
DATAF VLV_SECONDS_29
DATAF VLV_MINUTES_29
DATAS VLV_TEXT_29 252
DATA32 RUNCOUNTER_F_PREPARE_GRABBER_0
DATA32 RUNCOUNTER_F_KICK_WATER_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_12
    MOVEF_F 0.0 VLV_MIN_POWER_12
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_COEF_12
    MOVEF_F 0.0 VLV_BASE_POWER_17
    MOVEF_F 0.0 VLV_MIN_POWER_17
    MOVEF_F 0.0 VLV_DEG_17
    MOVEF_F 0.0 VLV_COEF_17
    STRINGS DUPLICATE '' VLV_MOTOR_16
    MOVEF_F 0.0 VLV_FORWARD_16
    MOVEF_F 0.0 VLV_DEG_16
    MOVEF_F 0.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE '' VLV_ACCELERATION_16
    STRINGS DUPLICATE '' VLV_ZAME_16
    STRINGS DUPLICATE '' VLV_TO_STOP_16
    MOVEF_F 0.0 VLV_TIME_2
    MOVEF_F 0.0 VLV_PERCENT_7
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_A_10
    MOVEF_F 0.0 VLV_POWER_14
    MOVEF_F 0.0 VLV_PORT_5
    MOVEF_F 0.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    MOVEF_F 0.0 VLV_RESULT_5
    MOVEF_F 0.0 VLV_DEG_15
    MOVEF_F 0.0 VLV_POWER_15
    STRINGS DUPLICATE '' VLV_FINISH_FORWARD_18
    STRINGS DUPLICATE '' VLV_TEXT_6
    MOVEF_F 0.0 VLV_L_9
    STRINGS DUPLICATE '' VLV_IS_INVERTED_26
    STRINGS DUPLICATE '' VLV_IS_INVERTED_27
    STRINGS DUPLICATE '' VLV_LONG_24
    STRINGS DUPLICATE '' VLV_NEAR_24
    STRINGS DUPLICATE '' VLV_SHOULD_MOVE_BACKWARD_24
    STRINGS DUPLICATE '' VLV_IS_INVERTED_24
    STRINGS DUPLICATE '' VLV_IS_INVERTED_28
    STRINGS DUPLICATE '' VLV_TO_DELAY_29
    MOVEF_F 0.0 VLV_L_8
    MOVEF_F 0.0 VLV_COEF_19
    MOVEF_F 0.0 VLV_COEF_20
    STRINGS DUPLICATE '' VLV_IS_INVERTED_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_22
    MOVEF_F 0.0 VLV_MINUS_DEG_22
    MOVEF_F 0.0 VLV_MINUS_DEG_23
    STRINGS DUPLICATE '' VLV_IS_INVERTED_25
    STRINGS DUPLICATE '' VLV_MOTOR1_25
    STRINGS DUPLICATE '' VLV_MOTOR2_25
    MOVEF_F 0.0 VLV_FORWARD1_25
    MOVEF_F 0.0 VLV_FORWARD2_25
    MOVEF_F 0.0 VLV_COEF_25
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VLV_CUR_8
    MOVEF_F 0.0 VLV_CUR_9
    MOVEF_F 0.0 VLV_MINUS_DEG_24
    STRINGS DUPLICATE '' VLV_MOTOR1_26
    STRINGS DUPLICATE '' VLV_MOTOR2_26
    MOVEF_F 0.0 VLV_FORWARD1_26
    MOVEF_F 0.0 VLV_FORWARD2_26
    MOVEF_F 0.0 VLV_COEF_26
    STRINGS DUPLICATE '' VLV_MOTOR1_27
    STRINGS DUPLICATE '' VLV_MOTOR2_27
    MOVEF_F 0.0 VLV_FORWARD1_27
    MOVEF_F 0.0 VLV_FORWARD2_27
    MOVEF_F 0.0 VLV_COEF_27
    MOVEF_F 0.0 VLV_P_27
    STRINGS DUPLICATE '' VLV_MOTOR1_28
    STRINGS DUPLICATE '' VLV_MOTOR2_28
    MOVEF_F 0.0 VLV_FORWARD1_28
    MOVEF_F 0.0 VLV_FORWARD2_28
    MOVEF_F 0.0 VLV_COEF_28
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_B
    STRINGS DUPLICATE '' VGV_START
    MOVEF_F 0.0 VGV_A
    STRINGS DUPLICATE '' VGV_IS_SECOND_BROWN_CHEM
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_TAKE_LEFT
    STRINGS DUPLICATE '' VGV_TAKE_RIGHT
    STRINGS DUPLICATE '' VGV_IS_FIRE
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_COL
    STRINGS DUPLICATE '' VGV_IS_SECOND_YELLOW_CHEM
    STRINGS DUPLICATE '' VGV_CH
    MOVEF_F 0.0 VGV_U
    STRINGS DUPLICATE '' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_ON_SECOND_BLUE
    STRINGS DUPLICATE '' VGV_T
    STRINGS DUPLICATE '' VGV_WHITE_OBJECT
    MOVEF_F 0.0 VGV_MINUS_DEG
    MOVEF_F 0.0 VLV_CURRENT_MODE_5
    MOVEF_F 0.0 VLV_ERR_8
    MOVEF_F 0.0 VLV_DIFF_8
    MOVEF_F 0.0 VLV_DELTA_8
    MOVEF_F 0.0 VLV_LEFT_POWER_8
    MOVEF_F 0.0 VLV_RIGHT_POWER_8
    MOVEF_F 0.0 VLV_ERR_9
    MOVEF_F 0.0 VLV_DIFF_9
    MOVEF_F 0.0 VLV_DELTA_9
    MOVEF_F 0.0 VLV_LEFT_POWER_9
    MOVEF_F 0.0 VLV_RIGHT_POWER_9
    MOVEF_F 0.0 VLV_L_10
    MOVEF_F 0.0 VLV_ERR_10
    MOVEF_F 0.0 VLV_DIFF_10
    MOVEF_F 0.0 VLV_DELTA_10
    MOVEF_F 0.0 VLV_LEFT_POWER_10
    MOVEF_F 0.0 VLV_RIGHT_POWER_10
    MOVEF_F 0.0 VLV_L_12
    MOVEF_F 0.0 VLV_P_12
    MOVEF_F 0.0 VLV_POWER_12
    MOVEF_F 0.0 VLV_R_12
    MOVEF_F 0.0 VLV_DELTA_12
    MOVEF_F 0.0 VLV_LEFT_POWER_12
    MOVEF_F 0.0 VLV_RIGHT_POWER_12
    MOVEF_F 0.0 VLV_L_14
    MOVEF_F 0.0 VLV_R_14
    MOVEF_F 0.0 VLV_ERR_14
    MOVEF_F 0.0 VLV_DIFF_14
    MOVEF_F 0.0 VLV_DELTA_14
    MOVEF_F 0.0 VLV_LEFT_POWER_14
    MOVEF_F 0.0 VLV_RIGHT_POWER_14
    MOVEF_F 0.0 VLV_L_15
    MOVEF_F 0.0 VLV_NORMAL_DEG_16
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_16
    MOVEF_F 0.0 VLV_ZAME_DEG_16
    MOVEF_F 0.0 VLV_M_16
    MOVEF_F 0.0 VLV_MIN_POWER_16
    MOVEF_F 0.0 VLV_P_16
    MOVEF_F 0.0 VLV_POWER_16
    MOVEF_F 0.0 VLV_L_17
    MOVEF_F 0.0 VLV_P_17
    MOVEF_F 0.0 VLV_R_17
    MOVEF_F 0.0 VLV_DELTA_17
    MOVEF_F 0.0 VLV_POWER_17
    MOVEF_F 0.0 VLV_LEFT_POWER_17
    MOVEF_F 0.0 VLV_RIGHT_POWER_17
    STRINGS DUPLICATE '' VLV_MOT_21
    MOVEF_F 0.0 VLV_FORWARD_21
    MOVEF_F 0.0 VLV_COEF_21
    MOVEF_F 0.0 VLV_COEF_22
    MOVEF_F 0.0 VLV_DEG_23
    CALL ARRAYCREATE_FLOAT VLV_RGB_27
    MOVEF_F 0.0 VLV_MILLISECOND_29
    MOVEF_F 0.0 VLV_SECONDS_29
    MOVEF_F 0.0 VLV_MINUTES_29
    STRINGS DUPLICATE '' VLV_TEXT_29
    MOVE32_32 0 RUNCOUNTER_F_PREPARE_GRABBER_0
    MOVE32_32 0 RUNCOUNTER_F_KICK_WATER_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_PREPARE_GRABBER_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_PREPARE_GRABBER_0 0
    CALL GETANDINC32 RUNCOUNTER_F_PREPARE_GRABBER_0 -1 RUNCOUNTER_F_PREPARE_GRABBER_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_KICK_WATER_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_KICK_WATER_0 1
    CALL GETANDINC32 RUNCOUNTER_F_KICK_WATER_0 -1 RUNCOUNTER_F_KICK_WATER_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_PREPARE_GRABBER_0
subcall PROGRAM_F_KICK_WATER_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    DATAS S.2 252
    DATAS S.3 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1095
    WRITE32 ENDSUB_F_PREPARE_GRABBER_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PREPARE_GRABBER_0
  dispatch1095:
    JR_NEQ32 SUBPROGRAM 1 dispatch1096
    WRITE32 ENDSUB_F_KICK_WATER_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
  dispatch1096:
    MOVEF_F 0.0 VLV_BASE_POWER_12
    MOVEF_F 0.0 VLV_MIN_POWER_12
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_COEF_12
    MOVEF_F 0.0 VLV_BASE_POWER_17
    MOVEF_F 0.0 VLV_MIN_POWER_17
    MOVEF_F 0.0 VLV_DEG_17
    MOVEF_F 0.0 VLV_COEF_17
    STRINGS DUPLICATE '' VLV_MOTOR_16
    MOVEF_F 0.0 VLV_FORWARD_16
    MOVEF_F 0.0 VLV_DEG_16
    MOVEF_F 0.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE '' VLV_ACCELERATION_16
    STRINGS DUPLICATE '' VLV_ZAME_16
    STRINGS DUPLICATE '' VLV_TO_STOP_16
    MOVEF_F 0.0 VLV_TIME_2
    MOVEF_F 0.0 VLV_PERCENT_7
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_A_10
    MOVEF_F 0.0 VLV_POWER_14
    MOVEF_F 0.0 VLV_PORT_5
    MOVEF_F 0.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    MOVEF_F 0.0 VLV_RESULT_5
    MOVEF_F 0.0 VLV_DEG_15
    MOVEF_F 0.0 VLV_POWER_15
    STRINGS DUPLICATE '' VLV_FINISH_FORWARD_18
    STRINGS DUPLICATE '' VLV_TEXT_6
    MOVEF_F 0.0 VLV_L_9
    STRINGS DUPLICATE '' VLV_IS_INVERTED_26
    STRINGS DUPLICATE '' VLV_IS_INVERTED_27
    STRINGS DUPLICATE '' VLV_LONG_24
    STRINGS DUPLICATE '' VLV_NEAR_24
    STRINGS DUPLICATE '' VLV_SHOULD_MOVE_BACKWARD_24
    STRINGS DUPLICATE '' VLV_IS_INVERTED_24
    STRINGS DUPLICATE '' VLV_IS_INVERTED_28
    STRINGS DUPLICATE '' VLV_TO_DELAY_29
    MOVEF_F 0.0 VLV_L_8
    MOVEF_F 0.0 VLV_COEF_19
    MOVEF_F 0.0 VLV_COEF_20
    STRINGS DUPLICATE '' VLV_IS_INVERTED_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_22
    MOVEF_F 0.0 VLV_MINUS_DEG_22
    MOVEF_F 0.0 VLV_MINUS_DEG_23
    STRINGS DUPLICATE '' VLV_IS_INVERTED_25
    STRINGS DUPLICATE '' VLV_MOTOR1_25
    STRINGS DUPLICATE '' VLV_MOTOR2_25
    MOVEF_F 0.0 VLV_FORWARD1_25
    MOVEF_F 0.0 VLV_FORWARD2_25
    MOVEF_F 0.0 VLV_COEF_25
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VLV_CUR_8
    MOVEF_F 0.0 VLV_CUR_9
    MOVEF_F 0.0 VLV_MINUS_DEG_24
    STRINGS DUPLICATE '' VLV_MOTOR1_26
    STRINGS DUPLICATE '' VLV_MOTOR2_26
    MOVEF_F 0.0 VLV_FORWARD1_26
    MOVEF_F 0.0 VLV_FORWARD2_26
    MOVEF_F 0.0 VLV_COEF_26
    STRINGS DUPLICATE '' VLV_MOTOR1_27
    STRINGS DUPLICATE '' VLV_MOTOR2_27
    MOVEF_F 0.0 VLV_FORWARD1_27
    MOVEF_F 0.0 VLV_FORWARD2_27
    MOVEF_F 0.0 VLV_COEF_27
    MOVEF_F 0.0 VLV_P_27
    STRINGS DUPLICATE '' VLV_MOTOR1_28
    STRINGS DUPLICATE '' VLV_MOTOR2_28
    MOVEF_F 0.0 VLV_FORWARD1_28
    MOVEF_F 0.0 VLV_FORWARD2_28
    MOVEF_F 0.0 VLV_COEF_28
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_B
    STRINGS DUPLICATE '' VGV_START
    MOVEF_F 0.0 VGV_A
    STRINGS DUPLICATE '' VGV_IS_SECOND_BROWN_CHEM
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_TAKE_LEFT
    STRINGS DUPLICATE '' VGV_TAKE_RIGHT
    STRINGS DUPLICATE '' VGV_IS_FIRE
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_COL
    STRINGS DUPLICATE '' VGV_IS_SECOND_YELLOW_CHEM
    STRINGS DUPLICATE '' VGV_CH
    MOVEF_F 0.0 VGV_U
    STRINGS DUPLICATE '' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_ON_SECOND_BLUE
    STRINGS DUPLICATE '' VGV_T
    STRINGS DUPLICATE '' VGV_WHITE_OBJECT
    MOVEF_F 0.0 VGV_MINUS_DEG
    MOVEF_F 1.0 VGV_LINE
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERTED_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 37.0 VGV_LEFT_MAX
    MOVEF_F 4.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 2.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_R
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_LEFT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_RIGHT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB7 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB7:
    SOUND_READY
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB10:
ENDTHREAD:
    RETURN
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 80.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB12:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 80.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB13 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB13:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB14 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB14:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer15
	DATA8 nos15
	DATA8 busy15
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer15 nos15
	JR_EQ8 0 nos15 motornotbusy15
  motorwaiting15:
	OUTPUT_TEST layer15 nos15 busy15
	JR_EQ8 busy15 0 motornotbusy15
	SLEEP
	JR motorwaiting15
  motornotbusy15:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 130.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB16 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB16:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer17
	DATA8 nos17
	DATA8 busy17
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer17 nos17
	JR_EQ8 0 nos17 motornotbusy17
  motorwaiting17:
	OUTPUT_TEST layer17 nos17 busy17
	JR_EQ8 busy17 0 motornotbusy17
	SLEEP
	JR motorwaiting17
  motornotbusy17:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 125.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB19 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB19:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB20 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB20:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 160.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB21 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB21:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else22_1
    CALL MOTOR.START VGV_WATER_MOTOR 50.0
    DATA32 milliseconds24
	MOVEF_32 500.0 milliseconds24
	DATA32 timer24
	TIMER_WAIT milliseconds24 timer24
	TIMER_READY timer24
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer26
	DATA8 nos26
	DATA8 busy26
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer26 nos26
	JR_EQ8 0 nos26 motornotbusy26
  motorwaiting26:
	OUTPUT_TEST layer26 nos26 busy26
	JR_EQ8 busy26 0 motornotbusy26
	SLEEP
	JR motorwaiting26
  motornotbusy26:
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif22
  else22_1:
    CALL MOTOR.START VGV_WATER_MOTOR -50.0
    DATA32 milliseconds28
	MOVEF_32 500.0 milliseconds28
	DATA32 timer28
	TIMER_WAIT milliseconds28 timer28
	TIMER_READY timer28
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 50.0 0.0 20.0 0.0 'True' 

	DATA8 layer30
	DATA8 nos30
	DATA8 busy30
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer30 nos30
	JR_EQ8 0 nos30 motornotbusy30
  motorwaiting30:
	OUTPUT_TEST layer30 nos30 busy30
	JR_EQ8 busy30 0 motornotbusy30
	SLEEP
	JR motorwaiting30
  motornotbusy30:
  else22_2:
  endif22:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_PREPARE_GRABBER_0:
    CALL MOTOR.START VGV_GRABBER_MOTOR -20.0
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB32 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB32:
    CALL MOTOR.STOP VGV_GRABBER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 50.0 0.0 'True' 

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
RETSUB_F_PREPARE_GRABBER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PREPARE_GRABBER_0:
SUB_F_MAIN_0:
    STRINGS DUPLICATE 'left' VGV_START
    TIMER_READ timeMC9
    MOVEF_F 90.0 VGV_A
    DATA32 tmp36
    CALL GETANDINC32 RUNCOUNTER_F_PREPARE_GRABBER_0 1  RUNCOUNTER_F_PREPARE_GRABBER_0 tmp36
    JR_NEQ32 0 tmp36 alreadylaunched36
    OBJECT_START TF_PREPARE_GRABBER_0
  alreadylaunched36:
    CALL EQ_STRING VGV_START 'left' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else37_1
    MULF 80.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 85.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    WRITE32 ENDSUB_F_RESET_0:CALLSUB43 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB43:
  while44:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    JR_GTEQF F.0 1000.0 endwhile44
  whilebody44:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    JR_LTF F.0 1000.0 whilebody44
  endwhile44:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB47 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB47:
    MOVEF_F VLV_PERCENT_7 VGV_P
  while48:
    JR_GTEQF VGV_P 50.0 endwhile48
  whilebody48:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB49 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB49:
    MOVEF_F VLV_PERCENT_7 VGV_P
    JR_LTF VGV_P 50.0 whilebody48
  endwhile48:
  while50:
    JR_LTEQF VGV_P 20.0 endwhile50
  whilebody50:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB51 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB51:
    MOVEF_F VLV_PERCENT_7 VGV_P
    JR_GTF VGV_P 20.0 whilebody50
  endwhile50:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 180.0 VLV_DEG_16
    MOVEF_F 50.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB54 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB54:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 180.0 VLV_DEG_16
    MOVEF_F 50.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB55 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB55:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB56 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB56:
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB57 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB57:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB58 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB58:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 55.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB59 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB59:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB61:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB62 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB62:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB63 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB63:
    MOVEF_F VLV_PERCENT_7 VGV_P
  while64:
    JR_LTEQF VGV_P 23.0 endwhile64
  whilebody64:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB65:
    MOVEF_F VLV_PERCENT_7 VGV_P
    MOVEF_F VGV_A VLV_A_10
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB66:
    JR_GTF VGV_P 23.0 whilebody64
  endwhile64:
    JR endif37
  else37_1:
    MULF 80.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 40.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    WRITE32 ENDSUB_F_RESET_0:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB71:
  while72:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 1000.0 endwhile72
  whilebody72:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 1000.0 whilebody72
  endwhile72:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB77:
    MOVEF_F VLV_PERCENT_7 VGV_P
  while78:
    JR_GTEQF VGV_P 50.0 endwhile78
  whilebody78:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB79 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB79:
    MOVEF_F VLV_PERCENT_7 VGV_P
    JR_LTF VGV_P 50.0 whilebody78
  endwhile78:
  while80:
    JR_LTEQF VGV_P 20.0 endwhile80
  whilebody80:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB81:
    MOVEF_F VLV_PERCENT_7 VGV_P
    JR_GTF VGV_P 20.0 whilebody80
  endwhile80:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB82:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 180.0 VLV_DEG_16
    MOVEF_F 40.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'Fase' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB83:
    MULF VGV_LEFT_FORWARD -40.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB86:
    CALL MOTOR.STOP VGV_LEFT_MOTOR 'True'
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB88:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB89:
  while90:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 1150.0 endwhile90
  whilebody90:
    MOVEF_F 90.0 VLV_POWER_14
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB93:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 1150.0 whilebody90
  endwhile90:
    TIMER_READ timeMC1
  while97:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 1000.0 endwhile97
  whilebody97:
    MOVEF_F 40.0 VLV_POWER_14
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB99 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB99:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 1000.0 whilebody97
  endwhile97:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB101:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB102:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 230.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB104:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 130.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB105:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB106:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB107:
    MOVEF_F VLV_PERCENT_7 VGV_P
  while108:
    JR_LTEQF VGV_P 23.0 endwhile108
  whilebody108:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB109:
    MOVEF_F VLV_PERCENT_7 VGV_P
    MOVEF_F 90.0 VLV_A_10
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB110:
    JR_GTF VGV_P 23.0 whilebody108
  endwhile108:
  else37_2:
  endif37:
    MOVEF_F 40.0 VLV_BASE_POWER_17
    MOVEF_F 0.0 VLV_MIN_POWER_17
    MOVEF_F 30.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB111:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB112:
    STRINGS DUPLICATE 'False' VGV_IS_SECOND_BROWN_CHEM
    STRINGS DUPLICATE 'none' VGV_OBJECT
    MOVEF_F VGV_RIGHT_SENSOR VLV_PORT_5
    MOVEF_F 1.0 VLV_MODE_5
    MOVEF_F 300.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB113:
    MOVEF_F VLV_RESULT_5 VGV_R
    JR_LTEQF VGV_R 60.0 else114_1
    MOVEF_F VGV_RIGHT_SENSOR VLV_PORT_5
    MOVEF_F 2.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB115:
    MOVEF_F VLV_RESULT_5 VGV_G
    JR_LTEQF VGV_G 80.0 else116_1
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    STRINGS DUPLICATE 'human' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif116
  else116_1:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    DATA32 tmp119
    CALL GETANDINC32 RUNCOUNTER_F_KICK_WATER_0 1  RUNCOUNTER_F_KICK_WATER_0 tmp119
    JR_NEQ32 0 tmp119 alreadylaunched119
    OBJECT_START TF_KICK_WATER_0
  alreadylaunched119:
  else116_2:
  endif116:
    JR endif114
  else114_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else114_2
    JR_LTEQF VGV_R 12.0 else114_2
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_SECOND_BROWN_CHEM
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB121:
  else114_2:
  endif114:
    MOVEF_F 520.0 VGV_DEG
    CALL NE_STRING VGV_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else122_1
    MOVEF_F 40.0 VLV_BASE_POWER_12
    MOVEF_F 15.0 VLV_MIN_POWER_12
    MOVEF_F 120.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB124:
    SUBF VGV_DEG 120.0 VGV_DEG
  else122_1:
  endif122:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB126 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB126:
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else127_1
  while129:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 130.0 F.1
    JR_GTEQF F.0 F.1 endwhile129
  whilebody129:
    MOVEF_F 93.0 VLV_A_10
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB133:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 130.0 F.1
    JR_LTF F.0 F.1 whilebody129
  endwhile129:
    MOVEF_F 40.0 VLV_BASE_POWER_17
    MOVEF_F 15.0 VLV_MIN_POWER_17
    MOVEF_F 120.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB137:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB138:
    STRINGS DUPLICATE 'none' VGV_OBJECT
    MOVEF_F VGV_RIGHT_SENSOR VLV_PORT_5
    MOVEF_F 1.0 VLV_MODE_5
    MOVEF_F 200.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB139:
    MOVEF_F VLV_RESULT_5 VGV_R
    JR_LTEQF VGV_R 80.0 else140_1
    MOVEF_F VGV_RIGHT_SENSOR VLV_PORT_5
    MOVEF_F 2.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB141:
    MOVEF_F VLV_RESULT_5 VGV_G
    JR_LTEQF VGV_G 100.0 else142_1
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    STRINGS DUPLICATE 'human' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif142
  else142_1:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 40.0 VLV_BASE_POWER_12
    MOVEF_F 15.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB145:
    MOVEF_F 40.0 VLV_BASE_POWER_17
    MOVEF_F 15.0 VLV_MIN_POWER_17
    MOVEF_F 50.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB146:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB147:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB148 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB148:
    MOVEF_F 40.0 VLV_BASE_POWER_12
    MOVEF_F 15.0 VLV_MIN_POWER_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB149:
  else142_2:
  endif142:
    JR endif140
  else140_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else140_2
    JR_LTEQF VGV_R 15.0 else140_2
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_SECOND_BROWN_CHEM
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB151:
  else140_2:
  endif140:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB152:
    JR endif127
  else127_1:
  while153:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 VGV_DEG endwhile153
  whilebody153:
    MOVEF_F 90.0 VLV_A_10
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB156:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 VGV_DEG whilebody153
  endwhile153:
  else127_2:
  endif127:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB159 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB159:
    MOVEF_F 93.0 VGV_A
    CALL EQ_STRING VGV_IS_SECOND_BROWN_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else160_1
    MOVEF_F 90.0 VGV_A
  else160_1:
  endif160:
  while162:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 520.0 endwhile162
  whilebody162:
    MOVEF_F VGV_A VLV_A_10
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB165:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 520.0 whilebody162
  endwhile162:
    MULF 40.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF 40.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB172 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB172:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB173:
    STRINGS DUPLICATE 'none' VGV_OBJECT
    STRINGS DUPLICATE 'False' VGV_TAKE_LEFT
    STRINGS DUPLICATE 'False' VGV_TAKE_RIGHT
    STRINGS DUPLICATE 'False' VGV_IS_FIRE
    MOVEF_F VGV_RIGHT_SENSOR VLV_PORT_5
    MOVEF_F 1.0 VLV_MODE_5
    MOVEF_F 200.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB174:
    MOVEF_F VLV_RESULT_5 VGV_R
    JR_LTEQF VGV_R 80.0 else175_1
    MOVEF_F VGV_RIGHT_SENSOR VLV_PORT_5
    MOVEF_F 2.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB176:
    MOVEF_F VLV_RESULT_5 VGV_G
    JR_LTEQF VGV_G 100.0 else177_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    STRINGS DUPLICATE 'R: man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif177
  else177_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE 'True' VGV_IS_FIRE
  else177_2:
  endif177:
    JR endif175
  else175_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else175_2
    MOVEF_F VGV_RIGHT_SENSOR VLV_PORT_5
    MOVEF_F 4.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB181:
    MOVEF_F VLV_RESULT_5 VGV_W
    JR_LTEQF VGV_W 30.0 else182_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_TAKE_RIGHT
    STRINGS DUPLICATE 'True' VGV_CHEM
  else182_1:
  endif182:
  else175_2:
  endif175:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else183_1
    STRINGS DUPLICATE 'none' VGV_OBJECT
    MOVEF_F VGV_LEFT_SENSOR VLV_PORT_5
    MOVEF_F 1.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB185:
    MOVEF_F VLV_RESULT_5 VGV_R
    JR_LTEQF VGV_R 50.0 else186_1
    MOVEF_F VGV_LEFT_SENSOR VLV_PORT_5
    MOVEF_F 2.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB187:
    MOVEF_F VLV_RESULT_5 VGV_G
    JR_LTEQF VGV_G 70.0 else188_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    STRINGS DUPLICATE 'L: man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif188
  else188_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE 'True' VGV_IS_FIRE
  else188_2:
  endif188:
    JR endif186
  else186_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else186_2
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else186_2
    DATA8 layer193
	DATA8 no193
	DATA8 mode8193
	
	MOVEF_8 VGV_LEFT_SENSOR no193
	SUB8 no193 1 no193
	DIV8 no193 4 layer193
	MATH MOD8 no193 4 no193

	MOVEF_8 0.0 mode8193
	
	INPUT_DEVICE READY_RAW layer193 no193 0 mode8193 0
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 40.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB195:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB196:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_COL
    DATA8 layer199
	DATA8 no199
	DATA8 mode8199
	
	MOVEF_8 VGV_LEFT_SENSOR no199
	SUB8 no199 1 no199
	DIV8 no199 4 layer199
	MATH MOD8 no199 4 no199

	MOVEF_8 4.0 mode8199
	
	INPUT_DEVICE READY_RAW layer199 no199 0 mode8199 0
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB200:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_W
    MULF 80.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    DATA32 milliseconds204
	MOVEF_32 1000.0 milliseconds204
	DATA32 timer204
	TIMER_WAIT milliseconds204 timer204
	TIMER_READY timer204
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    DATA8 layer206
	DATA8 no206
	DATA8 mode8206
	
	MOVEF_8 VGV_LEFT_SENSOR no206
	SUB8 no206 1 no206
	DIV8 no206 4 layer206
	MATH MOD8 no206 4 no206

	MOVEF_8 1.0 mode8206
	
	INPUT_DEVICE READY_RAW layer206 no206 0 mode8206 0
    JR_LTF VGV_ULTRA 75.0 or208
    JR_EQF VGV_COL 12.0 or208
    JR_LTF VGV_W 30.0 or208
    JR_LTEQF VGV_W 70.0 else207_1
  or208:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_TAKE_LEFT
  else207_1:
  endif207:
  else186_2:
  endif186:
  else183_1:
  endif183:
    CALL EQ_STRING VGV_TAKE_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else209_1
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 60.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB211:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 60.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB212:
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 90.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB215:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer216
	DATA8 nos216
	DATA8 busy216
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer216 nos216
	JR_EQ8 0 nos216 motornotbusy216
  motorwaiting216:
	OUTPUT_TEST layer216 nos216 busy216
	JR_EQ8 busy216 0 motornotbusy216
	SLEEP
	JR motorwaiting216
  motornotbusy216:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 40.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB217:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 40.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB218:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB219:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer220
	DATA8 nos220
	DATA8 busy220
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer220 nos220
	JR_EQ8 0 nos220 motornotbusy220
  motorwaiting220:
	OUTPUT_TEST layer220 nos220 busy220
	JR_EQ8 busy220 0 motornotbusy220
	SLEEP
	JR motorwaiting220
  motornotbusy220:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 40.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB221:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 40.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB222:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB223:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB224:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 90.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB225:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB226:
    DATA32 milliseconds227
	MOVEF_32 1000.0 milliseconds227
	DATA32 timer227
	TIMER_WAIT milliseconds227 timer227
	TIMER_READY timer227
    WRITE32 ENDSUB_F_STOP_0:CALLSUB228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB228:
    JR endif209
  else209_1:
    CALL EQ_STRING VGV_TAKE_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else209_2
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 60.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB230:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 60.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB231:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 90.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB234:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer235
	DATA8 nos235
	DATA8 busy235
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer235 nos235
	JR_EQ8 0 nos235 motornotbusy235
  motorwaiting235:
	OUTPUT_TEST layer235 nos235 busy235
	JR_EQ8 busy235 0 motornotbusy235
	SLEEP
	JR motorwaiting235
  motornotbusy235:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 40.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB236:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 40.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB237:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB238:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer239
	DATA8 nos239
	DATA8 busy239
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer239 nos239
	JR_EQ8 0 nos239 motornotbusy239
  motorwaiting239:
	OUTPUT_TEST layer239 nos239 busy239
	JR_EQ8 busy239 0 motornotbusy239
	SLEEP
	JR motorwaiting239
  motornotbusy239:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 40.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB240 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB240:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 40.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB241:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB242:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB243:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 90.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB244:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB245:
    DATA32 milliseconds246
	MOVEF_32 1000.0 milliseconds246
	DATA32 timer246
	TIMER_WAIT milliseconds246 timer246
	TIMER_READY timer246
    WRITE32 ENDSUB_F_STOP_0:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB247:
  else209_2:
  endif209:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 15.0 VLV_MIN_POWER_12
    MOVEF_F 53.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB248:
    MOVEF_F 20.0 VLV_BASE_POWER_17
    MOVEF_F 15.0 VLV_MIN_POWER_17
    MOVEF_F 53.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB249:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB250:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 355.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB252:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB253:
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB254:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB255:
    CALL EQ_STRING VGV_IS_FIRE 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else256_1
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB258:
  else256_1:
  endif256:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 120.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB259:
    MOVEF_F 180.0 VLV_DEG_15
    MOVEF_F 30.0 VLV_POWER_15
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB260 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB260:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 15.0 VLV_MIN_POWER_17
    MOVEF_F 120.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB261:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB262:
    STRINGS DUPLICATE 'none' VGV_OBJECT
    MOVEF_F VGV_RIGHT_SENSOR VLV_PORT_5
    MOVEF_F 1.0 VLV_MODE_5
    MOVEF_F 400.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB263:
    MOVEF_F VLV_RESULT_5 VGV_R
    JR_LTEQF VGV_R 60.0 else264_1
    MOVEF_F VGV_RIGHT_SENSOR VLV_PORT_5
    MOVEF_F 2.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB265:
    MOVEF_F VLV_RESULT_5 VGV_G
    JR_LTEQF VGV_G 80.0 else266_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif266
  else266_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB269:
  else266_2:
  endif266:
    JR endif264
  else264_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else264_2
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 20.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB272:
    MOVEF_F VGV_RIGHT_SENSOR VLV_PORT_5
    MOVEF_F 4.0 VLV_MODE_5
    MOVEF_F 50.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB273:
    MOVEF_F VLV_RESULT_5 VGV_W
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 20.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB274:
    JR_LTEQF VGV_W 40.0 else275_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_TAKE_CHEM_IN_YELLOW
  else275_1:
  endif275:
  else264_2:
  endif264:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 245.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB276:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB277:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 250.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB278:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB279:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB280:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else281_1
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 85.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB283:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 90.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB284:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB285:
    STRINGS DUPLICATE 'none' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_SECOND_YELLOW_CHEM
    MOVEF_F VGV_LEFT_SENSOR VLV_PORT_5
    MOVEF_F 1.0 VLV_MODE_5
    MOVEF_F 200.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB286:
    MOVEF_F VLV_RESULT_5 VGV_R
    JR_LTEQF VGV_R 50.0 else287_1
    MOVEF_F VGV_LEFT_SENSOR VLV_PORT_5
    MOVEF_F 2.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB288:
    MOVEF_F VLV_RESULT_5 VGV_G
    JR_LTEQF VGV_G 60.0 else289_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif289
  else289_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB292:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 50.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB293:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB294:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB295:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB296:
  else289_2:
  endif289:
    JR endif287
  else287_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else287_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB298:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 70.0 else300_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VLV_FINISH_FORWARD_18
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB301:
  else300_1:
  endif300:
  else287_2:
  endif287:
    JR endif281
  else281_1:
    MOVEF_F 175.0 VLV_DEG_15
    MOVEF_F 30.0 VLV_POWER_15
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB302:
  else281_2:
  endif281:
    MOVEF_F 100.0 VLV_DEG_15
    MOVEF_F 30.0 VLV_POWER_15
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB303 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB303:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB304:
    MOVEF_F 105.0 VGV_A
  while305:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 300.0 endwhile305
  whilebody305:
    MOVEF_F VGV_A VLV_A_10
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB308:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 300.0 whilebody305
  endwhile305:
    MULF 40.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF 40.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB315:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB316:
    STRINGS DUPLICATE 'none' VGV_OBJECT
    MOVEF_F VGV_LEFT_SENSOR VLV_PORT_5
    MOVEF_F 1.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB317:
    MOVEF_F VLV_RESULT_5 VGV_R
    JR_LTEQF VGV_R 40.0 else318_1
    MOVEF_F VGV_LEFT_SENSOR VLV_PORT_5
    MOVEF_F 2.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB319:
    MOVEF_F VLV_RESULT_5 VGV_G
    JR_LTEQF VGV_G 50.0 else320_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif320
  else320_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB323:
  else320_2:
  endif320:
    JR endif318
  else318_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else318_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB325:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    STRINGS DUPLICATE 'False' VGV_CH
    JR_GTEQF VGV_ULTRA 75.0 else327_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif327
  else327_1:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 20.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB329 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB329:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB330 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB330:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB334:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB335:
    JR_GTEQF VGV_ULTRA 75.0 else336_1
    STRINGS DUPLICATE 'True' VGV_CH
  else336_1:
  endif336:
  else327_2:
  endif327:
    JR_GTEQF VGV_ULTRA 75.0 else337_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 80.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB338 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB338:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 80.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB339:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB340:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer341
	DATA8 nos341
	DATA8 busy341
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer341 nos341
	JR_EQ8 0 nos341 motornotbusy341
  motorwaiting341:
	OUTPUT_TEST layer341 nos341 busy341
	JR_EQ8 busy341 0 motornotbusy341
	SLEEP
	JR motorwaiting341
  motornotbusy341:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 160.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB342:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer343
	DATA8 nos343
	DATA8 busy343
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer343 nos343
	JR_EQ8 0 nos343 motornotbusy343
  motorwaiting343:
	OUTPUT_TEST layer343 nos343 busy343
	JR_EQ8 busy343 0 motornotbusy343
	SLEEP
	JR motorwaiting343
  motornotbusy343:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 160.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB345:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB346:
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB347:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB348:
  else337_1:
  endif337:
  else318_2:
  endif318:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 5.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB349:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB350 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB350:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 250.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB352:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 115.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB353:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB354:
    MOVEF_F 1200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB355:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB356:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 120.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB357:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB358:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_U
  while360:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 185.0 endwhile360
  whilebody360:
    MOVEF_F 95.0 VLV_A_10
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB363:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 185.0 whilebody360
  endwhile360:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 15.0 VLV_MIN_POWER_17
    MOVEF_F 120.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB366:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB367:
    STRINGS DUPLICATE 'none' VGV_OBJECT
    MOVEF_F VGV_LEFT_SENSOR VLV_PORT_5
    MOVEF_F 1.0 VLV_MODE_5
    MOVEF_F 200.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB368:
    MOVEF_F VLV_RESULT_5 VGV_R
    JR_LTEQF VGV_R 50.0 else369_1
    MOVEF_F VGV_LEFT_SENSOR VLV_PORT_5
    MOVEF_F 2.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB370:
    MOVEF_F VLV_RESULT_5 VGV_G
    JR_LTEQF VGV_G 80.0 else371_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif371
  else371_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB374:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 50.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB375:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB376:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB377:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB378:
  else371_2:
  endif371:
    JR endif369
  else369_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else369_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB380 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB380:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 90.0 else382_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VLV_FINISH_FORWARD_18
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB383:
  else382_1:
  endif382:
  else369_2:
  endif369:
    CALL EQ_STRING VGV_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or385
    CALL EQ_STRING VGV_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else384_1
  or385:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 80.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB388:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 70.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB389:
    JR endif384
  else384_1:
    MOVEF_F 80.0 VLV_DEG_15
    MOVEF_F 30.0 VLV_POWER_15
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB390:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 70.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB391:
  else384_2:
  endif384:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB392 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB392:
    STRINGS DUPLICATE 'False' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'none' VGV_OBJECT
    STRINGS DUPLICATE 'False' VGV_IS_ON_SECOND_BLUE
    MOVEF_F VGV_LEFT_SENSOR VLV_PORT_5
    MOVEF_F 1.0 VLV_MODE_5
    MOVEF_F 200.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB393 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB393:
    MOVEF_F VLV_RESULT_5 VGV_R
    JR_LTEQF VGV_R 50.0 else394_1
    MOVEF_F VGV_LEFT_SENSOR VLV_PORT_5
    MOVEF_F 2.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB395:
    MOVEF_F VLV_RESULT_5 VGV_G
    JR_LTEQF VGV_G 100.0 else396_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif396
  else396_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB399:
  else396_2:
  endif396:
    JR endif394
  else394_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else394_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB401:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 80.0 else403_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 145.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB404:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 145.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB405:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB406:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB407:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB409:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer410
	DATA8 nos410
	DATA8 busy410
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer410 nos410
	JR_EQ8 0 nos410 motornotbusy410
  motorwaiting410:
	OUTPUT_TEST layer410 nos410 busy410
	JR_EQ8 busy410 0 motornotbusy410
	SLEEP
	JR motorwaiting410
  motornotbusy410:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB411:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 35.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB412:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 35.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB413:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB414:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer415
	DATA8 nos415
	DATA8 busy415
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer415 nos415
	JR_EQ8 0 nos415 motornotbusy415
  motorwaiting415:
	OUTPUT_TEST layer415 nos415 busy415
	JR_EQ8 busy415 0 motornotbusy415
	SLEEP
	JR motorwaiting415
  motornotbusy415:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB416:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 40.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB417:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 40.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB418:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB419:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB420:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB421:
  else403_1:
  endif403:
  else394_2:
  endif394:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else422_1
    STRINGS DUPLICATE 'True' VGV_IS_ON_SECOND_BLUE
    MOVEF_F 40.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB424:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB425:
  while426:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 320.0 endwhile426
  whilebody426:
    MOVEF_F 95.0 VLV_A_10
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB429:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 320.0 whilebody426
  endwhile426:
    MOVEF_F 40.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 100.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB432:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB433:
    MOVEF_F VGV_LEFT_SENSOR VLV_PORT_5
    MOVEF_F 1.0 VLV_MODE_5
    MOVEF_F 200.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB434:
    MOVEF_F VLV_RESULT_5 VGV_R
    JR_LTEQF VGV_R 50.0 else435_1
    MOVEF_F VGV_LEFT_SENSOR VLV_PORT_5
    MOVEF_F 2.0 VLV_MODE_5
    MOVEF_F 0.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB436:
    MOVEF_F VLV_RESULT_5 VGV_G
    JR_LTEQF VGV_G 80.0 else437_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif437
  else437_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB440:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 50.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB441:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB442:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB443:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB444:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 50.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB445:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB446:
  else437_2:
  endif437:
    JR endif435
  else435_1:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB447:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 80.0 else449_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VLV_FINISH_FORWARD_18
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB450 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB450:
  else449_1:
  endif449:
  else435_2:
  endif435:
  else422_1:
  endif422:
    STRINGS VALUE_FORMATTED VGV_MEN_COUNT '%g' 99 S.3
    CALL TEXT.APPEND S.3 ' ' S.2
    STRINGS VALUE_FORMATTED VGV_FIRE_COUNT '%g' 99 S.3
    CALL TEXT.APPEND S.2 S.3 S.1
    CALL TEXT.APPEND S.1 ' ' S.0
    CALL TEXT.APPEND S.0 VGV_CHEM VGV_T
    STRINGS DUPLICATE VGV_T VLV_TEXT_6
    WRITE32 ENDSUB_F_TEXT_TO_SCREEN_1:CALLSUB457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TEXT_TO_SCREEN_1
CALLSUB457:
    STRINGS DUPLICATE 'none' VGV_WHITE_OBJECT
    JR_GTEQF VGV_MEN_COUNT 2.0 else458_1
    STRINGS DUPLICATE 'man' VGV_WHITE_OBJECT
    JR endif458
  else458_1:
    JR_GTEQF VGV_FIRE_COUNT 2.0 else458_2
    STRINGS DUPLICATE 'fire' VGV_WHITE_OBJECT
    JR endif458
  else458_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else458_3
    STRINGS DUPLICATE 'chem' VGV_WHITE_OBJECT
  else458_3:
  endif458:
    CALL EQ_STRING VGV_WHITE_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else460_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
  else460_1:
  endif460:
    CALL EQ_STRING VGV_WHITE_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or464
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or464
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else463_1
  or464:
    CALL EQ_STRING VGV_IS_ON_SECOND_BLUE 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else468_1
    CALL EQ_STRING VGV_IS_SECOND_BLUE_OBJECT_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else470_1
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 30.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB472:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 30.0 VLV_MIN_POWER_17
    MOVEF_F 50.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB473:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    JR endif470
  else470_1:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 10.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB475:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB476 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB476:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB477 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB477:
  else470_2:
  endif470:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB479:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB480:
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB481:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB482:
    JR endif468
  else468_1:
    CALL EQ_STRING VGV_IS_FIRST_BLUE_OBJECT_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else483_1
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB485:
    MOVEF_F 215.0 VLV_DEG_15
    MOVEF_F 30.0 VLV_POWER_15
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB486:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 100.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB487 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB487:
    JR endif483
  else483_1:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 75.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB488:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 75.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB489:
  else483_2:
  endif483:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB490:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB492:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB493:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB494:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB495:
  else468_2:
  endif468:
    MOVEF_F 100.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB496:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB497:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB498:
    DATA8 layer499
	DATA8 no499
	DATA8 mode8499
	
	MOVEF_8 VGV_LINE no499
	SUB8 no499 1 no499
	DIV8 no499 4 layer499
	MATH MOD8 no499 4 no499

	MOVEF_8 2.0 mode8499
	
	INPUT_DEVICE READY_RAW layer499 no499 0 mode8499 0
  while500:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 130.0 endwhile500
  whilebody500:
    MOVEF_F 30.0 VLV_POWER_14
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB503:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 130.0 whilebody500
  endwhile500:
  while506:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_EQF F.0 4.0 endwhile506
  whilebody506:
    MOVEF_F 30.0 VLV_POWER_14
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB508:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_NEQF F.0 4.0 whilebody506
  endwhile506:
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else510_1
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else510_1
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 100.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB513:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB514:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB515:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB516:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 30.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB517:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 30.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB518:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB519:
    JR endif510
  else510_1:
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else510_2
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 100.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB521 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB521:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB522:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB523 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB523:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB524:
    JR endif510
  else510_2:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else510_3
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 170.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB526 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB526:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB527:
  else510_3:
  endif510:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else528_1
    DATA8 layer530
	DATA8 no530
	DATA8 mode8530
	
	MOVEF_8 VGV_LINE no530
	SUB8 no530 1 no530
	DIV8 no530 4 layer530
	MATH MOD8 no530 4 no530

	MOVEF_8 2.0 mode8530
	
	INPUT_DEVICE READY_RAW layer530 no530 0 mode8530 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB531:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB532:
    MOVEF_F 350.0 VLV_DEG_15
    MOVEF_F 30.0 VLV_POWER_15
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB533:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 100.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB534:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB535:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB536:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB538:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer539
	DATA8 nos539
	DATA8 busy539
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer539 nos539
	JR_EQ8 0 nos539 motornotbusy539
  motorwaiting539:
	OUTPUT_TEST layer539 nos539 busy539
	JR_EQ8 busy539 0 motornotbusy539
	SLEEP
	JR motorwaiting539
  motornotbusy539:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 65.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB540 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB540:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 65.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB541:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB542 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB542:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer543
	DATA8 nos543
	DATA8 busy543
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer543 nos543
	JR_EQ8 0 nos543 motornotbusy543
  motorwaiting543:
	OUTPUT_TEST layer543 nos543 busy543
	JR_EQ8 busy543 0 motornotbusy543
	SLEEP
	JR motorwaiting543
  motornotbusy543:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 40.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB544 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB544:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 40.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB545:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB546 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB546:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB547:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 185.0 'True'

	DATA8 layer551
	DATA8 nos551
	DATA8 busy551
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer551 nos551
	JR_EQ8 0 nos551 motornotbusy551
  motorwaiting551:
	OUTPUT_TEST layer551 nos551 busy551
	JR_EQ8 busy551 0 motornotbusy551
	SLEEP
	JR motorwaiting551
  motornotbusy551:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB552 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB552:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB553 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB553:
    MOVEF_F 100.0 VLV_DEG_15
    MOVEF_F 30.0 VLV_POWER_15
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB554:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 100.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB555 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB555:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB556 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB556:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 200.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB557:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB558:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 210.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB559:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB560:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB561 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB561:
    MOVEF_F 100.0 VLV_DEG_15
    MOVEF_F 30.0 VLV_POWER_15
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB562 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB562:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB563 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB563:
  else528_1:
  endif528:
    CALL EQ_STRING VGV_WHITE_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else564_1
    DATA8 layer566
	DATA8 no566
	DATA8 mode8566
	
	MOVEF_8 VGV_LINE no566
	SUB8 no566 1 no566
	DIV8 no566 4 layer566
	MATH MOD8 no566 4 no566

	MOVEF_8 0.0 mode8566
	
	INPUT_DEVICE READY_RAW layer566 no566 0 mode8566 0
    MOVEF_F 100.0 VGV_MINUS_DEG
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else567_1
    ADDF VGV_MINUS_DEG 200.0 VGV_MINUS_DEG
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB570 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB570:
  else567_1:
  endif567:
    SUBF 420.0 VGV_MINUS_DEG VLV_DEG_15
    MOVEF_F 30.0 VLV_POWER_15
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB572:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 100.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB573:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB574:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB575:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB576:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB577:
    STRINGS DUPLICATE 'False' VGV_CH
    MOVEF_F VGV_RIGHT_SENSOR VLV_PORT_5
    MOVEF_F 4.0 VLV_MODE_5
    MOVEF_F 200.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB578:
    MOVEF_F VLV_RESULT_5 VGV_W
    JR_LTEQF VGV_W 40.0 else579_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif579
  else579_1:
    DATA8 layer580
	DATA8 no580
	DATA8 mode8580
	
	MOVEF_8 VGV_RIGHT_SENSOR no580
	SUB8 no580 1 no580
	DIV8 no580 4 layer580
	MATH MOD8 no580 4 no580

	MOVEF_8 0.0 mode8580
	
	INPUT_DEVICE READY_RAW layer580 no580 0 mode8580 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 25.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB582:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB583:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 F.0
    JR_NEQF F.0 12.0 else584_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif584
  else584_1:
    MOVEF_F VGV_RIGHT_SENSOR VLV_PORT_5
    MOVEF_F 4.0 VLV_MODE_5
    MOVEF_F 300.0 VLV_D_5
    WRITE32 ENDSUB_F_READ_MODE_4:CALLSUB586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_MODE_4
CALLSUB586:
    MOVEF_F VLV_RESULT_5 VGV_W
    JR_LTEQF VGV_W 40.0 else587_1
    STRINGS DUPLICATE 'True' VGV_CH
  else587_1:
  endif587:
  else584_2:
  endif584:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 25.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB588:
  else579_2:
  endif579:
    CALL EQ_STRING VGV_CH 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else589_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB591:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 80.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB592:
    MOVEF_F 30.0 VLV_DEG_15
    MOVEF_F -30.0 VLV_POWER_15
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB593:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 80.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB594:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB595:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB596:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 100.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB597 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB597:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer598
	DATA8 nos598
	DATA8 busy598
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer598 nos598
	JR_EQ8 0 nos598 motornotbusy598
  motorwaiting598:
	OUTPUT_TEST layer598 nos598 busy598
	JR_EQ8 busy598 0 motornotbusy598
	SLEEP
	JR motorwaiting598
  motornotbusy598:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 35.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB599:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 35.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB600:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB601:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer602
	DATA8 nos602
	DATA8 busy602
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer602 nos602
	JR_EQ8 0 nos602 motornotbusy602
  motorwaiting602:
	OUTPUT_TEST layer602 nos602 busy602
	JR_EQ8 busy602 0 motornotbusy602
	SLEEP
	JR motorwaiting602
  motornotbusy602:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB603:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 35.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB604:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 35.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB605:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB606:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB607:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 90.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB609:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB610:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB611 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB611:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 490.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB612 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB612:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB613:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 120.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB614:
    JR endif589
  else589_1:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 230.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB616:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer617
	DATA8 nos617
	DATA8 busy617
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer617 nos617
	JR_EQ8 0 nos617 motornotbusy617
  motorwaiting617:
	OUTPUT_TEST layer617 nos617 busy617
	JR_EQ8 busy617 0 motornotbusy617
	SLEEP
	JR motorwaiting617
  motornotbusy617:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB618:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 60.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB619:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 60.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB620:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB621:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 70.0 VLV_DEG_16
    MOVEF_F 25.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB622:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer623
	DATA8 nos623
	DATA8 busy623
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer623 nos623
	JR_EQ8 0 nos623 motornotbusy623
  motorwaiting623:
	OUTPUT_TEST layer623 nos623 busy623
	JR_EQ8 busy623 0 motornotbusy623
	SLEEP
	JR motorwaiting623
  motornotbusy623:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 230.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB625:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 80.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB626 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB626:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 110.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB627:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 170.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB628:
  else589_2:
  endif589:
    JR endif564
  else564_1:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else564_2
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB630 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB630:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 50.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB631 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB631:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB632 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB632:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB633:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 140.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB634:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB635:
  else564_2:
  endif564:
    MOVEF_F 200.0 VLV_DEG_15
    MOVEF_F 30.0 VLV_POWER_15
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB636 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB636:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB637 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB637:
  while638:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 600.0 endwhile638
  whilebody638:
    MOVEF_F 480.0 VLV_A_10
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB641:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 600.0 whilebody638
  endwhile638:
    JR endif463
  else463_1:
    CALL EQ_STRING VGV_IS_ON_SECOND_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else644_1
    MOVEF_F 40.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB646 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB646:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB647:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_A
    MOVEF_F 510.0 VGV_DEG
    CALL EQ_STRING VGV_IS_FIRST_BLUE_OBJECT_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else649_1
    SUBF VGV_DEG 290.0 VGV_DEG
  else649_1:
  endif649:
  while652:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 200.0 F.1
    JR_GTEQF F.0 F.1 endwhile652
  whilebody652:
    MOVEF_F VGV_A VLV_A_10
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB656 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB656:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 200.0 F.1
    JR_LTF F.0 F.1 whilebody652
  endwhile652:
    MOVEF_F 40.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 100.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB660:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB661 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB661:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB662:
  else644_1:
  endif644:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB663:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB664:
    DATA8 layer665
	DATA8 no665
	DATA8 mode8665
	
	MOVEF_8 VGV_LINE no665
	SUB8 no665 1 no665
	DIV8 no665 4 layer665
	MATH MOD8 no665 4 no665

	MOVEF_8 0.0 mode8665
	
	INPUT_DEVICE READY_RAW layer665 no665 0 mode8665 0
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_A
  while667:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 330.0 endwhile667
  whilebody667:
    MOVEF_F VGV_A VLV_A_10
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB670:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 330.0 whilebody667
  endwhile667:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB673 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB673:
    MOVEF_F VLV_PERCENT_7 VGV_P
  while674:
    JR_LTEQF VGV_P 20.0 endwhile674
  whilebody674:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB675 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB675:
    MOVEF_F VLV_PERCENT_7 VGV_P
    MOVEF_F VGV_A VLV_A_10
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB676:
    JR_GTF VGV_P 20.0 whilebody674
  endwhile674:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB677 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB677:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_16
    MOVEF_F 200.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'Fales' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB678 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB678:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB681:
    MOVEF_F VLV_PERCENT_7 VGV_P
  while682:
    JR_GTEQF VGV_P 20.0 endwhile682
  whilebody682:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB683:
    MOVEF_F VLV_PERCENT_7 VGV_P
    JR_LTF VGV_P 20.0 whilebody682
  endwhile682:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer685
	DATA8 nos685
	DATA8 busy685
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer685 nos685
	JR_EQ8 0 nos685 motornotbusy685
  motorwaiting685:
	OUTPUT_TEST layer685 nos685 busy685
	JR_EQ8 busy685 0 motornotbusy685
	SLEEP
	JR motorwaiting685
  motornotbusy685:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB686:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB687 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB687:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB688:
  while689:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 200.0 endwhile689
  whilebody689:
    MOVEF_F -100.0 VLV_L_9
    WRITE32 ENDSUB_F_LINE_SLOW_1:CALLSUB692 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_SLOW_1
CALLSUB692:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 200.0 whilebody689
  endwhile689:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB695:
    MOVEF_F VLV_PERCENT_7 VGV_P
  while696:
    JR_LTEQF VGV_P 10.0 endwhile696
  whilebody696:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB697 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB697:
    MOVEF_F VLV_PERCENT_7 VGV_P
    MOVEF_F -100.0 VLV_L_9
    WRITE32 ENDSUB_F_LINE_SLOW_1:CALLSUB698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_SLOW_1
CALLSUB698:
    JR_GTF VGV_P 10.0 whilebody696
  endwhile696:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB699 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB699:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 390.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB700 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB700:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 42.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB701:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 42.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB702:
  else463_2:
  endif463:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB703:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer704
	DATA8 nos704
	DATA8 busy704
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer704 nos704
	JR_EQ8 0 nos704 motornotbusy704
  motorwaiting704:
	OUTPUT_TEST layer704 nos704 busy704
	JR_EQ8 busy704 0 motornotbusy704
	SLEEP
	JR motorwaiting704
  motornotbusy704:
    CALL EQ_STRING VGV_START 'left' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else705_1
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_26
    WRITE32 ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:CALLSUB707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FROM_PROTECTED_TO_FINISH_1
CALLSUB707:
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_27
    WRITE32 ENDSUB_F_TAKE_CUBES_1:CALLSUB708 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_1
CALLSUB708:
    STRINGS DUPLICATE VGV_BROWN_MAN VLV_LONG_24
    STRINGS DUPLICATE VGV_RED_MAN VLV_NEAR_24
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_24
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_24
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB709 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB709:
    STRINGS DUPLICATE VGV_WHITE_MAN VLV_LONG_24
    STRINGS DUPLICATE VGV_YELLOW_MAN VLV_NEAR_24
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_24
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_24
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB710 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB710:
    STRINGS DUPLICATE VGV_BLUE_MAN VLV_LONG_24
    STRINGS DUPLICATE VGV_GREEN_MAN VLV_NEAR_24
    STRINGS DUPLICATE 'False' VLV_SHOULD_MOVE_BACKWARD_24
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_24
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB711 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB711:
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_28
    WRITE32 ENDSUB_F_FINISH_AFTER_DELIVERIES_1:CALLSUB712 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_DELIVERIES_1
CALLSUB712:
    JR endif705
  else705_1:
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_26
    WRITE32 ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:CALLSUB713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FROM_PROTECTED_TO_FINISH_1
CALLSUB713:
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_27
    WRITE32 ENDSUB_F_TAKE_CUBES_1:CALLSUB714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_1
CALLSUB714:
    STRINGS DUPLICATE VGV_BLUE_MAN VLV_LONG_24
    STRINGS DUPLICATE VGV_GREEN_MAN VLV_NEAR_24
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_24
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_24
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB715:
    STRINGS DUPLICATE VGV_WHITE_MAN VLV_LONG_24
    STRINGS DUPLICATE VGV_YELLOW_MAN VLV_NEAR_24
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_24
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_24
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB716 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB716:
    STRINGS DUPLICATE VGV_BROWN_MAN VLV_LONG_24
    STRINGS DUPLICATE VGV_RED_MAN VLV_NEAR_24
    STRINGS DUPLICATE 'False' VLV_SHOULD_MOVE_BACKWARD_24
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_24
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB717 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB717:
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_28
    WRITE32 ENDSUB_F_FINISH_AFTER_DELIVERIES_1:CALLSUB718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_DELIVERIES_1
CALLSUB718:
  else705_2:
  endif705:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 20.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB719:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB720:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB721 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB721:
    STRINGS DUPLICATE 'True' VLV_TO_DELAY_29
    WRITE32 ENDSUB_F_SHOW_TIME_1:CALLSUB722 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SHOW_TIME_1
CALLSUB722:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_MOVEMENT_INIT_1:
    MULF VLV_POWER_1 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF VLV_POWER_1 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
RETSUB_F_MOVEMENT_INIT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVEMENT_INIT_1:
SUB_F_DELAY_1:
    DATA32 milliseconds727
	MOVEF_32 VLV_TIME_2 milliseconds727
	DATA32 timer727
	TIMER_WAIT milliseconds727 timer727
	TIMER_READY timer727
RETSUB_F_DELAY_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_1:
SUB_F_RESET_0:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 2
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_STOP_0:
    OUTPUT_POWER 0 3 0
	OUTPUT_STOP 0 3 1
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_READ_MODE_4:
    CALL SENSOR.GETMODE VLV_PORT_5 VLV_CURRENT_MODE_5
    JR_EQF VLV_CURRENT_MODE_5 VLV_MODE_5 else732_1
    DATA8 layer733
	DATA8 no733
	DATA8 mode8733
	
	MOVEF_8 VLV_PORT_5 no733
	SUB8 no733 1 no733
	DIV8 no733 4 layer733
	MATH MOD8 no733 4 no733

	MOVEF_8 VLV_MODE_5 mode8733
	
	INPUT_DEVICE READY_RAW layer733 no733 0 mode8733 0
    DATA8 layer734
	DATA8 no734	
	MOVEF_8 VLV_PORT_5 no734
	SUB8 no734 1 no734
	DIV8 no734 4 layer734
	MATH MOD8 no734 4 no734 
	INPUT_READY layer734 no734
  else732_1:
  endif732:
    JR_LTEQF VLV_D_5 0.0 else735_1
    MOVEF_F VLV_D_5 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB736:
  else735_1:
  endif735:
    CALL SENSOR.READRAWVALUE VLV_PORT_5 0.0 VLV_RESULT_5
    DATA8 layer738
	DATA8 no738
	DATA8 mode8738
	
	MOVEF_8 VLV_PORT_5 no738
	SUB8 no738 1 no738
	DIV8 no738 4 layer738
	MATH MOD8 no738 4 no738

	MOVEF_8 1.0 mode8738
	
	INPUT_DEVICE READY_RAW layer738 no738 0 mode8738 0
RETSUB_F_READ_MODE_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_READ_MODE_4:
SUB_F_TEXT_TO_SCREEN_1:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 VLV_TEXT_6
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_TEXT_TO_SCREEN_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TEXT_TO_SCREEN_1:
SUB_F_READ_PERCENT_1:
    CALL SENSOR.GETMODE VGV_LINE F.0
    JR_EQF F.0 0.0 else743_1
    DATA8 layer745
	DATA8 no745
	DATA8 mode8745
	
	MOVEF_8 VGV_LINE no745
	SUB8 no745 1 no745
	DIV8 no745 4 layer745
	MATH MOD8 no745 4 no745

	MOVEF_8 0.0 mode8745
	
	INPUT_DEVICE READY_RAW layer745 no745 0 mode8745 0
    DATA8 layer746
	DATA8 no746	
	MOVEF_8 VGV_LINE no746
	SUB8 no746 1 no746
	DIV8 no746 4 layer746
	MATH MOD8 no746 4 no746 
	INPUT_READY layer746 no746
  else743_1:
  endif743:
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf750
    DATA8 flag750
    DIVF F.1 F.2 tmpf750
    CP_EQF 0.0 F.2 flag750
    SELECTF flag750 0.0 tmpf750 F.0

    MULF F.0 100.0 VLV_PERCENT_7
RETSUB_F_READ_PERCENT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_READ_PERCENT_1:
SUB_F_LINE_1:
    MOVEF_F 0.0 VLV_CUR_8
    JR_NEQF VLV_L_8 -100.0 else752_1
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB753:
    MOVEF_F VLV_PERCENT_7 VLV_CUR_8
    JR endif752
  else752_1:
    MOVEF_F VLV_L_8 VLV_CUR_8
  else752_2:
  endif752:
    SUBF VLV_CUR_8 50.0 VLV_ERR_8
    SUBF VLV_ERR_8 VGV_LAST_ERR VLV_DIFF_8
    MULF VLV_ERR_8 1.0 F.0
    MULF VLV_DIFF_8 7.0 F.1
    ADDF F.0 F.1 VLV_DELTA_8
    SUBF 80.0 VLV_DELTA_8 VLV_LEFT_POWER_8
    ADDF 80.0 VLV_DELTA_8 VLV_RIGHT_POWER_8
    MULF VLV_LEFT_POWER_8 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_8 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_8 VGV_LAST_ERR
    DATA32 milliseconds765
	MOVEF_32 5.0 milliseconds765
	DATA32 timer765
	TIMER_WAIT milliseconds765 timer765
	TIMER_READY timer765
RETSUB_F_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_1:
SUB_F_LINE_SLOW_1:
    MOVEF_F 0.0 VLV_CUR_9
    JR_NEQF VLV_L_9 -100.0 else766_1
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB767 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB767:
    MOVEF_F VLV_PERCENT_7 VLV_CUR_9
    JR endif766
  else766_1:
    MOVEF_F VLV_L_9 VLV_CUR_9
  else766_2:
  endif766:
    SUBF VLV_CUR_9 50.0 VLV_ERR_9
    SUBF VLV_ERR_9 VGV_LAST_ERR VLV_DIFF_9
    MULF VLV_ERR_9 0.5 F.0
    MULF VLV_DIFF_9 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_9
    SUBF 30.0 VLV_DELTA_9 VLV_LEFT_POWER_9
    ADDF 30.0 VLV_DELTA_9 VLV_RIGHT_POWER_9
    MULF VLV_LEFT_POWER_9 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_9 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_9 VGV_LAST_ERR
    DATA32 milliseconds779
	MOVEF_32 5.0 milliseconds779
	DATA32 timer779
	TIMER_WAIT milliseconds779 timer779
	TIMER_READY timer779
RETSUB_F_LINE_SLOW_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_SLOW_1:
SUB_F_ULTRA_LINE_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VLV_L_10
    SUBF VLV_L_10 VLV_A_10 VLV_ERR_10
    SUBF VLV_ERR_10 VGV_LAST_ERR VLV_DIFF_10
    MULF VLV_ERR_10 0.8 F.0
    MULF VLV_DIFF_10 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_10
    SUBF 40.0 VLV_DELTA_10 VLV_LEFT_POWER_10
    ADDF 40.0 VLV_DELTA_10 VLV_RIGHT_POWER_10
    MULF VLV_LEFT_POWER_10 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_10 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_10 VGV_LAST_ERR
RETSUB_F_ULTRA_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRA_LINE_1:
SUB_F_SPEEDUP_4:
    MOVEF_F 15.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB792 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB792:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB793 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB793:
    TIMER_READ timeMC2
    MOVEF_F 0.0 VLV_L_12
  while795:
    JR_GTEQF VLV_L_12 VLV_DEG_12 endwhile795
  whilebody795:
    TIMER_READ timeMC2tmp
	SUB32 timeMC2tmp timeMC2 timeMC2tmp
	MOVE32_F timeMC2tmp F.0
    JR_LTEQF F.0 1000.0 else796_1
    JR_GTEQF VLV_L_12 20.0 else796_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB798 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB798:
    ADDF VLV_MIN_POWER_12 5.0 VLV_MIN_POWER_12
    TIMER_READ timeMC2
  else796_1:
  endif796:
    DATAF tmpf801
    DATA8 flag801
    DIVF VLV_L_12 VLV_DEG_12 tmpf801
    CP_EQF 0.0 VLV_DEG_12 flag801
    SELECTF flag801 0.0 tmpf801 VLV_P_12

    SUBF VLV_BASE_POWER_12 VLV_MIN_POWER_12 F.1
    MULF F.1 VLV_P_12 F.0
    ADDF F.0 VLV_MIN_POWER_12 VLV_POWER_12
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_12 VLV_L_12
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_12 VLV_R_12
    SUBF VLV_L_12 VLV_R_12 F.0
    MULF F.0 VLV_P_12 VLV_DELTA_12
    SUBF VLV_POWER_12 VLV_DELTA_12 VLV_LEFT_POWER_12
    ADDF VLV_POWER_12 VLV_DELTA_12 VLV_RIGHT_POWER_12
    MULF VLV_LEFT_POWER_12 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_12 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_12 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_12 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    JR_LTF VLV_L_12 VLV_DEG_12 whilebody795
  endwhile795:
RETSUB_F_SPEEDUP_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPEEDUP_4:
SUB_F_SYNC_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_14
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_14
    SUBF VLV_L_14 VLV_R_14 VLV_ERR_14
    SUBF VLV_ERR_14 VGV_LAST_ERR VLV_DIFF_14
    MULF VLV_ERR_14 1.0 F.0
    MULF VLV_DIFF_14 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_14
    SUBF VLV_POWER_14 VLV_DELTA_14 VLV_LEFT_POWER_14
    ADDF VLV_POWER_14 VLV_DELTA_14 VLV_RIGHT_POWER_14
    MULF VLV_LEFT_POWER_14 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_14 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_14 VGV_LAST_ERR
RETSUB_F_SYNC_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SYNC_1:
SUB_F_FORWARD_DEG_2:
    MOVEF_F VLV_POWER_15 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB836:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB837:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_15
  while840:
    MATH ABS VLV_L_15 F.0
    MATH ABS VLV_DEG_15 F.1
    JR_GTEQF F.0 F.1 endwhile840
  whilebody840:
    MOVEF_F VLV_POWER_15 VLV_POWER_14
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB843 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB843:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_15
    MATH ABS VLV_L_15 F.0
    MATH ABS VLV_DEG_15 F.1
    JR_LTF F.0 F.1 whilebody840
  endwhile840:
RETSUB_F_FORWARD_DEG_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FORWARD_DEG_2:
SUB_F_MOVE_MOTOR_7:
    MOVEF_F VLV_DEG_16 VLV_NORMAL_DEG_16
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_16
    MOVEF_F 0.0 VLV_ZAME_DEG_16
    CALL EQ_STRING VLV_ACCELERATION_16 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else848_1
    DATAF tmpf850
    DATA8 flag850
    DIVF VLV_DEG_16 2.0 tmpf850
    CP_EQF 0.0 2.0 flag850
    SELECTF flag850 0.0 tmpf850 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag852
	CP_LTF F.0 120.0 flag852
	SELECTF flag852 F.0 120.0 VLV_ACCELERATION_DEG_16
    SUBF VLV_NORMAL_DEG_16 VLV_ACCELERATION_DEG_16 VLV_NORMAL_DEG_16
  else848_1:
  endif848:
    CALL EQ_STRING VLV_ZAME_16 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else854_1
    DATAF tmpf856
    DATA8 flag856
    DIVF VLV_DEG_16 2.0 tmpf856
    CP_EQF 0.0 2.0 flag856
    SELECTF flag856 0.0 tmpf856 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag858
	CP_LTF F.0 120.0 flag858
	SELECTF flag858 F.0 120.0 VLV_ZAME_DEG_16
    SUBF VLV_NORMAL_DEG_16 VLV_ZAME_DEG_16 VLV_NORMAL_DEG_16
  else854_1:
  endif854:
    CALL EQ_STRING VLV_ACCELERATION_16 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else860_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_16
    MOVEF_F 0.0 VLV_M_16
    MOVEF_F 10.0 VLV_MIN_POWER_16
    TIMER_READ timeMC1
  while864:
    JR_GTEQF VLV_M_16 VLV_ACCELERATION_DEG_16 endwhile864
  whilebody864:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTEQF F.0 700.0 else865_1
    JR_GTEQF VLV_M_16 20.0 else865_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB867 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB867:
    ADDF VLV_MIN_POWER_16 5.0 VLV_MIN_POWER_16
    MOVEF_F VLV_ACCELERATION_DEG_16 VLV_ACCELERATION_DEG_16
    TIMER_READ timeMC1
  else865_1:
  endif865:
    DATAF tmpf870
    DATA8 flag870
    DIVF VLV_M_16 VLV_ACCELERATION_DEG_16 tmpf870
    CP_EQF 0.0 VLV_ACCELERATION_DEG_16 flag870
    SELECTF flag870 0.0 tmpf870 VLV_P_16

    SUBF VLV_MAX_POWER_16 VLV_MIN_POWER_16 F.1
    MULF F.1 VLV_P_16 F.0
    ADDF F.0 VLV_MIN_POWER_16 VLV_POWER_16
    MULF VLV_POWER_16 VLV_FORWARD_16 F.0
    CALL MOTOR.START VLV_MOTOR_16 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_16 F.0
    MULF F.0 VLV_FORWARD_16 VLV_M_16
    DATA32 milliseconds878
	MOVEF_32 10.0 milliseconds878
	DATA32 timer878
	TIMER_WAIT milliseconds878 timer878
	TIMER_READY timer878
    JR_LTF VLV_M_16 VLV_ACCELERATION_DEG_16 whilebody864
  endwhile864:
  else860_1:
  endif860:
    JR_LTEQF VLV_NORMAL_DEG_16 0.0 else879_1
    MULF VLV_MAX_POWER_16 VLV_FORWARD_16 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_16 F.0 0.0 VLV_NORMAL_DEG_16 0.0 'False' 

	DATA8 layer881
	DATA8 nos881
	DATA8 busy881
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_16 layer881 nos881
	JR_EQ8 0 nos881 motornotbusy881
  motorwaiting881:
	OUTPUT_TEST layer881 nos881 busy881
	JR_EQ8 busy881 0 motornotbusy881
	SLEEP
	JR motorwaiting881
  motornotbusy881:
  else879_1:
  endif879:
    CALL EQ_STRING VLV_ZAME_16 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else882_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_16
    MOVEF_F 0.0 VLV_M_16
  while885:
    JR_GTEQF VLV_M_16 VLV_ZAME_DEG_16 endwhile885
  whilebody885:
    DATAF tmpf886
    DATA8 flag886
    DIVF VLV_M_16 VLV_ZAME_DEG_16 tmpf886
    CP_EQF 0.0 VLV_ZAME_DEG_16 flag886
    SELECTF flag886 0.0 tmpf886 F.0

    SUBF 1.0 F.0 VLV_P_16
    SUBF VLV_MAX_POWER_16 10.0 F.1
    MULF F.1 VLV_P_16 F.0
    ADDF F.0 10.0 VLV_POWER_16
    MULF VLV_POWER_16 VLV_FORWARD_16 F.0
    CALL MOTOR.START VLV_MOTOR_16 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_16 F.0
    MULF F.0 VLV_FORWARD_16 VLV_M_16
    DATA32 milliseconds895
	MOVEF_32 10.0 milliseconds895
	DATA32 timer895
	TIMER_WAIT milliseconds895 timer895
	TIMER_READY timer895
    JR_LTF VLV_M_16 VLV_ZAME_DEG_16 whilebody885
  endwhile885:
  else882_1:
  endif882:
    CALL EQ_STRING VLV_TO_STOP_16 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else896_1
    CALL MOTOR.STOP VLV_MOTOR_16 'True'
  else896_1:
  endif896:
RETSUB_F_MOVE_MOTOR_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_MOTOR_7:
SUB_F_ZAME_4:
    MOVEF_F VLV_BASE_POWER_17 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB899 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB899:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB900 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB900:
    MOVEF_F 0.0 VLV_L_17
  while901:
    JR_GTEQF VLV_L_17 VLV_DEG_17 endwhile901
  whilebody901:
    DATAF tmpf902
    DATA8 flag902
    DIVF VLV_L_17 VLV_DEG_17 tmpf902
    CP_EQF 0.0 VLV_DEG_17 flag902
    SELECTF flag902 0.0 tmpf902 VLV_P_17

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_17 VLV_L_17
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_17 VLV_R_17
    SUBF VLV_L_17 VLV_R_17 F.0
    SUBF 1.0 VLV_P_17 F.1
    MULF F.0 F.1 VLV_DELTA_17
    SUBF VLV_BASE_POWER_17 VLV_MIN_POWER_17 F.1
    SUBF 1.0 VLV_P_17 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_17 VLV_POWER_17
    SUBF VLV_POWER_17 VLV_DELTA_17 VLV_LEFT_POWER_17
    ADDF VLV_POWER_17 VLV_DELTA_17 VLV_RIGHT_POWER_17
    MULF VLV_LEFT_POWER_17 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_17 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_17 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_17 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds924
	MOVEF_32 10.0 milliseconds924
	DATA32 timer924
	TIMER_WAIT milliseconds924 timer924
	TIMER_READY timer924
    JR_LTF VLV_L_17 VLV_DEG_17 whilebody901
  endwhile901:
RETSUB_F_ZAME_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAME_4:
SUB_F_TAKE_CHEM_ON_LEFT_1:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 80.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB925 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB925:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 80.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB926 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB926:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB927 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB927:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer928
	DATA8 nos928
	DATA8 busy928
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer928 nos928
	JR_EQ8 0 nos928 motornotbusy928
  motorwaiting928:
	OUTPUT_TEST layer928 nos928 busy928
	JR_EQ8 busy928 0 motornotbusy928
	SLEEP
	JR motorwaiting928
  motornotbusy928:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_16
    MOVEF_F 130.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB929 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB929:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer930
	DATA8 nos930
	DATA8 busy930
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer930 nos930
	JR_EQ8 0 nos930 motornotbusy930
  motorwaiting930:
	OUTPUT_TEST layer930 nos930 busy930
	JR_EQ8 busy930 0 motornotbusy930
	SLEEP
	JR motorwaiting930
  motornotbusy930:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_16
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_16
    MOVEF_F 125.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB932 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB932:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB933 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB933:
    CALL EQ_STRING VLV_FINISH_FORWARD_18 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else934_1
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 160.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB936 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB936:
    JR endif934
  else934_1:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 30.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB937 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB937:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 30.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB938 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB938:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB939 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB939:
  else934_2:
  endif934:
RETSUB_F_TAKE_CHEM_ON_LEFT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_1:
SUB_F_OPEN_CUBES_1:
    MULF 50.0 VLV_COEF_19 F.0
    CALL MOTOR.START VGV_WATER_MOTOR F.0
    DATA32 milliseconds942
	MOVEF_32 500.0 milliseconds942
	DATA32 timer942
	TIMER_WAIT milliseconds942 timer942
	TIMER_READY timer942
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
RETSUB_F_OPEN_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_1:
SUB_F_CLOSE_CUBES_1:
    MULF -30.0 VLV_COEF_20 F.0
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR F.0 0.0 90.0 0.0 'True' 

	DATA8 layer945
	DATA8 nos945
	DATA8 busy945
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer945 nos945
	JR_EQ8 0 nos945 motornotbusy945
  motorwaiting945:
	OUTPUT_TEST layer945 nos945 busy945
	JR_EQ8 busy945 0 motornotbusy945
	SLEEP
	JR motorwaiting945
  motornotbusy945:
RETSUB_F_CLOSE_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_1:
SUB_F_DELIVER_LONG_1:
    CALL EQ_STRING VLV_IS_INVERTED_21 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else946_1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOT_21
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_21
    MOVEF_F 1.0 VLV_COEF_21
    JR endif946
  else946_1:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOT_21
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_21
    MOVEF_F -1.0 VLV_COEF_21
  else946_2:
  endif946:
    JR_NEQF VGV_CUBES_COUNT 2.0 else948_1
    MOVEF_F VLV_COEF_21 VLV_COEF_19
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB949 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB949:
    STRINGS DUPLICATE VLV_MOT_21 VLV_MOTOR_16
    MOVEF_F VLV_FORWARD_21 VLV_FORWARD_16
    MOVEF_F 270.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB950 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB950:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB951 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB951:
    STRINGS DUPLICATE VLV_MOT_21 VLV_MOTOR_16
    MULF VLV_FORWARD_21 -1.0 VLV_FORWARD_16
    MOVEF_F 120.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB953 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB953:
    MOVEF_F VLV_COEF_21 VLV_COEF_20
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB954 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB954:
    STRINGS DUPLICATE VLV_MOT_21 VLV_MOTOR_16
    MULF VLV_FORWARD_21 -1.0 VLV_FORWARD_16
    MOVEF_F 145.0 VLV_DEG_16
    MOVEF_F 20.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB956 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB956:
    MOVEF_F 1.0 VGV_CUBES_COUNT
    JR endif948
  else948_1:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 30.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB957 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB957:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB958 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB958:
    STRINGS DUPLICATE VLV_MOT_21 VLV_MOTOR_16
    MOVEF_F VLV_FORWARD_21 VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB959 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB959:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB960 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB960:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB961 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB961:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB962 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB962:
    MOVEF_F VLV_COEF_21 VLV_COEF_19
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB963:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 45.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB964 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB964:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 45.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB965 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB965:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB966 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB966:
    STRINGS DUPLICATE VLV_MOT_21 VLV_MOTOR_16
    MULF VLV_FORWARD_21 -1.0 VLV_FORWARD_16
    MOVEF_F 360.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB968 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB968:
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 30.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB969 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB969:
    MOVEF_F 0.0 VGV_CUBES_COUNT
  else948_2:
  endif948:
RETSUB_F_DELIVER_LONG_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_LONG_1:
SUB_F_DELIVER_NEAR_2:
    CALL EQ_STRING VLV_IS_INVERTED_22 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else970_1
    MOVEF_F 1.0 VLV_COEF_22
    JR endif970
  else970_1:
    MOVEF_F -1.0 VLV_COEF_22
  else970_2:
  endif970:
    MOVEF_F 0.0 VLV_MINUS_DEG_22
    MOVEF_F VLV_COEF_22 VLV_COEF_19
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB972 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB972:
    JR_NEQF VGV_CUBES_COUNT 2.0 else973_1
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 30.0 VLV_MIN_POWER_12
    MOVEF_F 45.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB974 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB974:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB975 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB975:
    MOVEF_F VLV_COEF_22 VLV_COEF_20
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB976 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB976:
    MOVEF_F 1.0 VGV_CUBES_COUNT
    MOVEF_F 45.0 VLV_MINUS_DEG_22
  else973_1:
  endif973:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB977 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB977:
    SUBF VGV_CUBES_COUNT 1.0 VGV_CUBES_COUNT
RETSUB_F_DELIVER_NEAR_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_NEAR_2:
SUB_F_MOVE_TO_NEXT_ZONE_1:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB979 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB979:
    SUBF 205.0 VLV_MINUS_DEG_23 VLV_DEG_23
    MOVEF_F 20.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F VLV_DEG_23 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB981 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB981:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB982 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB982:
RETSUB_F_MOVE_TO_NEXT_ZONE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_TO_NEXT_ZONE_1:
SUB_F_DELIVER_GROUP_4:
    MOVEF_F 0.0 VLV_MINUS_DEG_24
    CALL EQ_STRING VLV_LONG_24 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else983_1
    STRINGS DUPLICATE VLV_IS_INVERTED_24 VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_LONG_1:CALLSUB985 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_LONG_1
CALLSUB985:
  else983_1:
  endif983:
    CALL EQ_STRING VLV_NEAR_24 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else986_1
    STRINGS DUPLICATE VLV_IS_INVERTED_24 VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_DELIVER_NEAR_2:CALLSUB988 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_NEAR_2
CALLSUB988:
    MOVEF_F VLV_MINUS_DEG_22 VLV_MINUS_DEG_24
  else986_1:
  endif986:
    CALL EQ_STRING VLV_SHOULD_MOVE_BACKWARD_24 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else989_1
    MOVEF_F VLV_MINUS_DEG_24 VLV_MINUS_DEG_23
    WRITE32 ENDSUB_F_MOVE_TO_NEXT_ZONE_1:CALLSUB991 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_TO_NEXT_ZONE_1
CALLSUB991:
  else989_1:
  endif989:
RETSUB_F_DELIVER_GROUP_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_GROUP_4:
SUB_F_GET_MOTORS_6:
    CALL EQ_STRING VLV_IS_INVERTED_25 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else992_1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR1_25
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR2_25
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD1_25
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD2_25
    MOVEF_F 1.0 VLV_COEF_25
    JR endif992
  else992_1:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR1_25
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR2_25
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD1_25
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD2_25
    MOVEF_F -1.0 VLV_COEF_25
  else992_2:
  endif992:
RETSUB_F_GET_MOTORS_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GET_MOTORS_6:
SUB_F_FROM_PROTECTED_TO_FINISH_1:
    STRINGS DUPLICATE VLV_IS_INVERTED_26 VLV_IS_INVERTED_25
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB994 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB994:
    STRINGS DUPLICATE VLV_MOTOR1_25 VLV_MOTOR1_26
    STRINGS DUPLICATE VLV_MOTOR2_25 VLV_MOTOR2_26
    MOVEF_F VLV_FORWARD1_25 VLV_FORWARD1_26
    MOVEF_F VLV_FORWARD2_25 VLV_FORWARD2_26
    MOVEF_F VLV_COEF_25 VLV_COEF_26
    MOVEF_F 50.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 300.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB995 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB995:
    CALL MOTOR.STOP VLV_MOTOR1_26 'True'
    STRINGS DUPLICATE VLV_MOTOR2_26 VLV_MOTOR_16
    MULF VLV_FORWARD2_26 -1.0 VLV_FORWARD_16
    MOVEF_F 330.0 VLV_DEG_16
    MOVEF_F 50.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'False' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB998 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB998:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB999 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB999:
    MOVEF_F 1700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1000 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1000:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1001 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1001:
    DATA32 tmp1002
    CALL GETANDINC32 RUNCOUNTER_F_PREPARE_GRABBER_0 1  RUNCOUNTER_F_PREPARE_GRABBER_0 tmp1002
    JR_NEQ32 0 tmp1002 alreadylaunched1002
    OBJECT_START TF_PREPARE_GRABBER_0
  alreadylaunched1002:
    MULF VLV_FORWARD2_26 30.0 F.0
    CALL MOTOR.START VLV_MOTOR2_26 F.0
    MOVEF_F 1500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1005 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1005:
    CALL MOTOR.STOP VLV_MOTOR2_26 'True'
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1007 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1007:
    MULF 40.0 VLV_FORWARD1_26 F.0
    CALL MOTOR.START VLV_MOTOR1_26 F.0
    MULF 50.0 VLV_FORWARD2_26 F.0
    CALL MOTOR.START VLV_MOTOR2_26 F.0
  while1012:
    CALL MOTOR.GETCOUNT VLV_MOTOR1_26 F.1
    MULF F.1 VLV_FORWARD1_26 F.0
    JR_GTEQF F.0 1000.0 endwhile1012
  whilebody1012:
    CALL MOTOR.GETCOUNT VLV_MOTOR1_26 F.1
    MULF F.1 VLV_FORWARD1_26 F.0
    JR_LTF F.0 1000.0 whilebody1012
  endwhile1012:
    MULF 40.0 VLV_FORWARD1_26 F.0
    CALL MOTOR.START VLV_MOTOR1_26 F.0
    MULF 60.0 VLV_FORWARD2_26 F.0
    CALL MOTOR.START VLV_MOTOR2_26 F.0
    DATA32 milliseconds1021
	MOVEF_32 1200.0 milliseconds1021
	DATA32 timer1021
	TIMER_WAIT milliseconds1021 timer1021
	TIMER_READY timer1021
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1022 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1022:
RETSUB_F_FROM_PROTECTED_TO_FINISH_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:
SUB_F_TAKE_CUBES_1:
    DATA8 layer1023
	DATA8 no1023
	DATA8 mode81023
	
	MOVEF_8 VGV_LINE no1023
	SUB8 no1023 1 no1023
	DIV8 no1023 4 layer1023
	MATH MOD8 no1023 4 no1023

	MOVEF_8 0.0 mode81023
	
	INPUT_DEVICE READY_RAW layer1023 no1023 0 mode81023 0
    STRINGS DUPLICATE VLV_IS_INVERTED_27 VLV_IS_INVERTED_25
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB1024 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB1024:
    STRINGS DUPLICATE VLV_MOTOR1_25 VLV_MOTOR1_27
    STRINGS DUPLICATE VLV_MOTOR2_25 VLV_MOTOR2_27
    MOVEF_F VLV_FORWARD1_25 VLV_FORWARD1_27
    MOVEF_F VLV_FORWARD2_25 VLV_FORWARD2_27
    MOVEF_F VLV_COEF_25 VLV_COEF_27
    MOVEF_F VLV_COEF_27 VLV_COEF_19
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB1025 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB1025:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 80.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1026 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1026:
    MOVEF_F 30.0 VLV_BASE_POWER_17
    MOVEF_F 20.0 VLV_MIN_POWER_17
    MOVEF_F 75.0 VLV_DEG_17
    MOVEF_F -1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB1027 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB1027:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1028 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1028:
    STRINGS DUPLICATE VLV_MOTOR2_27 VLV_MOTOR_16
    MULF VLV_FORWARD2_27 -1.0 VLV_FORWARD_16
    MOVEF_F 180.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1030 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1030:
    STRINGS DUPLICATE VLV_MOTOR1_27 VLV_MOTOR_16
    MOVEF_F VLV_FORWARD1_27 VLV_FORWARD_16
    MOVEF_F 40.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'False' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1031 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1031:
    MULF VLV_FORWARD2_27 -30.0 F.0
    CALL MOTOR.START VLV_MOTOR2_27 F.0
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1034 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1034:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1035 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1035:
    MULF VLV_FORWARD1_27 -40.0 F.0
    CALL MOTOR.START VLV_MOTOR1_27 F.0
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1038 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1038:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1039 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1039:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1040 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1040:
    MOVEF_F 50.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 120.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1041 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1041:
    MOVEF_F 760.0 VLV_DEG_15
    MOVEF_F 50.0 VLV_POWER_15
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB1042 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB1042:
    MOVEF_F 50.0 VLV_BASE_POWER_17
    MOVEF_F 30.0 VLV_MIN_POWER_17
    MOVEF_F 100.0 VLV_DEG_17
    MOVEF_F 1.0 VLV_COEF_17
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB1043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB1043:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1044 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1044:
    MOVEF_F VLV_COEF_27 VLV_COEF_20
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB1045 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB1045:
    STRINGS DUPLICATE VLV_MOTOR2_27 VLV_MOTOR_16
    MULF VLV_FORWARD2_27 -1.0 VLV_FORWARD_16
    MOVEF_F 250.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1047 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1047:
    STRINGS DUPLICATE VLV_MOTOR1_27 VLV_MOTOR_16
    MULF VLV_FORWARD1_27 -1.0 VLV_FORWARD_16
    MOVEF_F 250.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1049 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1049:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1050 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1050:
    MOVEF_F -30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1051 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1051:
    CALL EQ_STRING VLV_IS_INVERTED_27 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1052_1
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB1054 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB1054:
    MOVEF_F VLV_PERCENT_7 VLV_P_27
  while1055:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MATH ABS F.1 F.0
    JR_LTF F.0 20.0 or1056
    JR_LTEQF VLV_P_27 20.0 endwhile1055
  or1056:
  whilebody1055:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB1059:
    MOVEF_F VLV_PERCENT_7 VLV_P_27
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MATH ABS F.1 F.0
    JR_LTF F.0 20.0 whilebody1055
    JR_GTF VLV_P_27 20.0 whilebody1055
  endwhile1055:
    JR endif1052
  else1052_1:
    DATA8 layer1062
	DATA8 no1062
	DATA8 mode81062
	
	MOVEF_8 VGV_LINE no1062
	SUB8 no1062 1 no1062
	DIV8 no1062 4 layer1062
	MATH MOD8 no1062 4 no1062

	MOVEF_8 4.0 mode81062
	
	INPUT_DEVICE READY_RAW layer1062 no1062 0 mode81062 0
    DATA8 layer1063
	DATA8 no1063	
	MOVEF_8 VGV_LINE no1063
	SUB8 no1063 1 no1063
	DIV8 no1063 4 layer1063
	MATH MOD8 no1063 4 no1063 
	INPUT_READY layer1063 no1063
    CALL SENSOR.READRAW VGV_LINE 3.0 VLV_RGB_27
  while1065:
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_RGB_27
    JR_LTEQF F.0 50.0 endwhile1065
  whilebody1065:
    CALL SENSOR.READRAW VGV_LINE 3.0 VLV_RGB_27
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_RGB_27
    JR_GTF F.0 50.0 whilebody1065
  endwhile1065:
    DATA8 layer1069
	DATA8 no1069
	DATA8 mode81069
	
	MOVEF_8 VGV_LINE no1069
	SUB8 no1069 1 no1069
	DIV8 no1069 4 layer1069
	MATH MOD8 no1069 4 no1069

	MOVEF_8 0.0 mode81069
	
	INPUT_DEVICE READY_RAW layer1069 no1069 0 mode81069 0
  else1052_2:
  endif1052:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1070 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1070:
RETSUB_F_TAKE_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_1:
SUB_F_FINISH_AFTER_DELIVERIES_1:
    STRINGS DUPLICATE VLV_IS_INVERTED_28 VLV_IS_INVERTED_25
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB1071 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB1071:
    STRINGS DUPLICATE VLV_MOTOR1_25 VLV_MOTOR1_28
    STRINGS DUPLICATE VLV_MOTOR2_25 VLV_MOTOR2_28
    MOVEF_F VLV_FORWARD1_25 VLV_FORWARD1_28
    MOVEF_F VLV_FORWARD2_25 VLV_FORWARD2_28
    MOVEF_F VLV_COEF_25 VLV_COEF_28
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1072 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1072:
    MOVEF_F 1500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1073 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1073:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1074 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1074:
    STRINGS DUPLICATE VLV_MOTOR1_28 VLV_MOTOR_16
    MOVEF_F VLV_FORWARD1_28 VLV_FORWARD_16
    MOVEF_F 210.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1075 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1075:
    STRINGS DUPLICATE VLV_MOTOR2_28 VLV_MOTOR_16
    MULF VLV_FORWARD2_28 -1.0 VLV_FORWARD_16
    MOVEF_F 150.0 VLV_DEG_16
    MOVEF_F 30.0 VLV_MAX_POWER_16
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_16
    STRINGS DUPLICATE 'True' VLV_ZAME_16
    STRINGS DUPLICATE 'True' VLV_TO_STOP_16
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1077 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1077:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1078 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1078:
    MOVEF_F 1500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1079 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1079:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1080 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1080:
RETSUB_F_FINISH_AFTER_DELIVERIES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_DELIVERIES_1:
SUB_F_SHOW_TIME_1:
    TIMER_READ timeMC9tmp
	SUB32 timeMC9tmp timeMC9 timeMC9tmp
	MOVE32_F timeMC9tmp VLV_MILLISECOND_29
    DATAF tmpf1082
    DATA8 flag1082
    DIVF VLV_MILLISECOND_29 1000.0 tmpf1082
    CP_EQF 0.0 1000.0 flag1082
    SELECTF flag1082 0.0 tmpf1082 F.0

    MATH FLOOR F.0 VLV_SECONDS_29
    DATAF tmpf1084
    DATA8 flag1084
    DIVF VLV_SECONDS_29 60.0 tmpf1084
    CP_EQF 0.0 60.0 flag1084
    SELECTF flag1084 0.0 tmpf1084 F.0

    MATH FLOOR F.0 VLV_MINUTES_29
    MATH MOD VLV_SECONDS_29 60.0 VLV_SECONDS_29
    STRINGS VALUE_FORMATTED VLV_MINUTES_29 '%g' 99 S.1
    CALL TEXT.APPEND S.1 ':' S.0
    STRINGS VALUE_FORMATTED VLV_SECONDS_29 '%g' 99 S.1
    CALL TEXT.APPEND S.0 S.1 VLV_TEXT_29
    STRINGS DUPLICATE VLV_TEXT_29 VLV_TEXT_6
    WRITE32 ENDSUB_F_TEXT_TO_SCREEN_1:CALLSUB1091 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TEXT_TO_SCREEN_1
CALLSUB1091:
    CALL EQ_STRING VLV_TO_DELAY_29 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1092_1
    MOVEF_F 100000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1094 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1094:
  else1092_1:
  endif1092:
RETSUB_F_SHOW_TIME_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SHOW_TIME_1:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall NE_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 flag 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
isequal:
	STRINGS DUPLICATE 'False' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'True' result
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall SENSOR.GETMODE		// FF
{
	IN_F port
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA8 type
	DATA8 mode
	
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no
	
	INPUT_DEVICE GET_TYPEMODE layer no type mode
	MOVE8_F mode result
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
