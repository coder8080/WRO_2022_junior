DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_7
DATAF VLV_MIN_POWER_7
DATAF VLV_DEG_7
DATAF VLV_ACCELERATION_7
DATAF VLV_ZAME_7
DATAF VLV_BASE_POWER_5
DATAF VLV_MIN_POWER_5
DATAF VLV_DEG_5
DATAF VLV_ACCELERATION_5
DATAF VLV_ZAME_5
DATAS VLV_MOTOR_10 252
DATAF VLV_FORWARD_10
DATAF VLV_BASE_POWER_10
DATAF VLV_MIN_POWER_10
DATAF VLV_DEG_10
DATAF VLV_ACCELERATION_10
DATAF VLV_ZAME_10
DATAF VLV_BASE_POWER_8
DATAF VLV_MIN_POWER_8
DATAF VLV_DEG_8
DATAF VLV_ACCELERATION_8
DATAF VLV_ZAME_8
DATAS VLV_MOTOR_9 252
DATAF VLV_FORWARD_9
DATAF VLV_BASE_POWER_9
DATAF VLV_MIN_POWER_9
DATAF VLV_DEG_9
DATAF VLV_ACCELERATION_9
DATAF VLV_ZAME_9
DATAF VLV_U_3
DATAF VLV_BASE_POWER_3
DATAF VLV_MIN_POWER_3
DATAF VLV_DEGREES_3
DATAF VLV_ZAMED_DEGREES_3
DATAF VLV_POWER_1
DATAF VLV_U_1
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAF VGV_RIGHT_FORWARD
DATAF VGV_LEFT_FORWARD
DATAS VGV_NOT_INVERSED_MOTOR 252
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_MOTORS 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_LINE_SENSOR
DATAF VGV_ULTRASONIC
DATAF VGV_A
DATAF VGV_P
DATAF VGV_D
DATAF VGV_LASTERROR
DATAF VGV_INTEGRAL
DATAF VGV_P_U
DATAF VGV_D_U
DATAF VGV_DEG
DATAF VGV_B
DATAF VGV_W
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_MEN_COUNT
DATAS VGV_CHEM 252
DATAF VGV_FIRE_COUNT
DATAS VGV_IS_CHEM_ON_RIGHT 252
DATAS VGV_IS_CHEM_ON_LEFT 252
DATAF VGV_CUBES_COUNT
DATAF VGV_WATER_STATE
DATAS VGV_OBJECT 252
DATAS VGV_UP_WATER 252
DATAS VGV_1_WATER 252
DATAS VGV_2_WATER 252
DATAF VGV_NOWERROR
DATAF VGV_DIF
DATAF VGV_DERIVATIVE
DATAF VGV_UP
DATAF VGV_R_C
DATAF VGV_L_C
DATAF VGV_DIFF
DATAF VGV_R_P
DATAF VGV_L_P
DATAF VLV_V_1
DATAF VLV_NOWERROR_1
DATAF VLV_DIF_1
DATAF VLV_INTEGRAL_1
DATAF VLV_DERIVATIVE_1
DATAF VLV_UP_1
DATAF VLV_LASTERROR_1
DATAF VLV_NORMAL_DEGREES_3
DATAF VLV_C_3
DATAF VLV_MINUS_3
DATAF VLV_POWER_3
DATAF VLV_NORMAL_DEGREES_5
DATAF VLV_C_5
DATAF VLV_P_5
DATAF VLV_POWER_5
DATAF VLV_DELTA_5
DATAF VLV_LEFT_POWER_5
DATAF VLV_RIGHT_POWER_5
DATAF VLV_NORMAL_DEG_7
DATAF VLV_R_7
DATAF VLV_P_7
DATAF VLV_POWER_7
DATAF VLV_L_7
DATAF VLV_DELTA_7
DATAF VLV_RIGHT_POWER_7
DATAF VLV_LEFT_POWER_7
DATAF VLV_NORMAL_DEGREES_8
DATAF VLV_C_8
DATAF VLV_P_8
DATAF VLV_POWER_8
DATAF VLV_DELTA_8
DATAF VLV_LEFT_POWER_8
DATAF VLV_RIGHT_POWER_8
DATAF VLV_NORMAL_DEG_9
DATAF VLV_C_9
DATAF VLV_P_9
DATAF VLV_POWER_9
DATAF VLV_NORMAL_DEG_10
DATAF VLV_C_10
DATAF VLV_POWER_10
DATAF VLV_P_10

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_7
    MOVEF_F 0.0 VLV_MIN_POWER_7
    MOVEF_F 0.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    MOVEF_F 0.0 VLV_BASE_POWER_5
    MOVEF_F 0.0 VLV_MIN_POWER_5
    MOVEF_F 0.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    STRINGS DUPLICATE '' VLV_MOTOR_10
    MOVEF_F 0.0 VLV_FORWARD_10
    MOVEF_F 0.0 VLV_BASE_POWER_10
    MOVEF_F 0.0 VLV_MIN_POWER_10
    MOVEF_F 0.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_ACCELERATION_10
    MOVEF_F 0.0 VLV_ZAME_10
    MOVEF_F 0.0 VLV_BASE_POWER_8
    MOVEF_F 0.0 VLV_MIN_POWER_8
    MOVEF_F 0.0 VLV_DEG_8
    MOVEF_F 0.0 VLV_ACCELERATION_8
    MOVEF_F 0.0 VLV_ZAME_8
    STRINGS DUPLICATE '' VLV_MOTOR_9
    MOVEF_F 0.0 VLV_FORWARD_9
    MOVEF_F 0.0 VLV_BASE_POWER_9
    MOVEF_F 0.0 VLV_MIN_POWER_9
    MOVEF_F 0.0 VLV_DEG_9
    MOVEF_F 0.0 VLV_ACCELERATION_9
    MOVEF_F 0.0 VLV_ZAME_9
    MOVEF_F 0.0 VLV_U_3
    MOVEF_F 0.0 VLV_BASE_POWER_3
    MOVEF_F 0.0 VLV_MIN_POWER_3
    MOVEF_F 0.0 VLV_DEGREES_3
    MOVEF_F 0.0 VLV_ZAMED_DEGREES_3
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_U_1
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    STRINGS DUPLICATE '' VGV_UP_WATER
    STRINGS DUPLICATE '' VGV_1_WATER
    STRINGS DUPLICATE '' VGV_2_WATER
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VLV_V_1
    MOVEF_F 0.0 VLV_NOWERROR_1
    MOVEF_F 0.0 VLV_DIF_1
    MOVEF_F 0.0 VLV_INTEGRAL_1
    MOVEF_F 0.0 VLV_DERIVATIVE_1
    MOVEF_F 0.0 VLV_UP_1
    MOVEF_F 0.0 VLV_LASTERROR_1
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_3
    MOVEF_F 0.0 VLV_C_3
    MOVEF_F 0.0 VLV_MINUS_3
    MOVEF_F 0.0 VLV_POWER_3
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_5
    MOVEF_F 0.0 VLV_C_5
    MOVEF_F 0.0 VLV_P_5
    MOVEF_F 0.0 VLV_POWER_5
    MOVEF_F 0.0 VLV_DELTA_5
    MOVEF_F 0.0 VLV_LEFT_POWER_5
    MOVEF_F 0.0 VLV_RIGHT_POWER_5
    MOVEF_F 0.0 VLV_NORMAL_DEG_7
    MOVEF_F 0.0 VLV_R_7
    MOVEF_F 0.0 VLV_P_7
    MOVEF_F 0.0 VLV_POWER_7
    MOVEF_F 0.0 VLV_L_7
    MOVEF_F 0.0 VLV_DELTA_7
    MOVEF_F 0.0 VLV_RIGHT_POWER_7
    MOVEF_F 0.0 VLV_LEFT_POWER_7
    MOVEF_F 0.0 VLV_NORMAL_DEGREES_8
    MOVEF_F 0.0 VLV_C_8
    MOVEF_F 0.0 VLV_P_8
    MOVEF_F 0.0 VLV_POWER_8
    MOVEF_F 0.0 VLV_DELTA_8
    MOVEF_F 0.0 VLV_LEFT_POWER_8
    MOVEF_F 0.0 VLV_RIGHT_POWER_8
    MOVEF_F 0.0 VLV_NORMAL_DEG_9
    MOVEF_F 0.0 VLV_C_9
    MOVEF_F 0.0 VLV_P_9
    MOVEF_F 0.0 VLV_POWER_9
    MOVEF_F 0.0 VLV_NORMAL_DEG_10
    MOVEF_F 0.0 VLV_C_10
    MOVEF_F 0.0 VLV_POWER_10
    MOVEF_F 0.0 VLV_P_10
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    DATAF F.4
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    MOVEF_F 0.0 VLV_BASE_POWER_7
    MOVEF_F 0.0 VLV_MIN_POWER_7
    MOVEF_F 0.0 VLV_DEG_7
    MOVEF_F 0.0 VLV_ACCELERATION_7
    MOVEF_F 0.0 VLV_ZAME_7
    MOVEF_F 0.0 VLV_BASE_POWER_5
    MOVEF_F 0.0 VLV_MIN_POWER_5
    MOVEF_F 0.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 0.0 VLV_ZAME_5
    STRINGS DUPLICATE '' VLV_MOTOR_10
    MOVEF_F 0.0 VLV_FORWARD_10
    MOVEF_F 0.0 VLV_BASE_POWER_10
    MOVEF_F 0.0 VLV_MIN_POWER_10
    MOVEF_F 0.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_ACCELERATION_10
    MOVEF_F 0.0 VLV_ZAME_10
    MOVEF_F 0.0 VLV_BASE_POWER_8
    MOVEF_F 0.0 VLV_MIN_POWER_8
    MOVEF_F 0.0 VLV_DEG_8
    MOVEF_F 0.0 VLV_ACCELERATION_8
    MOVEF_F 0.0 VLV_ZAME_8
    STRINGS DUPLICATE '' VLV_MOTOR_9
    MOVEF_F 0.0 VLV_FORWARD_9
    MOVEF_F 0.0 VLV_BASE_POWER_9
    MOVEF_F 0.0 VLV_MIN_POWER_9
    MOVEF_F 0.0 VLV_DEG_9
    MOVEF_F 0.0 VLV_ACCELERATION_9
    MOVEF_F 0.0 VLV_ZAME_9
    MOVEF_F 0.0 VLV_U_3
    MOVEF_F 0.0 VLV_BASE_POWER_3
    MOVEF_F 0.0 VLV_MIN_POWER_3
    MOVEF_F 0.0 VLV_DEGREES_3
    MOVEF_F 0.0 VLV_ZAMED_DEGREES_3
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_U_1
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    STRINGS DUPLICATE '' VGV_UP_WATER
    STRINGS DUPLICATE '' VGV_1_WATER
    STRINGS DUPLICATE '' VGV_2_WATER
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    STRINGS DUPLICATE 'B' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 1.0 VGV_LINE_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_A
    MOVEF_F 1.0 VGV_P
    MOVEF_F 6.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 1.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE 'False' VGV_CHEM
    MOVEF_F 0.0 VGV_FIRE_COUNT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 2.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_UP_WATER
    STRINGS DUPLICATE 'True' VGV_1_WATER
    STRINGS DUPLICATE 'True' VGV_2_WATER
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE_SENSOR no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_RIGHT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_LEFT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 1.0 'Low battery'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB10:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB11 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB11:
  else5_1:
  endif5:
    MOVEF_F 30.0 VLV_BASE_POWER_7
    MOVEF_F 10.0 VLV_MIN_POWER_7
    MOVEF_F 360.0 VLV_DEG_7
    MOVEF_F 100.0 VLV_ACCELERATION_7
    MOVEF_F 100.0 VLV_ZAME_7
    WRITE32 ENDSUB_F_ROTATE_LEFT_ACCELERATION_5:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ROTATE_LEFT_ACCELERATION_5
CALLSUB12:
ENDTHREAD:
    RETURN
SUB_F_LINE_0:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF 20.0 F.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf17
    DATA8 flag17
    DIVF F.0 10.0 tmpf17
    CP_EQF 0.0 10.0 flag17
    SELECTF flag17 0.0 tmpf17 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_LINE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_0:
SUB_F_ULTRASONIC_SLOW_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf30
    DATA8 flag30
    DIVF F.0 10.0 tmpf30
    CP_EQF 0.0 10.0 flag30
    SELECTF flag30 0.0 tmpf30 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 20.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 20.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SLOW_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SLOW_0:
SUB_F_ULTRASONIC_FAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf45
    DATA8 flag45
    DIVF F.0 10.0 tmpf45
    CP_EQF 0.0 10.0 flag45
    SELECTF flag45 0.0 tmpf45 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 30.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 30.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_FAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_FAST_0:
SUB_F_ULTRASONIC_SUPERFAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf60
    DATA8 flag60
    DIVF F.0 10.0 tmpf60
    CP_EQF 0.0 10.0 flag60
    SELECTF flag60 0.0 tmpf60 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 80.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 80.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SUPERFAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SUPERFAST_0:
SUB_F_STOP_0:
    CALL MOTOR.STOP VGV_MOTORS 'True'
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_STOP_RIGHT_0:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
RETSUB_F_STOP_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_RIGHT_0:
SUB_F_DELAY_0:
    DATA32 milliseconds73
	MOVEF_32 300.0 milliseconds73
	DATA32 timer73
	TIMER_WAIT milliseconds73 timer73
	TIMER_READY timer73
RETSUB_F_DELAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_0:
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_LEFT_0:
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 280.0 VLV_DEG_5
    MOVEF_F 100.0 VLV_ACCELERATION_5
    MOVEF_F 100.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB75:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB76:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_10
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_10
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 10.0 VLV_MIN_POWER_10
    MOVEF_F 370.0 VLV_DEG_10
    MOVEF_F 100.0 VLV_ACCELERATION_10
    MOVEF_F 100.0 VLV_ZAME_10
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB77:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB78:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer79
	DATA8 nos79
	DATA8 busy79
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer79 nos79
	JR_EQ8 0 nos79 motornotbusy79
  motorwaiting79:
	OUTPUT_TEST layer79 nos79 busy79
	JR_EQ8 busy79 0 motornotbusy79
	SLEEP
	JR motorwaiting79
  motornotbusy79:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 70.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB80 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB80:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB81:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer82
	DATA8 nos82
	DATA8 busy82
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer82 nos82
	JR_EQ8 0 nos82 motornotbusy82
  motorwaiting82:
	OUTPUT_TEST layer82 nos82 busy82
	JR_EQ8 busy82 0 motornotbusy82
	SLEEP
	JR motorwaiting82
  motornotbusy82:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB83:
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 90.0 VLV_DEG_8
    MOVEF_F 0.0 VLV_ACCELERATION_8
    MOVEF_F 70.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB84 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB84:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB85 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB85:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_9
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_9
    MOVEF_F 20.0 VLV_BASE_POWER_9
    MOVEF_F 10.0 VLV_MIN_POWER_9
    MOVEF_F 370.0 VLV_DEG_9
    MOVEF_F 100.0 VLV_ACCELERATION_9
    MOVEF_F 100.0 VLV_ZAME_9
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB86:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB87:
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 280.0 VLV_DEG_8
    MOVEF_F 100.0 VLV_ACCELERATION_8
    MOVEF_F 100.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB88 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB88:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB89:
RETSUB_F_TAKE_CHEM_ON_LEFT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_0:
SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 170.0 VLV_DEG_8
    MOVEF_F 70.0 VLV_ACCELERATION_8
    MOVEF_F 70.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB90:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB91:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer92
	DATA8 nos92
	DATA8 busy92
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer92 nos92
	JR_EQ8 0 nos92 motornotbusy92
  motorwaiting92:
	OUTPUT_TEST layer92 nos92 busy92
	JR_EQ8 busy92 0 motornotbusy92
	SLEEP
	JR motorwaiting92
  motornotbusy92:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_9
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_9
    MOVEF_F 20.0 VLV_BASE_POWER_9
    MOVEF_F 10.0 VLV_MIN_POWER_9
    MOVEF_F 160.0 VLV_DEG_9
    MOVEF_F 70.0 VLV_ACCELERATION_9
    MOVEF_F 70.0 VLV_ZAME_9
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB93:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB94:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer95
	DATA8 nos95
	DATA8 busy95
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer95 nos95
	JR_EQ8 0 nos95 motornotbusy95
  motorwaiting95:
	OUTPUT_TEST layer95 nos95 busy95
	JR_EQ8 busy95 0 motornotbusy95
	SLEEP
	JR motorwaiting95
  motornotbusy95:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB96:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_10
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_10
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 10.0 VLV_MIN_POWER_10
    MOVEF_F 160.0 VLV_DEG_10
    MOVEF_F 70.0 VLV_ACCELERATION_10
    MOVEF_F 70.0 VLV_ZAME_10
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB97:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB98:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 170.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB99 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB99:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB100:
RETSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    MOVEF_F 20.0 VLV_BASE_POWER_8
    MOVEF_F 10.0 VLV_MIN_POWER_8
    MOVEF_F 170.0 VLV_DEG_8
    MOVEF_F 70.0 VLV_ACCELERATION_8
    MOVEF_F 70.0 VLV_ZAME_8
    WRITE32 ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_ACCELERATION_5
CALLSUB101:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB102:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer103
	DATA8 nos103
	DATA8 busy103
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer103 nos103
	JR_EQ8 0 nos103 motornotbusy103
  motorwaiting103:
	OUTPUT_TEST layer103 nos103 busy103
	JR_EQ8 busy103 0 motornotbusy103
	SLEEP
	JR motorwaiting103
  motornotbusy103:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_9
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_9
    MOVEF_F 20.0 VLV_BASE_POWER_9
    MOVEF_F 10.0 VLV_MIN_POWER_9
    MOVEF_F 160.0 VLV_DEG_9
    MOVEF_F 70.0 VLV_ACCELERATION_9
    MOVEF_F 70.0 VLV_ZAME_9
    WRITE32 ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:CALLSUB104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_FORWARD_ACCELERATION_7
CALLSUB104:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB105:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer106
	DATA8 nos106
	DATA8 busy106
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer106 nos106
	JR_EQ8 0 nos106 motornotbusy106
  motorwaiting106:
	OUTPUT_TEST layer106 nos106 busy106
	JR_EQ8 busy106 0 motornotbusy106
	SLEEP
	JR motorwaiting106
  motornotbusy106:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB107:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_10
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_10
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 10.0 VLV_MIN_POWER_10
    MOVEF_F 160.0 VLV_DEG_10
    MOVEF_F 70.0 VLV_ACCELERATION_10
    MOVEF_F 70.0 VLV_ZAME_10
    WRITE32 ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOTOR_BACKWARD_ACCELERATION_7
CALLSUB108:
    WRITE32 ENDSUB_F_AFTER_ACTION_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_AFTER_ACTION_0
CALLSUB109:
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 10.0 VLV_MIN_POWER_5
    MOVEF_F 170.0 VLV_DEG_5
    MOVEF_F 70.0 VLV_ACCELERATION_5
    MOVEF_F 70.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB110:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB111:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else112_1
    CALL MOTOR.START VGV_WATER_MOTOR -30.0
    DATA32 milliseconds114
	MOVEF_32 1500.0 milliseconds114
	DATA32 timer114
	TIMER_WAIT milliseconds114 timer114
	TIMER_READY timer114
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 30.0 0.0 40.0 0.0 'True' 

	DATA8 layer116
	DATA8 nos116
	DATA8 busy116
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer116 nos116
	JR_EQ8 0 nos116 motornotbusy116
  motorwaiting116:
	OUTPUT_TEST layer116 nos116 busy116
	JR_EQ8 busy116 0 motornotbusy116
	SLEEP
	JR motorwaiting116
  motornotbusy116:
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif112
  else112_1:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds118
	MOVEF_32 2000.0 milliseconds118
	DATA32 timer118
	TIMER_WAIT milliseconds118 timer118
	TIMER_READY timer118
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -30.0 0.0 40.0 0.0 'True' 

	DATA8 layer120
	DATA8 nos120
	DATA8 busy120
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer120 nos120
	JR_EQ8 0 nos120 motornotbusy120
  motorwaiting120:
	OUTPUT_TEST layer120 nos120 busy120
	JR_EQ8 busy120 0 motornotbusy120
	SLEEP
	JR motorwaiting120
  motornotbusy120:
  else112_2:
  endif112:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_UPDATE_DISPLAY_0:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_OBJECT
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.1
    CALL TEXT.APPEND 'Red: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.1
    CALL TEXT.APPEND 'White: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 75.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_UPDATE_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UPDATE_DISPLAY_0:
SUB_F_RESET_VALUES_0:
    STRINGS DUPLICATE 'None' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
RETSUB_F_RESET_VALUES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_VALUES_0:
SUB_F_CLOSE_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -10.0 0.0 70.0 0.0 'True' 

	DATA8 layer131
	DATA8 nos131
	DATA8 busy131
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer131 nos131
	JR_EQ8 0 nos131 motornotbusy131
  motorwaiting131:
	OUTPUT_TEST layer131 nos131 busy131
	JR_EQ8 busy131 0 motornotbusy131
	SLEEP
	JR motorwaiting131
  motornotbusy131:
RETSUB_F_CLOSE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_0:
SUB_F_OPEN_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 10.0 0.0 70.0 0.0 'True' 

	DATA8 layer132
	DATA8 nos132
	DATA8 busy132
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer132 nos132
	JR_EQ8 0 nos132 motornotbusy132
  motorwaiting132:
	OUTPUT_TEST layer132 nos132 busy132
	JR_EQ8 busy132 0 motornotbusy132
	SLEEP
	JR motorwaiting132
  motornotbusy132:
RETSUB_F_OPEN_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_0:
SUB_F_TAKE_CUBES_0:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds134
	MOVEF_32 500.0 milliseconds134
	DATA32 timer134
	TIMER_WAIT milliseconds134 timer134
	TIMER_READY timer134
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer138
	DATA8 nos138
	DATA8 busy138
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer138 nos138
	JR_EQ8 0 nos138 motornotbusy138
  motorwaiting138:
	OUTPUT_TEST layer138 nos138 busy138
	JR_EQ8 busy138 0 motornotbusy138
	SLEEP
	JR motorwaiting138
  motornotbusy138:
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR -20.0 0.0 360.0 0.0 'True' 

	DATA8 layer139
	DATA8 nos139
	DATA8 busy139
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer139 nos139
	JR_EQ8 0 nos139 motornotbusy139
  motorwaiting139:
	OUTPUT_TEST layer139 nos139 busy139
	JR_EQ8 busy139 0 motornotbusy139
	SLEEP
	JR motorwaiting139
  motornotbusy139:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds143
	MOVEF_32 700.0 milliseconds143
	DATA32 timer143
	TIMER_WAIT milliseconds143 timer143
	TIMER_READY timer143
    WRITE32 ENDSUB_F_STOP_0:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB144:
    MOVEF_F 229.0 VLV_U_3
    MOVEF_F 50.0 VLV_BASE_POWER_3
    MOVEF_F 20.0 VLV_MIN_POWER_3
    MOVEF_F 930.0 VLV_DEGREES_3
    MOVEF_F 200.0 VLV_ZAMED_DEGREES_3
    WRITE32 ENDSUB_F_ULTRASONIC_ZAMED_5:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_ZAMED_5
CALLSUB145:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer146
	DATA8 nos146
	DATA8 busy146
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer146 nos146
	JR_EQ8 0 nos146 motornotbusy146
  motorwaiting146:
	OUTPUT_TEST layer146 nos146 busy146
	JR_EQ8 busy146 0 motornotbusy146
	SLEEP
	JR motorwaiting146
  motornotbusy146:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB147 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB147:
RETSUB_F_TAKE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_0:
SUB_F_TAKE_CUBES_INVERSED_0:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds149
	MOVEF_32 500.0 milliseconds149
	DATA32 timer149
	TIMER_WAIT milliseconds149 timer149
	TIMER_READY timer149
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer153
	DATA8 nos153
	DATA8 busy153
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer153 nos153
	JR_EQ8 0 nos153 motornotbusy153
  motorwaiting153:
	OUTPUT_TEST layer153 nos153 busy153
	JR_EQ8 busy153 0 motornotbusy153
	SLEEP
	JR motorwaiting153
  motornotbusy153:
    MULF -100.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds156
	MOVEF_32 3000.0 milliseconds156
	DATA32 timer156
	TIMER_WAIT milliseconds156 timer156
	TIMER_READY timer156
    WRITE32 ENDSUB_F_STOP_0:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB157:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds161
	MOVEF_32 1000.0 milliseconds161
	DATA32 timer161
	TIMER_WAIT milliseconds161 timer161
	TIMER_READY timer161
    WRITE32 ENDSUB_F_STOP_0:CALLSUB162 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB162:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 20.0 VLV_BASE_POWER_5
    MOVEF_F 20.0 VLV_MIN_POWER_5
    MOVEF_F 930.0 VLV_DEG_5
    MOVEF_F 0.0 VLV_ACCELERATION_5
    MOVEF_F 200.0 VLV_ZAME_5
    WRITE32 ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_ACCELERATION_5
CALLSUB164:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB165:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer166
	DATA8 nos166
	DATA8 busy166
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer166 nos166
	JR_EQ8 0 nos166 motornotbusy166
  motorwaiting166:
	OUTPUT_TEST layer166 nos166 busy166
	JR_EQ8 busy166 0 motornotbusy166
	SLEEP
	JR motorwaiting166
  motornotbusy166:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB167:
RETSUB_F_TAKE_CUBES_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_INVERSED_0:
SUB_F_TAKE_LONG_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer169
	DATA8 nos169
	DATA8 busy169
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer169 nos169
	JR_EQ8 0 nos169 motornotbusy169
  motorwaiting169:
	OUTPUT_TEST layer169 nos169 busy169
	JR_EQ8 busy169 0 motornotbusy169
	SLEEP
	JR motorwaiting169
  motornotbusy169:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds173
	MOVEF_32 1000.0 milliseconds173
	DATA32 timer173
	TIMER_WAIT milliseconds173 timer173
	TIMER_READY timer173
    WRITE32 ENDSUB_F_STOP_0:CALLSUB174 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB174:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB175:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer178
	DATA8 nos178
	DATA8 busy178
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer178 nos178
	JR_EQ8 0 nos178 motornotbusy178
  motorwaiting178:
	OUTPUT_TEST layer178 nos178 busy178
	JR_EQ8 busy178 0 motornotbusy178
	SLEEP
	JR motorwaiting178
  motornotbusy178:
    JR_NEQF VGV_CUBES_COUNT 2.0 else179_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB180:
  else179_1:
  endif179:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer183
	DATA8 nos183
	DATA8 busy183
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer183 nos183
	JR_EQ8 0 nos183 motornotbusy183
  motorwaiting183:
	OUTPUT_TEST layer183 nos183 busy183
	JR_EQ8 busy183 0 motornotbusy183
	SLEEP
	JR motorwaiting183
  motornotbusy183:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer185
	DATA8 nos185
	DATA8 busy185
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer185 nos185
	JR_EQ8 0 nos185 motornotbusy185
  motorwaiting185:
	OUTPUT_TEST layer185 nos185 busy185
	JR_EQ8 busy185 0 motornotbusy185
	SLEEP
	JR motorwaiting185
  motornotbusy185:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_0:
SUB_F_TAKE_LONG_INVERSED_0:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer187
	DATA8 nos187
	DATA8 busy187
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer187 nos187
	JR_EQ8 0 nos187 motornotbusy187
  motorwaiting187:
	OUTPUT_TEST layer187 nos187 busy187
	JR_EQ8 busy187 0 motornotbusy187
	SLEEP
	JR motorwaiting187
  motornotbusy187:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds191
	MOVEF_32 1000.0 milliseconds191
	DATA32 timer191
	TIMER_WAIT milliseconds191 timer191
	TIMER_READY timer191
    WRITE32 ENDSUB_F_STOP_0:CALLSUB192 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB192:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB193:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer196
	DATA8 nos196
	DATA8 busy196
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer196 nos196
	JR_EQ8 0 nos196 motornotbusy196
  motorwaiting196:
	OUTPUT_TEST layer196 nos196 busy196
	JR_EQ8 busy196 0 motornotbusy196
	SLEEP
	JR motorwaiting196
  motornotbusy196:
    JR_NEQF VGV_CUBES_COUNT 2.0 else197_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB198 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB198:
  else197_1:
  endif197:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 95.0 'True'

	DATA8 layer201
	DATA8 nos201
	DATA8 busy201
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer201 nos201
	JR_EQ8 0 nos201 motornotbusy201
  motorwaiting201:
	OUTPUT_TEST layer201 nos201 busy201
	JR_EQ8 busy201 0 motornotbusy201
	SLEEP
	JR motorwaiting201
  motornotbusy201:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 365.0 0.0 'True' 

	DATA8 layer203
	DATA8 nos203
	DATA8 busy203
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer203 nos203
	JR_EQ8 0 nos203 motornotbusy203
  motorwaiting203:
	OUTPUT_TEST layer203 nos203 busy203
	JR_EQ8 busy203 0 motornotbusy203
	SLEEP
	JR motorwaiting203
  motornotbusy203:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_INVERSED_0:
SUB_F_TAKE_NEAR_0:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer205
	DATA8 nos205
	DATA8 busy205
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer205 nos205
	JR_EQ8 0 nos205 motornotbusy205
  motorwaiting205:
	OUTPUT_TEST layer205 nos205 busy205
	JR_EQ8 busy205 0 motornotbusy205
	SLEEP
	JR motorwaiting205
  motornotbusy205:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer207
	DATA8 nos207
	DATA8 busy207
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer207 nos207
	JR_EQ8 0 nos207 motornotbusy207
  motorwaiting207:
	OUTPUT_TEST layer207 nos207 busy207
	JR_EQ8 busy207 0 motornotbusy207
	SLEEP
	JR motorwaiting207
  motornotbusy207:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB208:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    MULF 20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer211
	DATA8 nos211
	DATA8 busy211
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer211 nos211
	JR_EQ8 0 nos211 motornotbusy211
  motorwaiting211:
	OUTPUT_TEST layer211 nos211 busy211
	JR_EQ8 busy211 0 motornotbusy211
	SLEEP
	JR motorwaiting211
  motornotbusy211:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB212:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer215
	DATA8 nos215
	DATA8 busy215
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer215 nos215
	JR_EQ8 0 nos215 motornotbusy215
  motorwaiting215:
	OUTPUT_TEST layer215 nos215 busy215
	JR_EQ8 busy215 0 motornotbusy215
	SLEEP
	JR motorwaiting215
  motornotbusy215:
    JR_NEQF VGV_CUBES_COUNT 2.0 else216_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB217:
  else216_1:
  endif216:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer220
	DATA8 nos220
	DATA8 busy220
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer220 nos220
	JR_EQ8 0 nos220 motornotbusy220
  motorwaiting220:
	OUTPUT_TEST layer220 nos220 busy220
	JR_EQ8 busy220 0 motornotbusy220
	SLEEP
	JR motorwaiting220
  motornotbusy220:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer222
	DATA8 nos222
	DATA8 busy222
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer222 nos222
	JR_EQ8 0 nos222 motornotbusy222
  motorwaiting222:
	OUTPUT_TEST layer222 nos222 busy222
	JR_EQ8 busy222 0 motornotbusy222
	SLEEP
	JR motorwaiting222
  motornotbusy222:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer224
	DATA8 nos224
	DATA8 busy224
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer224 nos224
	JR_EQ8 0 nos224 motornotbusy224
  motorwaiting224:
	OUTPUT_TEST layer224 nos224 busy224
	JR_EQ8 busy224 0 motornotbusy224
	SLEEP
	JR motorwaiting224
  motornotbusy224:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB225:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer228
	DATA8 nos228
	DATA8 busy228
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer228 nos228
	JR_EQ8 0 nos228 motornotbusy228
  motorwaiting228:
	OUTPUT_TEST layer228 nos228 busy228
	JR_EQ8 busy228 0 motornotbusy228
	SLEEP
	JR motorwaiting228
  motornotbusy228:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_0:
SUB_F_TAKE_NEAR_INVERSED_0:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer230
	DATA8 nos230
	DATA8 busy230
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer230 nos230
	JR_EQ8 0 nos230 motornotbusy230
  motorwaiting230:
	OUTPUT_TEST layer230 nos230 busy230
	JR_EQ8 busy230 0 motornotbusy230
	SLEEP
	JR motorwaiting230
  motornotbusy230:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer232
	DATA8 nos232
	DATA8 busy232
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer232 nos232
	JR_EQ8 0 nos232 motornotbusy232
  motorwaiting232:
	OUTPUT_TEST layer232 nos232 busy232
	JR_EQ8 busy232 0 motornotbusy232
	SLEEP
	JR motorwaiting232
  motornotbusy232:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB233:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    MULF 20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer236
	DATA8 nos236
	DATA8 busy236
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer236 nos236
	JR_EQ8 0 nos236 motornotbusy236
  motorwaiting236:
	OUTPUT_TEST layer236 nos236 busy236
	JR_EQ8 busy236 0 motornotbusy236
	SLEEP
	JR motorwaiting236
  motornotbusy236:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB237:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer240
	DATA8 nos240
	DATA8 busy240
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer240 nos240
	JR_EQ8 0 nos240 motornotbusy240
  motorwaiting240:
	OUTPUT_TEST layer240 nos240 busy240
	JR_EQ8 busy240 0 motornotbusy240
	SLEEP
	JR motorwaiting240
  motornotbusy240:
    JR_NEQF VGV_CUBES_COUNT 2.0 else241_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB242:
  else241_1:
  endif241:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    MULF -20.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer245
	DATA8 nos245
	DATA8 busy245
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer245 nos245
	JR_EQ8 0 nos245 motornotbusy245
  motorwaiting245:
	OUTPUT_TEST layer245 nos245 busy245
	JR_EQ8 busy245 0 motornotbusy245
	SLEEP
	JR motorwaiting245
  motornotbusy245:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer247
	DATA8 nos247
	DATA8 busy247
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer247 nos247
	JR_EQ8 0 nos247 motornotbusy247
  motorwaiting247:
	OUTPUT_TEST layer247 nos247 busy247
	JR_EQ8 busy247 0 motornotbusy247
	SLEEP
	JR motorwaiting247
  motornotbusy247:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer249
	DATA8 nos249
	DATA8 busy249
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer249 nos249
	JR_EQ8 0 nos249 motornotbusy249
  motorwaiting249:
	OUTPUT_TEST layer249 nos249 busy249
	JR_EQ8 busy249 0 motornotbusy249
	SLEEP
	JR motorwaiting249
  motornotbusy249:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB250:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer253
	DATA8 nos253
	DATA8 busy253
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer253 nos253
	JR_EQ8 0 nos253 motornotbusy253
  motorwaiting253:
	OUTPUT_TEST layer253 nos253 busy253
	JR_EQ8 busy253 0 motornotbusy253
	SLEEP
	JR motorwaiting253
  motornotbusy253:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_INVERSED_0:
SUB_F_TAKE_BOTH_0:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer255
	DATA8 nos255
	DATA8 busy255
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer255 nos255
	JR_EQ8 0 nos255 motornotbusy255
  motorwaiting255:
	OUTPUT_TEST layer255 nos255 busy255
	JR_EQ8 busy255 0 motornotbusy255
	SLEEP
	JR motorwaiting255
  motornotbusy255:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer258
	DATA8 nos258
	DATA8 busy258
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer258 nos258
	JR_EQ8 0 nos258 motornotbusy258
  motorwaiting258:
	OUTPUT_TEST layer258 nos258 busy258
	JR_EQ8 busy258 0 motornotbusy258
	SLEEP
	JR motorwaiting258
  motornotbusy258:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB259:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer262
	DATA8 nos262
	DATA8 busy262
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer262 nos262
	JR_EQ8 0 nos262 motornotbusy262
  motorwaiting262:
	OUTPUT_TEST layer262 nos262 busy262
	JR_EQ8 busy262 0 motornotbusy262
	SLEEP
	JR motorwaiting262
  motornotbusy262:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB263:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer266
	DATA8 nos266
	DATA8 busy266
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer266 nos266
	JR_EQ8 0 nos266 motornotbusy266
  motorwaiting266:
	OUTPUT_TEST layer266 nos266 busy266
	JR_EQ8 busy266 0 motornotbusy266
	SLEEP
	JR motorwaiting266
  motornotbusy266:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer268
	DATA8 nos268
	DATA8 busy268
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer268 nos268
	JR_EQ8 0 nos268 motornotbusy268
  motorwaiting268:
	OUTPUT_TEST layer268 nos268 busy268
	JR_EQ8 busy268 0 motornotbusy268
	SLEEP
	JR motorwaiting268
  motornotbusy268:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer271
	DATA8 nos271
	DATA8 busy271
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer271 nos271
	JR_EQ8 0 nos271 motornotbusy271
  motorwaiting271:
	OUTPUT_TEST layer271 nos271 busy271
	JR_EQ8 busy271 0 motornotbusy271
	SLEEP
	JR motorwaiting271
  motornotbusy271:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB272:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer275
	DATA8 nos275
	DATA8 busy275
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer275 nos275
	JR_EQ8 0 nos275 motornotbusy275
  motorwaiting275:
	OUTPUT_TEST layer275 nos275 busy275
	JR_EQ8 busy275 0 motornotbusy275
	SLEEP
	JR motorwaiting275
  motornotbusy275:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer277
	DATA8 nos277
	DATA8 busy277
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer277 nos277
	JR_EQ8 0 nos277 motornotbusy277
  motorwaiting277:
	OUTPUT_TEST layer277 nos277 busy277
	JR_EQ8 busy277 0 motornotbusy277
	SLEEP
	JR motorwaiting277
  motornotbusy277:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer279
	DATA8 nos279
	DATA8 busy279
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer279 nos279
	JR_EQ8 0 nos279 motornotbusy279
  motorwaiting279:
	OUTPUT_TEST layer279 nos279 busy279
	JR_EQ8 busy279 0 motornotbusy279
	SLEEP
	JR motorwaiting279
  motornotbusy279:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer282
	DATA8 nos282
	DATA8 busy282
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer282 nos282
	JR_EQ8 0 nos282 motornotbusy282
  motorwaiting282:
	OUTPUT_TEST layer282 nos282 busy282
	JR_EQ8 busy282 0 motornotbusy282
	SLEEP
	JR motorwaiting282
  motornotbusy282:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_0:
SUB_F_TAKE_BOTH_INVERSED_0:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer284
	DATA8 nos284
	DATA8 busy284
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer284 nos284
	JR_EQ8 0 nos284 motornotbusy284
  motorwaiting284:
	OUTPUT_TEST layer284 nos284 busy284
	JR_EQ8 busy284 0 motornotbusy284
	SLEEP
	JR motorwaiting284
  motornotbusy284:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer287
	DATA8 nos287
	DATA8 busy287
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer287 nos287
	JR_EQ8 0 nos287 motornotbusy287
  motorwaiting287:
	OUTPUT_TEST layer287 nos287 busy287
	JR_EQ8 busy287 0 motornotbusy287
	SLEEP
	JR motorwaiting287
  motornotbusy287:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB288:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer291
	DATA8 nos291
	DATA8 busy291
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer291 nos291
	JR_EQ8 0 nos291 motornotbusy291
  motorwaiting291:
	OUTPUT_TEST layer291 nos291 busy291
	JR_EQ8 busy291 0 motornotbusy291
	SLEEP
	JR motorwaiting291
  motornotbusy291:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB292:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer295
	DATA8 nos295
	DATA8 busy295
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer295 nos295
	JR_EQ8 0 nos295 motornotbusy295
  motorwaiting295:
	OUTPUT_TEST layer295 nos295 busy295
	JR_EQ8 busy295 0 motornotbusy295
	SLEEP
	JR motorwaiting295
  motornotbusy295:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer297
	DATA8 nos297
	DATA8 busy297
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer297 nos297
	JR_EQ8 0 nos297 motornotbusy297
  motorwaiting297:
	OUTPUT_TEST layer297 nos297 busy297
	JR_EQ8 busy297 0 motornotbusy297
	SLEEP
	JR motorwaiting297
  motornotbusy297:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer300
	DATA8 nos300
	DATA8 busy300
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer300 nos300
	JR_EQ8 0 nos300 motornotbusy300
  motorwaiting300:
	OUTPUT_TEST layer300 nos300 busy300
	JR_EQ8 busy300 0 motornotbusy300
	SLEEP
	JR motorwaiting300
  motornotbusy300:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB301:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer304
	DATA8 nos304
	DATA8 busy304
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer304 nos304
	JR_EQ8 0 nos304 motornotbusy304
  motorwaiting304:
	OUTPUT_TEST layer304 nos304 busy304
	JR_EQ8 busy304 0 motornotbusy304
	SLEEP
	JR motorwaiting304
  motornotbusy304:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer306
	DATA8 nos306
	DATA8 busy306
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer306 nos306
	JR_EQ8 0 nos306 motornotbusy306
  motorwaiting306:
	OUTPUT_TEST layer306 nos306 busy306
	JR_EQ8 busy306 0 motornotbusy306
	SLEEP
	JR motorwaiting306
  motornotbusy306:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer308
	DATA8 nos308
	DATA8 busy308
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer308 nos308
	JR_EQ8 0 nos308 motornotbusy308
  motorwaiting308:
	OUTPUT_TEST layer308 nos308 busy308
	JR_EQ8 busy308 0 motornotbusy308
	SLEEP
	JR motorwaiting308
  motornotbusy308:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer311
	DATA8 nos311
	DATA8 busy311
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer311 nos311
	JR_EQ8 0 nos311 motornotbusy311
  motorwaiting311:
	OUTPUT_TEST layer311 nos311 busy311
	JR_EQ8 busy311 0 motornotbusy311
	SLEEP
	JR motorwaiting311
  motornotbusy311:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_INVERSED_0:
SUB_F_TAKE_NEAR_DOUBLE_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer313
	DATA8 nos313
	DATA8 busy313
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer313 nos313
	JR_EQ8 0 nos313 motornotbusy313
  motorwaiting313:
	OUTPUT_TEST layer313 nos313 busy313
	JR_EQ8 busy313 0 motornotbusy313
	SLEEP
	JR motorwaiting313
  motornotbusy313:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer315
	DATA8 nos315
	DATA8 busy315
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer315 nos315
	JR_EQ8 0 nos315 motornotbusy315
  motorwaiting315:
	OUTPUT_TEST layer315 nos315 busy315
	JR_EQ8 busy315 0 motornotbusy315
	SLEEP
	JR motorwaiting315
  motornotbusy315:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer318
	DATA8 nos318
	DATA8 busy318
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer318 nos318
	JR_EQ8 0 nos318 motornotbusy318
  motorwaiting318:
	OUTPUT_TEST layer318 nos318 busy318
	JR_EQ8 busy318 0 motornotbusy318
	SLEEP
	JR motorwaiting318
  motornotbusy318:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB319 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB319:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer322
	DATA8 nos322
	DATA8 busy322
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer322 nos322
	JR_EQ8 0 nos322 motornotbusy322
  motorwaiting322:
	OUTPUT_TEST layer322 nos322 busy322
	JR_EQ8 busy322 0 motornotbusy322
	SLEEP
	JR motorwaiting322
  motornotbusy322:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB323:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer326
	DATA8 nos326
	DATA8 busy326
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer326 nos326
	JR_EQ8 0 nos326 motornotbusy326
  motorwaiting326:
	OUTPUT_TEST layer326 nos326 busy326
	JR_EQ8 busy326 0 motornotbusy326
	SLEEP
	JR motorwaiting326
  motornotbusy326:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB327:
RETSUB_F_TAKE_NEAR_DOUBLE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_0:
SUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer329
	DATA8 nos329
	DATA8 busy329
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer329 nos329
	JR_EQ8 0 nos329 motornotbusy329
  motorwaiting329:
	OUTPUT_TEST layer329 nos329 busy329
	JR_EQ8 busy329 0 motornotbusy329
	SLEEP
	JR motorwaiting329
  motornotbusy329:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer331
	DATA8 nos331
	DATA8 busy331
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer331 nos331
	JR_EQ8 0 nos331 motornotbusy331
  motorwaiting331:
	OUTPUT_TEST layer331 nos331 busy331
	JR_EQ8 busy331 0 motornotbusy331
	SLEEP
	JR motorwaiting331
  motornotbusy331:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer334
	DATA8 nos334
	DATA8 busy334
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer334 nos334
	JR_EQ8 0 nos334 motornotbusy334
  motorwaiting334:
	OUTPUT_TEST layer334 nos334 busy334
	JR_EQ8 busy334 0 motornotbusy334
	SLEEP
	JR motorwaiting334
  motornotbusy334:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB335:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer338
	DATA8 nos338
	DATA8 busy338
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer338 nos338
	JR_EQ8 0 nos338 motornotbusy338
  motorwaiting338:
	OUTPUT_TEST layer338 nos338 busy338
	JR_EQ8 busy338 0 motornotbusy338
	SLEEP
	JR motorwaiting338
  motornotbusy338:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB339 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB339:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 158.0 'True'

	DATA8 layer342
	DATA8 nos342
	DATA8 busy342
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer342 nos342
	JR_EQ8 0 nos342 motornotbusy342
  motorwaiting342:
	OUTPUT_TEST layer342 nos342 busy342
	JR_EQ8 busy342 0 motornotbusy342
	SLEEP
	JR motorwaiting342
  motornotbusy342:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB343 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB343:
RETSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer345
	DATA8 nos345
	DATA8 busy345
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer345 nos345
	JR_EQ8 0 nos345 motornotbusy345
  motorwaiting345:
	OUTPUT_TEST layer345 nos345 busy345
	JR_EQ8 busy345 0 motornotbusy345
	SLEEP
	JR motorwaiting345
  motornotbusy345:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer347
	DATA8 nos347
	DATA8 busy347
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer347 nos347
	JR_EQ8 0 nos347 motornotbusy347
  motorwaiting347:
	OUTPUT_TEST layer347 nos347 busy347
	JR_EQ8 busy347 0 motornotbusy347
	SLEEP
	JR motorwaiting347
  motornotbusy347:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer350
	DATA8 nos350
	DATA8 busy350
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer350 nos350
	JR_EQ8 0 nos350 motornotbusy350
  motorwaiting350:
	OUTPUT_TEST layer350 nos350 busy350
	JR_EQ8 busy350 0 motornotbusy350
	SLEEP
	JR motorwaiting350
  motornotbusy350:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB351:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer354
	DATA8 nos354
	DATA8 busy354
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer354 nos354
	JR_EQ8 0 nos354 motornotbusy354
  motorwaiting354:
	OUTPUT_TEST layer354 nos354 busy354
	JR_EQ8 busy354 0 motornotbusy354
	SLEEP
	JR motorwaiting354
  motornotbusy354:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB355:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer358
	DATA8 nos358
	DATA8 busy358
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer358 nos358
	JR_EQ8 0 nos358 motornotbusy358
  motorwaiting358:
	OUTPUT_TEST layer358 nos358 busy358
	JR_EQ8 busy358 0 motornotbusy358
	SLEEP
	JR motorwaiting358
  motornotbusy358:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB359:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:
SUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer361
	DATA8 nos361
	DATA8 busy361
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer361 nos361
	JR_EQ8 0 nos361 motornotbusy361
  motorwaiting361:
	OUTPUT_TEST layer361 nos361 busy361
	JR_EQ8 busy361 0 motornotbusy361
	SLEEP
	JR motorwaiting361
  motornotbusy361:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer363
	DATA8 nos363
	DATA8 busy363
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer363 nos363
	JR_EQ8 0 nos363 motornotbusy363
  motorwaiting363:
	OUTPUT_TEST layer363 nos363 busy363
	JR_EQ8 busy363 0 motornotbusy363
	SLEEP
	JR motorwaiting363
  motornotbusy363:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer366
	DATA8 nos366
	DATA8 busy366
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer366 nos366
	JR_EQ8 0 nos366 motornotbusy366
  motorwaiting366:
	OUTPUT_TEST layer366 nos366 busy366
	JR_EQ8 busy366 0 motornotbusy366
	SLEEP
	JR motorwaiting366
  motornotbusy366:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB367:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer370
	DATA8 nos370
	DATA8 busy370
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer370 nos370
	JR_EQ8 0 nos370 motornotbusy370
  motorwaiting370:
	OUTPUT_TEST layer370 nos370 busy370
	JR_EQ8 busy370 0 motornotbusy370
	SLEEP
	JR motorwaiting370
  motornotbusy370:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB371:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 338.0 'True'

	DATA8 layer374
	DATA8 nos374
	DATA8 busy374
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer374 nos374
	JR_EQ8 0 nos374 motornotbusy374
  motorwaiting374:
	OUTPUT_TEST layer374 nos374 busy374
	JR_EQ8 busy374 0 motornotbusy374
	SLEEP
	JR motorwaiting374
  motornotbusy374:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB375:
RETSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:
SUB_F_FINISH_AFTER_NEAR_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds379
	MOVEF_32 1500.0 milliseconds379
	DATA32 timer379
	TIMER_WAIT milliseconds379 timer379
	TIMER_READY timer379
    WRITE32 ENDSUB_F_STOP_0:CALLSUB380 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB380:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer382
	DATA8 nos382
	DATA8 busy382
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer382 nos382
	JR_EQ8 0 nos382 motornotbusy382
  motorwaiting382:
	OUTPUT_TEST layer382 nos382 busy382
	JR_EQ8 busy382 0 motornotbusy382
	SLEEP
	JR motorwaiting382
  motornotbusy382:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer384
	DATA8 nos384
	DATA8 busy384
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer384 nos384
	JR_EQ8 0 nos384 motornotbusy384
  motorwaiting384:
	OUTPUT_TEST layer384 nos384 busy384
	JR_EQ8 busy384 0 motornotbusy384
	SLEEP
	JR motorwaiting384
  motornotbusy384:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds388
	MOVEF_32 1500.0 milliseconds388
	DATA32 timer388
	TIMER_WAIT milliseconds388 timer388
	TIMER_READY timer388
    WRITE32 ENDSUB_F_STOP_0:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB389:
RETSUB_F_FINISH_AFTER_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_0:
SUB_F_FINISH_AFTER_NEAR_INVERSED_0:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds393
	MOVEF_32 1500.0 milliseconds393
	DATA32 timer393
	TIMER_WAIT milliseconds393 timer393
	TIMER_READY timer393
    WRITE32 ENDSUB_F_STOP_0:CALLSUB394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB394:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 220.0 0.0 'True' 

	DATA8 layer396
	DATA8 nos396
	DATA8 busy396
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer396 nos396
	JR_EQ8 0 nos396 motornotbusy396
  motorwaiting396:
	OUTPUT_TEST layer396 nos396 busy396
	JR_EQ8 busy396 0 motornotbusy396
	SLEEP
	JR motorwaiting396
  motornotbusy396:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer398
	DATA8 nos398
	DATA8 busy398
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer398 nos398
	JR_EQ8 0 nos398 motornotbusy398
  motorwaiting398:
	OUTPUT_TEST layer398 nos398 busy398
	JR_EQ8 busy398 0 motornotbusy398
	SLEEP
	JR motorwaiting398
  motornotbusy398:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds402
	MOVEF_32 3000.0 milliseconds402
	DATA32 timer402
	TIMER_WAIT milliseconds402 timer402
	TIMER_READY timer402
    WRITE32 ENDSUB_F_STOP_0:CALLSUB403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB403:
RETSUB_F_FINISH_AFTER_NEAR_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:
SUB_F_TAKES_INVERSED_0:
    WRITE32 ENDSUB_F_TAKE_CUBES_INVERSED_0:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_INVERSED_0
CALLSUB404:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer407
	DATA8 nos407
	DATA8 busy407
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer407 nos407
	JR_EQ8 0 nos407 motornotbusy407
  motorwaiting407:
	OUTPUT_TEST layer407 nos407 busy407
	JR_EQ8 busy407 0 motornotbusy407
	SLEEP
	JR motorwaiting407
  motornotbusy407:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else408_1
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else408_1
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_INVERSED_0
CALLSUB411:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB412:
    JR endif408
  else408_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else408_2
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else408_2
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer417
	DATA8 nos417
	DATA8 busy417
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer417 nos417
	JR_EQ8 0 nos417 motornotbusy417
  motorwaiting417:
	OUTPUT_TEST layer417 nos417 busy417
	JR_EQ8 busy417 0 motornotbusy417
	SLEEP
	JR motorwaiting417
  motornotbusy417:
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_INVERSED_0:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_INVERSED_0
CALLSUB418:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB419:
    JR endif408
  else408_2:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else408_3
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else408_3
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0:CALLSUB422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_LONG_INVERSED_0
CALLSUB422:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB423 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB423:
    JR endif408
  else408_3:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else424_1
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else424_1
    WRITE32 ENDSUB_F_TAKE_BOTH_INVERSED_0:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_INVERSED_0
CALLSUB427:
    JR endif424
  else424_1:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else424_2
    WRITE32 ENDSUB_F_TAKE_NEAR_INVERSED_0:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_INVERSED_0
CALLSUB429:
    JR endif424
  else424_2:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else424_3
    WRITE32 ENDSUB_F_TAKE_LONG_INVERSED_0:CALLSUB431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_INVERSED_0
CALLSUB431:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer434
	DATA8 nos434
	DATA8 busy434
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer434 nos434
	JR_EQ8 0 nos434 motornotbusy434
  motorwaiting434:
	OUTPUT_TEST layer434 nos434 busy434
	JR_EQ8 busy434 0 motornotbusy434
	SLEEP
	JR motorwaiting434
  motornotbusy434:
    JR endif424
  else424_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer437
	DATA8 nos437
	DATA8 busy437
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer437 nos437
	JR_EQ8 0 nos437 motornotbusy437
  motorwaiting437:
	OUTPUT_TEST layer437 nos437 busy437
	JR_EQ8 busy437 0 motornotbusy437
	SLEEP
	JR motorwaiting437
  motornotbusy437:
  else424_4:
  endif424:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else438_1
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else438_1
    WRITE32 ENDSUB_F_TAKE_BOTH_INVERSED_0:CALLSUB441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_INVERSED_0
CALLSUB441:
    JR endif438
  else438_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else438_2
    WRITE32 ENDSUB_F_TAKE_NEAR_INVERSED_0:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_INVERSED_0
CALLSUB443:
    JR endif438
  else438_2:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else438_3
    WRITE32 ENDSUB_F_TAKE_LONG_INVERSED_0:CALLSUB445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_INVERSED_0
CALLSUB445:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer448
	DATA8 nos448
	DATA8 busy448
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer448 nos448
	JR_EQ8 0 nos448 motornotbusy448
  motorwaiting448:
	OUTPUT_TEST layer448 nos448 busy448
	JR_EQ8 busy448 0 motornotbusy448
	SLEEP
	JR motorwaiting448
  motornotbusy448:
    JR endif438
  else438_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer451
	DATA8 nos451
	DATA8 busy451
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer451 nos451
	JR_EQ8 0 nos451 motornotbusy451
  motorwaiting451:
	OUTPUT_TEST layer451 nos451 busy451
	JR_EQ8 busy451 0 motornotbusy451
	SLEEP
	JR motorwaiting451
  motornotbusy451:
  else438_4:
  endif438:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else452_1
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else452_1
    WRITE32 ENDSUB_F_TAKE_BOTH_INVERSED_0:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_INVERSED_0
CALLSUB455:
    JR endif452
  else452_1:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else452_2
    WRITE32 ENDSUB_F_TAKE_NEAR_INVERSED_0:CALLSUB457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_INVERSED_0
CALLSUB457:
    JR endif452
  else452_2:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else452_3
    WRITE32 ENDSUB_F_TAKE_LONG_INVERSED_0:CALLSUB459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_INVERSED_0
CALLSUB459:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer462
	DATA8 nos462
	DATA8 busy462
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer462 nos462
	JR_EQ8 0 nos462 motornotbusy462
  motorwaiting462:
	OUTPUT_TEST layer462 nos462 busy462
	JR_EQ8 busy462 0 motornotbusy462
	SLEEP
	JR motorwaiting462
  motornotbusy462:
    JR endif452
  else452_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer465
	DATA8 nos465
	DATA8 busy465
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer465 nos465
	JR_EQ8 0 nos465 motornotbusy465
  motorwaiting465:
	OUTPUT_TEST layer465 nos465 busy465
	JR_EQ8 busy465 0 motornotbusy465
	SLEEP
	JR motorwaiting465
  motornotbusy465:
  else452_4:
  endif452:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_INVERSED_0:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_INVERSED_0
CALLSUB466:
  else408_4:
  endif408:
RETSUB_F_TAKES_INVERSED_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKES_INVERSED_0:
SUB_F_TAKES_NORMAL_0:
    WRITE32 ENDSUB_F_TAKE_CUBES_0:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_0
CALLSUB467:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer470
	DATA8 nos470
	DATA8 busy470
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer470 nos470
	JR_EQ8 0 nos470 motornotbusy470
  motorwaiting470:
	OUTPUT_TEST layer470 nos470 busy470
	JR_EQ8 busy470 0 motornotbusy470
	SLEEP
	JR motorwaiting470
  motornotbusy470:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else471_1
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else471_1
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB474:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB475:
    JR endif471
  else471_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else471_2
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else471_2
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer480
	DATA8 nos480
	DATA8 busy480
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer480 nos480
	JR_EQ8 0 nos480 motornotbusy480
  motorwaiting480:
	OUTPUT_TEST layer480 nos480 busy480
	JR_EQ8 busy480 0 motornotbusy480
	SLEEP
	JR motorwaiting480
  motornotbusy480:
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_0:CALLSUB481 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_0
CALLSUB481:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB482:
    JR endif471
  else471_2:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else471_3
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else471_3
    WRITE32 ENDSUB_F_TAKE_NEAR_DOUBLE_LONG_0:CALLSUB485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_DOUBLE_LONG_0
CALLSUB485:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB486:
    JR endif471
  else471_3:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_1
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB490:
    JR endif487
  else487_1:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB492:
    JR endif487
  else487_2:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB494:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer497
	DATA8 nos497
	DATA8 busy497
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer497 nos497
	JR_EQ8 0 nos497 motornotbusy497
  motorwaiting497:
	OUTPUT_TEST layer497 nos497 busy497
	JR_EQ8 busy497 0 motornotbusy497
	SLEEP
	JR motorwaiting497
  motornotbusy497:
    JR endif487
  else487_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer500
	DATA8 nos500
	DATA8 busy500
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer500 nos500
	JR_EQ8 0 nos500 motornotbusy500
  motorwaiting500:
	OUTPUT_TEST layer500 nos500 busy500
	JR_EQ8 busy500 0 motornotbusy500
	SLEEP
	JR motorwaiting500
  motornotbusy500:
  else487_4:
  endif487:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else501_1
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else501_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB504:
    JR endif501
  else501_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else501_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB506:
    JR endif501
  else501_2:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else501_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB508:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer511
	DATA8 nos511
	DATA8 busy511
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer511 nos511
	JR_EQ8 0 nos511 motornotbusy511
  motorwaiting511:
	OUTPUT_TEST layer511 nos511 busy511
	JR_EQ8 busy511 0 motornotbusy511
	SLEEP
	JR motorwaiting511
  motornotbusy511:
    JR endif501
  else501_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer514
	DATA8 nos514
	DATA8 busy514
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer514 nos514
	JR_EQ8 0 nos514 motornotbusy514
  motorwaiting514:
	OUTPUT_TEST layer514 nos514 busy514
	JR_EQ8 busy514 0 motornotbusy514
	SLEEP
	JR motorwaiting514
  motornotbusy514:
  else501_4:
  endif501:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else515_1
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else515_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB518:
    JR endif515
  else515_1:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else515_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB520:
    JR endif515
  else515_2:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else515_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB522:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer525
	DATA8 nos525
	DATA8 busy525
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer525 nos525
	JR_EQ8 0 nos525 motornotbusy525
  motorwaiting525:
	OUTPUT_TEST layer525 nos525 busy525
	JR_EQ8 busy525 0 motornotbusy525
	SLEEP
	JR motorwaiting525
  motornotbusy525:
    JR endif515
  else515_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer528
	DATA8 nos528
	DATA8 busy528
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer528 nos528
	JR_EQ8 0 nos528 motornotbusy528
  motorwaiting528:
	OUTPUT_TEST layer528 nos528 busy528
	JR_EQ8 busy528 0 motornotbusy528
	SLEEP
	JR motorwaiting528
  motornotbusy528:
  else515_4:
  endif515:
    WRITE32 ENDSUB_F_FINISH_AFTER_NEAR_0:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_NEAR_0
CALLSUB529:
  else471_4:
  endif471:
RETSUB_F_TAKES_NORMAL_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKES_NORMAL_0:
SUB_F_GO_FORWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 25.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 25.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_0:
SUB_F_GO_BACKWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 0.5 VGV_DIFF
    SUBF -25.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF -25.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_BACKWARD_0:
SUB_F_MOVE_FORWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while556:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile556
  whilebody556:
    WRITE32 ENDSUB_F_GO_FORWARD_0:CALLSUB558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_0
CALLSUB558:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody556
  endwhile556:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB560:
RETSUB_F_MOVE_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_0:
SUB_F_MOVE_BACKWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while563:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_LTEQF F.0 F.1 endwhile563
  whilebody563:
    WRITE32 ENDSUB_F_GO_BACKWARD_0:CALLSUB566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_0
CALLSUB566:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_GTF F.0 F.1 whilebody563
  endwhile563:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB569:
RETSUB_F_MOVE_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_0:
SUB_F_ULTRASONIC_POWER_2:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VLV_V_1
    SUBF VLV_V_1 VLV_U_1 VLV_NOWERROR_1
    SUBF VGV_LASTERROR VLV_NOWERROR_1 VLV_DIF_1
    ADDF VGV_INTEGRAL VLV_NOWERROR_1 F.0
    DATAF tmpf574
    DATA8 flag574
    DIVF F.0 10.0 tmpf574
    CP_EQF 0.0 10.0 flag574
    SELECTF flag574 0.0 tmpf574 VLV_INTEGRAL_1

    SUBF VLV_NOWERROR_1 VGV_LASTERROR VLV_DERIVATIVE_1
    MULF VLV_NOWERROR_1 VGV_P_U F.0
    MULF VLV_INTEGRAL_1 VGV_D_U F.1
    ADDF F.0 F.1 VLV_UP_1
    ADDF VLV_POWER_1 VLV_UP_1 F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF VLV_POWER_1 VLV_UP_1 F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VLV_NOWERROR_1 VLV_LASTERROR_1
RETSUB_F_ULTRASONIC_POWER_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_POWER_2:
SUB_F_AFTER_ACTION_0:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB585 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB585:
    DATA32 milliseconds586
	MOVEF_32 300.0 milliseconds586
	DATA32 timer586
	TIMER_WAIT milliseconds586 timer586
	TIMER_READY timer586
RETSUB_F_AFTER_ACTION_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_AFTER_ACTION_0:
SUB_F_ULTRASONIC_ZAMED_5:
    SUBF VLV_DEGREES_3 VLV_ZAMED_DEGREES_3 VLV_NORMAL_DEGREES_3
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while589:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VLV_NORMAL_DEGREES_3 endwhile589
  whilebody589:
    MOVEF_F VLV_BASE_POWER_3 VLV_POWER_1
    MOVEF_F VLV_U_3 VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB591:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VLV_NORMAL_DEGREES_3 whilebody589
  endwhile589:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_3
  while595:
    JR_GTEQF VLV_C_3 VLV_ZAMED_DEGREES_3 endwhile595
  whilebody595:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.1
    DATAF tmpf597
    DATA8 flag597
    DIVF F.1 VLV_ZAMED_DEGREES_3 tmpf597
    CP_EQF 0.0 VLV_ZAMED_DEGREES_3 flag597
    SELECTF flag597 0.0 tmpf597 F.0

    MULF F.0 VLV_BASE_POWER_3 VLV_MINUS_3
    SUBF VLV_BASE_POWER_3 VLV_MINUS_3 VLV_POWER_3
    JR_GTEQF VLV_POWER_3 VLV_MIN_POWER_3 else600_1
    MOVEF_F VLV_MIN_POWER_3 VLV_POWER_3
  else600_1:
  endif600:
    MOVEF_F VLV_POWER_3 VLV_POWER_1
    MOVEF_F VLV_U_3 VLV_U_1
    WRITE32 ENDSUB_F_ULTRASONIC_POWER_2:CALLSUB601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_POWER_2
CALLSUB601:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_3
    JR_LTF VLV_C_3 VLV_ZAMED_DEGREES_3 whilebody595
  endwhile595:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB603:
RETSUB_F_ULTRASONIC_ZAMED_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_ZAMED_5:
SUB_F_RESET_0:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_MOVE_FORWARD_ACCELERATION_5:
    SUBF VLV_DEG_5 VLV_ACCELERATION_5 F.0
    SUBF F.0 VLV_ZAME_5 VLV_NORMAL_DEGREES_5
    WRITE32 ENDSUB_F_RESET_0:CALLSUB608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB608:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
  while610:
    JR_GTEQF VLV_C_5 VLV_ACCELERATION_5 endwhile610
  whilebody610:
    DATAF tmpf611
    DATA8 flag611
    DIVF VLV_C_5 VLV_ACCELERATION_5 tmpf611
    CP_EQF 0.0 VLV_ACCELERATION_5 flag611
    SELECTF flag611 0.0 tmpf611 VLV_P_5

    SUBF VLV_BASE_POWER_5 VLV_MIN_POWER_5 F.1
    MULF VLV_P_5 F.1 F.0
    ADDF F.0 VLV_MIN_POWER_5 VLV_POWER_5
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 VLV_P_5 VLV_DELTA_5
    SUBF VLV_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
    JR_LTF VLV_C_5 VLV_ACCELERATION_5 whilebody610
  endwhile610:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB627:
    MOVEF_F 0.0 VLV_C_5
  while628:
    JR_GTEQF VLV_C_5 VLV_NORMAL_DEGREES_5 endwhile628
  whilebody628:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 1.0 VLV_DELTA_5
    SUBF VLV_BASE_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_BASE_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
    JR_LTF VLV_C_5 VLV_NORMAL_DEGREES_5 whilebody628
  endwhile628:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB641:
    MOVEF_F 0.0 VLV_C_5
  while642:
    JR_GTEQF VLV_C_5 VLV_ZAME_5 endwhile642
  whilebody642:
    DATAF tmpf643
    DATA8 flag643
    DIVF VLV_C_5 VLV_ZAME_5 tmpf643
    CP_EQF 0.0 VLV_ZAME_5 flag643
    SELECTF flag643 0.0 tmpf643 VLV_P_5

    SUBF VLV_BASE_POWER_5 VLV_MIN_POWER_5 F.1
    SUBF 1.0 VLV_P_5 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_5 VLV_POWER_5
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    SUBF 1.0 VLV_P_5 F.1
    MULF F.0 F.1 VLV_DELTA_5
    SUBF VLV_POWER_5 VLV_DELTA_5 VLV_LEFT_POWER_5
    ADDF VLV_POWER_5 VLV_DELTA_5 VLV_RIGHT_POWER_5
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_5 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_5 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR VLV_C_5
    JR_LTF VLV_C_5 VLV_ZAME_5 whilebody642
  endwhile642:
RETSUB_F_MOVE_FORWARD_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_ACCELERATION_5:
SUB_F_ROTATE_LEFT_ACCELERATION_5:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB661 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB661:
    SUBF VLV_DEG_7 VLV_ACCELERATION_7 F.0
    SUBF F.0 VLV_ZAME_7 VLV_NORMAL_DEG_7
    MOVEF_F 0.0 VLV_R_7
  while664:
    JR_GTEQF VLV_R_7 VLV_ACCELERATION_7 endwhile664
  whilebody664:
    DATAF tmpf665
    DATA8 flag665
    DIVF VLV_R_7 VLV_ACCELERATION_7 tmpf665
    CP_EQF 0.0 VLV_ACCELERATION_7 flag665
    SELECTF flag665 0.0 tmpf665 VLV_P_7

    SUBF VLV_BASE_POWER_7 VLV_MIN_POWER_7 F.1
    MULF VLV_P_7 F.1 F.0
    ADDF F.0 VLV_MIN_POWER_7 VLV_POWER_7
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 -1.0 VLV_L_7
    SUBF VLV_R_7 VLV_L_7 F.0
    MULF F.0 VLV_P_7 VLV_DELTA_7
    SUBF VLV_POWER_7 VLV_DELTA_7 VLV_RIGHT_POWER_7
    ADDF VLV_POWER_7 VLV_DELTA_7 VLV_LEFT_POWER_7
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_7 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_7 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds680
	MOVEF_32 10.0 milliseconds680
	DATA32 timer680
	TIMER_WAIT milliseconds680 timer680
	TIMER_READY timer680
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_7
    JR_LTF VLV_R_7 VLV_ACCELERATION_7 whilebody664
  endwhile664:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB683:
    MOVEF_F 0.0 VLV_R_7
  while684:
    JR_GTEQF VLV_R_7 VLV_NORMAL_DEG_7 endwhile684
  whilebody684:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 -1.0 VLV_L_7
    SUBF VLV_R_7 VLV_L_7 F.0
    MULF F.0 1.0 VLV_DELTA_7
    SUBF VLV_BASE_POWER_7 VLV_DELTA_7 VLV_RIGHT_POWER_7
    ADDF VLV_BASE_POWER_7 VLV_DELTA_7 VLV_LEFT_POWER_7
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_7 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_7 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_7
    JR_LTF VLV_R_7 VLV_NORMAL_DEG_7 whilebody684
  endwhile684:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB698:
    MOVEF_F 0.0 VLV_R_7
  while699:
    JR_GTEQF VLV_R_7 VLV_ZAME_7 endwhile699
  whilebody699:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 -1.0 VLV_L_7
    DATAF tmpf703
    DATA8 flag703
    DIVF VLV_R_7 VLV_ZAME_7 tmpf703
    CP_EQF 0.0 VLV_ZAME_7 flag703
    SELECTF flag703 0.0 tmpf703 VLV_P_7

    SUBF VLV_R_7 VLV_L_7 F.0
    SUBF 1.0 VLV_P_7 F.1
    MULF F.0 F.1 VLV_DELTA_7
    SUBF 1.0 VLV_P_7 F.1
    SUBF VLV_BASE_POWER_7 VLV_MIN_POWER_7 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_7 VLV_POWER_7
    SUBF VLV_POWER_7 VLV_DELTA_7 VLV_RIGHT_POWER_7
    ADDF VLV_POWER_7 VLV_DELTA_7 VLV_LEFT_POWER_7
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_7 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_7 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds717
	MOVEF_32 10.0 milliseconds717
	DATA32 timer717
	TIMER_WAIT milliseconds717 timer717
	TIMER_READY timer717
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_7
    JR_LTF VLV_R_7 VLV_ZAME_7 whilebody699
  endwhile699:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB720:
RETSUB_F_ROTATE_LEFT_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ROTATE_LEFT_ACCELERATION_5:
SUB_F_MOVE_BACKWARD_ACCELERATION_5:
    SUBF VLV_DEG_8 VLV_ACCELERATION_8 F.0
    SUBF F.0 VLV_ZAME_8 VLV_NORMAL_DEGREES_8
    WRITE32 ENDSUB_F_RESET_0:CALLSUB723 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB723:
    MOVEF_F 0.0 VLV_C_8
  while724:
    JR_GTEQF VLV_C_8 VLV_ACCELERATION_8 endwhile724
  whilebody724:
    DATAF tmpf725
    DATA8 flag725
    DIVF VLV_C_8 VLV_ACCELERATION_8 tmpf725
    CP_EQF 0.0 VLV_ACCELERATION_8 flag725
    SELECTF flag725 0.0 tmpf725 VLV_P_8

    SUBF VLV_BASE_POWER_8 VLV_MIN_POWER_8 F.1
    MULF VLV_P_8 F.1 F.0
    ADDF F.0 VLV_MIN_POWER_8 VLV_POWER_8
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.4
    MULF F.4 VGV_RIGHT_FORWARD F.3
    SUBF F.2 F.3 F.1
    MULF F.1 VLV_P_8 F.0
    MULF F.0 -1.0 VLV_DELTA_8
    SUBF VLV_POWER_8 VLV_DELTA_8 VLV_LEFT_POWER_8
    ADDF VLV_POWER_8 VLV_DELTA_8 VLV_RIGHT_POWER_8
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_8 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_8 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_8
    JR_LTF VLV_C_8 VLV_ACCELERATION_8 whilebody724
  endwhile724:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB745:
    MOVEF_F 0.0 VLV_C_8
  while746:
    JR_GTEQF VLV_C_8 VLV_NORMAL_DEGREES_8 endwhile746
  whilebody746:
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.2
    MULF F.2 VGV_LEFT_FORWARD F.1
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF F.1 F.2 F.0
    MULF F.0 -1.0 VLV_DELTA_8
    SUBF VLV_BASE_POWER_8 VLV_DELTA_8 VLV_LEFT_POWER_8
    ADDF VLV_BASE_POWER_8 VLV_DELTA_8 VLV_RIGHT_POWER_8
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_8 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_8 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_8
    JR_LTF VLV_C_8 VLV_NORMAL_DEGREES_8 whilebody746
  endwhile746:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB762:
    MOVEF_F 0.0 VLV_C_8
  while763:
    JR_GTEQF VLV_C_8 VLV_ZAME_8 endwhile763
  whilebody763:
    DATAF tmpf764
    DATA8 flag764
    DIVF VLV_C_8 VLV_ZAME_8 tmpf764
    CP_EQF 0.0 VLV_ZAME_8 flag764
    SELECTF flag764 0.0 tmpf764 VLV_P_8

    SUBF VLV_BASE_POWER_8 VLV_MIN_POWER_8 F.1
    SUBF 1.0 VLV_P_8 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_8 VLV_POWER_8
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.4
    MULF F.4 VGV_RIGHT_FORWARD F.3
    SUBF F.2 F.3 F.1
    SUBF 1.0 VLV_P_8 F.2
    MULF F.1 F.2 F.0
    MULF F.0 -1.0 VLV_DELTA_8
    SUBF VLV_POWER_8 VLV_DELTA_8 VLV_LEFT_POWER_8
    ADDF VLV_POWER_8 VLV_DELTA_8 VLV_RIGHT_POWER_8
    MULF VGV_LEFT_FORWARD VLV_LEFT_POWER_8 F.1
    MULF F.1 -1.0 F.0
    MULF VGV_RIGHT_FORWARD VLV_RIGHT_POWER_8 F.2
    MULF F.2 -1.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF F.0 -1.0 VLV_C_8
    JR_LTF VLV_C_8 VLV_ZAME_8 whilebody763
  endwhile763:
RETSUB_F_MOVE_BACKWARD_ACCELERATION_5:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_ACCELERATION_5:
SUB_F_MOTOR_FORWARD_ACCELERATION_7:
    SUBF VLV_DEG_9 VLV_ACCELERATION_9 F.0
    SUBF F.0 VLV_ZAME_9 VLV_NORMAL_DEG_9
    CALL MOTOR.RESETCOUNT VLV_MOTOR_9
    MOVEF_F 0.0 VLV_C_9
  while789:
    JR_GTEQF VLV_C_9 VLV_ACCELERATION_9 endwhile789
  whilebody789:
    DATAF tmpf790
    DATA8 flag790
    DIVF VLV_C_9 VLV_ACCELERATION_9 tmpf790
    CP_EQF 0.0 VLV_ACCELERATION_9 flag790
    SELECTF flag790 0.0 tmpf790 VLV_P_9

    SUBF VLV_BASE_POWER_9 VLV_MIN_POWER_9 F.1
    MULF F.1 VLV_P_9 F.0
    ADDF F.0 VLV_MIN_POWER_9 VLV_POWER_9
    MATH FLOOR VLV_POWER_9 F.0
    MULF F.0 VLV_FORWARD_9 VLV_POWER_9
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_POWER_9 '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    CALL MOTOR.START VLV_MOTOR_9 VLV_POWER_9
    CALL MOTOR.GETCOUNT VLV_MOTOR_9 F.0
    MULF F.0 VLV_FORWARD_9 VLV_C_9
    DATA32 milliseconds804
	MOVEF_32 10.0 milliseconds804
	DATA32 timer804
	TIMER_WAIT milliseconds804 timer804
	TIMER_READY timer804
    JR_LTF VLV_C_9 VLV_ACCELERATION_9 whilebody789
  endwhile789:
    MULF VLV_BASE_POWER_9 VLV_FORWARD_9 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_9 F.0 0.0 VLV_NORMAL_DEG_9 0.0 'False' 

	DATA8 layer806
	DATA8 nos806
	DATA8 busy806
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_9 layer806 nos806
	JR_EQ8 0 nos806 motornotbusy806
  motorwaiting806:
	OUTPUT_TEST layer806 nos806 busy806
	JR_EQ8 busy806 0 motornotbusy806
	SLEEP
	JR motorwaiting806
  motornotbusy806:
    CALL MOTOR.RESETCOUNT VLV_MOTOR_9
    MOVEF_F 0.0 VLV_C_9
  while808:
    JR_GTEQF VLV_C_9 VLV_ZAME_9 endwhile808
  whilebody808:
    DATAF tmpf809
    DATA8 flag809
    DIVF VLV_C_9 VLV_ZAME_9 tmpf809
    CP_EQF 0.0 VLV_ZAME_9 flag809
    SELECTF flag809 0.0 tmpf809 VLV_P_9

    SUBF VLV_BASE_POWER_9 VLV_MIN_POWER_9 F.1
    SUBF 1.0 VLV_P_9 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_9 VLV_POWER_9
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VLV_POWER_9 '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
    MULF VLV_POWER_9 VLV_FORWARD_9 F.0
    CALL MOTOR.START VLV_MOTOR_9 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_9 F.0
    MULF F.0 VLV_FORWARD_9 VLV_C_9
    DATA32 milliseconds823
	MOVEF_32 10.0 milliseconds823
	DATA32 timer823
	TIMER_WAIT milliseconds823 timer823
	TIMER_READY timer823
    JR_LTF VLV_C_9 VLV_ZAME_9 whilebody808
  endwhile808:
RETSUB_F_MOTOR_FORWARD_ACCELERATION_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOTOR_FORWARD_ACCELERATION_7:
SUB_F_MOTOR_BACKWARD_ACCELERATION_7:
    SUBF VLV_DEG_10 VLV_ACCELERATION_10 F.0
    SUBF F.0 VLV_ZAME_10 VLV_NORMAL_DEG_10
    CALL MOTOR.RESETCOUNT VLV_MOTOR_10
    MOVEF_F 0.0 VLV_C_10
  while827:
    JR_GTEQF VLV_C_10 VLV_ACCELERATION_10 endwhile827
  whilebody827:
    DATAF tmpf828
    DATA8 flag828
    DIVF VLV_C_10 VLV_ACCELERATION_10 tmpf828
    CP_EQF 0.0 VLV_ACCELERATION_10 flag828
    SELECTF flag828 0.0 tmpf828 F.1

    SUBF VLV_BASE_POWER_10 VLV_MIN_POWER_10 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_10 VLV_POWER_10
    MULF VLV_FORWARD_10 VLV_POWER_10 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VLV_MOTOR_10 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_10 F.1
    MULF F.1 VLV_FORWARD_10 F.0
    MULF F.0 -1.0 VLV_C_10
    DATA32 milliseconds838
	MOVEF_32 10.0 milliseconds838
	DATA32 timer838
	TIMER_WAIT milliseconds838 timer838
	TIMER_READY timer838
    JR_LTF VLV_C_10 VLV_ACCELERATION_10 whilebody827
  endwhile827:
    MULF VLV_FORWARD_10 VLV_BASE_POWER_10 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_10 F.0 0.0 VLV_NORMAL_DEG_10 0.0 'False' 

	DATA8 layer841
	DATA8 nos841
	DATA8 busy841
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_10 layer841 nos841
	JR_EQ8 0 nos841 motornotbusy841
  motorwaiting841:
	OUTPUT_TEST layer841 nos841 busy841
	JR_EQ8 busy841 0 motornotbusy841
	SLEEP
	JR motorwaiting841
  motornotbusy841:
    CALL MOTOR.RESETCOUNT VLV_MOTOR_10
    MOVEF_F 0.0 VLV_C_10
  while843:
    JR_GTEQF VLV_C_10 VLV_ZAME_10 endwhile843
  whilebody843:
    DATAF tmpf844
    DATA8 flag844
    DIVF VLV_C_10 VLV_ZAME_10 tmpf844
    CP_EQF 0.0 VLV_ZAME_10 flag844
    SELECTF flag844 0.0 tmpf844 VLV_P_10

    SUBF VLV_BASE_POWER_10 VLV_MIN_POWER_10 F.1
    SUBF 1.0 VLV_P_10 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_10 VLV_POWER_10
    MULF VLV_FORWARD_10 VLV_POWER_10 F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VLV_MOTOR_10 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_10 F.1
    MULF F.1 VLV_FORWARD_10 F.0
    MULF F.0 -1.0 VLV_C_10
    DATA32 milliseconds855
	MOVEF_32 10.0 milliseconds855
	DATA32 timer855
	TIMER_WAIT milliseconds855 timer855
	TIMER_READY timer855
    JR_LTF VLV_C_10 VLV_ZAME_10 whilebody843
  endwhile843:
RETSUB_F_MOTOR_BACKWARD_ACCELERATION_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOTOR_BACKWARD_ACCELERATION_7:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
