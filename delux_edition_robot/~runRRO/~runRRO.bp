lv_base_power_9 = 0
lv_min_power_9 = 0
lv_deg_9 = 0
lv_coef_9 = 0
lv_base_power_13 = 0
lv_min_power_13 = 0
lv_deg_13 = 0
lv_coef_13 = 0
lv_motor_12 = ""
lv_forward_12 = 0
lv_deg_12 = 0
lv_max_power_12 = 0
lv_acceleration_12 = ""
lv_zame_12 = ""
lv_to_stop_12 = ""
lv_time_6 = 0
lv_percent_14 = 0
lv_power_1 = 0
lv_a_4 = 0
lv_deg_11 = 0
lv_power_11 = 0
lv_power_10 = 0
lv_l_3 = 0
lv_to_delay_15 = ""
lv_l_2 = 0
gv_p = 0
gv_line = 0
gv_left_sensor = 0
gv_right_sensor = 0
gv_ultrasonic = 0
gv_left_motor = ""
gv_right_motor = ""
gv_not_inverted_motor = ""
gv_motors = ""
gv_left_forward = 0
gv_right_forward = 0
gv_grabber_motor = ""
gv_water_motor = ""
gv_left_max = 0
gv_left_min = 0
gv_last_err = 0
gv_last_motor_err = 0
gv_brown = ""
gv_red = ""
gv_yellow = ""
gv_green = ""
gv_blue = ""
gv_white = ""
gv_brown_man = ""
gv_red_man = ""
gv_yellow_man = ""
gv_green_man = ""
gv_blue_man = ""
gv_white_man = ""
gv_water_state = 0
gv_fire_count = 0
gv_men_count = 0
gv_chem = ""
gv_take_chem_in_yellow = ""
gv_line = 1
gv_left_sensor = 2
gv_right_sensor = 3
gv_ultrasonic = 4
gv_left_motor = "A"
gv_right_motor = "B"
gv_not_inverted_motor = "B"
gv_motors = gv_left_motor + gv_right_motor
gv_left_forward = - 1
gv_right_forward = 1
gv_grabber_motor = "C"
gv_water_motor = "D"
gv_left_max = 40
gv_left_min = 5
gv_last_err = 0
gv_last_motor_err = 0
gv_brown = "False"
gv_red = "False"
gv_yellow = "False"
gv_green = "False"
gv_blue = "False"
gv_white = "False"
gv_brown_man = "False"
gv_red_man = "False"
gv_yellow_man = "False"
gv_green_man = "False"
gv_blue_man = "False"
gv_white_man = "False"
gv_water_state = 0
gv_fire_count = 0
gv_men_count = 0
gv_chem = "False"
gv_take_chem_in_yellow = "False"
Sensor.SetMode ( gv_line , 0 )
Sensor.SetMode ( gv_left_sensor , 1 )
Sensor.SetMode ( gv_right_sensor , 1 )
Sensor.SetMode ( gv_ultrasonic , 0 )
If EV3.BatteryVoltage < 8 Then
f_beep_0 ()
Speaker.Wait ()
f_beep_0 ()
EndIf
Motor.Start ( gv_water_motor , 50 )
Program.Delay ( 700 )
Motor.Stop ( gv_water_motor , "True" )
lv_base_power_9 = 30
lv_min_power_9 = 30
lv_deg_9 = 40
lv_coef_9 = - 1
f_speedup_4 ()
f_stop_0 ()
Motor.Move ( gv_water_motor , - 50 , 90 , "True" )
lv_base_power_9 = 30
lv_min_power_9 = 30
lv_deg_9 = 100
lv_coef_9 = - 1
f_speedup_4 ()
Sub f_beep_0
Speaker.Tone ( 100 , 500 , 200 )
EndSub
Sub f_kick_water_0
If gv_water_state = 0 Then
Motor.Start ( gv_water_motor , 50 )
Program.Delay ( 500 )
Motor.Stop ( gv_water_motor , "True" )
Motor.Move ( gv_water_motor , - 50 , 20 , "True" )
gv_water_state = 1
Else
Motor.Start ( gv_water_motor , - 50 )
Program.Delay ( 500 )
Motor.Stop ( gv_water_motor , "True" )
Motor.Move ( gv_water_motor , 50 , 20 , "True" )
EndIf
EndSub
Sub f_take_chem_on_right_0
lv_base_power_9 = 30
lv_min_power_9 = 20
lv_deg_9 = 50
lv_coef_9 = - 1
f_speedup_4 ()
lv_base_power_13 = 30
lv_min_power_13 = 20
lv_deg_13 = 50
lv_coef_13 = - 1
f_zame_4 ()
MotorA.OffAndBrake ()
lv_motor_12 = gv_right_motor
lv_forward_12 = gv_right_forward * - 1
lv_deg_12 = 100
lv_max_power_12 = 30
lv_acceleration_12 = "False"
lv_zame_12 = "True"
lv_to_stop_12 = "True"
f_move_motor_7 ()
Motor.Move ( gv_grabber_motor , 50 , 170 , "True" )
lv_base_power_9 = 30
lv_min_power_9 = 20
lv_deg_9 = 50
lv_coef_9 = 1
f_speedup_4 ()
lv_base_power_13 = 30
lv_min_power_13 = 20
lv_deg_13 = 50
lv_coef_13 = 1
f_zame_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , 50 , 110 , "True" )
lv_base_power_9 = 30
lv_min_power_9 = 20
lv_deg_9 = 60
lv_coef_9 = - 1
f_speedup_4 ()
lv_base_power_13 = 30
lv_min_power_13 = 15
lv_deg_13 = 60
lv_coef_13 = - 1
f_zame_4 ()
f_stop_0 ()
lv_time_6 = 300
f_delay_1 ()
lv_motor_12 = gv_right_motor
lv_forward_12 = gv_right_forward
lv_deg_12 = 85
lv_max_power_12 = 30
lv_acceleration_12 = "True"
lv_zame_12 = "True"
lv_to_stop_12 = "True"
f_move_motor_7 ()
f_stop_0 ()
lv_time_6 = 300
f_delay_1 ()
lv_base_power_9 = 30
lv_min_power_9 = 20
lv_deg_9 = 100
lv_coef_9 = 1
f_speedup_4 ()
gv_chem = "True"
EndSub
Sub f_take_chem_on_left_0
lv_base_power_9 = 30
lv_min_power_9 = 20
lv_deg_9 = 50
lv_coef_9 = - 1
f_speedup_4 ()
lv_base_power_13 = 30
lv_min_power_13 = 20
lv_deg_13 = 50
lv_coef_13 = - 1
f_zame_4 ()
MotorB.OffAndBrake ()
lv_motor_12 = gv_left_motor
lv_forward_12 = gv_left_forward * - 1
lv_deg_12 = 100
lv_max_power_12 = 30
lv_acceleration_12 = "False"
lv_zame_12 = "True"
lv_to_stop_12 = "True"
f_move_motor_7 ()
Motor.Move ( gv_grabber_motor , 50 , 170 , "True" )
lv_base_power_9 = 30
lv_min_power_9 = 20
lv_deg_9 = 50
lv_coef_9 = 1
f_speedup_4 ()
lv_base_power_13 = 30
lv_min_power_13 = 20
lv_deg_13 = 50
lv_coef_13 = 1
f_zame_4 ()
f_stop_0 ()
Motor.Move ( gv_grabber_motor , 50 , 110 , "True" )
lv_base_power_9 = 30
lv_min_power_9 = 20
lv_deg_9 = 60
lv_coef_9 = - 1
f_speedup_4 ()
lv_base_power_13 = 30
lv_min_power_13 = 15
lv_deg_13 = 60
lv_coef_13 = - 1
f_zame_4 ()
f_stop_0 ()
lv_time_6 = 300
f_delay_1 ()
lv_motor_12 = gv_left_motor
lv_forward_12 = gv_left_forward
lv_deg_12 = 85
lv_max_power_12 = 30
lv_acceleration_12 = "True"
lv_zame_12 = "True"
lv_to_stop_12 = "True"
f_move_motor_7 ()
f_stop_0 ()
lv_time_6 = 300
f_delay_1 ()
lv_base_power_9 = 30
lv_min_power_9 = 20
lv_deg_9 = 100
lv_coef_9 = 1
f_speedup_4 ()
gv_chem = "True"
EndSub
Sub f_movement_init_1
MotorA.StartPower ( lv_power_1 * gv_left_forward )
MotorB.StartPower ( lv_power_1 * gv_right_forward )
EndSub
Sub f_line_1
If lv_l_2 = - 100 Then
lv_l_2 = ( Sensor.ReadPercent ( gv_line ) - gv_left_min ) / ( gv_left_max - gv_left_min ) * 150
EndIf
lv_err_2 = lv_l_2 - 50
lv_diff_2 = lv_err_2 - gv_last_err
lv_delta_2 = lv_err_2 * 1 + lv_diff_2 * 7
lv_left_power_2 = 80 - lv_delta_2
lv_right_power_2 = 80 + lv_delta_2
MotorA.SetPower ( lv_left_power_2 * gv_left_forward )
MotorB.SetPower ( lv_right_power_2 * gv_right_forward )
gv_last_err = lv_err_2
Program.Delay ( 5 )
EndSub
Sub f_line_slow_1
If lv_l_3 = - 100 Then
lv_l_3 = ( Sensor.ReadPercent ( gv_line ) - gv_left_min ) / ( gv_left_max - gv_left_min ) * 150
EndIf
lv_err_3 = lv_l_3 - 50
lv_diff_3 = lv_err_3 - gv_last_err
lv_delta_3 = lv_err_3 * 0.5 + lv_diff_3 * 0
lv_left_power_3 = 30 - lv_delta_3
lv_right_power_3 = 30 + lv_delta_3
MotorA.SetPower ( lv_left_power_3 * gv_left_forward )
MotorB.SetPower ( lv_right_power_3 * gv_right_forward )
gv_last_err = lv_err_3
Program.Delay ( 5 )
EndSub
Sub f_ultra_line_1
lv_l_4 = Sensor.ReadRawValue ( gv_ultrasonic , 0 )
lv_err_4 = lv_l_4 - lv_a_4
lv_diff_4 = lv_err_4 - gv_last_err
lv_delta_4 = lv_err_4 * 0.8 + lv_diff_4 * 0
lv_left_power_4 = 40 - lv_delta_4
lv_right_power_4 = 40 + lv_delta_4
MotorA.SetPower ( lv_left_power_4 * gv_left_forward )
MotorB.SetPower ( lv_right_power_4 * gv_right_forward )
gv_last_err = lv_err_4
EndSub
Sub f_delay_1
Program.Delay ( lv_time_6 )
EndSub
Sub f_reset_0
MotorA.ResetCount ()
MotorB.ResetCount ()
EndSub
Sub f_stop_0
MotorAB.OffAndBrake ()
EndSub
Sub f_speedup_4
lv_power_1 = 15
f_movement_init_1 ()
f_reset_0 ()
lv_l_9 = 0
While lv_l_9 < lv_deg_9
lv_p_9 = lv_l_9 / lv_deg_9
lv_power_9 = ( lv_base_power_9 - lv_min_power_9 ) * lv_p_9 + lv_min_power_9
lv_l_9 = MotorA.GetTacho () * gv_left_forward * lv_coef_9
lv_r_9 = MotorB.GetTacho () * gv_right_forward * lv_coef_9
lv_delta_9 = ( lv_l_9 - lv_r_9 ) * lv_p_9
lv_left_power_9 = lv_power_9 - lv_delta_9
lv_right_power_9 = lv_power_9 + lv_delta_9
MotorA.SetPower ( lv_left_power_9 * gv_left_forward * lv_coef_9 )
MotorB.SetPower ( lv_right_power_9 * gv_right_forward * lv_coef_9 )
EndWhile
EndSub
Sub f_sync_1
lv_l_10 = MotorA.GetTacho () * gv_left_forward
lv_r_10 = MotorB.GetTacho () * gv_right_forward
lv_err_10 = lv_l_10 - lv_r_10
lv_diff_10 = lv_err_10 - gv_last_err
lv_delta_10 = lv_err_10 * 1 + lv_diff_10 * 0
lv_left_power_10 = lv_power_10 - lv_delta_10
lv_right_power_10 = lv_power_10 + lv_delta_10
MotorA.SetPower ( lv_left_power_10 * gv_left_forward )
MotorB.Setpower ( lv_right_power_10 * gv_right_forward )
gv_last_err = lv_err_10
EndSub
Sub f_forward_deg_2
lv_power_1 = lv_power_11
f_movement_init_1 ()
f_reset_0 ()
lv_l_11 = MotorA.GetTacho () * gv_left_forward
While Math.Abs ( lv_l_11 ) < Math.Abs ( lv_deg_11 )
lv_power_10 = lv_power_11
f_sync_1 ()
lv_l_11 = MotorA.GetTacho () * gv_left_forward
EndWhile
EndSub
Sub f_move_motor_7
lv_normal_deg_12 = lv_deg_12
lv_acceleration_deg_12 = 0
lv_zame_deg_12 = 0
If lv_acceleration_12 = "True" Then
lv_acceleration_deg_12 = Math.Min ( Math.Floor ( lv_deg_12 / 2 ) , 120 )
lv_normal_deg_12 = lv_normal_deg_12 - lv_acceleration_deg_12
EndIf
If lv_zame_12 = "True" Then
lv_zame_deg_12 = Math.Min ( Math.Floor ( lv_deg_12 / 2 ) , 120 )
lv_normal_deg_12 = lv_normal_deg_12 - lv_zame_deg_12
EndIf
If lv_acceleration_12 = "True" Then
Motor.ResetCount ( lv_motor_12 )
lv_m_12 = 0
While lv_m_12 < lv_acceleration_deg_12
lv_p_12 = lv_m_12 / lv_acceleration_deg_12
lv_power_12 = ( lv_max_power_12 - 10 ) * lv_p_12 + 10
Motor.Start ( lv_motor_12 , lv_power_12 * lv_forward_12 )
lv_m_12 = Motor.GetCount ( lv_motor_12 ) * lv_forward_12
Program.Delay ( 10 )
EndWhile
EndIf
If lv_normal_deg_12 > 0 Then
Motor.Move ( lv_motor_12 , lv_max_power_12 * lv_forward_12 , lv_normal_deg_12 , "False" )
EndIf
If lv_zame_12 = "True" Then
Motor.ResetCount ( lv_motor_12 )
lv_m_12 = 0
While lv_m_12 < lv_zame_deg_12
lv_p_12 = 1 - ( lv_m_12 / lv_zame_deg_12 )
lv_power_12 = ( lv_max_power_12 - 10 ) * lv_p_12 + 10
Motor.Start ( lv_motor_12 , lv_power_12 * lv_forward_12 )
lv_m_12 = Motor.GetCount ( lv_motor_12 ) * lv_forward_12
Program.Delay ( 10 )
EndWhile
EndIf
If lv_to_stop_12 = "True" Then
Motor.Stop ( lv_motor_12 , "True" )
EndIf
EndSub
Sub f_zame_4
lv_power_1 = lv_base_power_13
f_movement_init_1 ()
f_reset_0 ()
lv_l_13 = 0
While lv_l_13 < lv_deg_13
lv_p_13 = lv_l_13 / lv_deg_13
lv_l_13 = MotorA.GetTacho () * gv_left_forward * lv_coef_13
lv_r_13 = MotorB.GetTacho () * gv_right_forward * lv_coef_13
lv_delta_13 = ( lv_l_13 - lv_r_13 ) * ( 1 - lv_p_13 )
lv_power_13 = ( lv_base_power_13 - lv_min_power_13 ) * ( 1 - lv_p_13 ) + lv_min_power_13
lv_left_power_13 = lv_power_13 - lv_delta_13
lv_right_power_13 = lv_power_13 + lv_delta_13
MotorA.SetPower ( lv_left_power_13 * gv_left_forward * lv_coef_13 )
MotorB.SetPower ( lv_right_power_13 * gv_right_forward * lv_coef_13 )
Program.Delay ( 10 )
EndWhile
EndSub
Sub f_read_percent_1
lv_percent_14 = ( Sensor.ReadPercent ( gv_line ) - gv_left_min ) / ( gv_left_max - gv_left_min ) * 100
EndSub
Sub f_show_time_1
lv_millisecond_15 = Time.Get9 ()
lv_seconds_15 = Math.Floor ( lv_millisecond_15 / 1000 )
lv_minutes_15 = Math.Floor ( lv_seconds_15 / 60 )
lv_seconds_15 = Math.Remainder ( lv_seconds_15 , 60 )
lv_text_15 = lv_minutes_15 + ":" + lv_seconds_15
LCD.Clear ()
LCD.Text ( 1 , 0 , 0 , 2 , lv_text_15 )
If lv_to_delay_15 = "True" Then
lv_time_6 = 100000
f_delay_1 ()
EndIf
EndSub
