DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_10
DATAF VLV_MIN_POWER_10
DATAF VLV_DEG_10
DATAF VLV_COEF_10
DATAF VLV_BASE_POWER_14
DATAF VLV_MIN_POWER_14
DATAF VLV_DEG_14
DATAF VLV_COEF_14
DATAS VLV_MOTOR_13 252
DATAF VLV_FORWARD_13
DATAF VLV_DEG_13
DATAF VLV_MAX_POWER_13
DATAS VLV_ACCELERATION_13 252
DATAS VLV_ZAME_13 252
DATAS VLV_TO_STOP_13 252
DATAF VLV_TIME_2
DATAF VLV_PERCENT_5
DATAF VLV_POWER_1
DATAF VLV_A_8
DATAF VLV_POWER_11
DATAF VLV_DEG_12
DATAF VLV_POWER_12
DATAS VLV_FINISH_FORWARD_15 252
DATAF VLV_L_7
DATAS VLV_IS_INVERTED_23 252
DATAS VLV_IS_INVERTED_24 252
DATAS VLV_LONG_21 252
DATAS VLV_NEAR_21 252
DATAS VLV_SHOULD_MOVE_BACKWARD_21 252
DATAS VLV_IS_INVERTED_21 252
DATAS VLV_IS_INVERTED_25 252
DATAS VLV_TO_DELAY_26 252
DATAF VLV_L_6
DATAF VLV_COEF_16
DATAF VLV_COEF_17
DATAS VLV_IS_INVERTED_18 252
DATAS VLV_IS_INVERTED_19 252
DATAF VLV_MINUS_DEG_19
DATAF VLV_MINUS_DEG_20
DATAS VLV_IS_INVERTED_22 252
DATAS VLV_MOTOR1_22 252
DATAS VLV_MOTOR2_22 252
DATAF VLV_FORWARD1_22
DATAF VLV_FORWARD2_22
DATAF VLV_COEF_22
DATAF VGV_P
DATAF VLV_MINUS_DEG_21
DATAS VLV_MOTOR1_23 252
DATAS VLV_MOTOR2_23 252
DATAF VLV_FORWARD1_23
DATAF VLV_FORWARD2_23
DATAF VLV_COEF_23
DATAS VLV_MOTOR1_24 252
DATAS VLV_MOTOR2_24 252
DATAF VLV_FORWARD1_24
DATAF VLV_FORWARD2_24
DATAF VLV_COEF_24
DATAF VLV_P_24
DATAS VLV_MOTOR1_25 252
DATAS VLV_MOTOR2_25 252
DATAF VLV_FORWARD1_25
DATAF VLV_FORWARD2_25
DATAF VLV_COEF_25
DATAF VGV_LINE
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_ULTRASONIC
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERTED_MOTOR 252
DATAS VGV_MOTORS 252
DATAF VGV_LEFT_FORWARD
DATAF VGV_RIGHT_FORWARD
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_MAX
DATAF VGV_LEFT_MIN
DATAF VGV_LAST_ERR
DATAF VGV_LAST_MOTOR_ERR
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_WATER_STATE
DATAF VGV_FIRE_COUNT
DATAF VGV_MEN_COUNT
DATAS VGV_CHEM 252
DATAS VGV_TAKE_CHEM_IN_YELLOW 252
DATAF VGV_CUBES_COUNT
DATAS VGV_START 252
DATAF VGV_A
DATAF VGV_R
DATAS VGV_OBEJCT 252
DATAS VGV_OBJECT 252
DATAF VGV_DEG
DATAF VGV_G
DATAS VGV_TAKE_LEFT 252
DATAS VGV_TAKE_RIGHT 252
DATAF VGV_W
DATAF VGV_ULTRA
DATAS VGV_CH 252
DATAS VGV_IS_FIRST_BLUE_OBJECT_CHEM 252
DATAS VGV_IS_SECOND_BLUE_OBJECT_CHEM 252
DATAS VGV_IS_ON_SECOND_BLUE 252
DATAS VGV_WHITE_OBJECT 252
DATAF VGV_MINUS_DEG
DATAF VLV_ERR_6
DATAF VLV_DIFF_6
DATAF VLV_DELTA_6
DATAF VLV_LEFT_POWER_6
DATAF VLV_RIGHT_POWER_6
DATAF VLV_ERR_7
DATAF VLV_DIFF_7
DATAF VLV_DELTA_7
DATAF VLV_LEFT_POWER_7
DATAF VLV_RIGHT_POWER_7
DATAF VLV_L_8
DATAF VLV_ERR_8
DATAF VLV_DIFF_8
DATAF VLV_DELTA_8
DATAF VLV_LEFT_POWER_8
DATAF VLV_RIGHT_POWER_8
DATAF VLV_L_10
DATAF VLV_P_10
DATAF VLV_POWER_10
DATAF VLV_R_10
DATAF VLV_DELTA_10
DATAF VLV_LEFT_POWER_10
DATAF VLV_RIGHT_POWER_10
DATAF VLV_L_11
DATAF VLV_R_11
DATAF VLV_ERR_11
DATAF VLV_DIFF_11
DATAF VLV_DELTA_11
DATAF VLV_LEFT_POWER_11
DATAF VLV_RIGHT_POWER_11
DATAF VLV_L_12
DATAF VLV_NORMAL_DEG_13
DATAF VLV_ACCELERATION_DEG_13
DATAF VLV_ZAME_DEG_13
DATAF VLV_M_13
DATAF VLV_MIN_POWER_13
DATAF VLV_P_13
DATAF VLV_POWER_13
DATAF VLV_L_14
DATAF VLV_P_14
DATAF VLV_R_14
DATAF VLV_DELTA_14
DATAF VLV_POWER_14
DATAF VLV_LEFT_POWER_14
DATAF VLV_RIGHT_POWER_14
DATAS VLV_MOT_18 252
DATAF VLV_FORWARD_18
DATAF VLV_COEF_18
DATAF VLV_COEF_19
DATAF VLV_DEG_20
ARRAY16 VLV_RGB_24 2
DATAF VLV_MILLISECOND_26
DATAF VLV_SECONDS_26
DATAF VLV_MINUTES_26
DATAS VLV_TEXT_26 252
DATA32 RUNCOUNTER_F_KICK_WATER_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_10
    MOVEF_F 0.0 VLV_MIN_POWER_10
    MOVEF_F 0.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_COEF_10
    MOVEF_F 0.0 VLV_BASE_POWER_14
    MOVEF_F 0.0 VLV_MIN_POWER_14
    MOVEF_F 0.0 VLV_DEG_14
    MOVEF_F 0.0 VLV_COEF_14
    STRINGS DUPLICATE '' VLV_MOTOR_13
    MOVEF_F 0.0 VLV_FORWARD_13
    MOVEF_F 0.0 VLV_DEG_13
    MOVEF_F 0.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE '' VLV_ACCELERATION_13
    STRINGS DUPLICATE '' VLV_ZAME_13
    STRINGS DUPLICATE '' VLV_TO_STOP_13
    MOVEF_F 0.0 VLV_TIME_2
    MOVEF_F 0.0 VLV_PERCENT_5
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_A_8
    MOVEF_F 0.0 VLV_POWER_11
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_POWER_12
    STRINGS DUPLICATE '' VLV_FINISH_FORWARD_15
    MOVEF_F 0.0 VLV_L_7
    STRINGS DUPLICATE '' VLV_IS_INVERTED_23
    STRINGS DUPLICATE '' VLV_IS_INVERTED_24
    STRINGS DUPLICATE '' VLV_LONG_21
    STRINGS DUPLICATE '' VLV_NEAR_21
    STRINGS DUPLICATE '' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_25
    STRINGS DUPLICATE '' VLV_TO_DELAY_26
    MOVEF_F 0.0 VLV_L_6
    MOVEF_F 0.0 VLV_COEF_16
    MOVEF_F 0.0 VLV_COEF_17
    STRINGS DUPLICATE '' VLV_IS_INVERTED_18
    STRINGS DUPLICATE '' VLV_IS_INVERTED_19
    MOVEF_F 0.0 VLV_MINUS_DEG_19
    MOVEF_F 0.0 VLV_MINUS_DEG_20
    STRINGS DUPLICATE '' VLV_IS_INVERTED_22
    STRINGS DUPLICATE '' VLV_MOTOR1_22
    STRINGS DUPLICATE '' VLV_MOTOR2_22
    MOVEF_F 0.0 VLV_FORWARD1_22
    MOVEF_F 0.0 VLV_FORWARD2_22
    MOVEF_F 0.0 VLV_COEF_22
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    STRINGS DUPLICATE '' VLV_MOTOR1_23
    STRINGS DUPLICATE '' VLV_MOTOR2_23
    MOVEF_F 0.0 VLV_FORWARD1_23
    MOVEF_F 0.0 VLV_FORWARD2_23
    MOVEF_F 0.0 VLV_COEF_23
    STRINGS DUPLICATE '' VLV_MOTOR1_24
    STRINGS DUPLICATE '' VLV_MOTOR2_24
    MOVEF_F 0.0 VLV_FORWARD1_24
    MOVEF_F 0.0 VLV_FORWARD2_24
    MOVEF_F 0.0 VLV_COEF_24
    MOVEF_F 0.0 VLV_P_24
    STRINGS DUPLICATE '' VLV_MOTOR1_25
    STRINGS DUPLICATE '' VLV_MOTOR2_25
    MOVEF_F 0.0 VLV_FORWARD1_25
    MOVEF_F 0.0 VLV_FORWARD2_25
    MOVEF_F 0.0 VLV_COEF_25
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_START
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_R
    STRINGS DUPLICATE '' VGV_OBEJCT
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_TAKE_LEFT
    STRINGS DUPLICATE '' VGV_TAKE_RIGHT
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_ULTRA
    STRINGS DUPLICATE '' VGV_CH
    STRINGS DUPLICATE '' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_ON_SECOND_BLUE
    STRINGS DUPLICATE '' VGV_WHITE_OBJECT
    MOVEF_F 0.0 VGV_MINUS_DEG
    MOVEF_F 0.0 VLV_ERR_6
    MOVEF_F 0.0 VLV_DIFF_6
    MOVEF_F 0.0 VLV_DELTA_6
    MOVEF_F 0.0 VLV_LEFT_POWER_6
    MOVEF_F 0.0 VLV_RIGHT_POWER_6
    MOVEF_F 0.0 VLV_ERR_7
    MOVEF_F 0.0 VLV_DIFF_7
    MOVEF_F 0.0 VLV_DELTA_7
    MOVEF_F 0.0 VLV_LEFT_POWER_7
    MOVEF_F 0.0 VLV_RIGHT_POWER_7
    MOVEF_F 0.0 VLV_L_8
    MOVEF_F 0.0 VLV_ERR_8
    MOVEF_F 0.0 VLV_DIFF_8
    MOVEF_F 0.0 VLV_DELTA_8
    MOVEF_F 0.0 VLV_LEFT_POWER_8
    MOVEF_F 0.0 VLV_RIGHT_POWER_8
    MOVEF_F 0.0 VLV_L_10
    MOVEF_F 0.0 VLV_P_10
    MOVEF_F 0.0 VLV_POWER_10
    MOVEF_F 0.0 VLV_R_10
    MOVEF_F 0.0 VLV_DELTA_10
    MOVEF_F 0.0 VLV_LEFT_POWER_10
    MOVEF_F 0.0 VLV_RIGHT_POWER_10
    MOVEF_F 0.0 VLV_L_11
    MOVEF_F 0.0 VLV_R_11
    MOVEF_F 0.0 VLV_ERR_11
    MOVEF_F 0.0 VLV_DIFF_11
    MOVEF_F 0.0 VLV_DELTA_11
    MOVEF_F 0.0 VLV_LEFT_POWER_11
    MOVEF_F 0.0 VLV_RIGHT_POWER_11
    MOVEF_F 0.0 VLV_L_12
    MOVEF_F 0.0 VLV_NORMAL_DEG_13
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_13
    MOVEF_F 0.0 VLV_ZAME_DEG_13
    MOVEF_F 0.0 VLV_M_13
    MOVEF_F 0.0 VLV_MIN_POWER_13
    MOVEF_F 0.0 VLV_P_13
    MOVEF_F 0.0 VLV_POWER_13
    MOVEF_F 0.0 VLV_L_14
    MOVEF_F 0.0 VLV_P_14
    MOVEF_F 0.0 VLV_R_14
    MOVEF_F 0.0 VLV_DELTA_14
    MOVEF_F 0.0 VLV_POWER_14
    MOVEF_F 0.0 VLV_LEFT_POWER_14
    MOVEF_F 0.0 VLV_RIGHT_POWER_14
    STRINGS DUPLICATE '' VLV_MOT_18
    MOVEF_F 0.0 VLV_FORWARD_18
    MOVEF_F 0.0 VLV_COEF_18
    MOVEF_F 0.0 VLV_COEF_19
    MOVEF_F 0.0 VLV_DEG_20
    CALL ARRAYCREATE_FLOAT VLV_RGB_24
    MOVEF_F 0.0 VLV_MILLISECOND_26
    MOVEF_F 0.0 VLV_SECONDS_26
    MOVEF_F 0.0 VLV_MINUTES_26
    STRINGS DUPLICATE '' VLV_TEXT_26
    MOVE32_32 0 RUNCOUNTER_F_KICK_WATER_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_KICK_WATER_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_KICK_WATER_0 0
    CALL GETANDINC32 RUNCOUNTER_F_KICK_WATER_0 -1 RUNCOUNTER_F_KICK_WATER_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_KICK_WATER_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1101
    WRITE32 ENDSUB_F_KICK_WATER_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
  dispatch1101:
    MOVEF_F 0.0 VLV_BASE_POWER_10
    MOVEF_F 0.0 VLV_MIN_POWER_10
    MOVEF_F 0.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_COEF_10
    MOVEF_F 0.0 VLV_BASE_POWER_14
    MOVEF_F 0.0 VLV_MIN_POWER_14
    MOVEF_F 0.0 VLV_DEG_14
    MOVEF_F 0.0 VLV_COEF_14
    STRINGS DUPLICATE '' VLV_MOTOR_13
    MOVEF_F 0.0 VLV_FORWARD_13
    MOVEF_F 0.0 VLV_DEG_13
    MOVEF_F 0.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE '' VLV_ACCELERATION_13
    STRINGS DUPLICATE '' VLV_ZAME_13
    STRINGS DUPLICATE '' VLV_TO_STOP_13
    MOVEF_F 0.0 VLV_TIME_2
    MOVEF_F 0.0 VLV_PERCENT_5
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_A_8
    MOVEF_F 0.0 VLV_POWER_11
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_POWER_12
    STRINGS DUPLICATE '' VLV_FINISH_FORWARD_15
    MOVEF_F 0.0 VLV_L_7
    STRINGS DUPLICATE '' VLV_IS_INVERTED_23
    STRINGS DUPLICATE '' VLV_IS_INVERTED_24
    STRINGS DUPLICATE '' VLV_LONG_21
    STRINGS DUPLICATE '' VLV_NEAR_21
    STRINGS DUPLICATE '' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_25
    STRINGS DUPLICATE '' VLV_TO_DELAY_26
    MOVEF_F 0.0 VLV_L_6
    MOVEF_F 0.0 VLV_COEF_16
    MOVEF_F 0.0 VLV_COEF_17
    STRINGS DUPLICATE '' VLV_IS_INVERTED_18
    STRINGS DUPLICATE '' VLV_IS_INVERTED_19
    MOVEF_F 0.0 VLV_MINUS_DEG_19
    MOVEF_F 0.0 VLV_MINUS_DEG_20
    STRINGS DUPLICATE '' VLV_IS_INVERTED_22
    STRINGS DUPLICATE '' VLV_MOTOR1_22
    STRINGS DUPLICATE '' VLV_MOTOR2_22
    MOVEF_F 0.0 VLV_FORWARD1_22
    MOVEF_F 0.0 VLV_FORWARD2_22
    MOVEF_F 0.0 VLV_COEF_22
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    STRINGS DUPLICATE '' VLV_MOTOR1_23
    STRINGS DUPLICATE '' VLV_MOTOR2_23
    MOVEF_F 0.0 VLV_FORWARD1_23
    MOVEF_F 0.0 VLV_FORWARD2_23
    MOVEF_F 0.0 VLV_COEF_23
    STRINGS DUPLICATE '' VLV_MOTOR1_24
    STRINGS DUPLICATE '' VLV_MOTOR2_24
    MOVEF_F 0.0 VLV_FORWARD1_24
    MOVEF_F 0.0 VLV_FORWARD2_24
    MOVEF_F 0.0 VLV_COEF_24
    MOVEF_F 0.0 VLV_P_24
    STRINGS DUPLICATE '' VLV_MOTOR1_25
    STRINGS DUPLICATE '' VLV_MOTOR2_25
    MOVEF_F 0.0 VLV_FORWARD1_25
    MOVEF_F 0.0 VLV_FORWARD2_25
    MOVEF_F 0.0 VLV_COEF_25
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_START
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_R
    STRINGS DUPLICATE '' VGV_OBEJCT
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_TAKE_LEFT
    STRINGS DUPLICATE '' VGV_TAKE_RIGHT
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_ULTRA
    STRINGS DUPLICATE '' VGV_CH
    STRINGS DUPLICATE '' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_ON_SECOND_BLUE
    STRINGS DUPLICATE '' VGV_WHITE_OBJECT
    MOVEF_F 0.0 VGV_MINUS_DEG
    MOVEF_F 1.0 VGV_LINE
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERTED_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 40.0 VGV_LEFT_MAX
    MOVEF_F 5.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 2.0 VGV_CUBES_COUNT
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_LEFT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_RIGHT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB7 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB7:
    SOUND_READY
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB10:
ENDTHREAD:
    RETURN
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB12:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 80.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB13 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB13:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB14 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB14:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer15
	DATA8 nos15
	DATA8 busy15
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer15 nos15
	JR_EQ8 0 nos15 motornotbusy15
  motorwaiting15:
	OUTPUT_TEST layer15 nos15 busy15
	JR_EQ8 busy15 0 motornotbusy15
	SLEEP
	JR motorwaiting15
  motornotbusy15:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 130.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB16 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB16:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer17
	DATA8 nos17
	DATA8 busy17
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer17 nos17
	JR_EQ8 0 nos17 motornotbusy17
  motorwaiting17:
	OUTPUT_TEST layer17 nos17 busy17
	JR_EQ8 busy17 0 motornotbusy17
	SLEEP
	JR motorwaiting17
  motornotbusy17:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 120.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB19 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB19:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB20 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB20:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 160.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB21 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB21:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else22_1
    CALL MOTOR.START VGV_WATER_MOTOR 50.0
    DATA32 milliseconds24
	MOVEF_32 500.0 milliseconds24
	DATA32 timer24
	TIMER_WAIT milliseconds24 timer24
	TIMER_READY timer24
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer26
	DATA8 nos26
	DATA8 busy26
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer26 nos26
	JR_EQ8 0 nos26 motornotbusy26
  motorwaiting26:
	OUTPUT_TEST layer26 nos26 busy26
	JR_EQ8 busy26 0 motornotbusy26
	SLEEP
	JR motorwaiting26
  motornotbusy26:
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif22
  else22_1:
    CALL MOTOR.START VGV_WATER_MOTOR -50.0
    DATA32 milliseconds28
	MOVEF_32 500.0 milliseconds28
	DATA32 timer28
	TIMER_WAIT milliseconds28 timer28
	TIMER_READY timer28
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 50.0 0.0 20.0 0.0 'True' 

	DATA8 layer30
	DATA8 nos30
	DATA8 busy30
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer30 nos30
	JR_EQ8 0 nos30 motornotbusy30
  motorwaiting30:
	OUTPUT_TEST layer30 nos30 busy30
	JR_EQ8 busy30 0 motornotbusy30
	SLEEP
	JR motorwaiting30
  motornotbusy30:
  else22_2:
  endif22:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_MAIN_0:
    STRINGS DUPLICATE 'right' VGV_START
    TIMER_READ timeMC9
    MOVEF_F 97.0 VGV_A
    CALL EQ_STRING VGV_START 'left' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else32_1
    MULF 80.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 85.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    WRITE32 ENDSUB_F_RESET_0:CALLSUB38 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB38:
  while39:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    JR_GTEQF F.0 1000.0 endwhile39
  whilebody39:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    JR_LTF F.0 1000.0 whilebody39
  endwhile39:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB42 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB42:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while43:
    JR_GTEQF VGV_P 50.0 endwhile43
  whilebody43:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB44 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB44:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_LTF VGV_P 50.0 whilebody43
  endwhile43:
  while45:
    JR_LTEQF VGV_P 20.0 endwhile45
  whilebody45:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB46 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB46:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_GTF VGV_P 20.0 whilebody45
  endwhile45:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 180.0 VLV_DEG_13
    MOVEF_F 50.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB49 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB49:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 180.0 VLV_DEG_13
    MOVEF_F 50.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB50 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB50:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB51 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB51:
    DATA32 milliseconds52
	MOVEF_32 1000.0 milliseconds52
	DATA32 timer52
	TIMER_WAIT milliseconds52 timer52
	TIMER_READY timer52
    WRITE32 ENDSUB_F_STOP_0:CALLSUB53 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB53:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 70.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB54 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB54:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB56 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB56:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB57 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB57:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB58 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB58:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while59:
    JR_LTEQF VGV_P 23.0 endwhile59
  whilebody59:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB60:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB61:
    JR_GTF VGV_P 23.0 whilebody59
  endwhile59:
    JR endif32
  else32_1:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB62 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB62:
    MULF 80.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 40.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    WRITE32 ENDSUB_F_RESET_0:CALLSUB67 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB67:
  while68:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 1000.0 endwhile68
  whilebody68:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 1000.0 whilebody68
  endwhile68:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB73 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB73:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while74:
    JR_GTEQF VGV_P 50.0 endwhile74
  whilebody74:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB75:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_LTF VGV_P 50.0 whilebody74
  endwhile74:
  while76:
    JR_LTEQF VGV_P 20.0 endwhile76
  whilebody76:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB77:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_GTF VGV_P 20.0 whilebody76
  endwhile76:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB78:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 180.0 VLV_DEG_13
    MOVEF_F 40.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'Fase' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB79 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB79:
    MULF VGV_LEFT_FORWARD -40.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB82:
    CALL MOTOR.STOP VGV_LEFT_MOTOR 'True'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB84 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB84:
    TIMER_READ timeMC1
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB86:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB87 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB87:
  while88:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 3000.0 endwhile88
  whilebody88:
    MOVEF_F 40.0 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB90:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 3000.0 whilebody88
  endwhile88:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB92:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB93:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 230.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB95:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 130.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB96:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB97 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB97:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB98:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while99:
    JR_LTEQF VGV_P 23.0 endwhile99
  whilebody99:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB100:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F 90.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB101:
    JR_GTF VGV_P 23.0 whilebody99
  endwhile99:
  else32_2:
  endif32:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 0.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB102:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB103:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB104:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBEJCT
    JR_LTEQF VGV_R 150.0 else106_1
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    STRINGS DUPLICATE 'human' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif106
  else106_1:
    JR_LTEQF VGV_R 60.0 else106_2
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    DATA32 tmp109
    CALL GETANDINC32 RUNCOUNTER_F_KICK_WATER_0 1  RUNCOUNTER_F_KICK_WATER_0 tmp109
    JR_NEQ32 0 tmp109 alreadylaunched109
    OBJECT_START TF_KICK_WATER_0
  alreadylaunched109:
    JR endif106
  else106_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else106_3
    JR_LTEQF VGV_R 15.0 else106_3
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB111:
  else106_3:
  endif106:
    MOVEF_F 525.0 VGV_DEG
    CALL NE_STRING VGV_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else112_1
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 120.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB114:
    SUBF VGV_DEG 120.0 VGV_DEG
  else112_1:
  endif112:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB116:
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else117_1
  while119:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 120.0 F.1
    JR_GTEQF F.0 F.1 endwhile119
  whilebody119:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB123:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 120.0 F.1
    JR_LTF F.0 F.1 whilebody119
  endwhile119:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 15.0 VLV_MIN_POWER_14
    MOVEF_F 120.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB127:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB128 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB128:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB129:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 80.0 else131_1
    DATA8 layer132
	DATA8 no132
	DATA8 mode8132
	
	MOVEF_8 VGV_RIGHT_SENSOR no132
	SUB8 no132 1 no132
	DIV8 no132 4 layer132
	MATH MOD8 no132 4 no132

	MOVEF_8 2.0 mode8132
	
	INPUT_DEVICE READY_RAW layer132 no132 0 mode8132 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB133 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB133:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer135
	DATA8 no135
	DATA8 mode8135
	
	MOVEF_8 VGV_RIGHT_SENSOR no135
	SUB8 no135 1 no135
	DIV8 no135 4 layer135
	MATH MOD8 no135 4 no135

	MOVEF_8 1.0 mode8135
	
	INPUT_DEVICE READY_RAW layer135 no135 0 mode8135 0
    JR_LTEQF VGV_G 100.0 else136_1
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    STRINGS DUPLICATE 'human' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif136
  else136_1:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB139:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 15.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB140:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB141 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB141:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB142:
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB143:
  else136_2:
  endif136:
    JR endif131
  else131_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else131_2
    JR_LTEQF VGV_R 20.0 else131_2
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB145:
  else131_2:
  endif131:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB146 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB146:
    JR endif117
  else117_1:
  while147:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 VGV_DEG endwhile147
  whilebody147:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB150:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 VGV_DEG whilebody147
  endwhile147:
  else117_2:
  endif117:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB153:
    MOVEF_F 96.0 VGV_A
  while154:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 520.0 endwhile154
  whilebody154:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB157:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 520.0 whilebody154
  endwhile154:
    MULF 60.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF 60.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds164
	MOVEF_32 1000.0 milliseconds164
	DATA32 timer164
	TIMER_WAIT milliseconds164 timer164
	TIMER_READY timer164
    WRITE32 ENDSUB_F_STOP_0:CALLSUB165 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB165:
    STRINGS DUPLICATE 'False' VGV_TAKE_LEFT
    STRINGS DUPLICATE 'False' VGV_TAKE_RIGHT
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB166:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 80.0 else168_1
    DATA8 layer169
	DATA8 no169
	DATA8 mode8169
	
	MOVEF_8 VGV_RIGHT_SENSOR no169
	SUB8 no169 1 no169
	DIV8 no169 4 layer169
	MATH MOD8 no169 4 no169

	MOVEF_8 2.0 mode8169
	
	INPUT_DEVICE READY_RAW layer169 no169 0 mode8169 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB170:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer172
	DATA8 no172
	DATA8 mode8172
	
	MOVEF_8 VGV_RIGHT_SENSOR no172
	SUB8 no172 1 no172
	DIV8 no172 4 layer172
	MATH MOD8 no172 4 no172

	MOVEF_8 1.0 mode8172
	
	INPUT_DEVICE READY_RAW layer172 no172 0 mode8172 0
    JR_LTEQF VGV_G 100.0 else173_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    STRINGS DUPLICATE 'R: man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif173
  else173_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB176:
  else173_2:
  endif173:
    JR endif168
  else168_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else168_2
    DATA8 layer178
	DATA8 no178
	DATA8 mode8178
	
	MOVEF_8 VGV_RIGHT_SENSOR no178
	SUB8 no178 1 no178
	DIV8 no178 4 layer178
	MATH MOD8 no178 4 no178

	MOVEF_8 4.0 mode8178
	
	INPUT_DEVICE READY_RAW layer178 no178 0 mode8178 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB179:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA8 layer184
	DATA8 no184
	DATA8 mode8184
	
	MOVEF_8 VGV_RIGHT_SENSOR no184
	SUB8 no184 1 no184
	DIV8 no184 4 layer184
	MATH MOD8 no184 4 no184

	MOVEF_8 1.0 mode8184
	
	INPUT_DEVICE READY_RAW layer184 no184 0 mode8184 0
    JR_LTEQF VGV_W 30.0 else185_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_TAKE_RIGHT
    STRINGS DUPLICATE 'True' VGV_CHEM
  else185_1:
  endif185:
  else168_2:
  endif168:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else186_1
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 60.0 else189_1
    DATA8 layer190
	DATA8 no190
	DATA8 mode8190
	
	MOVEF_8 VGV_LEFT_SENSOR no190
	SUB8 no190 1 no190
	DIV8 no190 4 layer190
	MATH MOD8 no190 4 no190

	MOVEF_8 2.0 mode8190
	
	INPUT_DEVICE READY_RAW layer190 no190 0 mode8190 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB191 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB191:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer193
	DATA8 no193
	DATA8 mode8193
	
	MOVEF_8 VGV_LEFT_SENSOR no193
	SUB8 no193 1 no193
	DIV8 no193 4 layer193
	MATH MOD8 no193 4 no193

	MOVEF_8 1.0 mode8193
	
	INPUT_DEVICE READY_RAW layer193 no193 0 mode8193 0
    JR_LTEQF VGV_G 100.0 else194_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    STRINGS DUPLICATE 'L: man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif194
  else194_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB197:
  else194_2:
  endif194:
    JR endif189
  else189_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else189_2
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 40.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB200:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB201:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    MULF 80.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    DATA32 milliseconds205
	MOVEF_32 1000.0 milliseconds205
	DATA32 timer205
	TIMER_WAIT milliseconds205 timer205
	TIMER_READY timer205
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    JR_GTEQF VGV_ULTRA 75.0 else207_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_TAKE_LEFT
  else207_1:
  endif207:
  else189_2:
  endif189:
  else186_1:
  endif186:
    CALL EQ_STRING VGV_TAKE_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else208_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB210 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB210:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 60.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB211 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB211:
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB214:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer215
	DATA8 nos215
	DATA8 busy215
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer215 nos215
	JR_EQ8 0 nos215 motornotbusy215
  motorwaiting215:
	OUTPUT_TEST layer215 nos215 busy215
	JR_EQ8 busy215 0 motornotbusy215
	SLEEP
	JR motorwaiting215
  motornotbusy215:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB216:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB217 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB217:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB218:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer219
	DATA8 nos219
	DATA8 busy219
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer219 nos219
	JR_EQ8 0 nos219 motornotbusy219
  motorwaiting219:
	OUTPUT_TEST layer219 nos219 busy219
	JR_EQ8 busy219 0 motornotbusy219
	SLEEP
	JR motorwaiting219
  motornotbusy219:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB220:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB221:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB222:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB223:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB224 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB224:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB225:
    DATA32 milliseconds226
	MOVEF_32 1000.0 milliseconds226
	DATA32 timer226
	TIMER_WAIT milliseconds226 timer226
	TIMER_READY timer226
    WRITE32 ENDSUB_F_STOP_0:CALLSUB227 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB227:
    JR endif208
  else208_1:
    CALL EQ_STRING VGV_TAKE_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else208_2
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB229:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 60.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB230:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB233:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer234
	DATA8 nos234
	DATA8 busy234
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer234 nos234
	JR_EQ8 0 nos234 motornotbusy234
  motorwaiting234:
	OUTPUT_TEST layer234 nos234 busy234
	JR_EQ8 busy234 0 motornotbusy234
	SLEEP
	JR motorwaiting234
  motornotbusy234:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB235:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB236:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB237:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer238
	DATA8 nos238
	DATA8 busy238
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer238 nos238
	JR_EQ8 0 nos238 motornotbusy238
  motorwaiting238:
	OUTPUT_TEST layer238 nos238 busy238
	JR_EQ8 busy238 0 motornotbusy238
	SLEEP
	JR motorwaiting238
  motornotbusy238:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB239:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB240 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB240:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB241:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB242:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB243 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB243:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB244:
    DATA32 milliseconds245
	MOVEF_32 1000.0 milliseconds245
	DATA32 timer245
	TIMER_WAIT milliseconds245 timer245
	TIMER_READY timer245
    WRITE32 ENDSUB_F_STOP_0:CALLSUB246 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB246:
  else208_2:
  endif208:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB247:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB250:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB251:
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB252:
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 120.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB253:
    MOVEF_F 185.0 VLV_DEG_12
    MOVEF_F 40.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB254:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 120.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB255:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB256:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB257:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 130.0 else259_1
    JR endif259
  else259_1:
    JR_LTEQF VGV_R 80.0 else259_2
    DATA8 layer260
	DATA8 no260
	DATA8 mode8260
	
	MOVEF_8 VGV_RIGHT_SENSOR no260
	SUB8 no260 1 no260
	DIV8 no260 4 layer260
	MATH MOD8 no260 4 no260

	MOVEF_8 2.0 mode8260
	
	INPUT_DEVICE READY_RAW layer260 no260 0 mode8260 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB261:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer263
	DATA8 no263
	DATA8 mode8263
	
	MOVEF_8 VGV_RIGHT_SENSOR no263
	SUB8 no263 1 no263
	DIV8 no263 4 layer263
	MATH MOD8 no263 4 no263

	MOVEF_8 1.0 mode8263
	
	INPUT_DEVICE READY_RAW layer263 no263 0 mode8263 0
    JR_LTEQF VGV_G 80.0 else264_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif264
  else264_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB267:
  else264_2:
  endif264:
    JR endif259
  else259_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else259_3
    DATA8 layer269
	DATA8 no269
	DATA8 mode8269
	
	MOVEF_8 VGV_RIGHT_SENSOR no269
	SUB8 no269 1 no269
	DIV8 no269 4 layer269
	MATH MOD8 no269 4 no269

	MOVEF_8 2.0 mode8269
	
	INPUT_DEVICE READY_RAW layer269 no269 0 mode8269 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB270:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer272
	DATA8 no272
	DATA8 mode8272
	
	MOVEF_8 VGV_RIGHT_SENSOR no272
	SUB8 no272 1 no272
	DIV8 no272 4 layer272
	MATH MOD8 no272 4 no272

	MOVEF_8 1.0 mode8272
	
	INPUT_DEVICE READY_RAW layer272 no272 0 mode8272 0
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_G '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_LTEQF VGV_G 15.0 else276_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_TAKE_CHEM_IN_YELLOW
  else276_1:
  endif276:
  else259_3:
  endif259:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 255.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB277:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB278 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB278:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 260.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB279 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB279:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB280:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB281:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else282_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB284:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 90.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB285:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB286 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB286:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB287:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 50.0 else289_1
    DATA8 layer290
	DATA8 no290
	DATA8 mode8290
	
	MOVEF_8 VGV_LEFT_SENSOR no290
	SUB8 no290 1 no290
	DIV8 no290 4 layer290
	MATH MOD8 no290 4 no290

	MOVEF_8 2.0 mode8290
	
	INPUT_DEVICE READY_RAW layer290 no290 0 mode8290 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB291 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB291:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer293
	DATA8 no293
	DATA8 mode8293
	
	MOVEF_8 VGV_LEFT_SENSOR no293
	SUB8 no293 1 no293
	DIV8 no293 4 layer293
	MATH MOD8 no293 4 no293

	MOVEF_8 1.0 mode8293
	
	INPUT_DEVICE READY_RAW layer293 no293 0 mode8293 0
    JR_LTEQF VGV_G 70.0 else294_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif294
  else294_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB297:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB298:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB299 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB299:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB300:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB301:
  else294_2:
  endif294:
    JR endif289
  else289_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else289_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB303 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB303:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 70.0 else305_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VLV_FINISH_FORWARD_15
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB306 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB306:
  else305_1:
  endif305:
  else289_2:
  endif289:
    JR endif282
  else282_1:
    MOVEF_F 165.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB307 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB307:
  else282_2:
  endif282:
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB308:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB309:
    MOVEF_F 95.0 VGV_A
  while310:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 300.0 endwhile310
  whilebody310:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB313:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 300.0 whilebody310
  endwhile310:
    MULF 40.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF 40.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds320
	MOVEF_32 1000.0 milliseconds320
	DATA32 timer320
	TIMER_WAIT milliseconds320 timer320
	TIMER_READY timer320
    WRITE32 ENDSUB_F_STOP_0:CALLSUB321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB321:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 160.0 else323_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif323
  else323_1:
    JR_LTEQF VGV_R 80.0 else323_2
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'fire' VGV_OBEJCT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB326:
    JR endif323
  else323_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else323_3
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB328 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB328:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    STRINGS DUPLICATE 'False' VGV_CH
    JR_GTEQF VGV_ULTRA 75.0 else330_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif330
  else330_1:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 20.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB332:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB333:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB337:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
    JR_GTEQF VGV_ULTRA 75.0 else339_1
    STRINGS DUPLICATE 'True' VGV_CH
  else339_1:
  endif339:
  else330_2:
  endif330:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 75.0 else343_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB344:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 80.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB345:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB346:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer347
	DATA8 nos347
	DATA8 busy347
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer347 nos347
	JR_EQ8 0 nos347 motornotbusy347
  motorwaiting347:
	OUTPUT_TEST layer347 nos347 busy347
	JR_EQ8 busy347 0 motornotbusy347
	SLEEP
	JR motorwaiting347
  motornotbusy347:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 160.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB348:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer349
	DATA8 nos349
	DATA8 busy349
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer349 nos349
	JR_EQ8 0 nos349 motornotbusy349
  motorwaiting349:
	OUTPUT_TEST layer349 nos349 busy349
	JR_EQ8 busy349 0 motornotbusy349
	SLEEP
	JR motorwaiting349
  motornotbusy349:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 160.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB351:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB352:
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB353:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB354:
  else343_1:
  endif343:
  else323_3:
  endif323:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 240.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB356:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 105.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB357:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB358:
    MOVEF_F 1200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB359 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB359:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB360:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 120.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB361:
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else362_1
    WRITE32 ENDSUB_F_RESET_0:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB364:
  while365:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 175.0 endwhile365
  whilebody365:
    MOVEF_F 93.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB368:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 175.0 whilebody365
  endwhile365:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 15.0 VLV_MIN_POWER_14
    MOVEF_F 120.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB371 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB371:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB372:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB373:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 60.0 else375_1
    DATA8 layer376
	DATA8 no376
	DATA8 mode8376
	
	MOVEF_8 VGV_LEFT_SENSOR no376
	SUB8 no376 1 no376
	DIV8 no376 4 layer376
	MATH MOD8 no376 4 no376

	MOVEF_8 2.0 mode8376
	
	INPUT_DEVICE READY_RAW layer376 no376 0 mode8376 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB377:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer379
	DATA8 no379
	DATA8 mode8379
	
	MOVEF_8 VGV_LEFT_SENSOR no379
	SUB8 no379 1 no379
	DIV8 no379 4 layer379
	MATH MOD8 no379 4 no379

	MOVEF_8 1.0 mode8379
	
	INPUT_DEVICE READY_RAW layer379 no379 0 mode8379 0
    JR_LTEQF VGV_G 80.0 else380_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif380
  else380_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB383:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB384:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB385:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB386 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB386:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB387:
  else380_2:
  endif380:
    JR endif375
  else375_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else375_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB389:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 90.0 else394_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VLV_FINISH_FORWARD_15
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB395:
  else394_1:
  endif394:
  else375_2:
  endif375:
    CALL EQ_STRING VGV_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or397
    CALL EQ_STRING VGV_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else396_1
  or397:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB400:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 70.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB401:
    JR endif396
  else396_1:
    MOVEF_F 80.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB402:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 70.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB403:
  else396_2:
  endif396:
    JR endif362
  else362_1:
    MOVEF_F 450.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB404:
  else362_2:
  endif362:
    STRINGS DUPLICATE 'False' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VGV_IS_ON_SECOND_BLUE
    WRITE32 ENDSUB_F_STOP_0:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB405:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB406:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 50.0 else408_1
    DATA8 layer409
	DATA8 no409
	DATA8 mode8409
	
	MOVEF_8 VGV_LEFT_SENSOR no409
	SUB8 no409 1 no409
	DIV8 no409 4 layer409
	MATH MOD8 no409 4 no409

	MOVEF_8 2.0 mode8409
	
	INPUT_DEVICE READY_RAW layer409 no409 0 mode8409 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB410:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer412
	DATA8 no412
	DATA8 mode8412
	
	MOVEF_8 VGV_LEFT_SENSOR no412
	SUB8 no412 1 no412
	DIV8 no412 4 layer412
	MATH MOD8 no412 4 no412

	MOVEF_8 1.0 mode8412
	
	INPUT_DEVICE READY_RAW layer412 no412 0 mode8412 0
    JR_LTEQF VGV_G 100.0 else413_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif413
  else413_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB416:
  else413_2:
  endif413:
    JR endif408
  else408_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else408_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB418:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 80.0 else423_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 145.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB424:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 145.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB425:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB426:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB427:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB429:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer430
	DATA8 nos430
	DATA8 busy430
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer430 nos430
	JR_EQ8 0 nos430 motornotbusy430
  motorwaiting430:
	OUTPUT_TEST layer430 nos430 busy430
	JR_EQ8 busy430 0 motornotbusy430
	SLEEP
	JR motorwaiting430
  motornotbusy430:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB431:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB432:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB433:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB434:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer435
	DATA8 nos435
	DATA8 busy435
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer435 nos435
	JR_EQ8 0 nos435 motornotbusy435
  motorwaiting435:
	OUTPUT_TEST layer435 nos435 busy435
	JR_EQ8 busy435 0 motornotbusy435
	SLEEP
	JR motorwaiting435
  motornotbusy435:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB436:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB437:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB438:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB439:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB440:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB441:
  else423_1:
  endif423:
  else408_2:
  endif408:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else442_1
    STRINGS DUPLICATE 'True' VGV_IS_ON_SECOND_BLUE
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB444:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB445:
  while446:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 320.0 endwhile446
  whilebody446:
    MOVEF_F 93.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB449:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 320.0 whilebody446
  endwhile446:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB452:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB453:
    STRINGS DUPLICATE 'none' VGV_OBJECT
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB454:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 50.0 else456_1
    DATA8 layer457
	DATA8 no457
	DATA8 mode8457
	
	MOVEF_8 VGV_LEFT_SENSOR no457
	SUB8 no457 1 no457
	DIV8 no457 4 layer457
	MATH MOD8 no457 4 no457

	MOVEF_8 2.0 mode8457
	
	INPUT_DEVICE READY_RAW layer457 no457 0 mode8457 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB458 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB458:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer460
	DATA8 no460
	DATA8 mode8460
	
	MOVEF_8 VGV_LEFT_SENSOR no460
	SUB8 no460 1 no460
	DIV8 no460 4 layer460
	MATH MOD8 no460 4 no460

	MOVEF_8 1.0 mode8460
	
	INPUT_DEVICE READY_RAW layer460 no460 0 mode8460 0
    JR_LTEQF VGV_G 80.0 else461_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif461
  else461_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Trie' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB464:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB465:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB466:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB467:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB468 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB468:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB469 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB469:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB470:
  else461_2:
  endif461:
    JR endif456
  else456_1:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB471:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 80.0 else473_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'Treu' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VLV_FINISH_FORWARD_15
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB474 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB474:
  else473_1:
  endif473:
  else456_2:
  endif456:
  else442_1:
  endif442:
    STRINGS DUPLICATE 'none' VGV_WHITE_OBJECT
    JR_GTEQF VGV_MEN_COUNT 2.0 else475_1
    STRINGS DUPLICATE 'man' VGV_WHITE_OBJECT
    JR endif475
  else475_1:
    JR_GTEQF VGV_FIRE_COUNT 2.0 else475_2
    STRINGS DUPLICATE 'fire' VGV_WHITE_OBJECT
    JR endif475
  else475_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else475_3
    STRINGS DUPLICATE 'chem' VGV_WHITE_OBJECT
  else475_3:
  endif475:
    CALL EQ_STRING VGV_WHITE_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else477_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
  else477_1:
  endif477:
    CALL EQ_STRING VGV_WHITE_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or481
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or481
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else480_1
  or481:
    CALL EQ_STRING VGV_IS_ON_SECOND_BLUE 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else485_1
    CALL EQ_STRING VGV_IS_SECOND_BLUE_OBJECT_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 30.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB489:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 30.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB490:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    JR endif487
  else487_1:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 10.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB492:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB493:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB494:
  else487_2:
  endif487:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB496:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB497:
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB498:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB499 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB499:
    JR endif485
  else485_1:
    CALL EQ_STRING VGV_IS_FIRST_BLUE_OBJECT_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else500_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB502 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB502:
    MOVEF_F 215.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB503 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB503:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB504:
    JR endif500
  else500_1:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 75.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB505 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB505:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 75.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB506:
  else500_2:
  endif500:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB507:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB509:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB510:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB511 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB511:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB512 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB512:
  else485_2:
  endif485:
    MOVEF_F 100.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB513 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB513:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB514 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB514:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB515:
    DATA8 layer516
	DATA8 no516
	DATA8 mode8516
	
	MOVEF_8 VGV_LINE no516
	SUB8 no516 1 no516
	DIV8 no516 4 layer516
	MATH MOD8 no516 4 no516

	MOVEF_8 2.0 mode8516
	
	INPUT_DEVICE READY_RAW layer516 no516 0 mode8516 0
  while517:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 130.0 endwhile517
  whilebody517:
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB520:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 130.0 whilebody517
  endwhile517:
  while523:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_EQF F.0 6.0 endwhile523
  whilebody523:
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB525:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_NEQF F.0 6.0 whilebody523
  endwhile523:
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else527_1
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else527_1
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB530:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB531:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB532:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB533:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB534:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB535:
    JR endif527
  else527_1:
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else527_2
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB537:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB538:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB539:
    JR endif527
  else527_2:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else527_3
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 170.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB541:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB542 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB542:
  else527_3:
  endif527:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else543_1
    DATA8 layer545
	DATA8 no545
	DATA8 mode8545
	
	MOVEF_8 VGV_LINE no545
	SUB8 no545 1 no545
	DIV8 no545 4 layer545
	MATH MOD8 no545 4 no545

	MOVEF_8 2.0 mode8545
	
	INPUT_DEVICE READY_RAW layer545 no545 0 mode8545 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB546 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB546:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB547 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB547:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB548 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB548:
  while549:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_EQF F.0 4.0 endwhile549
  whilebody549:
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB551 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB551:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_NEQF F.0 4.0 whilebody549
  endwhile549:
    MOVEF_F 250.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB553 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB553:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB554 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB554:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB555 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB555:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB557:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer558
	DATA8 nos558
	DATA8 busy558
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer558 nos558
	JR_EQ8 0 nos558 motornotbusy558
  motorwaiting558:
	OUTPUT_TEST layer558 nos558 busy558
	JR_EQ8 busy558 0 motornotbusy558
	SLEEP
	JR motorwaiting558
  motornotbusy558:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 65.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB559:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 65.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB560:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB561 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB561:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer562
	DATA8 nos562
	DATA8 busy562
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer562 nos562
	JR_EQ8 0 nos562 motornotbusy562
  motorwaiting562:
	OUTPUT_TEST layer562 nos562 busy562
	JR_EQ8 busy562 0 motornotbusy562
	SLEEP
	JR motorwaiting562
  motornotbusy562:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB563 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB563:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB564:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB565:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB566 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB566:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 177.0 'True'

	DATA8 layer570
	DATA8 nos570
	DATA8 busy570
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer570 nos570
	JR_EQ8 0 nos570 motornotbusy570
  motorwaiting570:
	OUTPUT_TEST layer570 nos570 busy570
	JR_EQ8 busy570 0 motornotbusy570
	SLEEP
	JR motorwaiting570
  motornotbusy570:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB571 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB571:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB572:
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB573:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB574:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB575 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB575:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 200.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB576 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB576:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB577:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 210.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB578:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB579:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB580:
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB581:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB582:
  else543_1:
  endif543:
    CALL EQ_STRING VGV_WHITE_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else583_1
    DATA8 layer585
	DATA8 no585
	DATA8 mode8585
	
	MOVEF_8 VGV_LINE no585
	SUB8 no585 1 no585
	DIV8 no585 4 layer585
	MATH MOD8 no585 4 no585

	MOVEF_8 0.0 mode8585
	
	INPUT_DEVICE READY_RAW layer585 no585 0 mode8585 0
    MOVEF_F 100.0 VGV_MINUS_DEG
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else586_1
    ADDF VGV_MINUS_DEG 200.0 VGV_MINUS_DEG
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB589 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB589:
  else586_1:
  endif586:
    SUBF 420.0 VGV_MINUS_DEG VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB591:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB592:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB593:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB594:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB595 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB595:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB596 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB596:
    STRINGS DUPLICATE 'False' VGV_CH
    DATA8 layer597
	DATA8 no597
	DATA8 mode8597
	
	MOVEF_8 VGV_RIGHT_SENSOR no597
	SUB8 no597 1 no597
	DIV8 no597 4 layer597
	MATH MOD8 no597 4 no597

	MOVEF_8 4.0 mode8597
	
	INPUT_DEVICE READY_RAW layer597 no597 0 mode8597 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB598:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    JR_LTEQF VGV_W 40.0 else600_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif600
  else600_1:
    DATA8 layer601
	DATA8 no601
	DATA8 mode8601
	
	MOVEF_8 VGV_RIGHT_SENSOR no601
	SUB8 no601 1 no601
	DIV8 no601 4 layer601
	MATH MOD8 no601 4 no601

	MOVEF_8 0.0 mode8601
	
	INPUT_DEVICE READY_RAW layer601 no601 0 mode8601 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 25.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB603:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB604:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 F.0
    JR_NEQF F.0 12.0 else605_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif605
  else605_1:
    DATA8 layer607
	DATA8 no607
	DATA8 mode8607
	
	MOVEF_8 VGV_RIGHT_SENSOR no607
	SUB8 no607 1 no607
	DIV8 no607 4 layer607
	MATH MOD8 no607 4 no607

	MOVEF_8 4.0 mode8607
	
	INPUT_DEVICE READY_RAW layer607 no607 0 mode8607 0
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB608:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    JR_LTEQF VGV_W 40.0 else610_1
    STRINGS DUPLICATE 'True' VGV_CH
  else610_1:
  endif610:
  else605_2:
  endif605:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 25.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB611 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB611:
  else600_2:
  endif600:
    CALL EQ_STRING VGV_CH 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else612_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB614 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB614:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB615 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB615:
    MOVEF_F 30.0 VLV_DEG_12
    MOVEF_F -30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB616:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 80.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB617 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB617:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB618:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB619:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB620:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer621
	DATA8 nos621
	DATA8 busy621
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer621 nos621
	JR_EQ8 0 nos621 motornotbusy621
  motorwaiting621:
	OUTPUT_TEST layer621 nos621 busy621
	JR_EQ8 busy621 0 motornotbusy621
	SLEEP
	JR motorwaiting621
  motornotbusy621:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB622:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB623 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB623:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB624 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB624:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer625
	DATA8 nos625
	DATA8 busy625
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer625 nos625
	JR_EQ8 0 nos625 motornotbusy625
  motorwaiting625:
	OUTPUT_TEST layer625 nos625 busy625
	JR_EQ8 busy625 0 motornotbusy625
	SLEEP
	JR motorwaiting625
  motornotbusy625:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB626 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB626:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB627:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB628 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB628:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB629 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB629:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB630 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB630:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB632 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB632:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB633 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB633:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB634:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 490.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB635:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB636 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB636:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 120.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB637 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB637:
    JR endif612
  else612_1:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 230.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB639 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB639:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer640
	DATA8 nos640
	DATA8 busy640
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer640 nos640
	JR_EQ8 0 nos640 motornotbusy640
  motorwaiting640:
	OUTPUT_TEST layer640 nos640 busy640
	JR_EQ8 busy640 0 motornotbusy640
	SLEEP
	JR motorwaiting640
  motornotbusy640:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB641:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB642 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB642:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 60.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB643:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB644:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 70.0 VLV_DEG_13
    MOVEF_F 25.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB645:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer646
	DATA8 nos646
	DATA8 busy646
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer646 nos646
	JR_EQ8 0 nos646 motornotbusy646
  motorwaiting646:
	OUTPUT_TEST layer646 nos646 busy646
	JR_EQ8 busy646 0 motornotbusy646
	SLEEP
	JR motorwaiting646
  motornotbusy646:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 230.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB648:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 80.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB649 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB649:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 130.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB650 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB650:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 170.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB651 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB651:
  else612_2:
  endif612:
    JR endif583
  else583_1:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else583_2
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 55.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB653:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 55.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB654:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB655 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB655:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB656 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB656:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 140.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB657:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB658 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB658:
  else583_2:
  endif583:
    MOVEF_F 200.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB659:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB660:
  while661:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 600.0 endwhile661
  whilebody661:
    MOVEF_F 480.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB664:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 600.0 whilebody661
  endwhile661:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB667 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB667:
    JR endif480
  else480_1:
    CALL EQ_STRING VGV_IS_ON_SECOND_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else668_1
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB670:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB671 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB671:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_A
  while673:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 310.0 endwhile673
  whilebody673:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB676:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 310.0 whilebody673
  endwhile673:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB679:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB680 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB680:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB681:
  else668_1:
  endif668:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB682:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB683:
    DATA8 layer684
	DATA8 no684
	DATA8 mode8684
	
	MOVEF_8 VGV_LINE no684
	SUB8 no684 1 no684
	DIV8 no684 4 layer684
	MATH MOD8 no684 4 no684

	MOVEF_8 0.0 mode8684
	
	INPUT_DEVICE READY_RAW layer684 no684 0 mode8684 0
  while685:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 330.0 endwhile685
  whilebody685:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB688 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB688:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 330.0 whilebody685
  endwhile685:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB691 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB691:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while692:
    JR_LTEQF VGV_P 20.0 endwhile692
  whilebody692:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB693:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB694 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB694:
    JR_GTF VGV_P 20.0 whilebody692
  endwhile692:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB695 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB695:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 200.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'Fales' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB696 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB696:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB699 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB699:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while700:
    JR_GTEQF VGV_P 20.0 endwhile700
  whilebody700:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB701 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB701:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_LTF VGV_P 20.0 whilebody700
  endwhile700:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer703
	DATA8 nos703
	DATA8 busy703
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer703 nos703
	JR_EQ8 0 nos703 motornotbusy703
  motorwaiting703:
	OUTPUT_TEST layer703 nos703 busy703
	JR_EQ8 busy703 0 motornotbusy703
	SLEEP
	JR motorwaiting703
  motornotbusy703:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB704:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB705 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB705:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB706 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB706:
  while707:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 200.0 endwhile707
  whilebody707:
    MOVEF_F -100.0 VLV_L_7
    WRITE32 ENDSUB_F_LINE_SLOW_1:CALLSUB710 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_SLOW_1
CALLSUB710:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 200.0 whilebody707
  endwhile707:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB713:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while714:
    JR_LTEQF VGV_P 10.0 endwhile714
  whilebody714:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB715:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F -100.0 VLV_L_7
    WRITE32 ENDSUB_F_LINE_SLOW_1:CALLSUB716 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_SLOW_1
CALLSUB716:
    JR_GTF VGV_P 10.0 whilebody714
  endwhile714:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB717 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB717:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 390.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB718:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 42.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB719:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 42.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB720:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB721 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB721:
  else480_2:
  endif480:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer722
	DATA8 nos722
	DATA8 busy722
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer722 nos722
	JR_EQ8 0 nos722 motornotbusy722
  motorwaiting722:
	OUTPUT_TEST layer722 nos722 busy722
	JR_EQ8 busy722 0 motornotbusy722
	SLEEP
	JR motorwaiting722
  motornotbusy722:
    CALL EQ_STRING VGV_START 'left' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else723_1
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_23
    WRITE32 ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:CALLSUB725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FROM_PROTECTED_TO_FINISH_1
CALLSUB725:
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_24
    WRITE32 ENDSUB_F_TAKE_CUBES_1:CALLSUB726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_1
CALLSUB726:
    STRINGS DUPLICATE VGV_BROWN_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_RED_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB727:
    STRINGS DUPLICATE VGV_WHITE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_YELLOW_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB728:
    STRINGS DUPLICATE VGV_BLUE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_GREEN_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'False' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB729:
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_25
    WRITE32 ENDSUB_F_FINISH_AFTER_DELIVERIES_1:CALLSUB730 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_DELIVERIES_1
CALLSUB730:
    JR endif723
  else723_1:
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_23
    WRITE32 ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:CALLSUB731 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FROM_PROTECTED_TO_FINISH_1
CALLSUB731:
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_24
    WRITE32 ENDSUB_F_TAKE_CUBES_1:CALLSUB732 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_1
CALLSUB732:
    STRINGS DUPLICATE VGV_BLUE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_GREEN_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB733:
    STRINGS DUPLICATE VGV_WHITE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_YELLOW_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB734:
    STRINGS DUPLICATE VGV_BROWN_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_RED_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'False' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB735 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB735:
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_25
    WRITE32 ENDSUB_F_FINISH_AFTER_DELIVERIES_1:CALLSUB736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_DELIVERIES_1
CALLSUB736:
  else723_2:
  endif723:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB737:
    STRINGS DUPLICATE 'True' VLV_TO_DELAY_26
    WRITE32 ENDSUB_F_SHOW_TIME_1:CALLSUB738 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SHOW_TIME_1
CALLSUB738:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_MOVEMENT_INIT_1:
    MULF VLV_POWER_1 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF VLV_POWER_1 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
RETSUB_F_MOVEMENT_INIT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVEMENT_INIT_1:
SUB_F_DELAY_1:
    DATA32 milliseconds743
	MOVEF_32 VLV_TIME_2 milliseconds743
	DATA32 timer743
	TIMER_WAIT milliseconds743 timer743
	TIMER_READY timer743
RETSUB_F_DELAY_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_1:
SUB_F_RESET_0:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 2
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_STOP_0:
    OUTPUT_POWER 0 3 0
	OUTPUT_STOP 0 3 1
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_READ_PERCENT_1:
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf750
    DATA8 flag750
    DIVF F.1 F.2 tmpf750
    CP_EQF 0.0 F.2 flag750
    SELECTF flag750 0.0 tmpf750 F.0

    MULF F.0 100.0 VLV_PERCENT_5
RETSUB_F_READ_PERCENT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_READ_PERCENT_1:
SUB_F_LINE_1:
    JR_NEQF VLV_L_6 -100.0 else752_1
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf756
    DATA8 flag756
    DIVF F.1 F.2 tmpf756
    CP_EQF 0.0 F.2 flag756
    SELECTF flag756 0.0 tmpf756 F.0

    MULF F.0 150.0 VLV_L_6
  else752_1:
  endif752:
    SUBF VLV_L_6 50.0 VLV_ERR_6
    SUBF VLV_ERR_6 VGV_LAST_ERR VLV_DIFF_6
    MULF VLV_ERR_6 1.0 F.0
    MULF VLV_DIFF_6 7.0 F.1
    ADDF F.0 F.1 VLV_DELTA_6
    SUBF 80.0 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF 80.0 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VLV_LEFT_POWER_6 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_6 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_6 VGV_LAST_ERR
    DATA32 milliseconds769
	MOVEF_32 5.0 milliseconds769
	DATA32 timer769
	TIMER_WAIT milliseconds769 timer769
	TIMER_READY timer769
RETSUB_F_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_1:
SUB_F_LINE_SLOW_1:
    JR_NEQF VLV_L_7 -100.0 else770_1
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf774
    DATA8 flag774
    DIVF F.1 F.2 tmpf774
    CP_EQF 0.0 F.2 flag774
    SELECTF flag774 0.0 tmpf774 F.0

    MULF F.0 150.0 VLV_L_7
  else770_1:
  endif770:
    SUBF VLV_L_7 50.0 VLV_ERR_7
    SUBF VLV_ERR_7 VGV_LAST_ERR VLV_DIFF_7
    MULF VLV_ERR_7 0.5 F.0
    MULF VLV_DIFF_7 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_7
    SUBF 30.0 VLV_DELTA_7 VLV_LEFT_POWER_7
    ADDF 30.0 VLV_DELTA_7 VLV_RIGHT_POWER_7
    MULF VLV_LEFT_POWER_7 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_7 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_7 VGV_LAST_ERR
    DATA32 milliseconds787
	MOVEF_32 5.0 milliseconds787
	DATA32 timer787
	TIMER_WAIT milliseconds787 timer787
	TIMER_READY timer787
RETSUB_F_LINE_SLOW_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_SLOW_1:
SUB_F_ULTRA_LINE_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VLV_L_8
    SUBF VLV_L_8 VLV_A_8 VLV_ERR_8
    SUBF VLV_ERR_8 VGV_LAST_ERR VLV_DIFF_8
    MULF VLV_ERR_8 0.8 F.0
    MULF VLV_DIFF_8 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_8
    SUBF 40.0 VLV_DELTA_8 VLV_LEFT_POWER_8
    ADDF 40.0 VLV_DELTA_8 VLV_RIGHT_POWER_8
    MULF VLV_LEFT_POWER_8 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_8 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_8 VGV_LAST_ERR
RETSUB_F_ULTRA_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRA_LINE_1:
SUB_F_SPEEDUP_4:
    MOVEF_F 15.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB800:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB801:
    MOVEF_F 0.0 VLV_L_10
  while802:
    JR_GTEQF VLV_L_10 VLV_DEG_10 endwhile802
  whilebody802:
    DATAF tmpf803
    DATA8 flag803
    DIVF VLV_L_10 VLV_DEG_10 tmpf803
    CP_EQF 0.0 VLV_DEG_10 flag803
    SELECTF flag803 0.0 tmpf803 VLV_P_10

    SUBF VLV_BASE_POWER_10 VLV_MIN_POWER_10 F.1
    MULF F.1 VLV_P_10 F.0
    ADDF F.0 VLV_MIN_POWER_10 VLV_POWER_10
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_10 VLV_L_10
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_10 VLV_R_10
    SUBF VLV_L_10 VLV_R_10 F.0
    MULF F.0 VLV_P_10 VLV_DELTA_10
    SUBF VLV_POWER_10 VLV_DELTA_10 VLV_LEFT_POWER_10
    ADDF VLV_POWER_10 VLV_DELTA_10 VLV_RIGHT_POWER_10
    MULF VLV_LEFT_POWER_10 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_10 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_10 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_10 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    JR_LTF VLV_L_10 VLV_DEG_10 whilebody802
  endwhile802:
RETSUB_F_SPEEDUP_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPEEDUP_4:
SUB_F_SYNC_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_11
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_11
    SUBF VLV_L_11 VLV_R_11 VLV_ERR_11
    SUBF VLV_ERR_11 VGV_LAST_ERR VLV_DIFF_11
    MULF VLV_ERR_11 1.0 F.0
    MULF VLV_DIFF_11 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_11
    SUBF VLV_POWER_11 VLV_DELTA_11 VLV_LEFT_POWER_11
    ADDF VLV_POWER_11 VLV_DELTA_11 VLV_RIGHT_POWER_11
    MULF VLV_LEFT_POWER_11 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_11 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_11 VGV_LAST_ERR
RETSUB_F_SYNC_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SYNC_1:
SUB_F_FORWARD_DEG_2:
    MOVEF_F VLV_POWER_12 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB838:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB839 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB839:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_12
  while842:
    MATH ABS VLV_L_12 F.0
    MATH ABS VLV_DEG_12 F.1
    JR_GTEQF F.0 F.1 endwhile842
  whilebody842:
    MOVEF_F VLV_POWER_12 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB845 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB845:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_12
    MATH ABS VLV_L_12 F.0
    MATH ABS VLV_DEG_12 F.1
    JR_LTF F.0 F.1 whilebody842
  endwhile842:
RETSUB_F_FORWARD_DEG_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FORWARD_DEG_2:
SUB_F_MOVE_MOTOR_7:
    MOVEF_F VLV_DEG_13 VLV_NORMAL_DEG_13
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_13
    MOVEF_F 0.0 VLV_ZAME_DEG_13
    CALL EQ_STRING VLV_ACCELERATION_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else850_1
    DATAF tmpf852
    DATA8 flag852
    DIVF VLV_DEG_13 2.0 tmpf852
    CP_EQF 0.0 2.0 flag852
    SELECTF flag852 0.0 tmpf852 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag854
	CP_LTF F.0 120.0 flag854
	SELECTF flag854 F.0 120.0 VLV_ACCELERATION_DEG_13
    SUBF VLV_NORMAL_DEG_13 VLV_ACCELERATION_DEG_13 VLV_NORMAL_DEG_13
  else850_1:
  endif850:
    CALL EQ_STRING VLV_ZAME_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else856_1
    DATAF tmpf858
    DATA8 flag858
    DIVF VLV_DEG_13 2.0 tmpf858
    CP_EQF 0.0 2.0 flag858
    SELECTF flag858 0.0 tmpf858 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag860
	CP_LTF F.0 120.0 flag860
	SELECTF flag860 F.0 120.0 VLV_ZAME_DEG_13
    SUBF VLV_NORMAL_DEG_13 VLV_ZAME_DEG_13 VLV_NORMAL_DEG_13
  else856_1:
  endif856:
    CALL EQ_STRING VLV_ACCELERATION_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else862_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_13
    MOVEF_F 0.0 VLV_M_13
    MOVEF_F 10.0 VLV_MIN_POWER_13
    TIMER_READ timeMC1
  while866:
    JR_GTEQF VLV_M_13 VLV_ACCELERATION_DEG_13 endwhile866
  whilebody866:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTEQF F.0 700.0 else867_1
    JR_GTEQF VLV_M_13 20.0 else867_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB869 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB869:
    ADDF VLV_MIN_POWER_13 5.0 VLV_MIN_POWER_13
    SUBF VLV_ACCELERATION_DEG_13 10.0 VLV_ACCELERATION_DEG_13
    TIMER_READ timeMC1
  else867_1:
  endif867:
    DATAF tmpf873
    DATA8 flag873
    DIVF VLV_M_13 VLV_ACCELERATION_DEG_13 tmpf873
    CP_EQF 0.0 VLV_ACCELERATION_DEG_13 flag873
    SELECTF flag873 0.0 tmpf873 VLV_P_13

    SUBF VLV_MAX_POWER_13 VLV_MIN_POWER_13 F.1
    MULF F.1 VLV_P_13 F.0
    ADDF F.0 VLV_MIN_POWER_13 VLV_POWER_13
    MULF VLV_POWER_13 VLV_FORWARD_13 F.0
    CALL MOTOR.START VLV_MOTOR_13 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_13 F.0
    MULF F.0 VLV_FORWARD_13 VLV_M_13
    DATA32 milliseconds881
	MOVEF_32 10.0 milliseconds881
	DATA32 timer881
	TIMER_WAIT milliseconds881 timer881
	TIMER_READY timer881
    JR_LTF VLV_M_13 VLV_ACCELERATION_DEG_13 whilebody866
  endwhile866:
  else862_1:
  endif862:
    JR_LTEQF VLV_NORMAL_DEG_13 0.0 else882_1
    MULF VLV_MAX_POWER_13 VLV_FORWARD_13 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_13 F.0 0.0 VLV_NORMAL_DEG_13 0.0 'False' 

	DATA8 layer884
	DATA8 nos884
	DATA8 busy884
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_13 layer884 nos884
	JR_EQ8 0 nos884 motornotbusy884
  motorwaiting884:
	OUTPUT_TEST layer884 nos884 busy884
	JR_EQ8 busy884 0 motornotbusy884
	SLEEP
	JR motorwaiting884
  motornotbusy884:
  else882_1:
  endif882:
    CALL EQ_STRING VLV_ZAME_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else885_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_13
    MOVEF_F 0.0 VLV_M_13
  while888:
    JR_GTEQF VLV_M_13 VLV_ZAME_DEG_13 endwhile888
  whilebody888:
    DATAF tmpf889
    DATA8 flag889
    DIVF VLV_M_13 VLV_ZAME_DEG_13 tmpf889
    CP_EQF 0.0 VLV_ZAME_DEG_13 flag889
    SELECTF flag889 0.0 tmpf889 F.0

    SUBF 1.0 F.0 VLV_P_13
    SUBF VLV_MAX_POWER_13 10.0 F.1
    MULF F.1 VLV_P_13 F.0
    ADDF F.0 10.0 VLV_POWER_13
    MULF VLV_POWER_13 VLV_FORWARD_13 F.0
    CALL MOTOR.START VLV_MOTOR_13 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_13 F.0
    MULF F.0 VLV_FORWARD_13 VLV_M_13
    DATA32 milliseconds898
	MOVEF_32 10.0 milliseconds898
	DATA32 timer898
	TIMER_WAIT milliseconds898 timer898
	TIMER_READY timer898
    JR_LTF VLV_M_13 VLV_ZAME_DEG_13 whilebody888
  endwhile888:
  else885_1:
  endif885:
    CALL EQ_STRING VLV_TO_STOP_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else899_1
    CALL MOTOR.STOP VLV_MOTOR_13 'True'
  else899_1:
  endif899:
RETSUB_F_MOVE_MOTOR_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_MOTOR_7:
SUB_F_ZAME_4:
    MOVEF_F VLV_BASE_POWER_14 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB902 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB902:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB903 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB903:
    MOVEF_F 0.0 VLV_L_14
  while904:
    JR_GTEQF VLV_L_14 VLV_DEG_14 endwhile904
  whilebody904:
    DATAF tmpf905
    DATA8 flag905
    DIVF VLV_L_14 VLV_DEG_14 tmpf905
    CP_EQF 0.0 VLV_DEG_14 flag905
    SELECTF flag905 0.0 tmpf905 VLV_P_14

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_14 VLV_L_14
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_14 VLV_R_14
    SUBF VLV_L_14 VLV_R_14 F.0
    SUBF 1.0 VLV_P_14 F.1
    MULF F.0 F.1 VLV_DELTA_14
    SUBF VLV_BASE_POWER_14 VLV_MIN_POWER_14 F.1
    SUBF 1.0 VLV_P_14 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_14 VLV_POWER_14
    SUBF VLV_POWER_14 VLV_DELTA_14 VLV_LEFT_POWER_14
    ADDF VLV_POWER_14 VLV_DELTA_14 VLV_RIGHT_POWER_14
    MULF VLV_LEFT_POWER_14 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_14 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_14 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_14 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds927
	MOVEF_32 10.0 milliseconds927
	DATA32 timer927
	TIMER_WAIT milliseconds927 timer927
	TIMER_READY timer927
    JR_LTF VLV_L_14 VLV_DEG_14 whilebody904
  endwhile904:
RETSUB_F_ZAME_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAME_4:
SUB_F_TAKE_CHEM_ON_LEFT_1:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB928 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB928:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 80.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB929 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB929:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB930:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer931
	DATA8 nos931
	DATA8 busy931
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer931 nos931
	JR_EQ8 0 nos931 motornotbusy931
  motorwaiting931:
	OUTPUT_TEST layer931 nos931 busy931
	JR_EQ8 busy931 0 motornotbusy931
	SLEEP
	JR motorwaiting931
  motornotbusy931:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 130.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB932 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB932:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer933
	DATA8 nos933
	DATA8 busy933
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer933 nos933
	JR_EQ8 0 nos933 motornotbusy933
  motorwaiting933:
	OUTPUT_TEST layer933 nos933 busy933
	JR_EQ8 busy933 0 motornotbusy933
	SLEEP
	JR motorwaiting933
  motornotbusy933:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 125.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB935 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB935:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB936 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB936:
    CALL EQ_STRING VLV_FINISH_FORWARD_15 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else937_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 160.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB939 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB939:
    JR endif937
  else937_1:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 30.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB940 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB940:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 30.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB941 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB941:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB942 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB942:
  else937_2:
  endif937:
RETSUB_F_TAKE_CHEM_ON_LEFT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_1:
SUB_F_OPEN_CUBES_1:
    MULF 50.0 VLV_COEF_16 F.0
    CALL MOTOR.START VGV_WATER_MOTOR F.0
    DATA32 milliseconds945
	MOVEF_32 500.0 milliseconds945
	DATA32 timer945
	TIMER_WAIT milliseconds945 timer945
	TIMER_READY timer945
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
RETSUB_F_OPEN_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_1:
SUB_F_CLOSE_CUBES_1:
    MULF -30.0 VLV_COEF_17 F.0
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR F.0 0.0 90.0 0.0 'True' 

	DATA8 layer948
	DATA8 nos948
	DATA8 busy948
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer948 nos948
	JR_EQ8 0 nos948 motornotbusy948
  motorwaiting948:
	OUTPUT_TEST layer948 nos948 busy948
	JR_EQ8 busy948 0 motornotbusy948
	SLEEP
	JR motorwaiting948
  motornotbusy948:
RETSUB_F_CLOSE_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_1:
SUB_F_DELIVER_LONG_1:
    CALL EQ_STRING VLV_IS_INVERTED_18 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else949_1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOT_18
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_18
    MOVEF_F 1.0 VLV_COEF_18
    JR endif949
  else949_1:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOT_18
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_18
    MOVEF_F -1.0 VLV_COEF_18
  else949_2:
  endif949:
    JR_NEQF VGV_CUBES_COUNT 2.0 else951_1
    MOVEF_F VLV_COEF_18 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB952 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB952:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD_18 VLV_FORWARD_13
    MOVEF_F 270.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB953 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB953:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB954 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB954:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MULF VLV_FORWARD_18 -1.0 VLV_FORWARD_13
    MOVEF_F 120.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB956 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB956:
    MOVEF_F VLV_COEF_18 VLV_COEF_17
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB957 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB957:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MULF VLV_FORWARD_18 -1.0 VLV_FORWARD_13
    MOVEF_F 145.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB959 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB959:
    MOVEF_F 1.0 VGV_CUBES_COUNT
    JR endif951
  else951_1:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 30.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB960 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB960:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB961 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB961:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD_18 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB962 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB962:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB963:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB964 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB964:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB965 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB965:
    MOVEF_F VLV_COEF_18 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB966 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB966:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 45.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB967 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB967:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 45.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB968 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB968:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB969 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB969:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MULF VLV_FORWARD_18 -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB971 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB971:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 30.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB972 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB972:
    MOVEF_F 0.0 VGV_CUBES_COUNT
  else951_2:
  endif951:
RETSUB_F_DELIVER_LONG_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_LONG_1:
SUB_F_DELIVER_NEAR_2:
    CALL EQ_STRING VLV_IS_INVERTED_19 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else973_1
    MOVEF_F 1.0 VLV_COEF_19
    JR endif973
  else973_1:
    MOVEF_F -1.0 VLV_COEF_19
  else973_2:
  endif973:
    MOVEF_F 0.0 VLV_MINUS_DEG_19
    MOVEF_F VLV_COEF_19 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB975 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB975:
    JR_NEQF VGV_CUBES_COUNT 2.0 else976_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 30.0 VLV_MIN_POWER_10
    MOVEF_F 45.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB977 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB977:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB978 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB978:
    MOVEF_F VLV_COEF_19 VLV_COEF_17
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB979 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB979:
    MOVEF_F 1.0 VGV_CUBES_COUNT
    MOVEF_F 45.0 VLV_MINUS_DEG_19
  else976_1:
  endif976:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB980 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB980:
    SUBF VGV_CUBES_COUNT 1.0 VGV_CUBES_COUNT
RETSUB_F_DELIVER_NEAR_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_NEAR_2:
SUB_F_MOVE_TO_NEXT_ZONE_1:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB982 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB982:
    SUBF 210.0 VLV_MINUS_DEG_20 VLV_DEG_20
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F VLV_DEG_20 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB984:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB985 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB985:
RETSUB_F_MOVE_TO_NEXT_ZONE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_TO_NEXT_ZONE_1:
SUB_F_DELIVER_GROUP_4:
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    CALL EQ_STRING VLV_LONG_21 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else986_1
    STRINGS DUPLICATE VLV_IS_INVERTED_21 VLV_IS_INVERTED_18
    WRITE32 ENDSUB_F_DELIVER_LONG_1:CALLSUB988 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_LONG_1
CALLSUB988:
  else986_1:
  endif986:
    CALL EQ_STRING VLV_NEAR_21 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else989_1
    STRINGS DUPLICATE VLV_IS_INVERTED_21 VLV_IS_INVERTED_19
    WRITE32 ENDSUB_F_DELIVER_NEAR_2:CALLSUB991 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_NEAR_2
CALLSUB991:
    MOVEF_F VLV_MINUS_DEG_19 VLV_MINUS_DEG_21
  else989_1:
  endif989:
    CALL EQ_STRING VLV_SHOULD_MOVE_BACKWARD_21 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else992_1
    MOVEF_F VLV_MINUS_DEG_21 VLV_MINUS_DEG_20
    WRITE32 ENDSUB_F_MOVE_TO_NEXT_ZONE_1:CALLSUB994 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_TO_NEXT_ZONE_1
CALLSUB994:
  else992_1:
  endif992:
RETSUB_F_DELIVER_GROUP_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_GROUP_4:
SUB_F_GET_MOTORS_6:
    CALL EQ_STRING VLV_IS_INVERTED_22 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else995_1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR1_22
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR2_22
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD1_22
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD2_22
    MOVEF_F 1.0 VLV_COEF_22
    JR endif995
  else995_1:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR1_22
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR2_22
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD1_22
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD2_22
    MOVEF_F -1.0 VLV_COEF_22
  else995_2:
  endif995:
RETSUB_F_GET_MOTORS_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GET_MOTORS_6:
SUB_F_FROM_PROTECTED_TO_FINISH_1:
    STRINGS DUPLICATE VLV_IS_INVERTED_23 VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB997 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB997:
    STRINGS DUPLICATE VLV_MOTOR1_22 VLV_MOTOR1_23
    STRINGS DUPLICATE VLV_MOTOR2_22 VLV_MOTOR2_23
    MOVEF_F VLV_FORWARD1_22 VLV_FORWARD1_23
    MOVEF_F VLV_FORWARD2_22 VLV_FORWARD2_23
    MOVEF_F VLV_COEF_22 VLV_COEF_23
    MOVEF_F 50.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 300.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB998 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB998:
    CALL MOTOR.STOP VLV_MOTOR1_23 'True'
    STRINGS DUPLICATE VLV_MOTOR2_23 VLV_MOTOR_13
    MULF VLV_FORWARD2_23 -1.0 VLV_FORWARD_13
    MOVEF_F 330.0 VLV_DEG_13
    MOVEF_F 50.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'False' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1001 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1001:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1002 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1002:
    MOVEF_F 1700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1003 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1003:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1004 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1004:
    CALL MOTOR.START VGV_GRABBER_MOTOR -50.0
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1006 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1006:
    CALL MOTOR.STOP VGV_GRABBER_MOTOR 'True'
    MULF VLV_FORWARD2_23 30.0 F.0
    CALL MOTOR.START VLV_MOTOR2_23 F.0
    MOVEF_F 1500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1010 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1010:
    CALL MOTOR.STOP VLV_MOTOR2_23 'True'
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1012 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1012:
    MULF 40.0 VLV_FORWARD1_23 F.0
    CALL MOTOR.START VLV_MOTOR1_23 F.0
    MULF 50.0 VLV_FORWARD2_23 F.0
    CALL MOTOR.START VLV_MOTOR2_23 F.0
  while1017:
    CALL MOTOR.GETCOUNT VLV_MOTOR1_23 F.1
    MULF F.1 VLV_FORWARD1_23 F.0
    JR_GTEQF F.0 1000.0 endwhile1017
  whilebody1017:
    CALL MOTOR.GETCOUNT VLV_MOTOR1_23 F.1
    MULF F.1 VLV_FORWARD1_23 F.0
    JR_LTF F.0 1000.0 whilebody1017
  endwhile1017:
    MULF 40.0 VLV_FORWARD1_23 F.0
    CALL MOTOR.START VLV_MOTOR1_23 F.0
    MULF 60.0 VLV_FORWARD2_23 F.0
    CALL MOTOR.START VLV_MOTOR2_23 F.0
    DATA32 milliseconds1026
	MOVEF_32 1200.0 milliseconds1026
	DATA32 timer1026
	TIMER_WAIT milliseconds1026 timer1026
	TIMER_READY timer1026
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1027 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1027:
RETSUB_F_FROM_PROTECTED_TO_FINISH_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:
SUB_F_TAKE_CUBES_1:
    DATA8 layer1028
	DATA8 no1028
	DATA8 mode81028
	
	MOVEF_8 VGV_LINE no1028
	SUB8 no1028 1 no1028
	DIV8 no1028 4 layer1028
	MATH MOD8 no1028 4 no1028

	MOVEF_8 0.0 mode81028
	
	INPUT_DEVICE READY_RAW layer1028 no1028 0 mode81028 0
    STRINGS DUPLICATE VLV_IS_INVERTED_24 VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB1029 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB1029:
    STRINGS DUPLICATE VLV_MOTOR1_22 VLV_MOTOR1_24
    STRINGS DUPLICATE VLV_MOTOR2_22 VLV_MOTOR2_24
    MOVEF_F VLV_FORWARD1_22 VLV_FORWARD1_24
    MOVEF_F VLV_FORWARD2_22 VLV_FORWARD2_24
    MOVEF_F VLV_COEF_22 VLV_COEF_24
    MOVEF_F VLV_COEF_24 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB1030 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB1030:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 75.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1031 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1031:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 75.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB1032 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB1032:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1033 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1033:
    STRINGS DUPLICATE VLV_MOTOR2_24 VLV_MOTOR_13
    MULF VLV_FORWARD2_24 -1.0 VLV_FORWARD_13
    MOVEF_F 180.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1035 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1035:
    STRINGS DUPLICATE VLV_MOTOR1_24 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD1_24 VLV_FORWARD_13
    MOVEF_F 40.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1036 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1036:
    MULF VLV_FORWARD2_24 -30.0 F.0
    CALL MOTOR.START VLV_MOTOR2_24 F.0
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1039 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1039:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1040 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1040:
    MULF VLV_FORWARD1_24 -40.0 F.0
    CALL MOTOR.START VLV_MOTOR1_24 F.0
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1043:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1044 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1044:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1045 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1045:
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1046 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1046:
    MOVEF_F 800.0 VLV_DEG_12
    MOVEF_F 40.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB1047 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB1047:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 30.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB1048 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB1048:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1049 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1049:
    MOVEF_F VLV_COEF_24 VLV_COEF_17
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB1050 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB1050:
    STRINGS DUPLICATE VLV_MOTOR2_24 VLV_MOTOR_13
    MULF VLV_FORWARD2_24 -1.0 VLV_FORWARD_13
    MOVEF_F 250.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1052 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1052:
    STRINGS DUPLICATE VLV_MOTOR1_24 VLV_MOTOR_13
    MULF VLV_FORWARD1_24 -1.0 VLV_FORWARD_13
    MOVEF_F 250.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1054 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1054:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1055 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1055:
    MOVEF_F -30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1056 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1056:
    CALL EQ_STRING VLV_IS_INVERTED_24 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1057_1
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB1059:
    MOVEF_F VLV_PERCENT_5 VLV_P_24
  while1060:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MATH ABS F.1 F.0
    JR_LTF F.0 20.0 or1061
    JR_LTEQF VLV_P_24 20.0 endwhile1060
  or1061:
  whilebody1060:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB1064 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB1064:
    MOVEF_F VLV_PERCENT_5 VLV_P_24
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MATH ABS F.1 F.0
    JR_LTF F.0 20.0 whilebody1060
    JR_GTF VLV_P_24 20.0 whilebody1060
  endwhile1060:
    JR endif1057
  else1057_1:
    DATA8 layer1067
	DATA8 no1067
	DATA8 mode81067
	
	MOVEF_8 VGV_LINE no1067
	SUB8 no1067 1 no1067
	DIV8 no1067 4 layer1067
	MATH MOD8 no1067 4 no1067

	MOVEF_8 4.0 mode81067
	
	INPUT_DEVICE READY_RAW layer1067 no1067 0 mode81067 0
    DATA8 layer1068
	DATA8 no1068	
	MOVEF_8 VGV_LINE no1068
	SUB8 no1068 1 no1068
	DIV8 no1068 4 layer1068
	MATH MOD8 no1068 4 no1068 
	INPUT_READY layer1068 no1068
    CALL SENSOR.READRAW VGV_LINE 3.0 VLV_RGB_24
  while1070:
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_RGB_24
    JR_LTEQF F.0 50.0 endwhile1070
  whilebody1070:
    CALL SENSOR.READRAW VGV_LINE 3.0 VLV_RGB_24
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_RGB_24
    JR_GTF F.0 50.0 whilebody1070
  endwhile1070:
    DATA8 layer1074
	DATA8 no1074
	DATA8 mode81074
	
	MOVEF_8 VGV_LINE no1074
	SUB8 no1074 1 no1074
	DIV8 no1074 4 layer1074
	MATH MOD8 no1074 4 no1074

	MOVEF_8 0.0 mode81074
	
	INPUT_DEVICE READY_RAW layer1074 no1074 0 mode81074 0
  else1057_2:
  endif1057:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1075 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1075:
RETSUB_F_TAKE_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_1:
SUB_F_FINISH_AFTER_DELIVERIES_1:
    STRINGS DUPLICATE VLV_IS_INVERTED_25 VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB1076 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB1076:
    STRINGS DUPLICATE VLV_MOTOR1_22 VLV_MOTOR1_25
    STRINGS DUPLICATE VLV_MOTOR2_22 VLV_MOTOR2_25
    MOVEF_F VLV_FORWARD1_22 VLV_FORWARD1_25
    MOVEF_F VLV_FORWARD2_22 VLV_FORWARD2_25
    MOVEF_F VLV_COEF_22 VLV_COEF_25
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1077 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1077:
    MOVEF_F 1500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1078 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1078:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1079 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1079:
    STRINGS DUPLICATE VLV_MOTOR1_25 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD1_25 VLV_FORWARD_13
    MOVEF_F 210.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1080 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1080:
    STRINGS DUPLICATE VLV_MOTOR2_25 VLV_MOTOR_13
    MULF VLV_FORWARD2_25 -1.0 VLV_FORWARD_13
    MOVEF_F 150.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1082 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1082:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1083 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1083:
    MOVEF_F 2000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1084 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1084:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1085 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1085:
RETSUB_F_FINISH_AFTER_DELIVERIES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_DELIVERIES_1:
SUB_F_SHOW_TIME_1:
    TIMER_READ timeMC9tmp
	SUB32 timeMC9tmp timeMC9 timeMC9tmp
	MOVE32_F timeMC9tmp VLV_MILLISECOND_26
    DATAF tmpf1087
    DATA8 flag1087
    DIVF VLV_MILLISECOND_26 1000.0 tmpf1087
    CP_EQF 0.0 1000.0 flag1087
    SELECTF flag1087 0.0 tmpf1087 F.0

    MATH FLOOR F.0 VLV_SECONDS_26
    DATAF tmpf1089
    DATA8 flag1089
    DIVF VLV_SECONDS_26 60.0 tmpf1089
    CP_EQF 0.0 60.0 flag1089
    SELECTF flag1089 0.0 tmpf1089 F.0

    MATH FLOOR F.0 VLV_MINUTES_26
    MATH MOD VLV_SECONDS_26 60.0 VLV_SECONDS_26
    STRINGS VALUE_FORMATTED VLV_MINUTES_26 '%g' 99 S.1
    CALL TEXT.APPEND S.1 ':' S.0
    STRINGS VALUE_FORMATTED VLV_SECONDS_26 '%g' 99 S.1
    CALL TEXT.APPEND S.0 S.1 VLV_TEXT_26
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 VLV_TEXT_26
    CALL EQ_STRING VLV_TO_DELAY_26 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1098_1
    MOVEF_F 100000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1100:
  else1098_1:
  endif1098:
RETSUB_F_SHOW_TIME_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SHOW_TIME_1:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall NE_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 flag 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
isequal:
	STRINGS DUPLICATE 'False' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'True' result
	RETURN
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
