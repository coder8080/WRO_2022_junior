DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_8
DATAF VLV_MIN_POWER_8
DATAF VLV_DEG_8
DATAF VLV_COEF_8
DATAF VLV_BASE_POWER_12
DATAF VLV_MIN_POWER_12
DATAF VLV_DEG_12
DATAF VLV_COEF_12
DATAS VLV_MOTOR_11 252
DATAF VLV_FORWARD_11
DATAF VLV_DEG_11
DATAF VLV_MAX_POWER_11
DATAS VLV_ACCELERATION_11 252
DATAS VLV_ZAME_11 252
DATAS VLV_TO_STOP_11 252
DATAF VLV_TIME_5
DATAF VLV_PERCENT_13
DATAF VLV_POWER_1
DATAF VLV_A_3
DATAF VLV_DEG_10
DATAF VLV_POWER_10
DATAF VLV_POWER_9
DATAS VLV_TO_DELAY_14 252
DATAF VLV_L_2
DATAF VGV_P
DATAF VGV_LINE
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_ULTRASONIC
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERTED_MOTOR 252
DATAS VGV_MOTORS 252
DATAF VGV_LEFT_FORWARD
DATAF VGV_RIGHT_FORWARD
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_MAX
DATAF VGV_LEFT_MIN
DATAF VGV_LAST_ERR
DATAF VGV_LAST_MOTOR_ERR
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_WATER_STATE
DATAF VGV_FIRE_COUNT
DATAF VGV_MEN_COUNT
DATAS VGV_CHEM 252
DATAS VGV_TAKE_CHEM_IN_YELLOW 252
DATAF VGV_A
DATAF VGV_R
DATAS VGV_OBEJCT 252
DATAS VGV_OBJECT 252
DATAF VGV_DEG
DATAF VGV_G
DATAS VGV_TAKE_LEFT 252
DATAS VGV_TAKE_RIGHT 252
DATAF VGV_W
DATAF VGV_ULTRA
DATAS VGV_IS_ON_SECOND_BLUE 252
DATAS VGV_WHITE_OBJECT 252
DATAS VGV_CH 252
DATAF VLV_ERR_2
DATAF VLV_DIFF_2
DATAF VLV_DELTA_2
DATAF VLV_LEFT_POWER_2
DATAF VLV_RIGHT_POWER_2
DATAF VLV_L_3
DATAF VLV_ERR_3
DATAF VLV_DIFF_3
DATAF VLV_DELTA_3
DATAF VLV_LEFT_POWER_3
DATAF VLV_RIGHT_POWER_3
DATAF VLV_L_8
DATAF VLV_P_8
DATAF VLV_POWER_8
DATAF VLV_R_8
DATAF VLV_DELTA_8
DATAF VLV_LEFT_POWER_8
DATAF VLV_RIGHT_POWER_8
DATAF VLV_L_9
DATAF VLV_R_9
DATAF VLV_ERR_9
DATAF VLV_DIFF_9
DATAF VLV_DELTA_9
DATAF VLV_LEFT_POWER_9
DATAF VLV_RIGHT_POWER_9
DATAF VLV_L_10
DATAF VLV_NORMAL_DEG_11
DATAF VLV_ACCELERATION_DEG_11
DATAF VLV_ZAME_DEG_11
DATAF VLV_M_11
DATAF VLV_P_11
DATAF VLV_POWER_11
DATAF VLV_L_12
DATAF VLV_P_12
DATAF VLV_R_12
DATAF VLV_DELTA_12
DATAF VLV_POWER_12
DATAF VLV_LEFT_POWER_12
DATAF VLV_RIGHT_POWER_12
DATAF VLV_MILLISECOND_14
DATAF VLV_SECONDS_14
DATAF VLV_MINUTES_14
DATAS VLV_TEXT_14 252
DATA32 RUNCOUNTER_F_KICK_WATER_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_8
    MOVEF_F 0.0 VLV_MIN_POWER_8
    MOVEF_F 0.0 VLV_DEG_8
    MOVEF_F 0.0 VLV_COEF_8
    MOVEF_F 0.0 VLV_BASE_POWER_12
    MOVEF_F 0.0 VLV_MIN_POWER_12
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_COEF_12
    STRINGS DUPLICATE '' VLV_MOTOR_11
    MOVEF_F 0.0 VLV_FORWARD_11
    MOVEF_F 0.0 VLV_DEG_11
    MOVEF_F 0.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE '' VLV_ACCELERATION_11
    STRINGS DUPLICATE '' VLV_ZAME_11
    STRINGS DUPLICATE '' VLV_TO_STOP_11
    MOVEF_F 0.0 VLV_TIME_5
    MOVEF_F 0.0 VLV_PERCENT_13
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_A_3
    MOVEF_F 0.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_POWER_10
    MOVEF_F 0.0 VLV_POWER_9
    STRINGS DUPLICATE '' VLV_TO_DELAY_14
    MOVEF_F 0.0 VLV_L_2
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_R
    STRINGS DUPLICATE '' VGV_OBEJCT
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_TAKE_LEFT
    STRINGS DUPLICATE '' VGV_TAKE_RIGHT
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_ULTRA
    STRINGS DUPLICATE '' VGV_IS_ON_SECOND_BLUE
    STRINGS DUPLICATE '' VGV_WHITE_OBJECT
    STRINGS DUPLICATE '' VGV_CH
    MOVEF_F 0.0 VLV_ERR_2
    MOVEF_F 0.0 VLV_DIFF_2
    MOVEF_F 0.0 VLV_DELTA_2
    MOVEF_F 0.0 VLV_LEFT_POWER_2
    MOVEF_F 0.0 VLV_RIGHT_POWER_2
    MOVEF_F 0.0 VLV_L_3
    MOVEF_F 0.0 VLV_ERR_3
    MOVEF_F 0.0 VLV_DIFF_3
    MOVEF_F 0.0 VLV_DELTA_3
    MOVEF_F 0.0 VLV_LEFT_POWER_3
    MOVEF_F 0.0 VLV_RIGHT_POWER_3
    MOVEF_F 0.0 VLV_L_8
    MOVEF_F 0.0 VLV_P_8
    MOVEF_F 0.0 VLV_POWER_8
    MOVEF_F 0.0 VLV_R_8
    MOVEF_F 0.0 VLV_DELTA_8
    MOVEF_F 0.0 VLV_LEFT_POWER_8
    MOVEF_F 0.0 VLV_RIGHT_POWER_8
    MOVEF_F 0.0 VLV_L_9
    MOVEF_F 0.0 VLV_R_9
    MOVEF_F 0.0 VLV_ERR_9
    MOVEF_F 0.0 VLV_DIFF_9
    MOVEF_F 0.0 VLV_DELTA_9
    MOVEF_F 0.0 VLV_LEFT_POWER_9
    MOVEF_F 0.0 VLV_RIGHT_POWER_9
    MOVEF_F 0.0 VLV_L_10
    MOVEF_F 0.0 VLV_NORMAL_DEG_11
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_11
    MOVEF_F 0.0 VLV_ZAME_DEG_11
    MOVEF_F 0.0 VLV_M_11
    MOVEF_F 0.0 VLV_P_11
    MOVEF_F 0.0 VLV_POWER_11
    MOVEF_F 0.0 VLV_L_12
    MOVEF_F 0.0 VLV_P_12
    MOVEF_F 0.0 VLV_R_12
    MOVEF_F 0.0 VLV_DELTA_12
    MOVEF_F 0.0 VLV_POWER_12
    MOVEF_F 0.0 VLV_LEFT_POWER_12
    MOVEF_F 0.0 VLV_RIGHT_POWER_12
    MOVEF_F 0.0 VLV_MILLISECOND_14
    MOVEF_F 0.0 VLV_SECONDS_14
    MOVEF_F 0.0 VLV_MINUTES_14
    STRINGS DUPLICATE '' VLV_TEXT_14
    MOVE32_32 0 RUNCOUNTER_F_KICK_WATER_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_KICK_WATER_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_KICK_WATER_0 0
    CALL GETANDINC32 RUNCOUNTER_F_KICK_WATER_0 -1 RUNCOUNTER_F_KICK_WATER_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_KICK_WATER_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch644
    WRITE32 ENDSUB_F_KICK_WATER_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
  dispatch644:
    MOVEF_F 0.0 VLV_BASE_POWER_8
    MOVEF_F 0.0 VLV_MIN_POWER_8
    MOVEF_F 0.0 VLV_DEG_8
    MOVEF_F 0.0 VLV_COEF_8
    MOVEF_F 0.0 VLV_BASE_POWER_12
    MOVEF_F 0.0 VLV_MIN_POWER_12
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_COEF_12
    STRINGS DUPLICATE '' VLV_MOTOR_11
    MOVEF_F 0.0 VLV_FORWARD_11
    MOVEF_F 0.0 VLV_DEG_11
    MOVEF_F 0.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE '' VLV_ACCELERATION_11
    STRINGS DUPLICATE '' VLV_ZAME_11
    STRINGS DUPLICATE '' VLV_TO_STOP_11
    MOVEF_F 0.0 VLV_TIME_5
    MOVEF_F 0.0 VLV_PERCENT_13
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_A_3
    MOVEF_F 0.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_POWER_10
    MOVEF_F 0.0 VLV_POWER_9
    STRINGS DUPLICATE '' VLV_TO_DELAY_14
    MOVEF_F 0.0 VLV_L_2
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_R
    STRINGS DUPLICATE '' VGV_OBEJCT
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_DEG
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_TAKE_LEFT
    STRINGS DUPLICATE '' VGV_TAKE_RIGHT
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_ULTRA
    STRINGS DUPLICATE '' VGV_IS_ON_SECOND_BLUE
    STRINGS DUPLICATE '' VGV_WHITE_OBJECT
    STRINGS DUPLICATE '' VGV_CH
    MOVEF_F 1.0 VGV_LINE
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERTED_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 40.0 VGV_LEFT_MAX
    MOVEF_F 5.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_TAKE_CHEM_IN_YELLOW
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_LEFT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_RIGHT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB7 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB7:
    SOUND_READY
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB10:
ENDTHREAD:
    RETURN
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_KICK_WATER_0:
    CALL MOTOR.START VGV_WATER_MOTOR 50.0
    DATA32 milliseconds13
	MOVEF_32 500.0 milliseconds13
	DATA32 timer13
	TIMER_WAIT milliseconds13 timer13
	TIMER_READY timer13
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer15
	DATA8 nos15
	DATA8 busy15
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer15 nos15
	JR_EQ8 0 nos15 motornotbusy15
  motorwaiting15:
	OUTPUT_TEST layer15 nos15 busy15
	JR_EQ8 busy15 0 motornotbusy15
	SLEEP
	JR motorwaiting15
  motornotbusy15:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 50.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB16 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB16:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB17 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB17:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_11
    MOVEF_F 100.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB20 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB20:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer21
	DATA8 nos21
	DATA8 busy21
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer21 nos21
	JR_EQ8 0 nos21 motornotbusy21
  motorwaiting21:
	OUTPUT_TEST layer21 nos21 busy21
	JR_EQ8 busy21 0 motornotbusy21
	SLEEP
	JR motorwaiting21
  motornotbusy21:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 50.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB22 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB22:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB23 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB23:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB24 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB24:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer25
	DATA8 nos25
	DATA8 busy25
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer25 nos25
	JR_EQ8 0 nos25 motornotbusy25
  motorwaiting25:
	OUTPUT_TEST layer25 nos25 busy25
	JR_EQ8 busy25 0 motornotbusy25
	SLEEP
	JR motorwaiting25
  motornotbusy25:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 60.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB26 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB26:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 15.0 VLV_MIN_POWER_12
    MOVEF_F 60.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB27 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB27:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB28 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB28:
    MOVEF_F 300.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB29 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB29:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_11
    MOVEF_F 85.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB30 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB30:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB31 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB31:
    MOVEF_F 300.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB32 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB32:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 100.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB33 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB33:
    STRINGS DUPLICATE 'True' VGV_CHEM
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_TAKE_CHEM_ON_LEFT_0:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 50.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB34 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB34:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB35 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB35:
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_11
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_11
    MOVEF_F 100.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB38 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB38:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer39
	DATA8 nos39
	DATA8 busy39
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer39 nos39
	JR_EQ8 0 nos39 motornotbusy39
  motorwaiting39:
	OUTPUT_TEST layer39 nos39 busy39
	JR_EQ8 busy39 0 motornotbusy39
	SLEEP
	JR motorwaiting39
  motornotbusy39:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 50.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB40 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB40:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB41 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB41:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB42 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB42:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer43
	DATA8 nos43
	DATA8 busy43
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer43 nos43
	JR_EQ8 0 nos43 motornotbusy43
  motorwaiting43:
	OUTPUT_TEST layer43 nos43 busy43
	JR_EQ8 busy43 0 motornotbusy43
	SLEEP
	JR motorwaiting43
  motornotbusy43:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 60.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB44 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB44:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 15.0 VLV_MIN_POWER_12
    MOVEF_F 60.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB45 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB45:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB46 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB46:
    MOVEF_F 300.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB47 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB47:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_11
    MOVEF_F 85.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB48 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB48:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB49 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB49:
    MOVEF_F 300.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB50 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB50:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 100.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB51 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB51:
    STRINGS DUPLICATE 'True' VGV_CHEM
RETSUB_F_TAKE_CHEM_ON_LEFT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_0:
SUB_F_MAIN_0:
    TIMER_READ timeMC9
    MOVEF_F 97.0 VGV_A
    MULF 80.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 85.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    WRITE32 ENDSUB_F_RESET_0:CALLSUB57 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB57:
  while58:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    JR_GTEQF F.0 1000.0 endwhile58
  whilebody58:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    JR_LTF F.0 1000.0 whilebody58
  endwhile58:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB61:
    MOVEF_F VLV_PERCENT_13 VGV_P
  while62:
    JR_GTEQF VGV_P 50.0 endwhile62
  whilebody62:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB63 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB63:
    MOVEF_F VLV_PERCENT_13 VGV_P
    JR_LTF VGV_P 50.0 whilebody62
  endwhile62:
  while64:
    JR_LTEQF VGV_P 20.0 endwhile64
  whilebody64:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB65:
    MOVEF_F VLV_PERCENT_13 VGV_P
    JR_GTF VGV_P 20.0 whilebody64
  endwhile64:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_11
    MOVEF_F 180.0 VLV_DEG_11
    MOVEF_F 50.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'False' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB68 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB68:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_11
    MOVEF_F 180.0 VLV_DEG_11
    MOVEF_F 50.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'False' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB69 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB69:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB70 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB70:
    DATA32 milliseconds71
	MOVEF_32 1000.0 milliseconds71
	DATA32 timer71
	TIMER_WAIT milliseconds71 timer71
	TIMER_READY timer71
    WRITE32 ENDSUB_F_STOP_0:CALLSUB72 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB72:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 65.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB73 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB73:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_11
    MOVEF_F 360.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB75:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB76 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB76:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB77:
    MOVEF_F VLV_PERCENT_13 VGV_P
  while78:
    JR_LTEQF VGV_P 23.0 endwhile78
  whilebody78:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB79 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB79:
    MOVEF_F VLV_PERCENT_13 VGV_P
    MOVEF_F VGV_A VLV_A_3
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB80 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB80:
    JR_GTF VGV_P 23.0 whilebody78
  endwhile78:
    MOVEF_F 40.0 VLV_BASE_POWER_12
    MOVEF_F 0.0 VLV_MIN_POWER_12
    MOVEF_F 35.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB81:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB82:
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB83:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBEJCT
    JR_LTEQF VGV_R 150.0 else85_1
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    STRINGS DUPLICATE 'human' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif85
  else85_1:
    JR_LTEQF VGV_R 60.0 else85_2
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    DATA32 tmp88
    CALL GETANDINC32 RUNCOUNTER_F_KICK_WATER_0 1  RUNCOUNTER_F_KICK_WATER_0 tmp88
    JR_NEQ32 0 tmp88 alreadylaunched88
    OBJECT_START TF_KICK_WATER_0
  alreadylaunched88:
    JR endif85
  else85_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else85_3
    JR_LTEQF VGV_R 15.0 else85_3
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB90:
  else85_3:
  endif85:
    MOVEF_F 525.0 VGV_DEG
    CALL NE_STRING VGV_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else91_1
    MOVEF_F 40.0 VLV_BASE_POWER_8
    MOVEF_F 15.0 VLV_MIN_POWER_8
    MOVEF_F 120.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB93:
    SUBF VGV_DEG 120.0 VGV_DEG
  else91_1:
  endif91:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB95:
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else96_1
  while98:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 120.0 F.1
    JR_GTEQF F.0 F.1 endwhile98
  whilebody98:
    MOVEF_F VGV_A VLV_A_3
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB102 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB102:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 120.0 F.1
    JR_LTF F.0 F.1 whilebody98
  endwhile98:
    MOVEF_F 40.0 VLV_BASE_POWER_12
    MOVEF_F 15.0 VLV_MIN_POWER_12
    MOVEF_F 120.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB106:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB107:
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB108:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 80.0 else110_1
    DATA8 layer111
	DATA8 no111
	DATA8 mode8111
	
	MOVEF_8 VGV_RIGHT_SENSOR no111
	SUB8 no111 1 no111
	DIV8 no111 4 layer111
	MATH MOD8 no111 4 no111

	MOVEF_8 2.0 mode8111
	
	INPUT_DEVICE READY_RAW layer111 no111 0 mode8111 0
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB112:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer114
	DATA8 no114
	DATA8 mode8114
	
	MOVEF_8 VGV_RIGHT_SENSOR no114
	SUB8 no114 1 no114
	DIV8 no114 4 layer114
	MATH MOD8 no114 4 no114

	MOVEF_8 1.0 mode8114
	
	INPUT_DEVICE READY_RAW layer114 no114 0 mode8114 0
    JR_LTEQF VGV_G 100.0 else115_1
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    STRINGS DUPLICATE 'human' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif115
  else115_1:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 40.0 VLV_BASE_POWER_8
    MOVEF_F 15.0 VLV_MIN_POWER_8
    MOVEF_F 50.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB118 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB118:
    MOVEF_F 40.0 VLV_BASE_POWER_12
    MOVEF_F 15.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB119 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB119:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB120 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB120:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB121:
    MOVEF_F 40.0 VLV_BASE_POWER_8
    MOVEF_F 15.0 VLV_MIN_POWER_8
    MOVEF_F 100.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB122:
  else115_2:
  endif115:
    JR endif110
  else110_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else110_2
    JR_LTEQF VGV_R 20.0 else110_2
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB124:
  else110_2:
  endif110:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB125:
    JR endif96
  else96_1:
  while126:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 VGV_DEG endwhile126
  whilebody126:
    MOVEF_F VGV_A VLV_A_3
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB129 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB129:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 VGV_DEG whilebody126
  endwhile126:
  else96_2:
  endif96:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB132 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB132:
  while133:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 520.0 endwhile133
  whilebody133:
    MOVEF_F VGV_A VLV_A_3
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB136 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB136:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 520.0 whilebody133
  endwhile133:
    MULF 60.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF 60.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds143
	MOVEF_32 1000.0 milliseconds143
	DATA32 timer143
	TIMER_WAIT milliseconds143 timer143
	TIMER_READY timer143
    WRITE32 ENDSUB_F_STOP_0:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB144:
    STRINGS DUPLICATE 'False' VGV_TAKE_LEFT
    STRINGS DUPLICATE 'False' VGV_TAKE_RIGHT
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB145 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB145:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 80.0 else147_1
    DATA8 layer148
	DATA8 no148
	DATA8 mode8148
	
	MOVEF_8 VGV_RIGHT_SENSOR no148
	SUB8 no148 1 no148
	DIV8 no148 4 layer148
	MATH MOD8 no148 4 no148

	MOVEF_8 2.0 mode8148
	
	INPUT_DEVICE READY_RAW layer148 no148 0 mode8148 0
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB149 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB149:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer151
	DATA8 no151
	DATA8 mode8151
	
	MOVEF_8 VGV_RIGHT_SENSOR no151
	SUB8 no151 1 no151
	DIV8 no151 4 layer151
	MATH MOD8 no151 4 no151

	MOVEF_8 1.0 mode8151
	
	INPUT_DEVICE READY_RAW layer151 no151 0 mode8151 0
    JR_LTEQF VGV_G 100.0 else152_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    STRINGS DUPLICATE 'R: man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif152
  else152_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB155 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB155:
  else152_2:
  endif152:
    JR endif147
  else147_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else147_2
    DATA8 layer157
	DATA8 no157
	DATA8 mode8157
	
	MOVEF_8 VGV_RIGHT_SENSOR no157
	SUB8 no157 1 no157
	DIV8 no157 4 layer157
	MATH MOD8 no157 4 no157

	MOVEF_8 4.0 mode8157
	
	INPUT_DEVICE READY_RAW layer157 no157 0 mode8157 0
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB158 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB158:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA8 layer163
	DATA8 no163
	DATA8 mode8163
	
	MOVEF_8 VGV_RIGHT_SENSOR no163
	SUB8 no163 1 no163
	DIV8 no163 4 layer163
	MATH MOD8 no163 4 no163

	MOVEF_8 1.0 mode8163
	
	INPUT_DEVICE READY_RAW layer163 no163 0 mode8163 0
    JR_LTEQF VGV_W 30.0 else164_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_TAKE_RIGHT
    STRINGS DUPLICATE 'True' VGV_CHEM
  else164_1:
  endif164:
  else147_2:
  endif147:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else165_1
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 80.0 else168_1
    DATA8 layer169
	DATA8 no169
	DATA8 mode8169
	
	MOVEF_8 VGV_LEFT_SENSOR no169
	SUB8 no169 1 no169
	DIV8 no169 4 layer169
	MATH MOD8 no169 4 no169

	MOVEF_8 2.0 mode8169
	
	INPUT_DEVICE READY_RAW layer169 no169 0 mode8169 0
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB170 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB170:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer172
	DATA8 no172
	DATA8 mode8172
	
	MOVEF_8 VGV_LEFT_SENSOR no172
	SUB8 no172 1 no172
	DIV8 no172 4 layer172
	MATH MOD8 no172 4 no172

	MOVEF_8 1.0 mode8172
	
	INPUT_DEVICE READY_RAW layer172 no172 0 mode8172 0
    JR_LTEQF VGV_G 100.0 else173_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    STRINGS DUPLICATE 'L: man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif173
  else173_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB176:
  else173_2:
  endif173:
    JR endif168
  else168_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else168_2
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_11
    MOVEF_F 40.0 VLV_DEG_11
    MOVEF_F 20.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'False' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB179:
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB180 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB180:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    MULF 80.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    DATA32 milliseconds184
	MOVEF_32 1000.0 milliseconds184
	DATA32 timer184
	TIMER_WAIT milliseconds184 timer184
	TIMER_READY timer184
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    JR_GTEQF VGV_ULTRA 75.0 else186_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_TAKE_LEFT
  else186_1:
  endif186:
  else168_2:
  endif168:
  else165_1:
  endif165:
    CALL EQ_STRING VGV_TAKE_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else187_1
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 60.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB189 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB189:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 60.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB190:
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_11
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_11
    MOVEF_F 90.0 VLV_DEG_11
    MOVEF_F 20.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB193 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB193:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer194
	DATA8 nos194
	DATA8 busy194
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer194 nos194
	JR_EQ8 0 nos194 motornotbusy194
  motorwaiting194:
	OUTPUT_TEST layer194 nos194 busy194
	JR_EQ8 busy194 0 motornotbusy194
	SLEEP
	JR motorwaiting194
  motornotbusy194:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 40.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB195:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 40.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB196:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB197:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer198
	DATA8 nos198
	DATA8 busy198
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer198 nos198
	JR_EQ8 0 nos198 motornotbusy198
  motorwaiting198:
	OUTPUT_TEST layer198 nos198 busy198
	JR_EQ8 busy198 0 motornotbusy198
	SLEEP
	JR motorwaiting198
  motornotbusy198:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 40.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB199:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 40.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB200:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB201 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB201:
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB202:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_11
    MOVEF_F 90.0 VLV_DEG_11
    MOVEF_F 20.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'False' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB203 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB203:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB204 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB204:
    DATA32 milliseconds205
	MOVEF_32 1000.0 milliseconds205
	DATA32 timer205
	TIMER_WAIT milliseconds205 timer205
	TIMER_READY timer205
    WRITE32 ENDSUB_F_STOP_0:CALLSUB206 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB206:
    JR endif187
  else187_1:
    CALL EQ_STRING VGV_TAKE_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else187_2
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 60.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB208:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 60.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB209 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB209:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_11
    MOVEF_F 90.0 VLV_DEG_11
    MOVEF_F 20.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB212:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer213
	DATA8 nos213
	DATA8 busy213
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer213 nos213
	JR_EQ8 0 nos213 motornotbusy213
  motorwaiting213:
	OUTPUT_TEST layer213 nos213 busy213
	JR_EQ8 busy213 0 motornotbusy213
	SLEEP
	JR motorwaiting213
  motornotbusy213:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 40.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB214:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 40.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB215 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB215:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB216 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB216:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer217
	DATA8 nos217
	DATA8 busy217
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer217 nos217
	JR_EQ8 0 nos217 motornotbusy217
  motorwaiting217:
	OUTPUT_TEST layer217 nos217 busy217
	JR_EQ8 busy217 0 motornotbusy217
	SLEEP
	JR motorwaiting217
  motornotbusy217:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 40.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB218 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB218:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 40.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB219 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB219:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB220 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB220:
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB221 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB221:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_11
    MOVEF_F 90.0 VLV_DEG_11
    MOVEF_F 20.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'False' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB222 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB222:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB223 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB223:
    DATA32 milliseconds224
	MOVEF_32 1000.0 milliseconds224
	DATA32 timer224
	TIMER_WAIT milliseconds224 timer224
	TIMER_READY timer224
    WRITE32 ENDSUB_F_STOP_0:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB225:
  else187_2:
  endif187:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 110.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB226:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_11
    MOVEF_F 360.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'False' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB229:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB230 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB230:
    MOVEF_F 1000.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB231:
    MOVEF_F 40.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 120.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB232:
    MOVEF_F 185.0 VLV_DEG_10
    MOVEF_F 40.0 VLV_POWER_10
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB233:
    MOVEF_F 40.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 120.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB234 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB234:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB235:
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB236:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 160.0 else238_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif238
  else238_1:
    JR_LTEQF VGV_R 80.0 else238_2
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB241 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB241:
    JR endif238
  else238_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else238_3
    DATA8 layer243
	DATA8 no243
	DATA8 mode8243
	
	MOVEF_8 VGV_RIGHT_SENSOR no243
	SUB8 no243 1 no243
	DIV8 no243 4 layer243
	MATH MOD8 no243 4 no243

	MOVEF_8 4.0 mode8243
	
	INPUT_DEVICE READY_RAW layer243 no243 0 mode8243 0
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB244:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    DATA8 layer246
	DATA8 no246
	DATA8 mode8246
	
	MOVEF_8 VGV_RIGHT_SENSOR no246
	SUB8 no246 1 no246
	DIV8 no246 4 layer246
	MATH MOD8 no246 4 no246

	MOVEF_8 1.0 mode8246
	
	INPUT_DEVICE READY_RAW layer246 no246 0 mode8246 0
    JR_LTEQF VGV_W 45.0 else247_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_TAKE_CHEM_IN_YELLOW
  else247_1:
  endif247:
  else238_3:
  endif238:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_11
    MOVEF_F 260.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB248:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_11
    MOVEF_F 260.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB249 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB249:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else250_1
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 80.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB252:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 90.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB253 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB253:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB254:
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB255:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 60.0 else257_1
    DATA8 layer258
	DATA8 no258
	DATA8 mode8258
	
	MOVEF_8 VGV_LEFT_SENSOR no258
	SUB8 no258 1 no258
	DIV8 no258 4 layer258
	MATH MOD8 no258 4 no258

	MOVEF_8 2.0 mode8258
	
	INPUT_DEVICE READY_RAW layer258 no258 0 mode8258 0
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB259:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer261
	DATA8 no261
	DATA8 mode8261
	
	MOVEF_8 VGV_LEFT_SENSOR no261
	SUB8 no261 1 no261
	DIV8 no261 4 layer261
	MATH MOD8 no261 4 no261

	MOVEF_8 1.0 mode8261
	
	INPUT_DEVICE READY_RAW layer261 no261 0 mode8261 0
    JR_LTEQF VGV_G 70.0 else262_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif262
  else262_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 50.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB265:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB266:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB267:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB268:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 100.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB269:
  else262_2:
  endif262:
    JR endif257
  else257_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else257_2
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 70.0 else272_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB273 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB273:
  else272_1:
  endif272:
  else257_2:
  endif257:
    JR endif250
  else250_1:
    MOVEF_F 165.0 VLV_DEG_10
    MOVEF_F 30.0 VLV_POWER_10
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB274:
  else250_2:
  endif250:
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 30.0 VLV_POWER_10
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB275:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB276 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB276:
  while277:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 300.0 endwhile277
  whilebody277:
    MOVEF_F 103.0 VLV_A_3
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB280 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB280:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 300.0 whilebody277
  endwhile277:
    MULF 40.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF 40.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds287
	MOVEF_32 1000.0 milliseconds287
	DATA32 timer287
	TIMER_WAIT milliseconds287 timer287
	TIMER_READY timer287
    WRITE32 ENDSUB_F_STOP_0:CALLSUB288 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB288:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 160.0 else290_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif290
  else290_1:
    JR_LTEQF VGV_R 80.0 else290_2
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'fire' VGV_OBEJCT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB293 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB293:
    JR endif290
  else290_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else290_3
    DATA8 layer295
	DATA8 no295
	DATA8 mode8295
	
	MOVEF_8 VGV_LEFT_SENSOR no295
	SUB8 no295 1 no295
	DIV8 no295 4 layer295
	MATH MOD8 no295 4 no295

	MOVEF_8 4.0 mode8295
	
	INPUT_DEVICE READY_RAW layer295 no295 0 mode8295 0
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB296:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_W
    DATA8 layer298
	DATA8 no298
	DATA8 mode8298
	
	MOVEF_8 VGV_LEFT_SENSOR no298
	SUB8 no298 1 no298
	DIV8 no298 4 layer298
	MATH MOD8 no298 4 no298

	MOVEF_8 1.0 mode8298
	
	INPUT_DEVICE READY_RAW layer298 no298 0 mode8298 0
    JR_LTEQF VGV_W 45.0 else299_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 80.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB300 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB300:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 80.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB301:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB302:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer303
	DATA8 nos303
	DATA8 busy303
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer303 nos303
	JR_EQ8 0 nos303 motornotbusy303
  motorwaiting303:
	OUTPUT_TEST layer303 nos303 busy303
	JR_EQ8 busy303 0 motornotbusy303
	SLEEP
	JR motorwaiting303
  motornotbusy303:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_11
    MOVEF_F 160.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB304:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer305
	DATA8 nos305
	DATA8 busy305
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer305 nos305
	JR_EQ8 0 nos305 motornotbusy305
  motorwaiting305:
	OUTPUT_TEST layer305 nos305 busy305
	JR_EQ8 busy305 0 motornotbusy305
	SLEEP
	JR motorwaiting305
  motornotbusy305:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_11
    MOVEF_F 160.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB307 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB307:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB308:
    MOVEF_F 1000.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB309 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB309:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB310 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB310:
  else299_1:
  endif299:
  else290_3:
  endif290:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_11
    MOVEF_F 240.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB312 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB312:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_11
    MOVEF_F 105.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB313 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB313:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB314:
    MOVEF_F 1200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB315:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB316:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 120.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB317:
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else318_1
    MOVEF_F 175.0 VLV_DEG_10
    MOVEF_F 30.0 VLV_POWER_10
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB320 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB320:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 15.0 VLV_MIN_POWER_12
    MOVEF_F 120.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB321 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB321:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB322 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB322:
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB323:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 80.0 else325_1
    DATA8 layer326
	DATA8 no326
	DATA8 mode8326
	
	MOVEF_8 VGV_LEFT_SENSOR no326
	SUB8 no326 1 no326
	DIV8 no326 4 layer326
	MATH MOD8 no326 4 no326

	MOVEF_8 2.0 mode8326
	
	INPUT_DEVICE READY_RAW layer326 no326 0 mode8326 0
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB327 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB327:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer329
	DATA8 no329
	DATA8 mode8329
	
	MOVEF_8 VGV_LEFT_SENSOR no329
	SUB8 no329 1 no329
	DIV8 no329 4 layer329
	MATH MOD8 no329 4 no329

	MOVEF_8 1.0 mode8329
	
	INPUT_DEVICE READY_RAW layer329 no329 0 mode8329 0
    JR_LTEQF VGV_G 100.0 else330_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif330
  else330_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 50.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB333 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB333:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB334:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB335 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB335:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB336:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 100.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB337 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB337:
  else330_2:
  endif330:
    JR endif325
  else325_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else325_2
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 90.0 else340_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 50.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB341 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB341:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB342:
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_11
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_11
    MOVEF_F 100.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB345:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer346
	DATA8 nos346
	DATA8 busy346
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer346 nos346
	JR_EQ8 0 nos346 motornotbusy346
  motorwaiting346:
	OUTPUT_TEST layer346 nos346 busy346
	JR_EQ8 busy346 0 motornotbusy346
	SLEEP
	JR motorwaiting346
  motornotbusy346:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 50.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB347 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB347:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB348 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB348:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB349 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB349:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer350
	DATA8 nos350
	DATA8 busy350
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer350 nos350
	JR_EQ8 0 nos350 motornotbusy350
  motorwaiting350:
	OUTPUT_TEST layer350 nos350 busy350
	JR_EQ8 busy350 0 motornotbusy350
	SLEEP
	JR motorwaiting350
  motornotbusy350:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 55.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB351 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB351:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 15.0 VLV_MIN_POWER_12
    MOVEF_F 55.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB352:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB353 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB353:
    MOVEF_F 300.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB354 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB354:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_11
    MOVEF_F 105.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB355:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB356:
    MOVEF_F 300.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB357:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 110.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB358 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB358:
  else340_1:
  endif340:
  else325_2:
  endif325:
    CALL EQ_STRING VGV_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or360
    CALL EQ_STRING VGV_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else359_1
  or360:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 80.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB363:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 70.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB364:
    JR endif359
  else359_1:
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F 30.0 VLV_POWER_10
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB365 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB365:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 70.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB366:
  else359_2:
  endif359:
    JR endif318
  else318_1:
    MOVEF_F 440.0 VLV_DEG_10
    MOVEF_F 30.0 VLV_POWER_10
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB367:
  else318_2:
  endif318:
    STRINGS DUPLICATE 'False' VGV_IS_ON_SECOND_BLUE
    WRITE32 ENDSUB_F_STOP_0:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB368:
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB369:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 80.0 else371_1
    DATA8 layer372
	DATA8 no372
	DATA8 mode8372
	
	MOVEF_8 VGV_LEFT_SENSOR no372
	SUB8 no372 1 no372
	DIV8 no372 4 layer372
	MATH MOD8 no372 4 no372

	MOVEF_8 2.0 mode8372
	
	INPUT_DEVICE READY_RAW layer372 no372 0 mode8372 0
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB373:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer375
	DATA8 no375
	DATA8 mode8375
	
	MOVEF_8 VGV_LEFT_SENSOR no375
	SUB8 no375 1 no375
	DIV8 no375 4 layer375
	MATH MOD8 no375 4 no375

	MOVEF_8 1.0 mode8375
	
	INPUT_DEVICE READY_RAW layer375 no375 0 mode8375 0
    JR_LTEQF VGV_G 100.0 else376_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif376
  else376_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB379 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB379:
  else376_2:
  endif376:
    JR endif371
  else371_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else371_2
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB381:
    MOVEF_F 500.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB382:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 80.0 else387_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 145.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB388:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 145.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB389 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB389:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB390 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB390:
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB391 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB391:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_11
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_11
    MOVEF_F 360.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB393 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB393:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer394
	DATA8 nos394
	DATA8 busy394
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer394 nos394
	JR_EQ8 0 nos394 motornotbusy394
  motorwaiting394:
	OUTPUT_TEST layer394 nos394 busy394
	JR_EQ8 busy394 0 motornotbusy394
	SLEEP
	JR motorwaiting394
  motornotbusy394:
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB395:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 35.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB396:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 35.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB397:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB398:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer399
	DATA8 nos399
	DATA8 busy399
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer399 nos399
	JR_EQ8 0 nos399 motornotbusy399
  motorwaiting399:
	OUTPUT_TEST layer399 nos399 busy399
	JR_EQ8 busy399 0 motornotbusy399
	SLEEP
	JR motorwaiting399
  motornotbusy399:
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB400 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB400:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 40.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB401 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB401:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 40.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB402 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB402:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB403:
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB404:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_11
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_11
    MOVEF_F 360.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB405:
  else387_1:
  endif387:
  else371_2:
  endif371:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else406_1
    STRINGS DUPLICATE 'True' VGV_IS_ON_SECOND_BLUE
    MOVEF_F 40.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 100.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB408:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB409:
  while410:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 310.0 endwhile410
  whilebody410:
    MOVEF_F 91.0 VLV_A_3
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB413:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 310.0 whilebody410
  endwhile410:
    MOVEF_F 40.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB416:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB417:
  else406_1:
  endif406:
    STRINGS DUPLICATE 'none' VGV_WHITE_OBJECT
    JR_GTEQF VGV_MEN_COUNT 2.0 else418_1
    STRINGS DUPLICATE 'man' VGV_WHITE_OBJECT
    JR endif418
  else418_1:
    JR_GTEQF VGV_FIRE_COUNT 2.0 else418_2
    STRINGS DUPLICATE 'fire' VGV_WHITE_OBJECT
    JR endif418
  else418_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else418_3
    STRINGS DUPLICATE 'chem' VGV_WHITE_OBJECT
  else418_3:
  endif418:
    CALL EQ_STRING VGV_WHITE_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else420_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif420
  else420_1:
    CALL NE_STRING VGV_WHITE_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or422
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else420_2
  or422:
    CALL EQ_STRING VGV_IS_ON_SECOND_BLUE 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else425_1
    DATA8 layer427
	DATA8 no427
	DATA8 mode8427
	
	MOVEF_8 VGV_RIGHT_SENSOR no427
	SUB8 no427 1 no427
	DIV8 no427 4 layer427
	MATH MOD8 no427 4 no427

	MOVEF_8 0.0 mode8427
	
	INPUT_DEVICE READY_RAW layer427 no427 0 mode8427 0
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 30.0 VLV_MIN_POWER_8
    MOVEF_F 50.0 VLV_DEG_8
    MOVEF_F -1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB428:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 30.0 VLV_MIN_POWER_12
    MOVEF_F 50.0 VLV_DEG_12
    MOVEF_F -1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB429:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_11
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_11
    MOVEF_F 360.0 VLV_DEG_11
    MOVEF_F 30.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'True' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB432:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB433 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB433:
    MOVEF_F 700.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB434:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB435:
    MOVEF_F 100.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB436:
    MOVEF_F 30.0 VLV_BASE_POWER_8
    MOVEF_F 20.0 VLV_MIN_POWER_8
    MOVEF_F 100.0 VLV_DEG_8
    MOVEF_F 1.0 VLV_COEF_8
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB437:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB438:
    DATA8 layer439
	DATA8 no439
	DATA8 mode8439
	
	MOVEF_8 VGV_LINE no439
	SUB8 no439 1 no439
	DIV8 no439 4 layer439
	MATH MOD8 no439 4 no439

	MOVEF_8 2.0 mode8439
	
	INPUT_DEVICE READY_RAW layer439 no439 0 mode8439 0
  while440:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 130.0 endwhile440
  whilebody440:
    MOVEF_F 30.0 VLV_POWER_9
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB443 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB443:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 130.0 whilebody440
  endwhile440:
  while446:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_EQF F.0 6.0 endwhile446
  whilebody446:
    MOVEF_F 30.0 VLV_POWER_9
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB448:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_NEQF F.0 6.0 whilebody446
  endwhile446:
    DATA8 layer450
	DATA8 no450
	DATA8 mode8450
	
	MOVEF_8 VGV_LINE no450
	SUB8 no450 1 no450
	DIV8 no450 4 layer450
	MATH MOD8 no450 4 no450

	MOVEF_8 0.0 mode8450
	
	INPUT_DEVICE READY_RAW layer450 no450 0 mode8450 0
    MOVEF_F 330.0 VLV_DEG_10
    MOVEF_F 30.0 VLV_POWER_10
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB451:
    MOVEF_F 30.0 VLV_BASE_POWER_12
    MOVEF_F 20.0 VLV_MIN_POWER_12
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 1.0 VLV_COEF_12
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB452:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB453:
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB454 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB454:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_11
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_11
    MOVEF_F 20.0 VLV_DEG_11
    MOVEF_F 20.0 VLV_MAX_POWER_11
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_11
    STRINGS DUPLICATE 'False' VLV_ZAME_11
    STRINGS DUPLICATE 'True' VLV_TO_STOP_11
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB456:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB457:
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB458 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB458:
    STRINGS DUPLICATE 'False' VGV_CH
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 F.0
    JR_NEQF F.0 12.0 else459_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif459
  else459_1:
    DATA8 layer461
	DATA8 no461
	DATA8 mode8461
	
	MOVEF_8 VGV_RIGHT_SENSOR no461
	SUB8 no461 1 no461
	DIV8 no461 4 layer461
	MATH MOD8 no461 4 no461

	MOVEF_8 4.0 mode8461
	
	INPUT_DEVICE READY_RAW layer461 no461 0 mode8461 0
    MOVEF_F 200.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB462:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    JR_LTEQF VGV_W 50.0 else464_1
    STRINGS DUPLICATE 'True' VGV_CH
  else464_1:
  endif464:
  else459_2:
  endif459:
    CALL EQ_STRING VGV_CH 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else465_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB467:
  else465_1:
  endif465:
  else425_1:
  endif425:
  else420_2:
  endif420:
    STRINGS DUPLICATE 'True' VLV_TO_DELAY_14
    WRITE32 ENDSUB_F_SHOW_TIME_1:CALLSUB468 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SHOW_TIME_1
CALLSUB468:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_MOVEMENT_INIT_1:
    MULF VLV_POWER_1 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF VLV_POWER_1 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
RETSUB_F_MOVEMENT_INIT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVEMENT_INIT_1:
SUB_F_LINE_1:
    JR_NEQF VLV_L_2 -100.0 else473_1
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf477
    DATA8 flag477
    DIVF F.1 F.2 tmpf477
    CP_EQF 0.0 F.2 flag477
    SELECTF flag477 0.0 tmpf477 F.0

    MULF F.0 150.0 VLV_L_2
  else473_1:
  endif473:
    SUBF VLV_L_2 50.0 VLV_ERR_2
    SUBF VLV_ERR_2 VGV_LAST_ERR VLV_DIFF_2
    MULF VLV_ERR_2 1.0 F.0
    MULF VLV_DIFF_2 7.0 F.1
    ADDF F.0 F.1 VLV_DELTA_2
    SUBF 80.0 VLV_DELTA_2 VLV_LEFT_POWER_2
    ADDF 80.0 VLV_DELTA_2 VLV_RIGHT_POWER_2
    MULF VLV_LEFT_POWER_2 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_2 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_2 VGV_LAST_ERR
    DATA32 milliseconds490
	MOVEF_32 5.0 milliseconds490
	DATA32 timer490
	TIMER_WAIT milliseconds490 timer490
	TIMER_READY timer490
RETSUB_F_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_1:
SUB_F_ULTRA_LINE_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VLV_L_3
    SUBF VLV_L_3 VLV_A_3 VLV_ERR_3
    SUBF VLV_ERR_3 VGV_LAST_ERR VLV_DIFF_3
    MULF VLV_ERR_3 0.8 F.0
    MULF VLV_DIFF_3 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_3
    SUBF 40.0 VLV_DELTA_3 VLV_LEFT_POWER_3
    ADDF 40.0 VLV_DELTA_3 VLV_RIGHT_POWER_3
    MULF VLV_LEFT_POWER_3 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_3 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_3 VGV_LAST_ERR
RETSUB_F_ULTRA_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRA_LINE_1:
SUB_F_DELAY_1:
    DATA32 milliseconds503
	MOVEF_32 VLV_TIME_5 milliseconds503
	DATA32 timer503
	TIMER_WAIT milliseconds503 timer503
	TIMER_READY timer503
RETSUB_F_DELAY_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_1:
SUB_F_RESET_0:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 2
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_STOP_0:
    OUTPUT_POWER 0 3 0
	OUTPUT_STOP 0 3 1
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_SPEEDUP_4:
    MOVEF_F 15.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB507:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB508:
    MOVEF_F 0.0 VLV_L_8
  while509:
    JR_GTEQF VLV_L_8 VLV_DEG_8 endwhile509
  whilebody509:
    DATAF tmpf510
    DATA8 flag510
    DIVF VLV_L_8 VLV_DEG_8 tmpf510
    CP_EQF 0.0 VLV_DEG_8 flag510
    SELECTF flag510 0.0 tmpf510 VLV_P_8

    SUBF VLV_BASE_POWER_8 VLV_MIN_POWER_8 F.1
    MULF F.1 VLV_P_8 F.0
    ADDF F.0 VLV_MIN_POWER_8 VLV_POWER_8
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_8 VLV_L_8
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_8 VLV_R_8
    SUBF VLV_L_8 VLV_R_8 F.0
    MULF F.0 VLV_P_8 VLV_DELTA_8
    SUBF VLV_POWER_8 VLV_DELTA_8 VLV_LEFT_POWER_8
    ADDF VLV_POWER_8 VLV_DELTA_8 VLV_RIGHT_POWER_8
    MULF VLV_LEFT_POWER_8 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_8 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_8 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_8 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    JR_LTF VLV_L_8 VLV_DEG_8 whilebody509
  endwhile509:
RETSUB_F_SPEEDUP_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPEEDUP_4:
SUB_F_SYNC_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_9
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_9
    SUBF VLV_L_9 VLV_R_9 VLV_ERR_9
    SUBF VLV_ERR_9 VGV_LAST_ERR VLV_DIFF_9
    MULF VLV_ERR_9 1.0 F.0
    MULF VLV_DIFF_9 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_9
    SUBF VLV_POWER_9 VLV_DELTA_9 VLV_LEFT_POWER_9
    ADDF VLV_POWER_9 VLV_DELTA_9 VLV_RIGHT_POWER_9
    MULF VLV_LEFT_POWER_9 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_9 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_9 VGV_LAST_ERR
RETSUB_F_SYNC_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SYNC_1:
SUB_F_FORWARD_DEG_2:
    MOVEF_F VLV_POWER_10 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB545 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB545:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB546 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB546:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_10
  while549:
    JR_GTEQF VLV_L_10 VLV_DEG_10 endwhile549
  whilebody549:
    MOVEF_F VLV_POWER_10 VLV_POWER_9
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB550 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB550:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_10
    JR_LTF VLV_L_10 VLV_DEG_10 whilebody549
  endwhile549:
RETSUB_F_FORWARD_DEG_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FORWARD_DEG_2:
SUB_F_MOVE_MOTOR_7:
    MOVEF_F VLV_DEG_11 VLV_NORMAL_DEG_11
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_11
    MOVEF_F 0.0 VLV_ZAME_DEG_11
    CALL EQ_STRING VLV_ACCELERATION_11 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else553_1
    DATAF tmpf555
    DATA8 flag555
    DIVF VLV_DEG_11 2.0 tmpf555
    CP_EQF 0.0 2.0 flag555
    SELECTF flag555 0.0 tmpf555 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag557
	CP_LTF F.0 120.0 flag557
	SELECTF flag557 F.0 120.0 VLV_ACCELERATION_DEG_11
    SUBF VLV_NORMAL_DEG_11 VLV_ACCELERATION_DEG_11 VLV_NORMAL_DEG_11
  else553_1:
  endif553:
    CALL EQ_STRING VLV_ZAME_11 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else559_1
    DATAF tmpf561
    DATA8 flag561
    DIVF VLV_DEG_11 2.0 tmpf561
    CP_EQF 0.0 2.0 flag561
    SELECTF flag561 0.0 tmpf561 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag563
	CP_LTF F.0 120.0 flag563
	SELECTF flag563 F.0 120.0 VLV_ZAME_DEG_11
    SUBF VLV_NORMAL_DEG_11 VLV_ZAME_DEG_11 VLV_NORMAL_DEG_11
  else559_1:
  endif559:
    CALL EQ_STRING VLV_ACCELERATION_11 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else565_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_11
    MOVEF_F 0.0 VLV_M_11
  while568:
    JR_GTEQF VLV_M_11 VLV_ACCELERATION_DEG_11 endwhile568
  whilebody568:
    DATAF tmpf569
    DATA8 flag569
    DIVF VLV_M_11 VLV_ACCELERATION_DEG_11 tmpf569
    CP_EQF 0.0 VLV_ACCELERATION_DEG_11 flag569
    SELECTF flag569 0.0 tmpf569 VLV_P_11

    SUBF VLV_MAX_POWER_11 10.0 F.1
    MULF F.1 VLV_P_11 F.0
    ADDF F.0 10.0 VLV_POWER_11
    MULF VLV_POWER_11 VLV_FORWARD_11 F.0
    CALL MOTOR.START VLV_MOTOR_11 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_11 F.0
    MULF F.0 VLV_FORWARD_11 VLV_M_11
    DATA32 milliseconds577
	MOVEF_32 10.0 milliseconds577
	DATA32 timer577
	TIMER_WAIT milliseconds577 timer577
	TIMER_READY timer577
    JR_LTF VLV_M_11 VLV_ACCELERATION_DEG_11 whilebody568
  endwhile568:
  else565_1:
  endif565:
    JR_LTEQF VLV_NORMAL_DEG_11 0.0 else578_1
    MULF VLV_MAX_POWER_11 VLV_FORWARD_11 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_11 F.0 0.0 VLV_NORMAL_DEG_11 0.0 'False' 

	DATA8 layer580
	DATA8 nos580
	DATA8 busy580
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_11 layer580 nos580
	JR_EQ8 0 nos580 motornotbusy580
  motorwaiting580:
	OUTPUT_TEST layer580 nos580 busy580
	JR_EQ8 busy580 0 motornotbusy580
	SLEEP
	JR motorwaiting580
  motornotbusy580:
  else578_1:
  endif578:
    CALL EQ_STRING VLV_ZAME_11 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else581_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_11
    MOVEF_F 0.0 VLV_M_11
  while584:
    JR_GTEQF VLV_M_11 VLV_ZAME_DEG_11 endwhile584
  whilebody584:
    DATAF tmpf585
    DATA8 flag585
    DIVF VLV_M_11 VLV_ZAME_DEG_11 tmpf585
    CP_EQF 0.0 VLV_ZAME_DEG_11 flag585
    SELECTF flag585 0.0 tmpf585 F.0

    SUBF 1.0 F.0 VLV_P_11
    SUBF VLV_MAX_POWER_11 10.0 F.1
    MULF F.1 VLV_P_11 F.0
    ADDF F.0 10.0 VLV_POWER_11
    MULF VLV_POWER_11 VLV_FORWARD_11 F.0
    CALL MOTOR.START VLV_MOTOR_11 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_11 F.0
    MULF F.0 VLV_FORWARD_11 VLV_M_11
    DATA32 milliseconds594
	MOVEF_32 10.0 milliseconds594
	DATA32 timer594
	TIMER_WAIT milliseconds594 timer594
	TIMER_READY timer594
    JR_LTF VLV_M_11 VLV_ZAME_DEG_11 whilebody584
  endwhile584:
  else581_1:
  endif581:
    CALL EQ_STRING VLV_TO_STOP_11 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else595_1
    CALL MOTOR.STOP VLV_MOTOR_11 'True'
  else595_1:
  endif595:
RETSUB_F_MOVE_MOTOR_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_MOTOR_7:
SUB_F_ZAME_4:
    MOVEF_F VLV_BASE_POWER_12 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB598:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB599:
    MOVEF_F 0.0 VLV_L_12
  while600:
    JR_GTEQF VLV_L_12 VLV_DEG_12 endwhile600
  whilebody600:
    DATAF tmpf601
    DATA8 flag601
    DIVF VLV_L_12 VLV_DEG_12 tmpf601
    CP_EQF 0.0 VLV_DEG_12 flag601
    SELECTF flag601 0.0 tmpf601 VLV_P_12

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_12 VLV_L_12
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_12 VLV_R_12
    SUBF VLV_L_12 VLV_R_12 F.0
    SUBF 1.0 VLV_P_12 F.1
    MULF F.0 F.1 VLV_DELTA_12
    SUBF VLV_BASE_POWER_12 VLV_MIN_POWER_12 F.1
    SUBF 1.0 VLV_P_12 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_12 VLV_POWER_12
    SUBF VLV_POWER_12 VLV_DELTA_12 VLV_LEFT_POWER_12
    ADDF VLV_POWER_12 VLV_DELTA_12 VLV_RIGHT_POWER_12
    MULF VLV_LEFT_POWER_12 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_12 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_12 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_12 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds623
	MOVEF_32 10.0 milliseconds623
	DATA32 timer623
	TIMER_WAIT milliseconds623 timer623
	TIMER_READY timer623
    JR_LTF VLV_L_12 VLV_DEG_12 whilebody600
  endwhile600:
RETSUB_F_ZAME_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAME_4:
SUB_F_READ_PERCENT_1:
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf627
    DATA8 flag627
    DIVF F.1 F.2 tmpf627
    CP_EQF 0.0 F.2 flag627
    SELECTF flag627 0.0 tmpf627 F.0

    MULF F.0 100.0 VLV_PERCENT_13
RETSUB_F_READ_PERCENT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_READ_PERCENT_1:
SUB_F_SHOW_TIME_1:
    TIMER_READ timeMC9tmp
	SUB32 timeMC9tmp timeMC9 timeMC9tmp
	MOVE32_F timeMC9tmp VLV_MILLISECOND_14
    DATAF tmpf630
    DATA8 flag630
    DIVF VLV_MILLISECOND_14 1000.0 tmpf630
    CP_EQF 0.0 1000.0 flag630
    SELECTF flag630 0.0 tmpf630 F.0

    MATH FLOOR F.0 VLV_SECONDS_14
    DATAF tmpf632
    DATA8 flag632
    DIVF VLV_SECONDS_14 60.0 tmpf632
    CP_EQF 0.0 60.0 flag632
    SELECTF flag632 0.0 tmpf632 F.0

    MATH FLOOR F.0 VLV_MINUTES_14
    MATH MOD VLV_SECONDS_14 60.0 VLV_SECONDS_14
    STRINGS VALUE_FORMATTED VLV_MINUTES_14 '%g' 99 S.1
    CALL TEXT.APPEND S.1 ':' S.0
    STRINGS VALUE_FORMATTED VLV_SECONDS_14 '%g' 99 S.1
    CALL TEXT.APPEND S.0 S.1 VLV_TEXT_14
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 VLV_TEXT_14
    CALL EQ_STRING VLV_TO_DELAY_14 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else641_1
    MOVEF_F 100000.0 VLV_TIME_5
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB643:
  else641_1:
  endif641:
RETSUB_F_SHOW_TIME_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SHOW_TIME_1:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall NE_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 flag 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
isequal:
	STRINGS DUPLICATE 'False' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'True' result
	RETURN
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
