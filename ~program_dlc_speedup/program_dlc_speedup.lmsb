DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERSED_MOTOR 252
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_MOTORS 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_LINE_SENSOR
DATAF VGV_ULTRASONIC
DATAF VGV_RIGHT_FORWARD
DATAF VGV_LEFT_FORWARD
DATAF VGV_A
DATAF VGV_P
DATAF VGV_D
DATAF VGV_LASTERROR
DATAF VGV_NOWERROR
DATAF VGV_DIF
DATAF VGV_INTEGRAL
DATAF VGV_DERIVATIVE
DATAF VGV_UP
DATAF VGV_P_U
DATAF VGV_D_U
DATAF VGV_DEG
DATAS VGV_IS_CHEM_ON_RIGHT 252
DATAS VGV_IS_CHEM_ON_LEFT 252
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_CHEM 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_CUBES_COUNT
DATAF VGV_WATER_STATE
DATAS VGV_OBJECT 252
DATAF VGV_B
DATAF VGV_W
DATAS VGV_START_FROM_RIGHT 252
DATAF VGV_C
DATAF VGV_G
DATAF VGV_R_C
DATAF VGV_L_C
DATAF VGV_DIFF
DATAF VGV_R_P
DATAF VGV_L_P
DATAF VGV_I
DATAS VGV_TAKE_RED_RIGHT 252
DATAS VGV_TAKE_RED_LEFT 252
DATAF VGV_CHEM_BACK
DATAF VGV_NO_BACK
DATAF VGV_ULTRA

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VGV_I
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VGV_I
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 1.0 VGV_LINE_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 1.0 VGV_P
    MOVEF_F 6.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 1.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 2.0 VGV_CUBES_COUNT
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE_SENSOR no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_RIGHT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_LEFT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 1.0 'Low battery'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB10:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB11 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB11:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB12:
ENDTHREAD:
    RETURN
SUB_F_LINE_0:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF 20.0 F.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf17
    DATA8 flag17
    DIVF F.0 10.0 tmpf17
    CP_EQF 0.0 10.0 flag17
    SELECTF flag17 0.0 tmpf17 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_LINE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_0:
SUB_F_ULTRASONIC_SLOW_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf30
    DATA8 flag30
    DIVF F.0 10.0 tmpf30
    CP_EQF 0.0 10.0 flag30
    SELECTF flag30 0.0 tmpf30 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 20.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 20.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SLOW_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SLOW_0:
SUB_F_ULTRASONIC_FAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf45
    DATA8 flag45
    DIVF F.0 10.0 tmpf45
    CP_EQF 0.0 10.0 flag45
    SELECTF flag45 0.0 tmpf45 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 35.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 35.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_FAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_FAST_0:
SUB_F_STOP_0:
    CALL MOTOR.STOP VGV_MOTORS 'True'
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_STOP_RIGHT_0:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
RETSUB_F_STOP_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_RIGHT_0:
SUB_F_DELAY_0:
    DATA32 milliseconds58
	MOVEF_32 500.0 milliseconds58
	DATA32 timer58
	TIMER_WAIT milliseconds58 timer58
	TIMER_READY timer58
RETSUB_F_DELAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_0:
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_LEFT_0:
    MOVEF_F 280.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB60 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB60:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB61:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for63:
    JR_GTF VGV_I 20.0 endfor63
  forbody63:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds67
	MOVEF_32 10.0 milliseconds67
	DATA32 timer67
	TIMER_WAIT milliseconds67 timer67
	TIMER_READY timer67
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody63
  endfor63:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 360.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer73
	DATA8 nos73
	DATA8 busy73
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer73 nos73
	JR_EQ8 0 nos73 motornotbusy73
  motorwaiting73:
	OUTPUT_TEST layer73 nos73 busy73
	JR_EQ8 busy73 0 motornotbusy73
	SLEEP
	JR motorwaiting73
  motornotbusy73:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer74
	DATA8 nos74
	DATA8 busy74
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer74 nos74
	JR_EQ8 0 nos74 motornotbusy74
  motorwaiting74:
	OUTPUT_TEST layer74 nos74 busy74
	JR_EQ8 busy74 0 motornotbusy74
	SLEEP
	JR motorwaiting74
  motornotbusy74:
    MOVEF_F 70.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB75 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB75:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer76
	DATA8 nos76
	DATA8 busy76
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer76 nos76
	JR_EQ8 0 nos76 motornotbusy76
  motorwaiting76:
	OUTPUT_TEST layer76 nos76 busy76
	JR_EQ8 busy76 0 motornotbusy76
	SLEEP
	JR motorwaiting76
  motornotbusy76:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB77:
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB78 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB78:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for80:
    JR_GTF VGV_I 20.0 endfor80
  forbody80:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds83
	MOVEF_32 10.0 milliseconds83
	DATA32 timer83
	TIMER_WAIT milliseconds83 timer83
	TIMER_READY timer83
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody80
  endfor80:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 350.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer89
	DATA8 nos89
	DATA8 busy89
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer89 nos89
	JR_EQ8 0 nos89 motornotbusy89
  motorwaiting89:
	OUTPUT_TEST layer89 nos89 busy89
	JR_EQ8 busy89 0 motornotbusy89
	SLEEP
	JR motorwaiting89
  motornotbusy89:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB90:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB91 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB91:
    MOVEF_F 280.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB92 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB92:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB93:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB94 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB94:
RETSUB_F_TAKE_CHEM_ON_LEFT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_0:
SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for96:
    JR_GTF VGV_I 20.0 endfor96
  forbody96:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds102
	MOVEF_32 30.0 milliseconds102
	DATA32 timer102
	TIMER_WAIT milliseconds102 timer102
	TIMER_READY timer102
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody96
  endfor96:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 170.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer108
	DATA8 nos108
	DATA8 busy108
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer108 nos108
	JR_EQ8 0 nos108 motornotbusy108
  motorwaiting108:
	OUTPUT_TEST layer108 nos108 busy108
	JR_EQ8 busy108 0 motornotbusy108
	SLEEP
	JR motorwaiting108
  motornotbusy108:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB109:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer110
	DATA8 nos110
	DATA8 busy110
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer110 nos110
	JR_EQ8 0 nos110 motornotbusy110
  motorwaiting110:
	OUTPUT_TEST layer110 nos110 busy110
	JR_EQ8 busy110 0 motornotbusy110
	SLEEP
	JR motorwaiting110
  motornotbusy110:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for112:
    JR_GTF VGV_I 20.0 endfor112
  forbody112:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds115
	MOVEF_32 10.0 milliseconds115
	DATA32 timer115
	TIMER_WAIT milliseconds115 timer115
	TIMER_READY timer115
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody112
  endfor112:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer121
	DATA8 nos121
	DATA8 busy121
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer121 nos121
	JR_EQ8 0 nos121 motornotbusy121
  motorwaiting121:
	OUTPUT_TEST layer121 nos121 busy121
	JR_EQ8 busy121 0 motornotbusy121
	SLEEP
	JR motorwaiting121
  motornotbusy121:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB122:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer123
	DATA8 nos123
	DATA8 busy123
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer123 nos123
	JR_EQ8 0 nos123 motornotbusy123
  motorwaiting123:
	OUTPUT_TEST layer123 nos123 busy123
	JR_EQ8 busy123 0 motornotbusy123
	SLEEP
	JR motorwaiting123
  motornotbusy123:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB124:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB125:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for127:
    JR_GTF VGV_I 20.0 endfor127
  forbody127:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds131
	MOVEF_32 10.0 milliseconds131
	DATA32 timer131
	TIMER_WAIT milliseconds131 timer131
	TIMER_READY timer131
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody127
  endfor127:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer137
	DATA8 nos137
	DATA8 busy137
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer137 nos137
	JR_EQ8 0 nos137 motornotbusy137
  motorwaiting137:
	OUTPUT_TEST layer137 nos137 busy137
	JR_EQ8 busy137 0 motornotbusy137
	SLEEP
	JR motorwaiting137
  motornotbusy137:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB138:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB139:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for141:
    JR_GTF VGV_I 20.0 endfor141
  forbody141:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds145
	MOVEF_32 30.0 milliseconds145
	DATA32 timer145
	TIMER_WAIT milliseconds145 timer145
	TIMER_READY timer145
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody141
  endfor141:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 170.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer151
	DATA8 nos151
	DATA8 busy151
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer151 nos151
	JR_EQ8 0 nos151 motornotbusy151
  motorwaiting151:
	OUTPUT_TEST layer151 nos151 busy151
	JR_EQ8 busy151 0 motornotbusy151
	SLEEP
	JR motorwaiting151
  motornotbusy151:
RETSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for153:
    JR_GTF VGV_I 20.0 endfor153
  forbody153:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds159
	MOVEF_32 30.0 milliseconds159
	DATA32 timer159
	TIMER_WAIT milliseconds159 timer159
	TIMER_READY timer159
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody153
  endfor153:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer165
	DATA8 nos165
	DATA8 busy165
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer165 nos165
	JR_EQ8 0 nos165 motornotbusy165
  motorwaiting165:
	OUTPUT_TEST layer165 nos165 busy165
	JR_EQ8 busy165 0 motornotbusy165
	SLEEP
	JR motorwaiting165
  motornotbusy165:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB166:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer167
	DATA8 nos167
	DATA8 busy167
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer167 nos167
	JR_EQ8 0 nos167 motornotbusy167
  motorwaiting167:
	OUTPUT_TEST layer167 nos167 busy167
	JR_EQ8 busy167 0 motornotbusy167
	SLEEP
	JR motorwaiting167
  motornotbusy167:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for169:
    JR_GTF VGV_I 20.0 endfor169
  forbody169:
    MULF VGV_I VGV_LEFT_FORWARD F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds172
	MOVEF_32 10.0 milliseconds172
	DATA32 timer172
	TIMER_WAIT milliseconds172 timer172
	TIMER_READY timer172
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody169
  endfor169:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer178
	DATA8 nos178
	DATA8 busy178
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer178 nos178
	JR_EQ8 0 nos178 motornotbusy178
  motorwaiting178:
	OUTPUT_TEST layer178 nos178 busy178
	JR_EQ8 busy178 0 motornotbusy178
	SLEEP
	JR motorwaiting178
  motornotbusy178:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB179 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB179:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer180
	DATA8 nos180
	DATA8 busy180
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer180 nos180
	JR_EQ8 0 nos180 motornotbusy180
  motorwaiting180:
	OUTPUT_TEST layer180 nos180 busy180
	JR_EQ8 busy180 0 motornotbusy180
	SLEEP
	JR motorwaiting180
  motornotbusy180:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB181:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB182 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB182:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for184:
    JR_GTF VGV_I 20.0 endfor184
  forbody184:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds188
	MOVEF_32 10.0 milliseconds188
	DATA32 timer188
	TIMER_WAIT milliseconds188 timer188
	TIMER_READY timer188
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody184
  endfor184:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer194
	DATA8 nos194
	DATA8 busy194
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer194 nos194
	JR_EQ8 0 nos194 motornotbusy194
  motorwaiting194:
	OUTPUT_TEST layer194 nos194 busy194
	JR_EQ8 busy194 0 motornotbusy194
	SLEEP
	JR motorwaiting194
  motornotbusy194:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB195 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB195:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB196 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB196:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for198:
    JR_GTF VGV_I 20.0 endfor198
  forbody198:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds202
	MOVEF_32 30.0 milliseconds202
	DATA32 timer202
	TIMER_WAIT milliseconds202 timer202
	TIMER_READY timer202
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody198
  endfor198:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer208
	DATA8 nos208
	DATA8 busy208
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer208 nos208
	JR_EQ8 0 nos208 motornotbusy208
  motorwaiting208:
	OUTPUT_TEST layer208 nos208 busy208
	JR_EQ8 busy208 0 motornotbusy208
	SLEEP
	JR motorwaiting208
  motornotbusy208:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else209_1
    CALL MOTOR.START VGV_WATER_MOTOR -30.0
    DATA32 milliseconds211
	MOVEF_32 1500.0 milliseconds211
	DATA32 timer211
	TIMER_WAIT milliseconds211 timer211
	TIMER_READY timer211
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif209
  else209_1:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds214
	MOVEF_32 1500.0 milliseconds214
	DATA32 timer214
	TIMER_WAIT milliseconds214 timer214
	TIMER_READY timer214
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
  else209_2:
  endif209:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_UPDATE_DISPLAY_0:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_OBJECT
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.1
    CALL TEXT.APPEND 'Red: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.1
    CALL TEXT.APPEND 'White: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 75.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_UPDATE_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UPDATE_DISPLAY_0:
SUB_F_RESET_VALUES_0:
    STRINGS DUPLICATE 'None' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
RETSUB_F_RESET_VALUES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_VALUES_0:
SUB_F_CLOSE_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -10.0 0.0 70.0 0.0 'True' 

	DATA8 layer226
	DATA8 nos226
	DATA8 busy226
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer226 nos226
	JR_EQ8 0 nos226 motornotbusy226
  motorwaiting226:
	OUTPUT_TEST layer226 nos226 busy226
	JR_EQ8 busy226 0 motornotbusy226
	SLEEP
	JR motorwaiting226
  motornotbusy226:
RETSUB_F_CLOSE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_0:
SUB_F_OPEN_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 10.0 0.0 70.0 0.0 'True' 

	DATA8 layer227
	DATA8 nos227
	DATA8 busy227
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer227 nos227
	JR_EQ8 0 nos227 motornotbusy227
  motorwaiting227:
	OUTPUT_TEST layer227 nos227 busy227
	JR_EQ8 busy227 0 motornotbusy227
	SLEEP
	JR motorwaiting227
  motornotbusy227:
RETSUB_F_OPEN_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_0:
SUB_F_TAKE_CUBES_0:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB228 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB228:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB229:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer232
	DATA8 nos232
	DATA8 busy232
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer232 nos232
	JR_EQ8 0 nos232 motornotbusy232
  motorwaiting232:
	OUTPUT_TEST layer232 nos232 busy232
	JR_EQ8 busy232 0 motornotbusy232
	SLEEP
	JR motorwaiting232
  motornotbusy232:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB233:
    MULF VGV_RIGHT_FORWARD -30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds236
	MOVEF_32 1500.0 milliseconds236
	DATA32 timer236
	TIMER_WAIT milliseconds236 timer236
	TIMER_READY timer236
    WRITE32 ENDSUB_F_STOP_0:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB237:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB238:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 227.0 VGV_A
  while240:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 930.0 endwhile240
  whilebody240:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB242:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 930.0 whilebody240
  endwhile240:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB244:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB245:
RETSUB_F_TAKE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_0:
SUB_F_TAKE_LONG_0:
    MULF VGV_RIGHT_FORWARD 15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer247
	DATA8 nos247
	DATA8 busy247
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer247 nos247
	JR_EQ8 0 nos247 motornotbusy247
  motorwaiting247:
	OUTPUT_TEST layer247 nos247 busy247
	JR_EQ8 busy247 0 motornotbusy247
	SLEEP
	JR motorwaiting247
  motornotbusy247:
    MULF VGV_LEFT_FORWARD 15.0 F.0
    MULF VGV_RIGHT_FORWARD 15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer250
	DATA8 nos250
	DATA8 busy250
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer250 nos250
	JR_EQ8 0 nos250 motornotbusy250
  motorwaiting250:
	OUTPUT_TEST layer250 nos250 busy250
	JR_EQ8 busy250 0 motornotbusy250
	SLEEP
	JR motorwaiting250
  motornotbusy250:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB251:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer254
	DATA8 nos254
	DATA8 busy254
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer254 nos254
	JR_EQ8 0 nos254 motornotbusy254
  motorwaiting254:
	OUTPUT_TEST layer254 nos254 busy254
	JR_EQ8 busy254 0 motornotbusy254
	SLEEP
	JR motorwaiting254
  motornotbusy254:
    JR_NEQF VGV_CUBES_COUNT 2.0 else255_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB256:
  else255_1:
  endif255:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 38.0 'True'

	DATA8 layer259
	DATA8 nos259
	DATA8 busy259
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer259 nos259
	JR_EQ8 0 nos259 motornotbusy259
  motorwaiting259:
	OUTPUT_TEST layer259 nos259 busy259
	JR_EQ8 busy259 0 motornotbusy259
	SLEEP
	JR motorwaiting259
  motornotbusy259:
    MULF VGV_RIGHT_FORWARD -15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer261
	DATA8 nos261
	DATA8 busy261
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer261 nos261
	JR_EQ8 0 nos261 motornotbusy261
  motorwaiting261:
	OUTPUT_TEST layer261 nos261 busy261
	JR_EQ8 busy261 0 motornotbusy261
	SLEEP
	JR motorwaiting261
  motornotbusy261:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_0:
SUB_F_TAKE_NEAR_0:
    MULF -15.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer263
	DATA8 nos263
	DATA8 busy263
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer263 nos263
	JR_EQ8 0 nos263 motornotbusy263
  motorwaiting263:
	OUTPUT_TEST layer263 nos263 busy263
	JR_EQ8 busy263 0 motornotbusy263
	SLEEP
	JR motorwaiting263
  motornotbusy263:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer265
	DATA8 nos265
	DATA8 busy265
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer265 nos265
	JR_EQ8 0 nos265 motornotbusy265
  motorwaiting265:
	OUTPUT_TEST layer265 nos265 busy265
	JR_EQ8 busy265 0 motornotbusy265
	SLEEP
	JR motorwaiting265
  motornotbusy265:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB266:
    MULF 15.0 VGV_LEFT_FORWARD F.0
    MULF 15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer269
	DATA8 nos269
	DATA8 busy269
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer269 nos269
	JR_EQ8 0 nos269 motornotbusy269
  motorwaiting269:
	OUTPUT_TEST layer269 nos269 busy269
	JR_EQ8 busy269 0 motornotbusy269
	SLEEP
	JR motorwaiting269
  motornotbusy269:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB270:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer273
	DATA8 nos273
	DATA8 busy273
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer273 nos273
	JR_EQ8 0 nos273 motornotbusy273
  motorwaiting273:
	OUTPUT_TEST layer273 nos273 busy273
	JR_EQ8 busy273 0 motornotbusy273
	SLEEP
	JR motorwaiting273
  motornotbusy273:
    JR_NEQF VGV_CUBES_COUNT 2.0 else274_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB275:
  else274_1:
  endif274:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer278
	DATA8 nos278
	DATA8 busy278
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer278 nos278
	JR_EQ8 0 nos278 motornotbusy278
  motorwaiting278:
	OUTPUT_TEST layer278 nos278 busy278
	JR_EQ8 busy278 0 motornotbusy278
	SLEEP
	JR motorwaiting278
  motornotbusy278:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer280
	DATA8 nos280
	DATA8 busy280
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer280 nos280
	JR_EQ8 0 nos280 motornotbusy280
  motorwaiting280:
	OUTPUT_TEST layer280 nos280 busy280
	JR_EQ8 busy280 0 motornotbusy280
	SLEEP
	JR motorwaiting280
  motornotbusy280:
    MULF VGV_RIGHT_FORWARD -15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer282
	DATA8 nos282
	DATA8 busy282
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer282 nos282
	JR_EQ8 0 nos282 motornotbusy282
  motorwaiting282:
	OUTPUT_TEST layer282 nos282 busy282
	JR_EQ8 busy282 0 motornotbusy282
	SLEEP
	JR motorwaiting282
  motornotbusy282:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB283 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB283:
    MULF VGV_LEFT_FORWARD 15.0 F.0
    MULF VGV_RIGHT_FORWARD 15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer286
	DATA8 nos286
	DATA8 busy286
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer286 nos286
	JR_EQ8 0 nos286 motornotbusy286
  motorwaiting286:
	OUTPUT_TEST layer286 nos286 busy286
	JR_EQ8 busy286 0 motornotbusy286
	SLEEP
	JR motorwaiting286
  motornotbusy286:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_0:
SUB_F_TAKE_BOTH_0:
    MULF VGV_RIGHT_FORWARD 15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer288
	DATA8 nos288
	DATA8 busy288
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer288 nos288
	JR_EQ8 0 nos288 motornotbusy288
  motorwaiting288:
	OUTPUT_TEST layer288 nos288 busy288
	JR_EQ8 busy288 0 motornotbusy288
	SLEEP
	JR motorwaiting288
  motornotbusy288:
    MULF VGV_LEFT_FORWARD 15.0 F.0
    MULF VGV_RIGHT_FORWARD 15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer291
	DATA8 nos291
	DATA8 busy291
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer291 nos291
	JR_EQ8 0 nos291 motornotbusy291
  motorwaiting291:
	OUTPUT_TEST layer291 nos291 busy291
	JR_EQ8 busy291 0 motornotbusy291
	SLEEP
	JR motorwaiting291
  motornotbusy291:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB292 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB292:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer295
	DATA8 nos295
	DATA8 busy295
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer295 nos295
	JR_EQ8 0 nos295 motornotbusy295
  motorwaiting295:
	OUTPUT_TEST layer295 nos295 busy295
	JR_EQ8 busy295 0 motornotbusy295
	SLEEP
	JR motorwaiting295
  motornotbusy295:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB296:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 128.0 'True'

	DATA8 layer299
	DATA8 nos299
	DATA8 busy299
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer299 nos299
	JR_EQ8 0 nos299 motornotbusy299
  motorwaiting299:
	OUTPUT_TEST layer299 nos299 busy299
	JR_EQ8 busy299 0 motornotbusy299
	SLEEP
	JR motorwaiting299
  motornotbusy299:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer301
	DATA8 nos301
	DATA8 busy301
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer301 nos301
	JR_EQ8 0 nos301 motornotbusy301
  motorwaiting301:
	OUTPUT_TEST layer301 nos301 busy301
	JR_EQ8 busy301 0 motornotbusy301
	SLEEP
	JR motorwaiting301
  motornotbusy301:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 240.0 'True'

	DATA8 layer304
	DATA8 nos304
	DATA8 busy304
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer304 nos304
	JR_EQ8 0 nos304 motornotbusy304
  motorwaiting304:
	OUTPUT_TEST layer304 nos304 busy304
	JR_EQ8 busy304 0 motornotbusy304
	SLEEP
	JR motorwaiting304
  motornotbusy304:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB305 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB305:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 50.0 'True'

	DATA8 layer308
	DATA8 nos308
	DATA8 busy308
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer308 nos308
	JR_EQ8 0 nos308 motornotbusy308
  motorwaiting308:
	OUTPUT_TEST layer308 nos308 busy308
	JR_EQ8 busy308 0 motornotbusy308
	SLEEP
	JR motorwaiting308
  motornotbusy308:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer310
	DATA8 nos310
	DATA8 busy310
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer310 nos310
	JR_EQ8 0 nos310 motornotbusy310
  motorwaiting310:
	OUTPUT_TEST layer310 nos310 busy310
	JR_EQ8 busy310 0 motornotbusy310
	SLEEP
	JR motorwaiting310
  motornotbusy310:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer312
	DATA8 nos312
	DATA8 busy312
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer312 nos312
	JR_EQ8 0 nos312 motornotbusy312
  motorwaiting312:
	OUTPUT_TEST layer312 nos312 busy312
	JR_EQ8 busy312 0 motornotbusy312
	SLEEP
	JR motorwaiting312
  motornotbusy312:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 60.0 'True'

	DATA8 layer315
	DATA8 nos315
	DATA8 busy315
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer315 nos315
	JR_EQ8 0 nos315 motornotbusy315
  motorwaiting315:
	OUTPUT_TEST layer315 nos315 busy315
	JR_EQ8 busy315 0 motornotbusy315
	SLEEP
	JR motorwaiting315
  motornotbusy315:
    MOVEF_F 0.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_BOTH_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_BOTH_0:
SUB_F_GO_FORWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_0:
SUB_F_GO_BACKWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF -20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF -20.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_BACKWARD_0:
SUB_F_MOVE_FORWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while342:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile342
  whilebody342:
    WRITE32 ENDSUB_F_GO_FORWARD_0:CALLSUB344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_0
CALLSUB344:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody342
  endwhile342:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB346 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB346:
RETSUB_F_MOVE_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_0:
SUB_F_MOVE_BACKWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while349:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_LTEQF F.0 F.1 endwhile349
  whilebody349:
    WRITE32 ENDSUB_F_GO_BACKWARD_0:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_0
CALLSUB352:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_GTF F.0 F.1 whilebody349
  endwhile349:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB355 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB355:
RETSUB_F_MOVE_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_0:
SUB_F_MAIN_0:
    STRINGS DUPLICATE 'False' VGV_START_FROM_RIGHT
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else356_1
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 53.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds361
	MOVEF_32 2000.0 milliseconds361
	DATA32 timer361
	TIMER_WAIT milliseconds361 timer361
	TIMER_READY timer361
    WRITE32 ENDSUB_F_STOP_0:CALLSUB362 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB362:
    MULF VGV_RIGHT_FORWARD -30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds365
	MOVEF_32 1000.0 milliseconds365
	DATA32 timer365
	TIMER_WAIT milliseconds365 timer365
	TIMER_READY timer365
    WRITE32 ENDSUB_F_STOP_0:CALLSUB366 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB366:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB367 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB367:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 200.0 0.0 'True' 

	DATA8 layer369
	DATA8 nos369
	DATA8 busy369
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer369 nos369
	JR_EQ8 0 nos369 motornotbusy369
  motorwaiting369:
	OUTPUT_TEST layer369 nos369 busy369
	JR_EQ8 busy369 0 motornotbusy369
	SLEEP
	JR motorwaiting369
  motornotbusy369:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB370:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer372
	DATA8 nos372
	DATA8 busy372
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer372 nos372
	JR_EQ8 0 nos372 motornotbusy372
  motorwaiting372:
	OUTPUT_TEST layer372 nos372 busy372
	JR_EQ8 busy372 0 motornotbusy372
	SLEEP
	JR motorwaiting372
  motornotbusy372:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB373 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB373:
  else356_1:
  endif356:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB374 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB374:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 80.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    MOVEF_F 1200.0 VGV_DEG
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else379_1
    MOVEF_F 1100.0 VGV_DEG
  else379_1:
  endif379:
  while381:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile381
  whilebody381:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody381
  endwhile381:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 55.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while387:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile387
  whilebody387:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody387
  endwhile387:
  while390:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile390
  whilebody390:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody390
  endwhile390:
    WRITE32 ENDSUB_F_STOP_RIGHT_0:CALLSUB393 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_RIGHT_0
CALLSUB393:
    MOVEF_F 105.0 VGV_A
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB394:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 290.0 0.0 'True' 

	DATA8 layer396
	DATA8 nos396
	DATA8 busy396
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer396 nos396
	JR_EQ8 0 nos396 motornotbusy396
  motorwaiting396:
	OUTPUT_TEST layer396 nos396 busy396
	JR_EQ8 busy396 0 motornotbusy396
	SLEEP
	JR motorwaiting396
  motornotbusy396:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB397:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 240.0 0.0 'True' 

	DATA8 layer399
	DATA8 nos399
	DATA8 busy399
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer399 nos399
	JR_EQ8 0 nos399 motornotbusy399
  motorwaiting399:
	OUTPUT_TEST layer399 nos399 busy399
	JR_EQ8 busy399 0 motornotbusy399
	SLEEP
	JR motorwaiting399
  motornotbusy399:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while401:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile401
  whilebody401:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB403:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody401
  endwhile401:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB405:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB406:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    MOVEF_F 500.0 VGV_C
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB408:
    JR_LTEQF VGV_B 80.0 else409_1
    DATA8 layer410
	DATA8 no410
	DATA8 mode8410
	
	MOVEF_8 VGV_RIGHT_SENSOR no410
	SUB8 no410 1 no410
	DIV8 no410 4 layer410
	MATH MOD8 no410 4 no410

	MOVEF_8 2.0 mode8410
	
	INPUT_DEVICE READY_RAW layer410 no410 0 mode8410 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer412
	DATA8 no412
	DATA8 mode8412
	
	MOVEF_8 VGV_RIGHT_SENSOR no412
	SUB8 no412 1 no412
	DIV8 no412 4 layer412
	MATH MOD8 no412 4 no412

	MOVEF_8 1.0 mode8412
	
	INPUT_DEVICE READY_RAW layer412 no412 0 mode8412 0
    JR_LTEQF VGV_G 100.0 else413_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB414:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif413
  else413_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB415:
    STRINGS DUPLICATE 'True' VGV_BROWN
    MOVEF_F 95.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB416:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB417 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB417:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB418 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB418:
  else413_2:
  endif413:
    JR endif409
  else409_1:
    JR_LTEQF VGV_B 5.0 else409_2
    DATA8 layer419
	DATA8 no419
	DATA8 mode8419
	
	MOVEF_8 VGV_RIGHT_SENSOR no419
	SUB8 no419 1 no419
	DIV8 no419 4 layer419
	MATH MOD8 no419 4 no419

	MOVEF_8 4.0 mode8419
	
	INPUT_DEVICE READY_RAW layer419 no419 0 mode8419 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    DATA8 layer421
	DATA8 no421
	DATA8 mode8421
	
	MOVEF_8 VGV_RIGHT_SENSOR no421
	SUB8 no421 1 no421
	DIV8 no421 4 layer421
	MATH MOD8 no421 4 no421

	MOVEF_8 1.0 mode8421
	
	INPUT_DEVICE READY_RAW layer421 no421 0 mode8421 0
    STRINGS DUPLICATE 'None' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB422 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB422:
    JR_LTEQF VGV_W 50.0 else423_1
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB424 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB424:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB425:
  else423_1:
  endif423:
  else409_2:
  endif409:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB426:
    DATA8 layer427
	DATA8 no427
	DATA8 mode8427
	
	MOVEF_8 VGV_LINE_SENSOR no427
	SUB8 no427 1 no427
	DIV8 no427 4 layer427
	MATH MOD8 no427 4 no427

	MOVEF_8 2.0 mode8427
	
	INPUT_DEVICE READY_RAW layer427 no427 0 mode8427 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    WRITE32 ENDSUB_F_STOP_0:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB429:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB430:
  while431:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C or432
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 5.0 endwhile431
  or432:
  whilebody431:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB435:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody431
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 5.0 whilebody431
  endwhile431:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB438 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB438:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB439:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB440 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB440:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB441 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB441:
    MOVEF_F 350.0 VGV_C
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else442_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB444:
    MOVEF_F 90.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB445:
    ADDF VGV_C 110.0 VGV_C
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB447:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB449:
    JR_LTEQF VGV_B 80.0 else450_1
    DATA8 layer451
	DATA8 no451
	DATA8 mode8451
	
	MOVEF_8 VGV_RIGHT_SENSOR no451
	SUB8 no451 1 no451
	DIV8 no451 4 layer451
	MATH MOD8 no451 4 no451

	MOVEF_8 2.0 mode8451
	
	INPUT_DEVICE READY_RAW layer451 no451 0 mode8451 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer453
	DATA8 no453
	DATA8 mode8453
	
	MOVEF_8 VGV_RIGHT_SENSOR no453
	SUB8 no453 1 no453
	DIV8 no453 4 layer453
	MATH MOD8 no453 4 no453

	MOVEF_8 1.0 mode8453
	
	INPUT_DEVICE READY_RAW layer453 no453 0 mode8453 0
    JR_LTEQF VGV_G 100.0 else454_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB455:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif454
  else454_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB456:
    STRINGS DUPLICATE 'True' VGV_BROWN
    MOVEF_F 40.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB457:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB458 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB458:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB459:
  else454_2:
  endif454:
    JR endif450
  else450_1:
    JR_LTEQF VGV_B 12.0 else450_2
    DATA8 layer460
	DATA8 no460
	DATA8 mode8460
	
	MOVEF_8 VGV_RIGHT_SENSOR no460
	SUB8 no460 1 no460
	DIV8 no460 4 layer460
	MATH MOD8 no460 4 no460

	MOVEF_8 4.0 mode8460
	
	INPUT_DEVICE READY_RAW layer460 no460 0 mode8460 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB462:
    DATA8 layer463
	DATA8 no463
	DATA8 mode8463
	
	MOVEF_8 VGV_RIGHT_SENSOR no463
	SUB8 no463 1 no463
	DIV8 no463 4 layer463
	MATH MOD8 no463 4 no463

	MOVEF_8 1.0 mode8463
	
	INPUT_DEVICE READY_RAW layer463 no463 0 mode8463 0
    JR_LTEQF VGV_W 55.0 else464_1
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB465:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB466:
  else464_1:
  endif464:
  else450_2:
  endif450:
  else442_1:
  endif442:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB467:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while469:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile469
  whilebody469:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB471:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody469
  endwhile469:
    MOVEF_F 1.0 VGV_P_U
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else473_1
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    JR endif473
  else473_1:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  else473_2:
  endif473:
    DATA32 milliseconds481
	MOVEF_32 1000.0 milliseconds481
	DATA32 timer481
	TIMER_WAIT milliseconds481 timer481
	TIMER_READY timer481
    WRITE32 ENDSUB_F_STOP_0:CALLSUB482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB482:
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_LEFT
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB483:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB485:
    JR_LTEQF VGV_B 85.0 else486_1
    DATA8 layer487
	DATA8 no487
	DATA8 mode8487
	
	MOVEF_8 VGV_RIGHT_SENSOR no487
	SUB8 no487 1 no487
	DIV8 no487 4 layer487
	MATH MOD8 no487 4 no487

	MOVEF_8 2.0 mode8487
	
	INPUT_DEVICE READY_RAW layer487 no487 0 mode8487 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB488 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB488:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer490
	DATA8 no490
	DATA8 mode8490
	
	MOVEF_8 VGV_RIGHT_SENSOR no490
	SUB8 no490 1 no490
	DIV8 no490 4 layer490
	MATH MOD8 no490 4 no490

	MOVEF_8 1.0 mode8490
	
	INPUT_DEVICE READY_RAW layer490 no490 0 mode8490 0
    JR_LTEQF VGV_G 100.0 else491_1
    STRINGS DUPLICATE 'R: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB492:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif491
  else491_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB493:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB494:
  else491_2:
  endif491:
    JR endif486
  else486_1:
    JR_LTEQF VGV_B 10.0 else486_2
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB495:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_RIGHT
  else486_2:
  endif486:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB496:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else497_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB499 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB499:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB501 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB501:
    JR_LTEQF VGV_B 120.0 else502_1
    DATA8 layer503
	DATA8 no503
	DATA8 mode8503
	
	MOVEF_8 VGV_LEFT_SENSOR no503
	SUB8 no503 1 no503
	DIV8 no503 4 layer503
	MATH MOD8 no503 4 no503

	MOVEF_8 2.0 mode8503
	
	INPUT_DEVICE READY_RAW layer503 no503 0 mode8503 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB504 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB504:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer506
	DATA8 no506
	DATA8 mode8506
	
	MOVEF_8 VGV_LEFT_SENSOR no506
	SUB8 no506 1 no506
	DIV8 no506 4 layer506
	MATH MOD8 no506 4 no506

	MOVEF_8 1.0 mode8506
	
	INPUT_DEVICE READY_RAW layer506 no506 0 mode8506 0
    JR_LTEQF VGV_G 100.0 else507_1
    STRINGS DUPLICATE 'L: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB508 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB508:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif507
  else507_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB509 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB509:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB510 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB510:
  else507_2:
  endif507:
    JR endif502
  else502_1:
    DATA8 layer511
	DATA8 no511
	DATA8 mode8511
	
	MOVEF_8 VGV_LEFT_SENSOR no511
	SUB8 no511 1 no511
	DIV8 no511 4 layer511
	MATH MOD8 no511 4 no511

	MOVEF_8 2.0 mode8511
	
	INPUT_DEVICE READY_RAW layer511 no511 0 mode8511 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer513
	DATA8 no513
	DATA8 mode8513
	
	MOVEF_8 VGV_LEFT_SENSOR no513
	SUB8 no513 1 no513
	DIV8 no513 4 layer513
	MATH MOD8 no513 4 no513

	MOVEF_8 1.0 mode8513
	
	INPUT_DEVICE READY_RAW layer513 no513 0 mode8513 0
    JR_GTF VGV_G 25.0 or515
    JR_GTEQF VGV_G 18.0 else514_1
  or515:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB516:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_LEFT
  else514_1:
  endif514:
  else502_2:
  endif502:
  else497_1:
  endif497:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB517 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB517:
    MOVEF_F 140.0 VGV_CHEM_BACK
    MOVEF_F 140.0 VGV_NO_BACK
    CALL EQ_STRING VGV_TAKE_RED_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else518_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for521:
    JR_GTF VGV_I 20.0 endfor521
  forbody521:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds527
	MOVEF_32 30.0 milliseconds527
	DATA32 timer527
	TIMER_WAIT milliseconds527 timer527
	TIMER_READY timer527
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody521
  endfor521:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer533
	DATA8 nos533
	DATA8 busy533
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer533 nos533
	JR_EQ8 0 nos533 motornotbusy533
  motorwaiting533:
	OUTPUT_TEST layer533 nos533 busy533
	JR_EQ8 busy533 0 motornotbusy533
	SLEEP
	JR motorwaiting533
  motornotbusy533:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB534 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB534:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer536
	DATA8 nos536
	DATA8 busy536
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer536 nos536
	JR_EQ8 0 nos536 motornotbusy536
  motorwaiting536:
	OUTPUT_TEST layer536 nos536 busy536
	JR_EQ8 busy536 0 motornotbusy536
	SLEEP
	JR motorwaiting536
  motornotbusy536:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB537:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer538
	DATA8 nos538
	DATA8 busy538
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer538 nos538
	JR_EQ8 0 nos538 motornotbusy538
  motorwaiting538:
	OUTPUT_TEST layer538 nos538 busy538
	JR_EQ8 busy538 0 motornotbusy538
	SLEEP
	JR motorwaiting538
  motornotbusy538:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for540:
    JR_GTF VGV_I 20.0 endfor540
  forbody540:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds544
	MOVEF_32 20.0 milliseconds544
	DATA32 timer544
	TIMER_WAIT milliseconds544 timer544
	TIMER_READY timer544
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody540
  endfor540:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer550
	DATA8 nos550
	DATA8 busy550
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer550 nos550
	JR_EQ8 0 nos550 motornotbusy550
  motorwaiting550:
	OUTPUT_TEST layer550 nos550 busy550
	JR_EQ8 busy550 0 motornotbusy550
	SLEEP
	JR motorwaiting550
  motornotbusy550:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB551 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB551:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer552
	DATA8 nos552
	DATA8 busy552
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer552 nos552
	JR_EQ8 0 nos552 motornotbusy552
  motorwaiting552:
	OUTPUT_TEST layer552 nos552 busy552
	JR_EQ8 busy552 0 motornotbusy552
	SLEEP
	JR motorwaiting552
  motornotbusy552:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB553 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB553:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for555:
    JR_GTF VGV_I 20.0 endfor555
  forbody555:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds561
	MOVEF_32 20.0 milliseconds561
	DATA32 timer561
	TIMER_WAIT milliseconds561 timer561
	TIMER_READY timer561
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody555
  endfor555:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer567
	DATA8 nos567
	DATA8 busy567
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer567 nos567
	JR_EQ8 0 nos567 motornotbusy567
  motorwaiting567:
	OUTPUT_TEST layer567 nos567 busy567
	JR_EQ8 busy567 0 motornotbusy567
	SLEEP
	JR motorwaiting567
  motornotbusy567:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB568:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB569 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB569:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer571
	DATA8 nos571
	DATA8 busy571
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer571 nos571
	JR_EQ8 0 nos571 motornotbusy571
  motorwaiting571:
	OUTPUT_TEST layer571 nos571 busy571
	JR_EQ8 busy571 0 motornotbusy571
	SLEEP
	JR motorwaiting571
  motornotbusy571:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB572:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds576
	MOVEF_32 1500.0 milliseconds576
	DATA32 timer576
	TIMER_WAIT milliseconds576 timer576
	TIMER_READY timer576
    WRITE32 ENDSUB_F_STOP_0:CALLSUB577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB577:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB578 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB578:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for580:
    JR_GTF VGV_I 20.0 endfor580
  forbody580:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds586
	MOVEF_32 20.0 milliseconds586
	DATA32 timer586
	TIMER_WAIT milliseconds586 timer586
	TIMER_READY timer586
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody580
  endfor580:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer592
	DATA8 nos592
	DATA8 busy592
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer592 nos592
	JR_EQ8 0 nos592 motornotbusy592
  motorwaiting592:
	OUTPUT_TEST layer592 nos592 busy592
	JR_EQ8 busy592 0 motornotbusy592
	SLEEP
	JR motorwaiting592
  motornotbusy592:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB593:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB594 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB594:
    JR endif518
  else518_1:
    CALL EQ_STRING VGV_TAKE_RED_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else518_2
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for597:
    JR_GTF VGV_I 20.0 endfor597
  forbody597:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds603
	MOVEF_32 30.0 milliseconds603
	DATA32 timer603
	TIMER_WAIT milliseconds603 timer603
	TIMER_READY timer603
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody597
  endfor597:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer609
	DATA8 nos609
	DATA8 busy609
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer609 nos609
	JR_EQ8 0 nos609 motornotbusy609
  motorwaiting609:
	OUTPUT_TEST layer609 nos609 busy609
	JR_EQ8 busy609 0 motornotbusy609
	SLEEP
	JR motorwaiting609
  motornotbusy609:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB610 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB610:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer612
	DATA8 nos612
	DATA8 busy612
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer612 nos612
	JR_EQ8 0 nos612 motornotbusy612
  motorwaiting612:
	OUTPUT_TEST layer612 nos612 busy612
	JR_EQ8 busy612 0 motornotbusy612
	SLEEP
	JR motorwaiting612
  motornotbusy612:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB613 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB613:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer614
	DATA8 nos614
	DATA8 busy614
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer614 nos614
	JR_EQ8 0 nos614 motornotbusy614
  motorwaiting614:
	OUTPUT_TEST layer614 nos614 busy614
	JR_EQ8 busy614 0 motornotbusy614
	SLEEP
	JR motorwaiting614
  motornotbusy614:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for616:
    JR_GTF VGV_I 20.0 endfor616
  forbody616:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds620
	MOVEF_32 20.0 milliseconds620
	DATA32 timer620
	TIMER_WAIT milliseconds620 timer620
	TIMER_READY timer620
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody616
  endfor616:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer626
	DATA8 nos626
	DATA8 busy626
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer626 nos626
	JR_EQ8 0 nos626 motornotbusy626
  motorwaiting626:
	OUTPUT_TEST layer626 nos626 busy626
	JR_EQ8 busy626 0 motornotbusy626
	SLEEP
	JR motorwaiting626
  motornotbusy626:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB627 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB627:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer628
	DATA8 nos628
	DATA8 busy628
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer628 nos628
	JR_EQ8 0 nos628 motornotbusy628
  motorwaiting628:
	OUTPUT_TEST layer628 nos628 busy628
	JR_EQ8 busy628 0 motornotbusy628
	SLEEP
	JR motorwaiting628
  motornotbusy628:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB629 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB629:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for631:
    JR_GTF VGV_I 20.0 endfor631
  forbody631:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds637
	MOVEF_32 20.0 milliseconds637
	DATA32 timer637
	TIMER_WAIT milliseconds637 timer637
	TIMER_READY timer637
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody631
  endfor631:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer643
	DATA8 nos643
	DATA8 busy643
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer643 nos643
	JR_EQ8 0 nos643 motornotbusy643
  motorwaiting643:
	OUTPUT_TEST layer643 nos643 busy643
	JR_EQ8 busy643 0 motornotbusy643
	SLEEP
	JR motorwaiting643
  motornotbusy643:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB644:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB645:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer647
	DATA8 nos647
	DATA8 busy647
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer647 nos647
	JR_EQ8 0 nos647 motornotbusy647
  motorwaiting647:
	OUTPUT_TEST layer647 nos647 busy647
	JR_EQ8 busy647 0 motornotbusy647
	SLEEP
	JR motorwaiting647
  motornotbusy647:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB648 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB648:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds652
	MOVEF_32 1000.0 milliseconds652
	DATA32 timer652
	TIMER_WAIT milliseconds652 timer652
	TIMER_READY timer652
    WRITE32 ENDSUB_F_STOP_0:CALLSUB653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB653:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB654:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for656:
    JR_GTF VGV_I 20.0 endfor656
  forbody656:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds662
	MOVEF_32 20.0 milliseconds662
	DATA32 timer662
	TIMER_WAIT milliseconds662 timer662
	TIMER_READY timer662
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody656
  endfor656:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer668
	DATA8 nos668
	DATA8 busy668
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer668 nos668
	JR_EQ8 0 nos668 motornotbusy668
  motorwaiting668:
	OUTPUT_TEST layer668 nos668 busy668
	JR_EQ8 busy668 0 motornotbusy668
	SLEEP
	JR motorwaiting668
  motornotbusy668:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB669:
    JR endif518
  else518_2:
    MOVEF_F VGV_NO_BACK VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB670:
  else518_3:
  endif518:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer673
	DATA8 nos673
	DATA8 busy673
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer673 nos673
	JR_EQ8 0 nos673 motornotbusy673
  motorwaiting673:
	OUTPUT_TEST layer673 nos673 busy673
	JR_EQ8 busy673 0 motornotbusy673
	SLEEP
	JR motorwaiting673
  motornotbusy673:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB674:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB675 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB675:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds679
	MOVEF_32 700.0 milliseconds679
	DATA32 timer679
	TIMER_WAIT milliseconds679 timer679
	TIMER_READY timer679
    WRITE32 ENDSUB_F_STOP_0:CALLSUB680 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB680:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    ADDF F.0 5.0 VGV_A
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 430.0 'True'

	DATA8 layer685
	DATA8 nos685
	DATA8 busy685
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer685 nos685
	JR_EQ8 0 nos685 motornotbusy685
  motorwaiting685:
	OUTPUT_TEST layer685 nos685 busy685
	JR_EQ8 busy685 0 motornotbusy685
	SLEEP
	JR motorwaiting685
  motornotbusy685:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while687:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile687
  whilebody687:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB689 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB689:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody687
  endwhile687:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA8 layer695
	DATA8 no695
	DATA8 mode8695
	
	MOVEF_8 VGV_LINE_SENSOR no695
	SUB8 no695 1 no695
	DIV8 no695 4 layer695
	MATH MOD8 no695 4 no695

	MOVEF_8 0.0 mode8695
	
	INPUT_DEVICE READY_RAW layer695 no695 0 mode8695 0
  while696:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 or697
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 220.0 endwhile696
  or697:
  whilebody696:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 whilebody696
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 220.0 whilebody696
  endwhile696:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB702 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB702:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB703 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB703:
    MOVEF_F 95.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB704 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB704:
    DATA8 layer705
	DATA8 no705
	DATA8 mode8705
	
	MOVEF_8 VGV_LINE_SENSOR no705
	SUB8 no705 1 no705
	DIV8 no705 4 layer705
	MATH MOD8 no705 4 no705

	MOVEF_8 0.0 mode8705
	
	INPUT_DEVICE READY_RAW layer705 no705 0 mode8705 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB706 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB706:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB708 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB708:
    JR_LTEQF VGV_B 55.0 else709_1
    DATA8 layer710
	DATA8 no710
	DATA8 mode8710
	
	MOVEF_8 VGV_LEFT_SENSOR no710
	SUB8 no710 1 no710
	DIV8 no710 4 layer710
	MATH MOD8 no710 4 no710

	MOVEF_8 2.0 mode8710
	
	INPUT_DEVICE READY_RAW layer710 no710 0 mode8710 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB711 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB711:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer713
	DATA8 no713
	DATA8 mode8713
	
	MOVEF_8 VGV_LEFT_SENSOR no713
	SUB8 no713 1 no713
	DIV8 no713 4 layer713
	MATH MOD8 no713 4 no713

	MOVEF_8 1.0 mode8713
	
	INPUT_DEVICE READY_RAW layer713 no713 0 mode8713 0
    JR_LTEQF VGV_G 100.0 else714_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB715:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif714
  else714_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB716 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB716:
    MOVEF_F 100.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB717 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB717:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB718 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB718:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB719:
  else714_2:
  endif714:
    JR endif709
  else709_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else721_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB722 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB722:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB723 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB723:
  else721_1:
  endif721:
  else709_2:
  endif709:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB724 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB724:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB725:
    SUBF VGV_A 5.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while728:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 250.0 endwhile728
  whilebody728:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB730 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB730:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 250.0 whilebody728
  endwhile728:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds735
	MOVEF_32 2000.0 milliseconds735
	DATA32 timer735
	TIMER_WAIT milliseconds735 timer735
	TIMER_READY timer735
    WRITE32 ENDSUB_F_STOP_0:CALLSUB736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB736:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB737:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB739 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB739:
    JR_LTEQF VGV_B 55.0 else740_1
    DATA8 layer741
	DATA8 no741
	DATA8 mode8741
	
	MOVEF_8 VGV_LEFT_SENSOR no741
	SUB8 no741 1 no741
	DIV8 no741 4 layer741
	MATH MOD8 no741 4 no741

	MOVEF_8 2.0 mode8741
	
	INPUT_DEVICE READY_RAW layer741 no741 0 mode8741 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB742:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer744
	DATA8 no744
	DATA8 mode8744
	
	MOVEF_8 VGV_LEFT_SENSOR no744
	SUB8 no744 1 no744
	DIV8 no744 4 layer744
	MATH MOD8 no744 4 no744

	MOVEF_8 1.0 mode8744
	
	INPUT_DEVICE READY_RAW layer744 no744 0 mode8744 0
    JR_LTEQF VGV_G 70.0 else745_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB746:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif745
  else745_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB747 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB747:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB748:
  else745_2:
  endif745:
    JR endif740
  else740_1:
    JR_LTEQF VGV_B 15.0 else740_2
    DATA8 layer749
	DATA8 no749
	DATA8 mode8749
	
	MOVEF_8 VGV_LEFT_SENSOR no749
	SUB8 no749 1 no749
	DIV8 no749 4 layer749
	MATH MOD8 no749 4 no749

	MOVEF_8 4.0 mode8749
	
	INPUT_DEVICE READY_RAW layer749 no749 0 mode8749 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB750 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB750:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_W
    DATA8 layer752
	DATA8 no752
	DATA8 mode8752
	
	MOVEF_8 VGV_LEFT_SENSOR no752
	SUB8 no752 1 no752
	DIV8 no752 4 layer752
	MATH MOD8 no752 4 no752

	MOVEF_8 1.0 mode8752
	
	INPUT_DEVICE READY_RAW layer752 no752 0 mode8752 0
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB753:
    JR_LTEQF VGV_W 60.0 else754_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB755 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB755:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB756 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB756:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for758:
    JR_GTF VGV_I 20.0 endfor758
  forbody758:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds762
	MOVEF_32 30.0 milliseconds762
	DATA32 timer762
	TIMER_WAIT milliseconds762 timer762
	TIMER_READY timer762
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody758
  endfor758:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer768
	DATA8 nos768
	DATA8 busy768
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer768 nos768
	JR_EQ8 0 nos768 motornotbusy768
  motorwaiting768:
	OUTPUT_TEST layer768 nos768 busy768
	JR_EQ8 busy768 0 motornotbusy768
	SLEEP
	JR motorwaiting768
  motornotbusy768:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB769 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB769:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer770
	DATA8 nos770
	DATA8 busy770
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer770 nos770
	JR_EQ8 0 nos770 motornotbusy770
  motorwaiting770:
	OUTPUT_TEST layer770 nos770 busy770
	JR_EQ8 busy770 0 motornotbusy770
	SLEEP
	JR motorwaiting770
  motornotbusy770:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer773
	DATA8 nos773
	DATA8 busy773
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer773 nos773
	JR_EQ8 0 nos773 motornotbusy773
  motorwaiting773:
	OUTPUT_TEST layer773 nos773 busy773
	JR_EQ8 busy773 0 motornotbusy773
	SLEEP
	JR motorwaiting773
  motornotbusy773:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB774 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB774:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer775
	DATA8 nos775
	DATA8 busy775
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer775 nos775
	JR_EQ8 0 nos775 motornotbusy775
  motorwaiting775:
	OUTPUT_TEST layer775 nos775 busy775
	JR_EQ8 busy775 0 motornotbusy775
	SLEEP
	JR motorwaiting775
  motornotbusy775:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB776 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB776:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer779
	DATA8 nos779
	DATA8 busy779
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer779 nos779
	JR_EQ8 0 nos779 motornotbusy779
  motorwaiting779:
	OUTPUT_TEST layer779 nos779 busy779
	JR_EQ8 busy779 0 motornotbusy779
	SLEEP
	JR motorwaiting779
  motornotbusy779:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB780 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB780:
    DATA32 milliseconds781
	MOVEF_32 1000.0 milliseconds781
	DATA32 timer781
	TIMER_WAIT milliseconds781 timer781
	TIMER_READY timer781
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for783:
    JR_GTF VGV_I 20.0 endfor783
  forbody783:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds786
	MOVEF_32 30.0 milliseconds786
	DATA32 timer786
	TIMER_WAIT milliseconds786 timer786
	TIMER_READY timer786
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody783
  endfor783:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer792
	DATA8 nos792
	DATA8 busy792
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer792 nos792
	JR_EQ8 0 nos792 motornotbusy792
  motorwaiting792:
	OUTPUT_TEST layer792 nos792 busy792
	JR_EQ8 busy792 0 motornotbusy792
	SLEEP
	JR motorwaiting792
  motornotbusy792:
    MULF 30.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds795
	MOVEF_32 1000.0 milliseconds795
	DATA32 timer795
	TIMER_WAIT milliseconds795 timer795
	TIMER_READY timer795
    WRITE32 ENDSUB_F_STOP_0:CALLSUB796 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB796:
  else754_1:
  endif754:
  else740_2:
  endif740:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB797 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB797:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer799
	DATA8 nos799
	DATA8 busy799
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer799 nos799
	JR_EQ8 0 nos799 motornotbusy799
  motorwaiting799:
	OUTPUT_TEST layer799 nos799 busy799
	JR_EQ8 busy799 0 motornotbusy799
	SLEEP
	JR motorwaiting799
  motornotbusy799:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 104.0 0.0 'True' 

	DATA8 layer801
	DATA8 nos801
	DATA8 busy801
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer801 nos801
	JR_EQ8 0 nos801 motornotbusy801
  motorwaiting801:
	OUTPUT_TEST layer801 nos801 busy801
	JR_EQ8 busy801 0 motornotbusy801
	SLEEP
	JR motorwaiting801
  motornotbusy801:
    DATA8 layer802
	DATA8 no802
	DATA8 mode8802
	
	MOVEF_8 VGV_LINE_SENSOR no802
	SUB8 no802 1 no802
	DIV8 no802 4 layer802
	MATH MOD8 no802 4 no802

	MOVEF_8 2.0 mode8802
	
	INPUT_DEVICE READY_RAW layer802 no802 0 mode8802 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 105.0 VGV_A
  while804:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 100.0 endwhile804
  whilebody804:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB806 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB806:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 100.0 whilebody804
  endwhile804:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while811:
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 2.0 endwhile811
  whilebody811:
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 2.0 whilebody811
  endwhile811:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB814 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB814:
    DATA8 layer815
	DATA8 no815
	DATA8 mode8815
	
	MOVEF_8 VGV_LINE_SENSOR no815
	SUB8 no815 1 no815
	DIV8 no815 4 layer815
	MATH MOD8 no815 4 no815

	MOVEF_8 0.0 mode8815
	
	INPUT_DEVICE READY_RAW layer815 no815 0 mode8815 0
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else816_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB818 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB818:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB819 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB819:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB820 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB820:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else822_1
    DATA8 layer823
	DATA8 no823
	DATA8 mode8823
	
	MOVEF_8 VGV_LEFT_SENSOR no823
	SUB8 no823 1 no823
	DIV8 no823 4 layer823
	MATH MOD8 no823 4 no823

	MOVEF_8 2.0 mode8823
	
	INPUT_DEVICE READY_RAW layer823 no823 0 mode8823 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB824 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB824:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer826
	DATA8 no826
	DATA8 mode8826
	
	MOVEF_8 VGV_LEFT_SENSOR no826
	SUB8 no826 1 no826
	DIV8 no826 4 layer826
	MATH MOD8 no826 4 no826

	MOVEF_8 1.0 mode8826
	
	INPUT_DEVICE READY_RAW layer826 no826 0 mode8826 0
    JR_LTEQF VGV_G 100.0 else827_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB828 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB828:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif827
  else827_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB829 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB829:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB830 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB830:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB831 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB831:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB832 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB832:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB833 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB833:
  else827_2:
  endif827:
    JR endif822
  else822_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else835_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB836:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB837:
  else835_1:
  endif835:
  else822_2:
  endif822:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB838:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB839 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB839:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB840 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB840:
    JR endif816
  else816_1:
    MOVEF_F 55.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB841 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB841:
  else816_2:
  endif816:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB842 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB842:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else844_1
    DATA8 layer845
	DATA8 no845
	DATA8 mode8845
	
	MOVEF_8 VGV_LEFT_SENSOR no845
	SUB8 no845 1 no845
	DIV8 no845 4 layer845
	MATH MOD8 no845 4 no845

	MOVEF_8 2.0 mode8845
	
	INPUT_DEVICE READY_RAW layer845 no845 0 mode8845 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB846 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB846:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer848
	DATA8 no848
	DATA8 mode8848
	
	MOVEF_8 VGV_LEFT_SENSOR no848
	SUB8 no848 1 no848
	DIV8 no848 4 layer848
	MATH MOD8 no848 4 no848

	MOVEF_8 1.0 mode8848
	
	INPUT_DEVICE READY_RAW layer848 no848 0 mode8848 0
    JR_LTEQF VGV_G 70.0 else849_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB850 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB850:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif849
  else849_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB851 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB851:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB852 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB852:
  else849_2:
  endif849:
    JR endif844
  else844_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else854_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB855 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB855:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB856 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB856:
  else854_1:
  endif854:
  else844_2:
  endif844:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB857 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB857:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer860
	DATA8 nos860
	DATA8 busy860
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer860 nos860
	JR_EQ8 0 nos860 motornotbusy860
  motorwaiting860:
	OUTPUT_TEST layer860 nos860 busy860
	JR_EQ8 busy860 0 motornotbusy860
	SLEEP
	JR motorwaiting860
  motornotbusy860:
    ADDF VGV_A 7.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while863:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 310.0 endwhile863
  whilebody863:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB865 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB865:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 310.0 whilebody863
  endwhile863:
    MOVEF_F 110.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB867 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB867:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else868_1
    DATA8 layer870
	DATA8 no870
	DATA8 mode8870
	
	MOVEF_8 VGV_LEFT_SENSOR no870
	SUB8 no870 1 no870
	DIV8 no870 4 layer870
	MATH MOD8 no870 4 no870

	MOVEF_8 1.0 mode8870
	
	INPUT_DEVICE READY_RAW layer870 no870 0 mode8870 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB871 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB871:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB873 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB873:
    JR_LTEQF VGV_B 55.0 else874_1
    DATA8 layer875
	DATA8 no875
	DATA8 mode8875
	
	MOVEF_8 VGV_LEFT_SENSOR no875
	SUB8 no875 1 no875
	DIV8 no875 4 layer875
	MATH MOD8 no875 4 no875

	MOVEF_8 2.0 mode8875
	
	INPUT_DEVICE READY_RAW layer875 no875 0 mode8875 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB876 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB876:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer878
	DATA8 no878
	DATA8 mode8878
	
	MOVEF_8 VGV_LEFT_SENSOR no878
	SUB8 no878 1 no878
	DIV8 no878 4 layer878
	MATH MOD8 no878 4 no878

	MOVEF_8 1.0 mode8878
	
	INPUT_DEVICE READY_RAW layer878 no878 0 mode8878 0
    JR_LTEQF VGV_G 70.0 else879_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB880 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB880:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif879
  else879_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB881 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB881:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB882 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB882:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB883 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB883:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB884 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB884:
  else879_2:
  endif879:
    JR endif874
  else874_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else886_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB887 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB887:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB888 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB888:
  else886_1:
  endif886:
  else874_2:
  endif874:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB889 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB889:
  else868_1:
  endif868:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB890 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB890:
    DATA8 layer891
	DATA8 no891
	DATA8 mode8891
	
	MOVEF_8 VGV_LINE_SENSOR no891
	SUB8 no891 1 no891
	DIV8 no891 4 layer891
	MATH MOD8 no891 4 no891

	MOVEF_8 0.0 mode8891
	
	INPUT_DEVICE READY_RAW layer891 no891 0 mode8891 0
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'False'

	DATA8 layer894
	DATA8 nos894
	DATA8 busy894
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer894 nos894
	JR_EQ8 0 nos894 motornotbusy894
  motorwaiting894:
	OUTPUT_TEST layer894 nos894 busy894
	JR_EQ8 busy894 0 motornotbusy894
	SLEEP
	JR motorwaiting894
  motornotbusy894:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while898:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile898
  whilebody898:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody898
  endwhile898:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB901 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB901:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 200.0 0.0 'False' 

	DATA8 layer903
	DATA8 nos903
	DATA8 busy903
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer903 nos903
	JR_EQ8 0 nos903 motornotbusy903
  motorwaiting903:
	OUTPUT_TEST layer903 nos903 busy903
	JR_EQ8 busy903 0 motornotbusy903
	SLEEP
	JR motorwaiting903
  motornotbusy903:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
  while906:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile906
  whilebody906:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody906
  endwhile906:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer910
	DATA8 nos910
	DATA8 busy910
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer910 nos910
	JR_EQ8 0 nos910 motornotbusy910
  motorwaiting910:
	OUTPUT_TEST layer910 nos910 busy910
	JR_EQ8 busy910 0 motornotbusy910
	SLEEP
	JR motorwaiting910
  motornotbusy910:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB911 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB911:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while913:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile913
  whilebody913:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB915 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB915:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody913
  endwhile913:
  while917:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 5.0 endwhile917
  whilebody917:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB919 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB919:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 5.0 whilebody917
  endwhile917:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB921 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB921:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer924
	DATA8 nos924
	DATA8 busy924
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer924 nos924
	JR_EQ8 0 nos924 motornotbusy924
  motorwaiting924:
	OUTPUT_TEST layer924 nos924 busy924
	JR_EQ8 busy924 0 motornotbusy924
	SLEEP
	JR motorwaiting924
  motornotbusy924:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB925 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB925:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB926 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB926:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer929
	DATA8 nos929
	DATA8 busy929
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer929 nos929
	JR_EQ8 0 nos929 motornotbusy929
  motorwaiting929:
	OUTPUT_TEST layer929 nos929 busy929
	JR_EQ8 busy929 0 motornotbusy929
	SLEEP
	JR motorwaiting929
  motornotbusy929:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB930:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB931 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB931:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 25.0 'False'

	DATA8 layer934
	DATA8 nos934
	DATA8 busy934
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer934 nos934
	JR_EQ8 0 nos934 motornotbusy934
  motorwaiting934:
	OUTPUT_TEST layer934 nos934 busy934
	JR_EQ8 busy934 0 motornotbusy934
	SLEEP
	JR motorwaiting934
  motornotbusy934:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while936:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile936
  whilebody936:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF F.0 17.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf942
    DATA8 flag942
    DIVF F.0 10.0 tmpf942
    CP_EQF 0.0 10.0 flag942
    SELECTF flag942 0.0 tmpf942 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody936
  endwhile936:
    MOVEF_F 135.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB952 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB952:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB953 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB953:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB954 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB954:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB956 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB956:
    JR_LTEQF VGV_B 140.0 else957_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB958 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB958:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif957
  else957_1:
    JR_LTEQF VGV_B 80.0 else957_2
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'FIre' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB959 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB959:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB960 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB960:
    JR endif957
  else957_2:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else962_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'True' VGV_CHEM
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB963:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB964 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB964:
  else962_1:
  endif962:
  else957_3:
  endif957:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB965 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB965:
    MOVEF_F 180.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB966 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB966:
    MOVEF_F 491.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while968:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 170.0 endwhile968
  whilebody968:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB970 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB970:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 170.0 whilebody968
  endwhile968:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB972 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB972:
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else973_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB975 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB975:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB977 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB977:
    JR_LTEQF VGV_B 40.0 else978_1
    DATA8 layer979
	DATA8 no979
	DATA8 mode8979
	
	MOVEF_8 VGV_LEFT_SENSOR no979
	SUB8 no979 1 no979
	DIV8 no979 4 layer979
	MATH MOD8 no979 4 no979

	MOVEF_8 2.0 mode8979
	
	INPUT_DEVICE READY_RAW layer979 no979 0 mode8979 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB980 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB980:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer982
	DATA8 no982
	DATA8 mode8982
	
	MOVEF_8 VGV_LEFT_SENSOR no982
	SUB8 no982 1 no982
	DIV8 no982 4 layer982
	MATH MOD8 no982 4 no982

	MOVEF_8 1.0 mode8982
	
	INPUT_DEVICE READY_RAW layer982 no982 0 mode8982 0
    JR_LTEQF VGV_G 100.0 else983_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB984:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif983
  else983_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB985 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB985:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB986 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB986:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB987 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB987:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB988 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB988:
  else983_2:
  endif983:
    JR endif978
  else978_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else990_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB991 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB991:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer994
	DATA8 nos994
	DATA8 busy994
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer994 nos994
	JR_EQ8 0 nos994 motornotbusy994
  motorwaiting994:
	OUTPUT_TEST layer994 nos994 busy994
	JR_EQ8 busy994 0 motornotbusy994
	SLEEP
	JR motorwaiting994
  motornotbusy994:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB995 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB995:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer996
	DATA8 nos996
	DATA8 busy996
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer996 nos996
	JR_EQ8 0 nos996 motornotbusy996
  motorwaiting996:
	OUTPUT_TEST layer996 nos996 busy996
	JR_EQ8 busy996 0 motornotbusy996
	SLEEP
	JR motorwaiting996
  motornotbusy996:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for998:
    JR_GTF VGV_I 20.0 endfor998
  forbody998:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1001
	MOVEF_32 10.0 milliseconds1001
	DATA32 timer1001
	TIMER_WAIT milliseconds1001 timer1001
	TIMER_READY timer1001
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody998
  endfor998:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1007
	DATA8 nos1007
	DATA8 busy1007
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1007 nos1007
	JR_EQ8 0 nos1007 motornotbusy1007
  motorwaiting1007:
	OUTPUT_TEST layer1007 nos1007 busy1007
	JR_EQ8 busy1007 0 motornotbusy1007
	SLEEP
	JR motorwaiting1007
  motornotbusy1007:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1008 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1008:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer1009
	DATA8 nos1009
	DATA8 busy1009
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1009 nos1009
	JR_EQ8 0 nos1009 motornotbusy1009
  motorwaiting1009:
	OUTPUT_TEST layer1009 nos1009 busy1009
	JR_EQ8 busy1009 0 motornotbusy1009
	SLEEP
	JR motorwaiting1009
  motornotbusy1009:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1010 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1010:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1011 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1011:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1013:
    JR_GTF VGV_I 20.0 endfor1013
  forbody1013:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1017
	MOVEF_32 10.0 milliseconds1017
	DATA32 timer1017
	TIMER_WAIT milliseconds1017 timer1017
	TIMER_READY timer1017
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1013
  endfor1013:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1023
	DATA8 nos1023
	DATA8 busy1023
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1023 nos1023
	JR_EQ8 0 nos1023 motornotbusy1023
  motorwaiting1023:
	OUTPUT_TEST layer1023 nos1023 busy1023
	JR_EQ8 busy1023 0 motornotbusy1023
	SLEEP
	JR motorwaiting1023
  motornotbusy1023:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1024 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1024:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1025 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1025:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer1028
	DATA8 nos1028
	DATA8 busy1028
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1028 nos1028
	JR_EQ8 0 nos1028 motornotbusy1028
  motorwaiting1028:
	OUTPUT_TEST layer1028 nos1028 busy1028
	JR_EQ8 busy1028 0 motornotbusy1028
	SLEEP
	JR motorwaiting1028
  motornotbusy1028:
  else990_1:
  endif990:
  else978_2:
  endif978:
  else973_1:
  endif973:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1029 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1029:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1030 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1030:
    MOVEF_F 160.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB1031 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB1031:
    DATA8 layer1032
	DATA8 no1032
	DATA8 mode81032
	
	MOVEF_8 VGV_LEFT_SENSOR no1032
	SUB8 no1032 1 no1032
	DIV8 no1032 4 layer1032
	MATH MOD8 no1032 4 no1032

	MOVEF_8 1.0 mode81032
	
	INPUT_DEVICE READY_RAW layer1032 no1032 0 mode81032 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1033 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1033:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1035 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1035:
    JR_LTEQF VGV_B 40.0 else1036_1
    DATA8 layer1037
	DATA8 no1037
	DATA8 mode81037
	
	MOVEF_8 VGV_LEFT_SENSOR no1037
	SUB8 no1037 1 no1037
	DIV8 no1037 4 layer1037
	MATH MOD8 no1037 4 no1037

	MOVEF_8 2.0 mode81037
	
	INPUT_DEVICE READY_RAW layer1037 no1037 0 mode81037 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1038 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1038:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1040
	DATA8 no1040
	DATA8 mode81040
	
	MOVEF_8 VGV_LEFT_SENSOR no1040
	SUB8 no1040 1 no1040
	DIV8 no1040 4 layer1040
	MATH MOD8 no1040 4 no1040

	MOVEF_8 1.0 mode81040
	
	INPUT_DEVICE READY_RAW layer1040 no1040 0 mode81040 0
    JR_LTEQF VGV_G 50.0 else1041_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1042 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1042:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif1041
  else1041_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1043:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1044 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1044:
  else1041_2:
  endif1041:
    JR endif1036
  else1036_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1046_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1047 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1047:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB1048 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB1048:
  else1046_1:
  endif1046:
  else1036_2:
  endif1036:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1049 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1049:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 325.0 'True'

	DATA8 layer1052
	DATA8 nos1052
	DATA8 busy1052
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1052 nos1052
	JR_EQ8 0 nos1052 motornotbusy1052
  motorwaiting1052:
	OUTPUT_TEST layer1052 nos1052 busy1052
	JR_EQ8 busy1052 0 motornotbusy1052
	SLEEP
	JR motorwaiting1052
  motornotbusy1052:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1053 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1053:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1054 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1054:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 380.0 'True'

	DATA8 layer1057
	DATA8 nos1057
	DATA8 busy1057
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1057 nos1057
	JR_EQ8 0 nos1057 motornotbusy1057
  motorwaiting1057:
	OUTPUT_TEST layer1057 nos1057 busy1057
	JR_EQ8 busy1057 0 motornotbusy1057
	SLEEP
	JR motorwaiting1057
  motornotbusy1057:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1058 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1058:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1059:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1062
	DATA8 nos1062
	DATA8 busy1062
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1062 nos1062
	JR_EQ8 0 nos1062 motornotbusy1062
  motorwaiting1062:
	OUTPUT_TEST layer1062 nos1062 busy1062
	JR_EQ8 busy1062 0 motornotbusy1062
	SLEEP
	JR motorwaiting1062
  motornotbusy1062:
    MOVEF_F 474.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1064:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 710.0 endwhile1064
  whilebody1064:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB1066 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB1066:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 710.0 whilebody1064
  endwhile1064:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1068 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1068:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1069 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1069:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1070_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 115.0 0.0 'True' 

	DATA8 layer1072
	DATA8 nos1072
	DATA8 busy1072
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1072 nos1072
	JR_EQ8 0 nos1072 motornotbusy1072
  motorwaiting1072:
	OUTPUT_TEST layer1072 nos1072 busy1072
	JR_EQ8 busy1072 0 motornotbusy1072
	SLEEP
	JR motorwaiting1072
  motornotbusy1072:
  else1070_1:
  endif1070:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1073 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1073:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1076
	DATA8 nos1076
	DATA8 busy1076
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1076 nos1076
	JR_EQ8 0 nos1076 motornotbusy1076
  motorwaiting1076:
	OUTPUT_TEST layer1076 nos1076 busy1076
	JR_EQ8 busy1076 0 motornotbusy1076
	SLEEP
	JR motorwaiting1076
  motornotbusy1076:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1077 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1077:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1078_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer1080
	DATA8 nos1080
	DATA8 busy1080
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1080 nos1080
	JR_EQ8 0 nos1080 motornotbusy1080
  motorwaiting1080:
	OUTPUT_TEST layer1080 nos1080 busy1080
	JR_EQ8 busy1080 0 motornotbusy1080
	SLEEP
	JR motorwaiting1080
  motornotbusy1080:
  else1078_1:
  endif1078:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1083
	DATA8 nos1083
	DATA8 busy1083
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1083 nos1083
	JR_EQ8 0 nos1083 motornotbusy1083
  motorwaiting1083:
	OUTPUT_TEST layer1083 nos1083 busy1083
	JR_EQ8 busy1083 0 motornotbusy1083
	SLEEP
	JR motorwaiting1083
  motornotbusy1083:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 60.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1087
	MOVEF_32 1200.0 milliseconds1087
	DATA32 timer1087
	TIMER_WAIT milliseconds1087 timer1087
	TIMER_READY timer1087
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1088 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1088:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer1091
	DATA8 nos1091
	DATA8 busy1091
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1091 nos1091
	JR_EQ8 0 nos1091 motornotbusy1091
  motorwaiting1091:
	OUTPUT_TEST layer1091 nos1091 busy1091
	JR_EQ8 busy1091 0 motornotbusy1091
	SLEEP
	JR motorwaiting1091
  motornotbusy1091:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer1093
	DATA8 nos1093
	DATA8 busy1093
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1093 nos1093
	JR_EQ8 0 nos1093 motornotbusy1093
  motorwaiting1093:
	OUTPUT_TEST layer1093 nos1093 busy1093
	JR_EQ8 busy1093 0 motornotbusy1093
	SLEEP
	JR motorwaiting1093
  motornotbusy1093:
    MULF VGV_LEFT_FORWARD 90.0 F.0
    MULF VGV_RIGHT_FORWARD 95.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1097
	MOVEF_32 3500.0 milliseconds1097
	DATA32 timer1097
	TIMER_WAIT milliseconds1097 timer1097
	TIMER_READY timer1097
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1098 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1098:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer1099
	DATA8 nos1099
	DATA8 busy1099
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer1099 nos1099
	JR_EQ8 0 nos1099 motornotbusy1099
  motorwaiting1099:
	OUTPUT_TEST layer1099 nos1099 busy1099
	JR_EQ8 busy1099 0 motornotbusy1099
	SLEEP
	JR motorwaiting1099
  motornotbusy1099:
    WRITE32 ENDSUB_F_TAKE_CUBES_0:CALLSUB1100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_0
CALLSUB1100:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1103
	DATA8 nos1103
	DATA8 busy1103
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1103 nos1103
	JR_EQ8 0 nos1103 motornotbusy1103
  motorwaiting1103:
	OUTPUT_TEST layer1103 nos1103 busy1103
	JR_EQ8 busy1103 0 motornotbusy1103
	SLEEP
	JR motorwaiting1103
  motornotbusy1103:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1104_1
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1104_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1107:
    JR endif1104
  else1104_1:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1104_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1109:
    JR endif1104
  else1104_2:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1104_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1111:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1114
	DATA8 nos1114
	DATA8 busy1114
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1114 nos1114
	JR_EQ8 0 nos1114 motornotbusy1114
  motorwaiting1114:
	OUTPUT_TEST layer1114 nos1114 busy1114
	JR_EQ8 busy1114 0 motornotbusy1114
	SLEEP
	JR motorwaiting1114
  motornotbusy1114:
    JR endif1104
  else1104_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1117
	DATA8 nos1117
	DATA8 busy1117
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1117 nos1117
	JR_EQ8 0 nos1117 motornotbusy1117
  motorwaiting1117:
	OUTPUT_TEST layer1117 nos1117 busy1117
	JR_EQ8 busy1117 0 motornotbusy1117
	SLEEP
	JR motorwaiting1117
  motornotbusy1117:
  else1104_4:
  endif1104:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1118_1
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1118_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1121 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1121:
    JR endif1118
  else1118_1:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1118_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1123 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1123:
    JR endif1118
  else1118_2:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1118_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1125:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1128
	DATA8 nos1128
	DATA8 busy1128
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1128 nos1128
	JR_EQ8 0 nos1128 motornotbusy1128
  motorwaiting1128:
	OUTPUT_TEST layer1128 nos1128 busy1128
	JR_EQ8 busy1128 0 motornotbusy1128
	SLEEP
	JR motorwaiting1128
  motornotbusy1128:
    JR endif1118
  else1118_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1131
	DATA8 nos1131
	DATA8 busy1131
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1131 nos1131
	JR_EQ8 0 nos1131 motornotbusy1131
  motorwaiting1131:
	OUTPUT_TEST layer1131 nos1131 busy1131
	JR_EQ8 busy1131 0 motornotbusy1131
	SLEEP
	JR motorwaiting1131
  motornotbusy1131:
  else1118_4:
  endif1118:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1132_1
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1132_1
    WRITE32 ENDSUB_F_TAKE_BOTH_0:CALLSUB1135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_BOTH_0
CALLSUB1135:
    JR endif1132
  else1132_1:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1132_2
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1137 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1137:
    JR endif1132
  else1132_2:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1132_3
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1139:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1142
	DATA8 nos1142
	DATA8 busy1142
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1142 nos1142
	JR_EQ8 0 nos1142 motornotbusy1142
  motorwaiting1142:
	OUTPUT_TEST layer1142 nos1142 busy1142
	JR_EQ8 busy1142 0 motornotbusy1142
	SLEEP
	JR motorwaiting1142
  motornotbusy1142:
    JR endif1132
  else1132_3:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1145
	DATA8 nos1145
	DATA8 busy1145
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1145 nos1145
	JR_EQ8 0 nos1145 motornotbusy1145
  motorwaiting1145:
	OUTPUT_TEST layer1145 nos1145 busy1145
	JR_EQ8 busy1145 0 motornotbusy1145
	SLEEP
	JR motorwaiting1145
  motornotbusy1145:
  else1132_4:
  endif1132:
    MULF -15.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1147
	DATA8 nos1147
	DATA8 busy1147
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1147 nos1147
	JR_EQ8 0 nos1147 motornotbusy1147
  motorwaiting1147:
	OUTPUT_TEST layer1147 nos1147 busy1147
	JR_EQ8 busy1147 0 motornotbusy1147
	SLEEP
	JR motorwaiting1147
  motornotbusy1147:
    MULF VGV_LEFT_FORWARD -25.0 F.0
    MULF VGV_RIGHT_FORWARD -25.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1151
	MOVEF_32 1500.0 milliseconds1151
	DATA32 timer1151
	TIMER_WAIT milliseconds1151 timer1151
	TIMER_READY timer1151
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1152:
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1153_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 55.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1159:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 1200.0 endwhile1159
  whilebody1159:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 1200.0 whilebody1159
  endwhile1159:
  while1162:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 25.0 endwhile1162
  whilebody1162:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 25.0 whilebody1162
  endwhile1162:
  while1165:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile1165
  whilebody1165:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody1165
  endwhile1165:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1168:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1169 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1169:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 365.0 0.0 'True' 

	DATA8 layer1171
	DATA8 nos1171
	DATA8 busy1171
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1171 nos1171
	JR_EQ8 0 nos1171 motornotbusy1171
  motorwaiting1171:
	OUTPUT_TEST layer1171 nos1171 busy1171
	JR_EQ8 busy1171 0 motornotbusy1171
	SLEEP
	JR motorwaiting1171
  motornotbusy1171:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1175 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1175:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1178
	DATA8 nos1178
	DATA8 busy1178
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1178 nos1178
	JR_EQ8 0 nos1178 motornotbusy1178
  motorwaiting1178:
	OUTPUT_TEST layer1178 nos1178 busy1178
	JR_EQ8 busy1178 0 motornotbusy1178
	SLEEP
	JR motorwaiting1178
  motornotbusy1178:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 300.0 0.0 'True' 

	DATA8 layer1180
	DATA8 nos1180
	DATA8 busy1180
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1180 nos1180
	JR_EQ8 0 nos1180 motornotbusy1180
  motorwaiting1180:
	OUTPUT_TEST layer1180 nos1180 busy1180
	JR_EQ8 busy1180 0 motornotbusy1180
	SLEEP
	JR motorwaiting1180
  motornotbusy1180:
    MULF VGV_LEFT_FORWARD 55.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1184
	MOVEF_32 4000.0 milliseconds1184
	DATA32 timer1184
	TIMER_WAIT milliseconds1184 timer1184
	TIMER_READY timer1184
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1185 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1185:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 20.0 'True'

	DATA8 layer1188
	DATA8 nos1188
	DATA8 busy1188
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1188 nos1188
	JR_EQ8 0 nos1188 motornotbusy1188
  motorwaiting1188:
	OUTPUT_TEST layer1188 nos1188 busy1188
	JR_EQ8 busy1188 0 motornotbusy1188
	SLEEP
	JR motorwaiting1188
  motornotbusy1188:
  else1153_1:
  endif1153:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
