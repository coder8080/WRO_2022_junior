DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAF VLV_BASE_POWER_10
DATAF VLV_MIN_POWER_10
DATAF VLV_DEG_10
DATAF VLV_COEF_10
DATAF VLV_BASE_POWER_14
DATAF VLV_MIN_POWER_14
DATAF VLV_DEG_14
DATAF VLV_COEF_14
DATAS VLV_MOTOR_13 252
DATAF VLV_FORWARD_13
DATAF VLV_DEG_13
DATAF VLV_MAX_POWER_13
DATAS VLV_ACCELERATION_13 252
DATAS VLV_ZAME_13 252
DATAS VLV_TO_STOP_13 252
DATAF VLV_TIME_2
DATAF VLV_PERCENT_5
DATAF VLV_POWER_1
DATAF VLV_A_8
DATAF VLV_POWER_11
DATAF VLV_DEG_12
DATAF VLV_POWER_12
DATAS VLV_FINISH_FORWARD_15 252
DATAF VLV_L_7
DATAS VLV_IS_INVERTED_23 252
DATAS VLV_IS_INVERTED_24 252
DATAS VLV_LONG_21 252
DATAS VLV_NEAR_21 252
DATAS VLV_SHOULD_MOVE_BACKWARD_21 252
DATAS VLV_IS_INVERTED_21 252
DATAS VLV_IS_INVERTED_25 252
DATAS VLV_TO_DELAY_26 252
DATAF VLV_L_6
DATAF VLV_COEF_16
DATAF VLV_COEF_17
DATAS VLV_IS_INVERTED_18 252
DATAS VLV_IS_INVERTED_19 252
DATAF VLV_MINUS_DEG_19
DATAF VLV_MINUS_DEG_20
DATAS VLV_IS_INVERTED_22 252
DATAS VLV_MOTOR1_22 252
DATAS VLV_MOTOR2_22 252
DATAF VLV_FORWARD1_22
DATAF VLV_FORWARD2_22
DATAF VLV_COEF_22
DATAF VGV_P
DATAF VLV_MINUS_DEG_21
DATAS VLV_MOTOR1_23 252
DATAS VLV_MOTOR2_23 252
DATAF VLV_FORWARD1_23
DATAF VLV_FORWARD2_23
DATAF VLV_COEF_23
DATAS VLV_MOTOR1_24 252
DATAS VLV_MOTOR2_24 252
DATAF VLV_FORWARD1_24
DATAF VLV_FORWARD2_24
DATAF VLV_COEF_24
DATAF VLV_P_24
DATAS VLV_MOTOR1_25 252
DATAS VLV_MOTOR2_25 252
DATAF VLV_FORWARD1_25
DATAF VLV_FORWARD2_25
DATAF VLV_COEF_25
DATAF VGV_LINE
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_ULTRASONIC
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERTED_MOTOR 252
DATAS VGV_MOTORS 252
DATAF VGV_LEFT_FORWARD
DATAF VGV_RIGHT_FORWARD
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_MAX
DATAF VGV_LEFT_MIN
DATAF VGV_LAST_ERR
DATAF VGV_LAST_MOTOR_ERR
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_WATER_STATE
DATAF VGV_FIRE_COUNT
DATAF VGV_MEN_COUNT
DATAS VGV_CHEM 252
DATAS VGV_TAKE_CHEM_IN_YELLOW 252
DATAF VGV_CUBES_COUNT
DATAS VGV_START 252
DATAF VGV_A
DATAF VGV_R
DATAS VGV_OBEJCT 252
DATAF VGV_G
DATAS VGV_OBJECT 252
DATAF VGV_DEG
DATAS VGV_TAKE_LEFT 252
DATAS VGV_TAKE_RIGHT 252
DATAF VGV_W
DATAF VGV_ULTRA
DATAF VGV_COL
DATAS VGV_CH 252
DATAF VGV_U
DATAS VGV_IS_FIRST_BLUE_OBJECT_CHEM 252
DATAS VGV_IS_SECOND_BLUE_OBJECT_CHEM 252
DATAS VGV_IS_ON_SECOND_BLUE 252
DATAS VGV_WHITE_OBJECT 252
DATAF VGV_MINUS_DEG
DATAF VLV_ERR_6
DATAF VLV_DIFF_6
DATAF VLV_DELTA_6
DATAF VLV_LEFT_POWER_6
DATAF VLV_RIGHT_POWER_6
DATAF VLV_ERR_7
DATAF VLV_DIFF_7
DATAF VLV_DELTA_7
DATAF VLV_LEFT_POWER_7
DATAF VLV_RIGHT_POWER_7
DATAF VLV_L_8
DATAF VLV_ERR_8
DATAF VLV_DIFF_8
DATAF VLV_DELTA_8
DATAF VLV_LEFT_POWER_8
DATAF VLV_RIGHT_POWER_8
DATAF VLV_L_10
DATAF VLV_P_10
DATAF VLV_POWER_10
DATAF VLV_R_10
DATAF VLV_DELTA_10
DATAF VLV_LEFT_POWER_10
DATAF VLV_RIGHT_POWER_10
DATAF VLV_L_11
DATAF VLV_R_11
DATAF VLV_ERR_11
DATAF VLV_DIFF_11
DATAF VLV_DELTA_11
DATAF VLV_LEFT_POWER_11
DATAF VLV_RIGHT_POWER_11
DATAF VLV_L_12
DATAF VLV_NORMAL_DEG_13
DATAF VLV_ACCELERATION_DEG_13
DATAF VLV_ZAME_DEG_13
DATAF VLV_M_13
DATAF VLV_MIN_POWER_13
DATAF VLV_P_13
DATAF VLV_POWER_13
DATAF VLV_L_14
DATAF VLV_P_14
DATAF VLV_R_14
DATAF VLV_DELTA_14
DATAF VLV_POWER_14
DATAF VLV_LEFT_POWER_14
DATAF VLV_RIGHT_POWER_14
DATAS VLV_MOT_18 252
DATAF VLV_FORWARD_18
DATAF VLV_COEF_18
DATAF VLV_COEF_19
DATAF VLV_DEG_20
ARRAY16 VLV_RGB_24 2
DATAF VLV_MILLISECOND_26
DATAF VLV_SECONDS_26
DATAF VLV_MINUTES_26
DATAS VLV_TEXT_26 252
DATA32 RUNCOUNTER_F_PREPARE_GRABBER_0
DATA32 RUNCOUNTER_F_KICK_WATER_0

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    MOVEF_F 0.0 VLV_BASE_POWER_10
    MOVEF_F 0.0 VLV_MIN_POWER_10
    MOVEF_F 0.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_COEF_10
    MOVEF_F 0.0 VLV_BASE_POWER_14
    MOVEF_F 0.0 VLV_MIN_POWER_14
    MOVEF_F 0.0 VLV_DEG_14
    MOVEF_F 0.0 VLV_COEF_14
    STRINGS DUPLICATE '' VLV_MOTOR_13
    MOVEF_F 0.0 VLV_FORWARD_13
    MOVEF_F 0.0 VLV_DEG_13
    MOVEF_F 0.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE '' VLV_ACCELERATION_13
    STRINGS DUPLICATE '' VLV_ZAME_13
    STRINGS DUPLICATE '' VLV_TO_STOP_13
    MOVEF_F 0.0 VLV_TIME_2
    MOVEF_F 0.0 VLV_PERCENT_5
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_A_8
    MOVEF_F 0.0 VLV_POWER_11
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_POWER_12
    STRINGS DUPLICATE '' VLV_FINISH_FORWARD_15
    MOVEF_F 0.0 VLV_L_7
    STRINGS DUPLICATE '' VLV_IS_INVERTED_23
    STRINGS DUPLICATE '' VLV_IS_INVERTED_24
    STRINGS DUPLICATE '' VLV_LONG_21
    STRINGS DUPLICATE '' VLV_NEAR_21
    STRINGS DUPLICATE '' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_25
    STRINGS DUPLICATE '' VLV_TO_DELAY_26
    MOVEF_F 0.0 VLV_L_6
    MOVEF_F 0.0 VLV_COEF_16
    MOVEF_F 0.0 VLV_COEF_17
    STRINGS DUPLICATE '' VLV_IS_INVERTED_18
    STRINGS DUPLICATE '' VLV_IS_INVERTED_19
    MOVEF_F 0.0 VLV_MINUS_DEG_19
    MOVEF_F 0.0 VLV_MINUS_DEG_20
    STRINGS DUPLICATE '' VLV_IS_INVERTED_22
    STRINGS DUPLICATE '' VLV_MOTOR1_22
    STRINGS DUPLICATE '' VLV_MOTOR2_22
    MOVEF_F 0.0 VLV_FORWARD1_22
    MOVEF_F 0.0 VLV_FORWARD2_22
    MOVEF_F 0.0 VLV_COEF_22
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    STRINGS DUPLICATE '' VLV_MOTOR1_23
    STRINGS DUPLICATE '' VLV_MOTOR2_23
    MOVEF_F 0.0 VLV_FORWARD1_23
    MOVEF_F 0.0 VLV_FORWARD2_23
    MOVEF_F 0.0 VLV_COEF_23
    STRINGS DUPLICATE '' VLV_MOTOR1_24
    STRINGS DUPLICATE '' VLV_MOTOR2_24
    MOVEF_F 0.0 VLV_FORWARD1_24
    MOVEF_F 0.0 VLV_FORWARD2_24
    MOVEF_F 0.0 VLV_COEF_24
    MOVEF_F 0.0 VLV_P_24
    STRINGS DUPLICATE '' VLV_MOTOR1_25
    STRINGS DUPLICATE '' VLV_MOTOR2_25
    MOVEF_F 0.0 VLV_FORWARD1_25
    MOVEF_F 0.0 VLV_FORWARD2_25
    MOVEF_F 0.0 VLV_COEF_25
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_START
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_R
    STRINGS DUPLICATE '' VGV_OBEJCT
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_TAKE_LEFT
    STRINGS DUPLICATE '' VGV_TAKE_RIGHT
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_COL
    STRINGS DUPLICATE '' VGV_CH
    MOVEF_F 0.0 VGV_U
    STRINGS DUPLICATE '' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_ON_SECOND_BLUE
    STRINGS DUPLICATE '' VGV_WHITE_OBJECT
    MOVEF_F 0.0 VGV_MINUS_DEG
    MOVEF_F 0.0 VLV_ERR_6
    MOVEF_F 0.0 VLV_DIFF_6
    MOVEF_F 0.0 VLV_DELTA_6
    MOVEF_F 0.0 VLV_LEFT_POWER_6
    MOVEF_F 0.0 VLV_RIGHT_POWER_6
    MOVEF_F 0.0 VLV_ERR_7
    MOVEF_F 0.0 VLV_DIFF_7
    MOVEF_F 0.0 VLV_DELTA_7
    MOVEF_F 0.0 VLV_LEFT_POWER_7
    MOVEF_F 0.0 VLV_RIGHT_POWER_7
    MOVEF_F 0.0 VLV_L_8
    MOVEF_F 0.0 VLV_ERR_8
    MOVEF_F 0.0 VLV_DIFF_8
    MOVEF_F 0.0 VLV_DELTA_8
    MOVEF_F 0.0 VLV_LEFT_POWER_8
    MOVEF_F 0.0 VLV_RIGHT_POWER_8
    MOVEF_F 0.0 VLV_L_10
    MOVEF_F 0.0 VLV_P_10
    MOVEF_F 0.0 VLV_POWER_10
    MOVEF_F 0.0 VLV_R_10
    MOVEF_F 0.0 VLV_DELTA_10
    MOVEF_F 0.0 VLV_LEFT_POWER_10
    MOVEF_F 0.0 VLV_RIGHT_POWER_10
    MOVEF_F 0.0 VLV_L_11
    MOVEF_F 0.0 VLV_R_11
    MOVEF_F 0.0 VLV_ERR_11
    MOVEF_F 0.0 VLV_DIFF_11
    MOVEF_F 0.0 VLV_DELTA_11
    MOVEF_F 0.0 VLV_LEFT_POWER_11
    MOVEF_F 0.0 VLV_RIGHT_POWER_11
    MOVEF_F 0.0 VLV_L_12
    MOVEF_F 0.0 VLV_NORMAL_DEG_13
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_13
    MOVEF_F 0.0 VLV_ZAME_DEG_13
    MOVEF_F 0.0 VLV_M_13
    MOVEF_F 0.0 VLV_MIN_POWER_13
    MOVEF_F 0.0 VLV_P_13
    MOVEF_F 0.0 VLV_POWER_13
    MOVEF_F 0.0 VLV_L_14
    MOVEF_F 0.0 VLV_P_14
    MOVEF_F 0.0 VLV_R_14
    MOVEF_F 0.0 VLV_DELTA_14
    MOVEF_F 0.0 VLV_POWER_14
    MOVEF_F 0.0 VLV_LEFT_POWER_14
    MOVEF_F 0.0 VLV_RIGHT_POWER_14
    STRINGS DUPLICATE '' VLV_MOT_18
    MOVEF_F 0.0 VLV_FORWARD_18
    MOVEF_F 0.0 VLV_COEF_18
    MOVEF_F 0.0 VLV_COEF_19
    MOVEF_F 0.0 VLV_DEG_20
    CALL ARRAYCREATE_FLOAT VLV_RGB_24
    MOVEF_F 0.0 VLV_MILLISECOND_26
    MOVEF_F 0.0 VLV_SECONDS_26
    MOVEF_F 0.0 VLV_MINUTES_26
    STRINGS DUPLICATE '' VLV_TEXT_26
    MOVE32_32 0 RUNCOUNTER_F_PREPARE_GRABBER_0
    MOVE32_32 0 RUNCOUNTER_F_KICK_WATER_0
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
vmthread TF_PREPARE_GRABBER_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_PREPARE_GRABBER_0 0
    CALL GETANDINC32 RUNCOUNTER_F_PREPARE_GRABBER_0 -1 RUNCOUNTER_F_PREPARE_GRABBER_0 tmp
    JR_GT32 tmp 1 launch
}
vmthread TF_KICK_WATER_0
{
    DATA32 tmp
  launch:
    CALL PROGRAM_F_KICK_WATER_0 1
    CALL GETANDINC32 RUNCOUNTER_F_KICK_WATER_0 -1 RUNCOUNTER_F_KICK_WATER_0 tmp
    JR_GT32 tmp 1 launch
}
subcall PROGRAM_MAIN
subcall PROGRAM_F_PREPARE_GRABBER_0
subcall PROGRAM_F_KICK_WATER_0
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    JR_NEQ32 SUBPROGRAM 0 dispatch1132
    WRITE32 ENDSUB_F_PREPARE_GRABBER_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_PREPARE_GRABBER_0
  dispatch1132:
    JR_NEQ32 SUBPROGRAM 1 dispatch1133
    WRITE32 ENDSUB_F_KICK_WATER_0:ENDTHREAD STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
  dispatch1133:
    MOVEF_F 0.0 VLV_BASE_POWER_10
    MOVEF_F 0.0 VLV_MIN_POWER_10
    MOVEF_F 0.0 VLV_DEG_10
    MOVEF_F 0.0 VLV_COEF_10
    MOVEF_F 0.0 VLV_BASE_POWER_14
    MOVEF_F 0.0 VLV_MIN_POWER_14
    MOVEF_F 0.0 VLV_DEG_14
    MOVEF_F 0.0 VLV_COEF_14
    STRINGS DUPLICATE '' VLV_MOTOR_13
    MOVEF_F 0.0 VLV_FORWARD_13
    MOVEF_F 0.0 VLV_DEG_13
    MOVEF_F 0.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE '' VLV_ACCELERATION_13
    STRINGS DUPLICATE '' VLV_ZAME_13
    STRINGS DUPLICATE '' VLV_TO_STOP_13
    MOVEF_F 0.0 VLV_TIME_2
    MOVEF_F 0.0 VLV_PERCENT_5
    MOVEF_F 0.0 VLV_POWER_1
    MOVEF_F 0.0 VLV_A_8
    MOVEF_F 0.0 VLV_POWER_11
    MOVEF_F 0.0 VLV_DEG_12
    MOVEF_F 0.0 VLV_POWER_12
    STRINGS DUPLICATE '' VLV_FINISH_FORWARD_15
    MOVEF_F 0.0 VLV_L_7
    STRINGS DUPLICATE '' VLV_IS_INVERTED_23
    STRINGS DUPLICATE '' VLV_IS_INVERTED_24
    STRINGS DUPLICATE '' VLV_LONG_21
    STRINGS DUPLICATE '' VLV_NEAR_21
    STRINGS DUPLICATE '' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_21
    STRINGS DUPLICATE '' VLV_IS_INVERTED_25
    STRINGS DUPLICATE '' VLV_TO_DELAY_26
    MOVEF_F 0.0 VLV_L_6
    MOVEF_F 0.0 VLV_COEF_16
    MOVEF_F 0.0 VLV_COEF_17
    STRINGS DUPLICATE '' VLV_IS_INVERTED_18
    STRINGS DUPLICATE '' VLV_IS_INVERTED_19
    MOVEF_F 0.0 VLV_MINUS_DEG_19
    MOVEF_F 0.0 VLV_MINUS_DEG_20
    STRINGS DUPLICATE '' VLV_IS_INVERTED_22
    STRINGS DUPLICATE '' VLV_MOTOR1_22
    STRINGS DUPLICATE '' VLV_MOTOR2_22
    MOVEF_F 0.0 VLV_FORWARD1_22
    MOVEF_F 0.0 VLV_FORWARD2_22
    MOVEF_F 0.0 VLV_COEF_22
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    STRINGS DUPLICATE '' VLV_MOTOR1_23
    STRINGS DUPLICATE '' VLV_MOTOR2_23
    MOVEF_F 0.0 VLV_FORWARD1_23
    MOVEF_F 0.0 VLV_FORWARD2_23
    MOVEF_F 0.0 VLV_COEF_23
    STRINGS DUPLICATE '' VLV_MOTOR1_24
    STRINGS DUPLICATE '' VLV_MOTOR2_24
    MOVEF_F 0.0 VLV_FORWARD1_24
    MOVEF_F 0.0 VLV_FORWARD2_24
    MOVEF_F 0.0 VLV_COEF_24
    MOVEF_F 0.0 VLV_P_24
    STRINGS DUPLICATE '' VLV_MOTOR1_25
    STRINGS DUPLICATE '' VLV_MOTOR2_25
    MOVEF_F 0.0 VLV_FORWARD1_25
    MOVEF_F 0.0 VLV_FORWARD2_25
    MOVEF_F 0.0 VLV_COEF_25
    MOVEF_F 0.0 VGV_LINE
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERTED_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_MAX
    MOVEF_F 0.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 0.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_START
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_R
    STRINGS DUPLICATE '' VGV_OBEJCT
    MOVEF_F 0.0 VGV_G
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_TAKE_LEFT
    STRINGS DUPLICATE '' VGV_TAKE_RIGHT
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_ULTRA
    MOVEF_F 0.0 VGV_COL
    STRINGS DUPLICATE '' VGV_CH
    MOVEF_F 0.0 VGV_U
    STRINGS DUPLICATE '' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE '' VGV_IS_ON_SECOND_BLUE
    STRINGS DUPLICATE '' VGV_WHITE_OBJECT
    MOVEF_F 0.0 VGV_MINUS_DEG
    MOVEF_F 1.0 VGV_LINE
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERTED_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 40.0 VGV_LEFT_MAX
    MOVEF_F 5.0 VGV_LEFT_MIN
    MOVEF_F 0.0 VGV_LAST_ERR
    MOVEF_F 0.0 VGV_LAST_MOTOR_ERR
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_WATER_STATE
    MOVEF_F 0.0 VGV_FIRE_COUNT
    MOVEF_F 0.0 VGV_MEN_COUNT
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_TAKE_CHEM_IN_YELLOW
    MOVEF_F 2.0 VGV_CUBES_COUNT
    DATA8 layer1
	DATA8 no1
	DATA8 mode81
	
	MOVEF_8 VGV_LINE no1
	SUB8 no1 1 no1
	DIV8 no1 4 layer1
	MATH MOD8 no1 4 no1

	MOVEF_8 0.0 mode81
	
	INPUT_DEVICE READY_RAW layer1 no1 0 mode81 0
    DATA8 layer2
	DATA8 no2
	DATA8 mode82
	
	MOVEF_8 VGV_LEFT_SENSOR no2
	SUB8 no2 1 no2
	DIV8 no2 4 layer2
	MATH MOD8 no2 4 no2

	MOVEF_8 1.0 mode82
	
	INPUT_DEVICE READY_RAW layer2 no2 0 mode82 0
    DATA8 layer3
	DATA8 no3
	DATA8 mode83
	
	MOVEF_8 VGV_RIGHT_SENSOR no3
	SUB8 no3 1 no3
	DIV8 no3 4 layer3
	MATH MOD8 no3 4 no3

	MOVEF_8 1.0 mode83
	
	INPUT_DEVICE READY_RAW layer3 no3 0 mode83 0
    DATA8 layer4
	DATA8 no4
	DATA8 mode84
	
	MOVEF_8 VGV_ULTRASONIC no4
	SUB8 no4 1 no4
	DIV8 no4 4 layer4
	MATH MOD8 no4 4 no4

	MOVEF_8 0.0 mode84
	
	INPUT_DEVICE READY_RAW layer4 no4 0 mode84 0
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else5_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB7 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB7:
    SOUND_READY
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB9 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB9:
  else5_1:
  endif5:
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB10 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB10:
ENDTHREAD:
    RETURN
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB12:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 80.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB13 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB13:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB14 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB14:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer15
	DATA8 nos15
	DATA8 busy15
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer15 nos15
	JR_EQ8 0 nos15 motornotbusy15
  motorwaiting15:
	OUTPUT_TEST layer15 nos15 busy15
	JR_EQ8 busy15 0 motornotbusy15
	SLEEP
	JR motorwaiting15
  motornotbusy15:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 130.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB16 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB16:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer17
	DATA8 nos17
	DATA8 busy17
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer17 nos17
	JR_EQ8 0 nos17 motornotbusy17
  motorwaiting17:
	OUTPUT_TEST layer17 nos17 busy17
	JR_EQ8 busy17 0 motornotbusy17
	SLEEP
	JR motorwaiting17
  motornotbusy17:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 120.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB19 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB19:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB20 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB20:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 160.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB21 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB21:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else22_1
    CALL MOTOR.START VGV_WATER_MOTOR 40.0
    DATA32 milliseconds24
	MOVEF_32 500.0 milliseconds24
	DATA32 timer24
	TIMER_WAIT milliseconds24 timer24
	TIMER_READY timer24
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer26
	DATA8 nos26
	DATA8 busy26
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer26 nos26
	JR_EQ8 0 nos26 motornotbusy26
  motorwaiting26:
	OUTPUT_TEST layer26 nos26 busy26
	JR_EQ8 busy26 0 motornotbusy26
	SLEEP
	JR motorwaiting26
  motornotbusy26:
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif22
  else22_1:
    CALL MOTOR.START VGV_WATER_MOTOR -40.0
    DATA32 milliseconds28
	MOVEF_32 500.0 milliseconds28
	DATA32 timer28
	TIMER_WAIT milliseconds28 timer28
	TIMER_READY timer28
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 50.0 0.0 20.0 0.0 'True' 

	DATA8 layer30
	DATA8 nos30
	DATA8 busy30
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer30 nos30
	JR_EQ8 0 nos30 motornotbusy30
  motorwaiting30:
	OUTPUT_TEST layer30 nos30 busy30
	JR_EQ8 busy30 0 motornotbusy30
	SLEEP
	JR motorwaiting30
  motornotbusy30:
  else22_2:
  endif22:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_PREPARE_GRABBER_0:
    CALL MOTOR.START VGV_GRABBER_MOTOR -20.0
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB32 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB32:
    CALL MOTOR.STOP VGV_GRABBER_MOTOR 'True'
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 50.0 0.0 'True' 

	DATA8 layer34
	DATA8 nos34
	DATA8 busy34
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer34 nos34
	JR_EQ8 0 nos34 motornotbusy34
  motorwaiting34:
	OUTPUT_TEST layer34 nos34 busy34
	JR_EQ8 busy34 0 motornotbusy34
	SLEEP
	JR motorwaiting34
  motornotbusy34:
RETSUB_F_PREPARE_GRABBER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_PREPARE_GRABBER_0:
SUB_F_MAIN_0:
    STRINGS DUPLICATE 'left' VGV_START
    TIMER_READ timeMC9
    MOVEF_F 90.0 VGV_A
    DATA32 tmp36
    CALL GETANDINC32 RUNCOUNTER_F_PREPARE_GRABBER_0 1  RUNCOUNTER_F_PREPARE_GRABBER_0 tmp36
    JR_NEQ32 0 tmp36 alreadylaunched36
    OBJECT_START TF_PREPARE_GRABBER_0
  alreadylaunched36:
    CALL EQ_STRING VGV_START 'left' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else37_1
    MULF 80.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 85.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    WRITE32 ENDSUB_F_RESET_0:CALLSUB43 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB43:
  while44:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    JR_GTEQF F.0 1000.0 endwhile44
  whilebody44:
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    JR_LTF F.0 1000.0 whilebody44
  endwhile44:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB47 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB47:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while48:
    JR_GTEQF VGV_P 50.0 endwhile48
  whilebody48:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB49 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB49:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_LTF VGV_P 50.0 whilebody48
  endwhile48:
  while50:
    JR_LTEQF VGV_P 20.0 endwhile50
  whilebody50:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB51 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB51:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_GTF VGV_P 20.0 whilebody50
  endwhile50:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 180.0 VLV_DEG_13
    MOVEF_F 50.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB54 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB54:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 180.0 VLV_DEG_13
    MOVEF_F 50.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB55 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB55:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB56 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB56:
    DATA32 milliseconds57
	MOVEF_32 1000.0 milliseconds57
	DATA32 timer57
	TIMER_WAIT milliseconds57 timer57
	TIMER_READY timer57
    WRITE32 ENDSUB_F_STOP_0:CALLSUB58 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB58:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 55.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB59 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB59:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB61 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB61:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB62 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB62:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB63 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB63:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while64:
    JR_LTEQF VGV_P 23.0 endwhile64
  whilebody64:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB65 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB65:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB66 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB66:
    JR_GTF VGV_P 23.0 whilebody64
  endwhile64:
    JR endif37
  else37_1:
    MULF 80.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF 40.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    WRITE32 ENDSUB_F_RESET_0:CALLSUB71 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB71:
  while72:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 1000.0 endwhile72
  whilebody72:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 1000.0 whilebody72
  endwhile72:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB77 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB77:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while78:
    JR_GTEQF VGV_P 50.0 endwhile78
  whilebody78:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB79 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB79:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_LTF VGV_P 50.0 whilebody78
  endwhile78:
  while80:
    JR_LTEQF VGV_P 20.0 endwhile80
  whilebody80:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB81 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB81:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_GTF VGV_P 20.0 whilebody80
  endwhile80:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB82 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB82:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 180.0 VLV_DEG_13
    MOVEF_F 40.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'Fase' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB83 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB83:
    MULF VGV_LEFT_FORWARD -40.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB86 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB86:
    CALL MOTOR.STOP VGV_LEFT_MOTOR 'True'
    TIMER_READ timeMC1
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB89 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB89:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB90 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB90:
  while91:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_GTEQF F.0 3500.0 endwhile91
  whilebody91:
    MOVEF_F 40.0 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB93 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB93:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTF F.0 3500.0 whilebody91
  endwhile91:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB95 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB95:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB96 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB96:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 230.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB98 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB98:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 130.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB99 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB99:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB100 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB100:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB101 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB101:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while102:
    JR_LTEQF VGV_P 23.0 endwhile102
  whilebody102:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB103 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB103:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F 90.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB104:
    JR_GTF VGV_P 23.0 whilebody102
  endwhile102:
  else37_2:
  endif37:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 0.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB105 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB105:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB106:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB107:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_R '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    STRINGS DUPLICATE 'none' VGV_OBEJCT
    JR_LTEQF VGV_R 60.0 else112_1
    DATA8 layer113
	DATA8 no113
	DATA8 mode8113
	
	MOVEF_8 VGV_RIGHT_SENSOR no113
	SUB8 no113 1 no113
	DIV8 no113 4 layer113
	MATH MOD8 no113 4 no113

	MOVEF_8 2.0 mode8113
	
	INPUT_DEVICE READY_RAW layer113 no113 0 mode8113 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB114:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer116
	DATA8 no116
	DATA8 mode8116
	
	MOVEF_8 VGV_RIGHT_SENSOR no116
	SUB8 no116 1 no116
	DIV8 no116 4 layer116
	MATH MOD8 no116 4 no116

	MOVEF_8 1.0 mode8116
	
	INPUT_DEVICE READY_RAW layer116 no116 0 mode8116 0
    JR_LTEQF VGV_G 80.0 else117_1
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    STRINGS DUPLICATE 'human' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif117
  else117_1:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    DATA32 tmp120
    CALL GETANDINC32 RUNCOUNTER_F_KICK_WATER_0 1  RUNCOUNTER_F_KICK_WATER_0 tmp120
    JR_NEQ32 0 tmp120 alreadylaunched120
    OBJECT_START TF_KICK_WATER_0
  alreadylaunched120:
  else117_2:
  endif117:
    JR endif112
  else112_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else112_2
    JR_LTEQF VGV_R 15.0 else112_2
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB122 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB122:
  else112_2:
  endif112:
    MOVEF_F 525.0 VGV_DEG
    CALL NE_STRING VGV_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else123_1
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 120.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB125 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB125:
    SUBF VGV_DEG 120.0 VGV_DEG
  else123_1:
  endif123:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB127:
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else128_1
  while130:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 130.0 F.1
    JR_GTEQF F.0 F.1 endwhile130
  whilebody130:
    MOVEF_F 93.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB134 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB134:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 130.0 F.1
    JR_LTF F.0 F.1 whilebody130
  endwhile130:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 15.0 VLV_MIN_POWER_14
    MOVEF_F 120.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB138:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB139 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB139:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB140:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 80.0 else142_1
    DATA8 layer143
	DATA8 no143
	DATA8 mode8143
	
	MOVEF_8 VGV_RIGHT_SENSOR no143
	SUB8 no143 1 no143
	DIV8 no143 4 layer143
	MATH MOD8 no143 4 no143

	MOVEF_8 2.0 mode8143
	
	INPUT_DEVICE READY_RAW layer143 no143 0 mode8143 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB144 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB144:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer146
	DATA8 no146
	DATA8 mode8146
	
	MOVEF_8 VGV_RIGHT_SENSOR no146
	SUB8 no146 1 no146
	DIV8 no146 4 layer146
	MATH MOD8 no146 4 no146

	MOVEF_8 1.0 mode8146
	
	INPUT_DEVICE READY_RAW layer146 no146 0 mode8146 0
    JR_LTEQF VGV_G 100.0 else147_1
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    STRINGS DUPLICATE 'human' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif147
  else147_1:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB150:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 15.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB151 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB151:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB152 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB152:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB153 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB153:
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 15.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB154 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB154:
  else147_2:
  endif147:
    JR endif142
  else142_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else142_2
    JR_LTEQF VGV_R 20.0 else142_2
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB156:
  else142_2:
  endif142:
    MOVEF_F 40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB157:
    JR endif128
  else128_1:
  while158:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 VGV_DEG endwhile158
  whilebody158:
    MOVEF_F 90.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB161 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB161:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 VGV_DEG whilebody158
  endwhile158:
  else128_2:
  endif128:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB164 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB164:
  while165:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 520.0 endwhile165
  whilebody165:
    MOVEF_F 95.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB168 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB168:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 520.0 whilebody165
  endwhile165:
    MULF 60.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF 60.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds175
	MOVEF_32 1000.0 milliseconds175
	DATA32 timer175
	TIMER_WAIT milliseconds175 timer175
	TIMER_READY timer175
    WRITE32 ENDSUB_F_STOP_0:CALLSUB176 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB176:
    STRINGS DUPLICATE 'False' VGV_TAKE_LEFT
    STRINGS DUPLICATE 'False' VGV_TAKE_RIGHT
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB177 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB177:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 80.0 else179_1
    DATA8 layer180
	DATA8 no180
	DATA8 mode8180
	
	MOVEF_8 VGV_RIGHT_SENSOR no180
	SUB8 no180 1 no180
	DIV8 no180 4 layer180
	MATH MOD8 no180 4 no180

	MOVEF_8 2.0 mode8180
	
	INPUT_DEVICE READY_RAW layer180 no180 0 mode8180 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB181 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB181:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer183
	DATA8 no183
	DATA8 mode8183
	
	MOVEF_8 VGV_RIGHT_SENSOR no183
	SUB8 no183 1 no183
	DIV8 no183 4 layer183
	MATH MOD8 no183 4 no183

	MOVEF_8 1.0 mode8183
	
	INPUT_DEVICE READY_RAW layer183 no183 0 mode8183 0
    JR_LTEQF VGV_G 100.0 else184_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    STRINGS DUPLICATE 'R: man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif184
  else184_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB187 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB187:
  else184_2:
  endif184:
    JR endif179
  else179_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else179_2
    DATA8 layer189
	DATA8 no189
	DATA8 mode8189
	
	MOVEF_8 VGV_RIGHT_SENSOR no189
	SUB8 no189 1 no189
	DIV8 no189 4 layer189
	MATH MOD8 no189 4 no189

	MOVEF_8 4.0 mode8189
	
	INPUT_DEVICE READY_RAW layer189 no189 0 mode8189 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB190 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB190:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    DATA8 layer195
	DATA8 no195
	DATA8 mode8195
	
	MOVEF_8 VGV_RIGHT_SENSOR no195
	SUB8 no195 1 no195
	DIV8 no195 4 layer195
	MATH MOD8 no195 4 no195

	MOVEF_8 1.0 mode8195
	
	INPUT_DEVICE READY_RAW layer195 no195 0 mode8195 0
    JR_LTEQF VGV_W 30.0 else196_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_TAKE_RIGHT
    STRINGS DUPLICATE 'True' VGV_CHEM
  else196_1:
  endif196:
  else179_2:
  endif179:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else197_1
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 60.0 else200_1
    DATA8 layer201
	DATA8 no201
	DATA8 mode8201
	
	MOVEF_8 VGV_LEFT_SENSOR no201
	SUB8 no201 1 no201
	DIV8 no201 4 layer201
	MATH MOD8 no201 4 no201

	MOVEF_8 2.0 mode8201
	
	INPUT_DEVICE READY_RAW layer201 no201 0 mode8201 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB202 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB202:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer204
	DATA8 no204
	DATA8 mode8204
	
	MOVEF_8 VGV_LEFT_SENSOR no204
	SUB8 no204 1 no204
	DIV8 no204 4 layer204
	MATH MOD8 no204 4 no204

	MOVEF_8 1.0 mode8204
	
	INPUT_DEVICE READY_RAW layer204 no204 0 mode8204 0
    JR_LTEQF VGV_G 100.0 else205_1
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    STRINGS DUPLICATE 'L: man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif205
  else205_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB208 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB208:
  else205_2:
  endif205:
    JR endif200
  else200_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else200_2
    DATA8 layer210
	DATA8 no210
	DATA8 mode8210
	
	MOVEF_8 VGV_LEFT_SENSOR no210
	SUB8 no210 1 no210
	DIV8 no210 4 layer210
	MATH MOD8 no210 4 no210

	MOVEF_8 0.0 mode8210
	
	INPUT_DEVICE READY_RAW layer210 no210 0 mode8210 0
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 40.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB212 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB212:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB213:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_COL
    MULF 80.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
    DATA32 milliseconds218
	MOVEF_32 1000.0 milliseconds218
	DATA32 timer218
	TIMER_WAIT milliseconds218 timer218
	TIMER_READY timer218
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    DATA8 layer220
	DATA8 no220
	DATA8 mode8220
	
	MOVEF_8 VGV_LEFT_SENSOR no220
	SUB8 no220 1 no220
	DIV8 no220 4 layer220
	MATH MOD8 no220 4 no220

	MOVEF_8 1.0 mode8220
	
	INPUT_DEVICE READY_RAW layer220 no220 0 mode8220 0
    JR_LTF VGV_ULTRA 75.0 or222
    JR_NEQF VGV_COL 12.0 else221_1
  or222:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_TAKE_LEFT
  else221_1:
  endif221:
  else200_2:
  endif200:
  else197_1:
  endif197:
    CALL EQ_STRING VGV_TAKE_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else223_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB225 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB225:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 60.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB226 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB226:
    OUTPUT_POWER 0 2 0
	OUTPUT_STOP 0 2 1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB229 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB229:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer230
	DATA8 nos230
	DATA8 busy230
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer230 nos230
	JR_EQ8 0 nos230 motornotbusy230
  motorwaiting230:
	OUTPUT_TEST layer230 nos230 busy230
	JR_EQ8 busy230 0 motornotbusy230
	SLEEP
	JR motorwaiting230
  motornotbusy230:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB231 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB231:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB232 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB232:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB233 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB233:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer234
	DATA8 nos234
	DATA8 busy234
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer234 nos234
	JR_EQ8 0 nos234 motornotbusy234
  motorwaiting234:
	OUTPUT_TEST layer234 nos234 busy234
	JR_EQ8 busy234 0 motornotbusy234
	SLEEP
	JR motorwaiting234
  motornotbusy234:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB235 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB235:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB236 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB236:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB237 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB237:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB238 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB238:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB239 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB239:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB240 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB240:
    DATA32 milliseconds241
	MOVEF_32 1000.0 milliseconds241
	DATA32 timer241
	TIMER_WAIT milliseconds241 timer241
	TIMER_READY timer241
    WRITE32 ENDSUB_F_STOP_0:CALLSUB242 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB242:
    JR endif223
  else223_1:
    CALL EQ_STRING VGV_TAKE_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else223_2
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB244 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB244:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 60.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB245 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB245:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB248:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer249
	DATA8 nos249
	DATA8 busy249
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer249 nos249
	JR_EQ8 0 nos249 motornotbusy249
  motorwaiting249:
	OUTPUT_TEST layer249 nos249 busy249
	JR_EQ8 busy249 0 motornotbusy249
	SLEEP
	JR motorwaiting249
  motornotbusy249:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB250 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB250:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB251 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB251:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB252:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer253
	DATA8 nos253
	DATA8 busy253
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer253 nos253
	JR_EQ8 0 nos253 motornotbusy253
  motorwaiting253:
	OUTPUT_TEST layer253 nos253 busy253
	JR_EQ8 busy253 0 motornotbusy253
	SLEEP
	JR motorwaiting253
  motornotbusy253:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB254 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB254:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB255 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB255:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB256:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB257:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB258 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB258:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB259 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB259:
    DATA32 milliseconds260
	MOVEF_32 1000.0 milliseconds260
	DATA32 timer260
	TIMER_WAIT milliseconds260 timer260
	TIMER_READY timer260
    WRITE32 ENDSUB_F_STOP_0:CALLSUB261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB261:
  else223_2:
  endif223:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB262 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB262:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB263:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 355.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB265 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB265:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB266 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB266:
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB267 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB267:
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 120.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB268 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB268:
    MOVEF_F 185.0 VLV_DEG_12
    MOVEF_F 40.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB269 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB269:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 120.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB270:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB271 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB271:
    MOVEF_F 400.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB272 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB272:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_R
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB274 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB274:
    JR_LTEQF VGV_R 80.0 else275_1
    DATA8 layer276
	DATA8 no276
	DATA8 mode8276
	
	MOVEF_8 VGV_RIGHT_SENSOR no276
	SUB8 no276 1 no276
	DIV8 no276 4 layer276
	MATH MOD8 no276 4 no276

	MOVEF_8 2.0 mode8276
	
	INPUT_DEVICE READY_RAW layer276 no276 0 mode8276 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB277 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB277:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer279
	DATA8 no279
	DATA8 mode8279
	
	MOVEF_8 VGV_RIGHT_SENSOR no279
	SUB8 no279 1 no279
	DIV8 no279 4 layer279
	MATH MOD8 no279 4 no279

	MOVEF_8 1.0 mode8279
	
	INPUT_DEVICE READY_RAW layer279 no279 0 mode8279 0
    JR_LTEQF VGV_G 80.0 else280_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB281 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB281:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif280
  else280_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB284 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB284:
  else280_2:
  endif280:
    JR endif275
  else275_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else275_2
    DATA8 layer286
	DATA8 no286
	DATA8 mode8286
	
	MOVEF_8 VGV_RIGHT_SENSOR no286
	SUB8 no286 1 no286
	DIV8 no286 4 layer286
	MATH MOD8 no286 4 no286

	MOVEF_8 2.0 mode8286
	
	INPUT_DEVICE READY_RAW layer286 no286 0 mode8286 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB287 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB287:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer289
	DATA8 no289
	DATA8 mode8289
	
	MOVEF_8 VGV_RIGHT_SENSOR no289
	SUB8 no289 1 no289
	DIV8 no289 4 layer289
	MATH MOD8 no289 4 no289

	MOVEF_8 1.0 mode8289
	
	INPUT_DEVICE READY_RAW layer289 no289 0 mode8289 0
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_G '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_LTEQF VGV_G 15.0 else293_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_TAKE_CHEM_IN_YELLOW
  else293_1:
  endif293:
  else275_2:
  endif275:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 260.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB294:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB295 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB295:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 260.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB296 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB296:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB297 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB297:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB298 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB298:
    CALL EQ_STRING VGV_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else299_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 85.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB301 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB301:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 80.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB302:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB303 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB303:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB304 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB304:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 50.0 else306_1
    DATA8 layer307
	DATA8 no307
	DATA8 mode8307
	
	MOVEF_8 VGV_LEFT_SENSOR no307
	SUB8 no307 1 no307
	DIV8 no307 4 layer307
	MATH MOD8 no307 4 no307

	MOVEF_8 2.0 mode8307
	
	INPUT_DEVICE READY_RAW layer307 no307 0 mode8307 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB308 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB308:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer310
	DATA8 no310
	DATA8 mode8310
	
	MOVEF_8 VGV_LEFT_SENSOR no310
	SUB8 no310 1 no310
	DIV8 no310 4 layer310
	MATH MOD8 no310 4 no310

	MOVEF_8 1.0 mode8310
	
	INPUT_DEVICE READY_RAW layer310 no310 0 mode8310 0
    JR_LTEQF VGV_G 70.0 else311_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif311
  else311_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB314 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB314:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB315 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB315:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB316 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB316:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB317 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB317:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB318 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB318:
  else311_2:
  endif311:
    JR endif306
  else306_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else306_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB320 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB320:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 70.0 else322_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VLV_FINISH_FORWARD_15
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB323 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB323:
  else322_1:
  endif322:
  else306_2:
  endif306:
    JR endif299
  else299_1:
    MOVEF_F 165.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB324 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB324:
  else299_2:
  endif299:
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB325 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB325:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB326 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB326:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    DATA8 flag328
	CP_GTF F.0 95.0 flag328
	SELECTF flag328 F.0 95.0 VGV_A
  while329:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 300.0 endwhile329
  whilebody329:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB332 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB332:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 300.0 whilebody329
  endwhile329:
    MULF 40.0 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF 40.0 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds339
	MOVEF_32 1000.0 milliseconds339
	DATA32 timer339
	TIMER_WAIT milliseconds339 timer339
	TIMER_READY timer339
    WRITE32 ENDSUB_F_STOP_0:CALLSUB340 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB340:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 80.0 else342_1
    DATA8 layer343
	DATA8 no343
	DATA8 mode8343
	
	MOVEF_8 VGV_LEFT_SENSOR no343
	SUB8 no343 1 no343
	DIV8 no343 4 layer343
	MATH MOD8 no343 4 no343

	MOVEF_8 2.0 mode8343
	
	INPUT_DEVICE READY_RAW layer343 no343 0 mode8343 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB344 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB344:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer346
	DATA8 no346
	DATA8 mode8346
	
	MOVEF_8 VGV_LEFT_SENSOR no346
	SUB8 no346 1 no346
	DIV8 no346 4 layer346
	MATH MOD8 no346 4 no346

	MOVEF_8 1.0 mode8346
	
	INPUT_DEVICE READY_RAW layer346 no346 0 mode8346 0
    JR_LTEQF VGV_G 80.0 else347_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif347
  else347_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'fire' VGV_OBEJCT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB350 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB350:
  else347_2:
  endif347:
    JR endif342
  else342_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else342_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB352:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    STRINGS DUPLICATE 'False' VGV_CH
    JR_GTEQF VGV_ULTRA 75.0 else354_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif354
  else354_1:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 20.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB356:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB357:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB361 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB361:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
    JR_GTEQF VGV_ULTRA 75.0 else363_1
    STRINGS DUPLICATE 'True' VGV_CH
  else363_1:
  endif363:
  else354_2:
  endif354:
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 75.0 else367_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB368 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB368:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 80.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB369 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB369:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB370 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB370:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer371
	DATA8 nos371
	DATA8 busy371
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer371 nos371
	JR_EQ8 0 nos371 motornotbusy371
  motorwaiting371:
	OUTPUT_TEST layer371 nos371 busy371
	JR_EQ8 busy371 0 motornotbusy371
	SLEEP
	JR motorwaiting371
  motornotbusy371:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 160.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB372 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB372:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer373
	DATA8 nos373
	DATA8 busy373
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer373 nos373
	JR_EQ8 0 nos373 motornotbusy373
  motorwaiting373:
	OUTPUT_TEST layer373 nos373 busy373
	JR_EQ8 busy373 0 motornotbusy373
	SLEEP
	JR motorwaiting373
  motornotbusy373:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 160.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB375 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB375:
    MOVEF_F 50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB376 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB376:
    MOVEF_F 1000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB377 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB377:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB378 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB378:
  else367_1:
  endif367:
  else342_2:
  endif342:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 240.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB380 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB380:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 105.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB381 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB381:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB382 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB382:
    MOVEF_F 1200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB383:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB384:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 120.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB385 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB385:
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else386_1
    WRITE32 ENDSUB_F_RESET_0:CALLSUB388 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB388:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    DATA8 flag390
	CP_GTF F.0 93.0 flag390
	SELECTF flag390 F.0 93.0 VGV_U
  while391:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 175.0 endwhile391
  whilebody391:
    MOVEF_F VGV_U VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB394 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB394:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 175.0 whilebody391
  endwhile391:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 15.0 VLV_MIN_POWER_14
    MOVEF_F 120.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB397 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB397:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB398:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB399 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB399:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    STRINGS DUPLICATE 'none' VGV_OBJECT
    JR_LTEQF VGV_R 60.0 else401_1
    DATA8 layer402
	DATA8 no402
	DATA8 mode8402
	
	MOVEF_8 VGV_LEFT_SENSOR no402
	SUB8 no402 1 no402
	DIV8 no402 4 layer402
	MATH MOD8 no402 4 no402

	MOVEF_8 2.0 mode8402
	
	INPUT_DEVICE READY_RAW layer402 no402 0 mode8402 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB403 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB403:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer405
	DATA8 no405
	DATA8 mode8405
	
	MOVEF_8 VGV_LEFT_SENSOR no405
	SUB8 no405 1 no405
	DIV8 no405 4 layer405
	MATH MOD8 no405 4 no405

	MOVEF_8 1.0 mode8405
	
	INPUT_DEVICE READY_RAW layer405 no405 0 mode8405 0
    JR_LTEQF VGV_G 80.0 else406_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif406
  else406_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB409 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB409:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB410 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB410:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB411 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB411:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB412:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB413 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB413:
  else406_2:
  endif406:
    JR endif401
  else401_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else401_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB415:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 90.0 else420_1
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VLV_FINISH_FORWARD_15
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB421 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB421:
  else420_1:
  endif420:
  else401_2:
  endif401:
    CALL EQ_STRING VGV_OBJECT 'none' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or423
    CALL EQ_STRING VGV_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else422_1
  or423:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB426 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB426:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 70.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB427 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB427:
    JR endif422
  else422_1:
    MOVEF_F 80.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB428:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 70.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB429:
  else422_2:
  endif422:
    JR endif386
  else386_1:
    MOVEF_F 450.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB430:
  else386_2:
  endif386:
    STRINGS DUPLICATE 'False' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VGV_IS_ON_SECOND_BLUE
    WRITE32 ENDSUB_F_STOP_0:CALLSUB431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB431:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB432 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB432:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 50.0 else434_1
    DATA8 layer435
	DATA8 no435
	DATA8 mode8435
	
	MOVEF_8 VGV_LEFT_SENSOR no435
	SUB8 no435 1 no435
	DIV8 no435 4 layer435
	MATH MOD8 no435 4 no435

	MOVEF_8 2.0 mode8435
	
	INPUT_DEVICE READY_RAW layer435 no435 0 mode8435 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB436 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB436:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer438
	DATA8 no438
	DATA8 mode8438
	
	MOVEF_8 VGV_LEFT_SENSOR no438
	SUB8 no438 1 no438
	DIV8 no438 4 layer438
	MATH MOD8 no438 4 no438

	MOVEF_8 1.0 mode8438
	
	INPUT_DEVICE READY_RAW layer438 no438 0 mode8438 0
    JR_LTEQF VGV_G 100.0 else439_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif439
  else439_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'fire' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB442 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB442:
  else439_2:
  endif439:
    JR endif434
  else434_1:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else434_2
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB444 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB444:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    CALL LCD.CLEAR
    STRINGS VALUE_FORMATTED VGV_ULTRA '%g' 99 S.0
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 S.0
    JR_GTEQF VGV_ULTRA 80.0 else449_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_IS_FIRST_BLUE_OBJECT_CHEM
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 145.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB450 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB450:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 145.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB451 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB451:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB452:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB453 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB453:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB455:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer456
	DATA8 nos456
	DATA8 busy456
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer456 nos456
	JR_EQ8 0 nos456 motornotbusy456
  motorwaiting456:
	OUTPUT_TEST layer456 nos456 busy456
	JR_EQ8 busy456 0 motornotbusy456
	SLEEP
	JR motorwaiting456
  motornotbusy456:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB457:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB458 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB458:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB459 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB459:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB460 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB460:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer461
	DATA8 nos461
	DATA8 busy461
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer461 nos461
	JR_EQ8 0 nos461 motornotbusy461
  motorwaiting461:
	OUTPUT_TEST layer461 nos461 busy461
	JR_EQ8 busy461 0 motornotbusy461
	SLEEP
	JR motorwaiting461
  motornotbusy461:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB462 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB462:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB463 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB463:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB464 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB464:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB465 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB465:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB466 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB466:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB467 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB467:
  else449_1:
  endif449:
  else434_2:
  endif434:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else468_1
    STRINGS DUPLICATE 'True' VGV_IS_ON_SECOND_BLUE
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB470 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB470:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB471 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB471:
  while472:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 320.0 endwhile472
  whilebody472:
    MOVEF_F 93.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB475:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 320.0 whilebody472
  endwhile472:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB478:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB479 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB479:
    STRINGS DUPLICATE 'none' VGV_OBJECT
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB480 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB480:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_R
    JR_LTEQF VGV_R 50.0 else482_1
    DATA8 layer483
	DATA8 no483
	DATA8 mode8483
	
	MOVEF_8 VGV_LEFT_SENSOR no483
	SUB8 no483 1 no483
	DIV8 no483 4 layer483
	MATH MOD8 no483 4 no483

	MOVEF_8 2.0 mode8483
	
	INPUT_DEVICE READY_RAW layer483 no483 0 mode8483 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB484:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer486
	DATA8 no486
	DATA8 mode8486
	
	MOVEF_8 VGV_LEFT_SENSOR no486
	SUB8 no486 1 no486
	DIV8 no486 4 layer486
	MATH MOD8 no486 4 no486

	MOVEF_8 1.0 mode8486
	
	INPUT_DEVICE READY_RAW layer486 no486 0 mode8486 0
    JR_LTEQF VGV_G 80.0 else487_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    STRINGS DUPLICATE 'man' VGV_OBJECT
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
    JR endif487
  else487_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Trie' VGV_OBJECT
    ADDF VGV_FIRE_COUNT 1.0 VGV_FIRE_COUNT
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB490 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB490:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB491:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB492 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB492:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB493 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB493:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB494:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB495 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB495:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB496 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB496:
  else487_2:
  endif487:
    JR endif482
  else482_1:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB497 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB497:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 80.0 else499_1
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'chem' VGV_OBJECT
    STRINGS DUPLICATE 'Treu' VGV_IS_SECOND_BLUE_OBJECT_CHEM
    STRINGS DUPLICATE 'False' VLV_FINISH_FORWARD_15
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_1:CALLSUB500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_1
CALLSUB500:
  else499_1:
  endif499:
  else482_2:
  endif482:
  else468_1:
  endif468:
    STRINGS DUPLICATE 'none' VGV_WHITE_OBJECT
    JR_GTEQF VGV_MEN_COUNT 2.0 else501_1
    STRINGS DUPLICATE 'man' VGV_WHITE_OBJECT
    JR endif501
  else501_1:
    JR_GTEQF VGV_FIRE_COUNT 2.0 else501_2
    STRINGS DUPLICATE 'fire' VGV_WHITE_OBJECT
    JR endif501
  else501_2:
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else501_3
    STRINGS DUPLICATE 'chem' VGV_WHITE_OBJECT
  else501_3:
  endif501:
    CALL EQ_STRING VGV_WHITE_OBJECT 'man' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else503_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    ADDF VGV_MEN_COUNT 1.0 VGV_MEN_COUNT
  else503_1:
  endif503:
    CALL EQ_STRING VGV_WHITE_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or507
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_NEQ8 S.0 0 or507
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else506_1
  or507:
    CALL EQ_STRING VGV_IS_ON_SECOND_BLUE 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else511_1
    CALL EQ_STRING VGV_IS_SECOND_BLUE_OBJECT_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else513_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 30.0 VLV_MIN_POWER_10
    MOVEF_F 50.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB515 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB515:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 30.0 VLV_MIN_POWER_14
    MOVEF_F 50.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB516 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB516:
    OUTPUT_POWER 0 1 0
	OUTPUT_STOP 0 1 1
    JR endif513
  else513_1:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 10.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB518 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB518:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB519 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB519:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB520 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB520:
  else513_2:
  endif513:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB522 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB522:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB523 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB523:
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB524:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB525 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB525:
    JR endif511
  else511_1:
    CALL EQ_STRING VGV_IS_FIRST_BLUE_OBJECT_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else526_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB528 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB528:
    MOVEF_F 215.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB529 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB529:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB530 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB530:
    JR endif526
  else526_1:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 75.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB531 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB531:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 75.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB532 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB532:
  else526_2:
  endif526:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB533 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB533:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB535 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB535:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB536 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB536:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB537 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB537:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB538 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB538:
  else511_2:
  endif511:
    MOVEF_F 100.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB539 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB539:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB540 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB540:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB541:
    DATA8 layer542
	DATA8 no542
	DATA8 mode8542
	
	MOVEF_8 VGV_LINE no542
	SUB8 no542 1 no542
	DIV8 no542 4 layer542
	MATH MOD8 no542 4 no542

	MOVEF_8 2.0 mode8542
	
	INPUT_DEVICE READY_RAW layer542 no542 0 mode8542 0
  while543:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 130.0 endwhile543
  whilebody543:
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB546 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB546:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 130.0 whilebody543
  endwhile543:
  while549:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_EQF F.0 6.0 endwhile549
  whilebody549:
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB551 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB551:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_NEQF F.0 6.0 whilebody549
  endwhile549:
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else553_1
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else553_1
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB556 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB556:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB557 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB557:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB558:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 30.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB559:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 30.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB560 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB560:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB561 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB561:
    JR endif553
  else553_1:
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else553_2
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB563 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB563:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB564 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB564:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB565 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB565:
    JR endif553
  else553_2:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else553_3
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 170.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB567 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB567:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB568:
  else553_3:
  endif553:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else569_1
    DATA8 layer571
	DATA8 no571
	DATA8 mode8571
	
	MOVEF_8 VGV_LINE no571
	SUB8 no571 1 no571
	DIV8 no571 4 layer571
	MATH MOD8 no571 4 no571

	MOVEF_8 2.0 mode8571
	
	INPUT_DEVICE READY_RAW layer571 no571 0 mode8571 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB572 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB572:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB573 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB573:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB574 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB574:
  while575:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_EQF F.0 4.0 endwhile575
  whilebody575:
    MOVEF_F 30.0 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB577 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB577:
    CALL SENSOR.READRAWVALUE VGV_LINE 0.0 F.0
    JR_NEQF F.0 4.0 whilebody575
  endwhile575:
    MOVEF_F 250.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB579 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB579:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB580 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB580:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB581 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB581:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB582 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB582:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB584:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer585
	DATA8 nos585
	DATA8 busy585
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer585 nos585
	JR_EQ8 0 nos585 motornotbusy585
  motorwaiting585:
	OUTPUT_TEST layer585 nos585 busy585
	JR_EQ8 busy585 0 motornotbusy585
	SLEEP
	JR motorwaiting585
  motornotbusy585:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 65.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB586 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB586:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 65.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB587 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB587:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB588 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB588:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer589
	DATA8 nos589
	DATA8 busy589
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer589 nos589
	JR_EQ8 0 nos589 motornotbusy589
  motorwaiting589:
	OUTPUT_TEST layer589 nos589 busy589
	JR_EQ8 busy589 0 motornotbusy589
	SLEEP
	JR motorwaiting589
  motornotbusy589:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 40.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB590 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB590:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 40.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB591 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB591:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB592 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB592:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB593 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB593:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 185.0 'True'

	DATA8 layer597
	DATA8 nos597
	DATA8 busy597
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer597 nos597
	JR_EQ8 0 nos597 motornotbusy597
  motorwaiting597:
	OUTPUT_TEST layer597 nos597 busy597
	JR_EQ8 busy597 0 motornotbusy597
	SLEEP
	JR motorwaiting597
  motornotbusy597:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB598 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB598:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB599 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB599:
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB600:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB601 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB601:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB602 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB602:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 200.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB603:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB604 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB604:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 210.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB605 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB605:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB606 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB606:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB607 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB607:
    MOVEF_F 100.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB608 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB608:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB609 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB609:
  else569_1:
  endif569:
    CALL EQ_STRING VGV_WHITE_OBJECT 'chem' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else610_1
    DATA8 layer612
	DATA8 no612
	DATA8 mode8612
	
	MOVEF_8 VGV_LINE no612
	SUB8 no612 1 no612
	DIV8 no612 4 layer612
	MATH MOD8 no612 4 no612

	MOVEF_8 0.0 mode8612
	
	INPUT_DEVICE READY_RAW layer612 no612 0 mode8612 0
    MOVEF_F 100.0 VGV_MINUS_DEG
    CALL EQ_STRING VGV_WHITE_OBJECT 'fire' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else613_1
    ADDF VGV_MINUS_DEG 200.0 VGV_MINUS_DEG
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB616 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB616:
  else613_1:
  endif613:
    SUBF 420.0 VGV_MINUS_DEG VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB618 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB618:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB619:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB620 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB620:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB621 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB621:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB622 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB622:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB623 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB623:
    STRINGS DUPLICATE 'False' VGV_CH
    DATA8 layer624
	DATA8 no624
	DATA8 mode8624
	
	MOVEF_8 VGV_RIGHT_SENSOR no624
	SUB8 no624 1 no624
	DIV8 no624 4 layer624
	MATH MOD8 no624 4 no624

	MOVEF_8 4.0 mode8624
	
	INPUT_DEVICE READY_RAW layer624 no624 0 mode8624 0
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB625 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB625:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    JR_LTEQF VGV_W 40.0 else627_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif627
  else627_1:
    DATA8 layer628
	DATA8 no628
	DATA8 mode8628
	
	MOVEF_8 VGV_RIGHT_SENSOR no628
	SUB8 no628 1 no628
	DIV8 no628 4 layer628
	MATH MOD8 no628 4 no628

	MOVEF_8 0.0 mode8628
	
	INPUT_DEVICE READY_RAW layer628 no628 0 mode8628 0
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 25.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB630 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB630:
    MOVEF_F 500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB631 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB631:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 F.0
    JR_NEQF F.0 12.0 else632_1
    STRINGS DUPLICATE 'True' VGV_CH
    JR endif632
  else632_1:
    DATA8 layer634
	DATA8 no634
	DATA8 mode8634
	
	MOVEF_8 VGV_RIGHT_SENSOR no634
	SUB8 no634 1 no634
	DIV8 no634 4 layer634
	MATH MOD8 no634 4 no634

	MOVEF_8 4.0 mode8634
	
	INPUT_DEVICE READY_RAW layer634 no634 0 mode8634 0
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB635:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    JR_LTEQF VGV_W 40.0 else637_1
    STRINGS DUPLICATE 'True' VGV_CH
  else637_1:
  endif637:
  else632_2:
  endif632:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 25.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB638 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB638:
  else627_2:
  endif627:
    CALL EQ_STRING VGV_CH 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else639_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB641 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB641:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB642 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB642:
    MOVEF_F 30.0 VLV_DEG_12
    MOVEF_F -30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB643:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 80.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB644:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB645 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB645:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB646 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB646:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 100.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB647 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB647:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer648
	DATA8 nos648
	DATA8 busy648
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer648 nos648
	JR_EQ8 0 nos648 motornotbusy648
  motorwaiting648:
	OUTPUT_TEST layer648 nos648 busy648
	JR_EQ8 busy648 0 motornotbusy648
	SLEEP
	JR motorwaiting648
  motornotbusy648:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB649 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB649:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB650 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB650:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB651 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB651:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer652
	DATA8 nos652
	DATA8 busy652
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer652 nos652
	JR_EQ8 0 nos652 motornotbusy652
  motorwaiting652:
	OUTPUT_TEST layer652 nos652 busy652
	JR_EQ8 busy652 0 motornotbusy652
	SLEEP
	JR motorwaiting652
  motornotbusy652:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB653 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB653:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 35.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB654 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB654:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 35.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB655 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB655:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB656 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB656:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB657 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB657:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 90.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB659:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB660 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB660:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB661 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB661:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 490.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB662 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB662:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB663 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB663:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 120.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB664 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB664:
    JR endif639
  else639_1:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 230.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB666 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB666:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer667
	DATA8 nos667
	DATA8 busy667
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer667 nos667
	JR_EQ8 0 nos667 motornotbusy667
  motorwaiting667:
	OUTPUT_TEST layer667 nos667 busy667
	JR_EQ8 busy667 0 motornotbusy667
	SLEEP
	JR motorwaiting667
  motornotbusy667:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB668 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB668:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 60.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB669 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB669:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 60.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB670 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB670:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB671 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB671:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 70.0 VLV_DEG_13
    MOVEF_F 25.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB672 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB672:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer673
	DATA8 nos673
	DATA8 busy673
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer673 nos673
	JR_EQ8 0 nos673 motornotbusy673
  motorwaiting673:
	OUTPUT_TEST layer673 nos673 busy673
	JR_EQ8 busy673 0 motornotbusy673
	SLEEP
	JR motorwaiting673
  motornotbusy673:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MULF VGV_LEFT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 230.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB675 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB675:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 80.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB676 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB676:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 110.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB677 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB677:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 170.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB678 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB678:
  else639_2:
  endif639:
    JR endif610
  else610_1:
    CALL EQ_STRING VGV_TAKE_CHEM_IN_YELLOW 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else610_2
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 55.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB680 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB680:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 55.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB681 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB681:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB682 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB682:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB683 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB683:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 140.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB684 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB684:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB685 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB685:
  else610_2:
  endif610:
    MOVEF_F 200.0 VLV_DEG_12
    MOVEF_F 30.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB686 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB686:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB687 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB687:
  while688:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 600.0 endwhile688
  whilebody688:
    MOVEF_F 480.0 VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB691 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB691:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 600.0 whilebody688
  endwhile688:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB694 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB694:
    JR endif506
  else506_1:
    CALL EQ_STRING VGV_IS_ON_SECOND_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else695_1
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB697 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB697:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB698 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB698:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_A
    MOVEF_F 510.0 VGV_DEG
    CALL EQ_STRING VGV_IS_FIRST_BLUE_OBJECT_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else700_1
    SUBF VGV_DEG 290.0 VGV_DEG
  else700_1:
  endif700:
  while703:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 200.0 F.1
    JR_GTEQF F.0 F.1 endwhile703
  whilebody703:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB707:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    SUBF VGV_DEG 200.0 F.1
    JR_LTF F.0 F.1 whilebody703
  endwhile703:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB711 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB711:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB712 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB712:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB713 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB713:
  else695_1:
  endif695:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB714 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB714:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB715:
    DATA8 layer716
	DATA8 no716
	DATA8 mode8716
	
	MOVEF_8 VGV_LINE no716
	SUB8 no716 1 no716
	DIV8 no716 4 layer716
	MATH MOD8 no716 4 no716

	MOVEF_8 0.0 mode8716
	
	INPUT_DEVICE READY_RAW layer716 no716 0 mode8716 0
  while717:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 330.0 endwhile717
  whilebody717:
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB720:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 330.0 whilebody717
  endwhile717:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB723 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB723:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while724:
    JR_LTEQF VGV_P 20.0 endwhile724
  whilebody724:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB725 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB725:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F VGV_A VLV_A_8
    WRITE32 ENDSUB_F_ULTRA_LINE_1:CALLSUB726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRA_LINE_1
CALLSUB726:
    JR_GTF VGV_P 20.0 whilebody724
  endwhile724:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB727:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_13
    MOVEF_F 200.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'Fales' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB728:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB731 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB731:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while732:
    JR_GTEQF VGV_P 20.0 endwhile732
  whilebody732:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB733 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB733:
    MOVEF_F VLV_PERCENT_5 VGV_P
    JR_LTF VGV_P 20.0 whilebody732
  endwhile732:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer735
	DATA8 nos735
	DATA8 busy735
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer735 nos735
	JR_EQ8 0 nos735 motornotbusy735
  motorwaiting735:
	OUTPUT_TEST layer735 nos735 busy735
	JR_EQ8 busy735 0 motornotbusy735
	SLEEP
	JR motorwaiting735
  motornotbusy735:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB736 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB736:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB737 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB737:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB738 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB738:
  while739:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_GTEQF F.0 200.0 endwhile739
  whilebody739:
    MOVEF_F -100.0 VLV_L_7
    WRITE32 ENDSUB_F_LINE_SLOW_1:CALLSUB742 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_SLOW_1
CALLSUB742:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    JR_LTF F.0 200.0 whilebody739
  endwhile739:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB745 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB745:
    MOVEF_F VLV_PERCENT_5 VGV_P
  while746:
    JR_LTEQF VGV_P 10.0 endwhile746
  whilebody746:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB747 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB747:
    MOVEF_F VLV_PERCENT_5 VGV_P
    MOVEF_F -100.0 VLV_L_7
    WRITE32 ENDSUB_F_LINE_SLOW_1:CALLSUB748 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_SLOW_1
CALLSUB748:
    JR_GTF VGV_P 10.0 whilebody746
  endwhile746:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB749 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB749:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 390.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB750 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB750:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 42.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB751 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB751:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 42.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB752 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB752:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB753 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB753:
  else506_2:
  endif506:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer754
	DATA8 nos754
	DATA8 busy754
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer754 nos754
	JR_EQ8 0 nos754 motornotbusy754
  motorwaiting754:
	OUTPUT_TEST layer754 nos754 busy754
	JR_EQ8 busy754 0 motornotbusy754
	SLEEP
	JR motorwaiting754
  motornotbusy754:
    CALL EQ_STRING VGV_START 'left' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else755_1
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_23
    WRITE32 ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:CALLSUB757 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FROM_PROTECTED_TO_FINISH_1
CALLSUB757:
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_24
    WRITE32 ENDSUB_F_TAKE_CUBES_1:CALLSUB758 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_1
CALLSUB758:
    STRINGS DUPLICATE VGV_BROWN_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_RED_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB759:
    STRINGS DUPLICATE VGV_WHITE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_YELLOW_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB760:
    STRINGS DUPLICATE VGV_BLUE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_GREEN_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'False' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB761 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB761:
    STRINGS DUPLICATE 'False' VLV_IS_INVERTED_25
    WRITE32 ENDSUB_F_FINISH_AFTER_DELIVERIES_1:CALLSUB762 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_DELIVERIES_1
CALLSUB762:
    JR endif755
  else755_1:
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_23
    WRITE32 ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:CALLSUB763 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FROM_PROTECTED_TO_FINISH_1
CALLSUB763:
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_24
    WRITE32 ENDSUB_F_TAKE_CUBES_1:CALLSUB764 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_1
CALLSUB764:
    STRINGS DUPLICATE VGV_BLUE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_GREEN_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB765 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB765:
    STRINGS DUPLICATE VGV_WHITE_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_YELLOW_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'True' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB766 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB766:
    STRINGS DUPLICATE VGV_BROWN_MAN VLV_LONG_21
    STRINGS DUPLICATE VGV_RED_MAN VLV_NEAR_21
    STRINGS DUPLICATE 'False' VLV_SHOULD_MOVE_BACKWARD_21
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_21
    WRITE32 ENDSUB_F_DELIVER_GROUP_4:CALLSUB767 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_GROUP_4
CALLSUB767:
    STRINGS DUPLICATE 'True' VLV_IS_INVERTED_25
    WRITE32 ENDSUB_F_FINISH_AFTER_DELIVERIES_1:CALLSUB768 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FINISH_AFTER_DELIVERIES_1
CALLSUB768:
  else755_2:
  endif755:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 20.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB769 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB769:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB770 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB770:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB771 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB771:
    STRINGS DUPLICATE 'True' VLV_TO_DELAY_26
    WRITE32 ENDSUB_F_SHOW_TIME_1:CALLSUB772 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SHOW_TIME_1
CALLSUB772:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
SUB_F_MOVEMENT_INIT_1:
    MULF VLV_POWER_1 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
	OUTPUT_START 0 1
    MULF VLV_POWER_1 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
	OUTPUT_START 0 2
RETSUB_F_MOVEMENT_INIT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVEMENT_INIT_1:
SUB_F_DELAY_1:
    DATA32 milliseconds777
	MOVEF_32 VLV_TIME_2 milliseconds777
	DATA32 timer777
	TIMER_WAIT milliseconds777 timer777
	TIMER_READY timer777
RETSUB_F_DELAY_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_1:
SUB_F_RESET_0:
    OUTPUT_CLR_COUNT 0 1
    OUTPUT_CLR_COUNT 0 2
RETSUB_F_RESET_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_0:
SUB_F_STOP_0:
    OUTPUT_POWER 0 3 0
	OUTPUT_STOP 0 3 1
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_READ_PERCENT_1:
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf784
    DATA8 flag784
    DIVF F.1 F.2 tmpf784
    CP_EQF 0.0 F.2 flag784
    SELECTF flag784 0.0 tmpf784 F.0

    MULF F.0 100.0 VLV_PERCENT_5
RETSUB_F_READ_PERCENT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_READ_PERCENT_1:
SUB_F_LINE_1:
    JR_NEQF VLV_L_6 -100.0 else786_1
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf790
    DATA8 flag790
    DIVF F.1 F.2 tmpf790
    CP_EQF 0.0 F.2 flag790
    SELECTF flag790 0.0 tmpf790 F.0

    MULF F.0 150.0 VLV_L_6
  else786_1:
  endif786:
    SUBF VLV_L_6 50.0 VLV_ERR_6
    SUBF VLV_ERR_6 VGV_LAST_ERR VLV_DIFF_6
    MULF VLV_ERR_6 1.0 F.0
    MULF VLV_DIFF_6 7.0 F.1
    ADDF F.0 F.1 VLV_DELTA_6
    SUBF 80.0 VLV_DELTA_6 VLV_LEFT_POWER_6
    ADDF 80.0 VLV_DELTA_6 VLV_RIGHT_POWER_6
    MULF VLV_LEFT_POWER_6 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_6 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_6 VGV_LAST_ERR
    DATA32 milliseconds803
	MOVEF_32 5.0 milliseconds803
	DATA32 timer803
	TIMER_WAIT milliseconds803 timer803
	TIMER_READY timer803
RETSUB_F_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_1:
SUB_F_LINE_SLOW_1:
    JR_NEQF VLV_L_7 -100.0 else804_1
    CALL SENSOR.READPERCENT VGV_LINE F.2
    SUBF F.2 VGV_LEFT_MIN F.1
    SUBF VGV_LEFT_MAX VGV_LEFT_MIN F.2
    DATAF tmpf808
    DATA8 flag808
    DIVF F.1 F.2 tmpf808
    CP_EQF 0.0 F.2 flag808
    SELECTF flag808 0.0 tmpf808 F.0

    MULF F.0 150.0 VLV_L_7
  else804_1:
  endif804:
    SUBF VLV_L_7 50.0 VLV_ERR_7
    SUBF VLV_ERR_7 VGV_LAST_ERR VLV_DIFF_7
    MULF VLV_ERR_7 0.5 F.0
    MULF VLV_DIFF_7 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_7
    SUBF 30.0 VLV_DELTA_7 VLV_LEFT_POWER_7
    ADDF 30.0 VLV_DELTA_7 VLV_RIGHT_POWER_7
    MULF VLV_LEFT_POWER_7 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_7 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_7 VGV_LAST_ERR
    DATA32 milliseconds821
	MOVEF_32 5.0 milliseconds821
	DATA32 timer821
	TIMER_WAIT milliseconds821 timer821
	TIMER_READY timer821
RETSUB_F_LINE_SLOW_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_SLOW_1:
SUB_F_ULTRA_LINE_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VLV_L_8
    SUBF VLV_L_8 VLV_A_8 VLV_ERR_8
    SUBF VLV_ERR_8 VGV_LAST_ERR VLV_DIFF_8
    MULF VLV_ERR_8 0.8 F.0
    MULF VLV_DIFF_8 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_8
    SUBF 40.0 VLV_DELTA_8 VLV_LEFT_POWER_8
    ADDF 40.0 VLV_DELTA_8 VLV_RIGHT_POWER_8
    MULF VLV_LEFT_POWER_8 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_8 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_8 VGV_LAST_ERR
RETSUB_F_ULTRA_LINE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRA_LINE_1:
SUB_F_SPEEDUP_4:
    MOVEF_F 15.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB834 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB834:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB835:
    MOVEF_F 0.0 VLV_L_10
  while836:
    JR_GTEQF VLV_L_10 VLV_DEG_10 endwhile836
  whilebody836:
    DATAF tmpf837
    DATA8 flag837
    DIVF VLV_L_10 VLV_DEG_10 tmpf837
    CP_EQF 0.0 VLV_DEG_10 flag837
    SELECTF flag837 0.0 tmpf837 VLV_P_10

    SUBF VLV_BASE_POWER_10 VLV_MIN_POWER_10 F.1
    MULF F.1 VLV_P_10 F.0
    ADDF F.0 VLV_MIN_POWER_10 VLV_POWER_10
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_10 VLV_L_10
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_10 VLV_R_10
    SUBF VLV_L_10 VLV_R_10 F.0
    MULF F.0 VLV_P_10 VLV_DELTA_10
    SUBF VLV_POWER_10 VLV_DELTA_10 VLV_LEFT_POWER_10
    ADDF VLV_POWER_10 VLV_DELTA_10 VLV_RIGHT_POWER_10
    MULF VLV_LEFT_POWER_10 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_10 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_10 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_10 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    JR_LTF VLV_L_10 VLV_DEG_10 whilebody836
  endwhile836:
RETSUB_F_SPEEDUP_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SPEEDUP_4:
SUB_F_SYNC_1:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_11
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.0
    MULF F.0 VGV_RIGHT_FORWARD VLV_R_11
    SUBF VLV_L_11 VLV_R_11 VLV_ERR_11
    SUBF VLV_ERR_11 VGV_LAST_ERR VLV_DIFF_11
    MULF VLV_ERR_11 1.0 F.0
    MULF VLV_DIFF_11 0.0 F.1
    ADDF F.0 F.1 VLV_DELTA_11
    SUBF VLV_POWER_11 VLV_DELTA_11 VLV_LEFT_POWER_11
    ADDF VLV_POWER_11 VLV_DELTA_11 VLV_RIGHT_POWER_11
    MULF VLV_LEFT_POWER_11 VGV_LEFT_FORWARD F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_11 VGV_RIGHT_FORWARD F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    MOVEF_F VLV_ERR_11 VGV_LAST_ERR
RETSUB_F_SYNC_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SYNC_1:
SUB_F_FORWARD_DEG_2:
    MOVEF_F VLV_POWER_12 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB872 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB872:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB873 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB873:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_12
  while876:
    MATH ABS VLV_L_12 F.0
    MATH ABS VLV_DEG_12 F.1
    JR_GTEQF F.0 F.1 endwhile876
  whilebody876:
    MOVEF_F VLV_POWER_12 VLV_POWER_11
    WRITE32 ENDSUB_F_SYNC_1:CALLSUB879 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SYNC_1
CALLSUB879:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.0
    MULF F.0 VGV_LEFT_FORWARD VLV_L_12
    MATH ABS VLV_L_12 F.0
    MATH ABS VLV_DEG_12 F.1
    JR_LTF F.0 F.1 whilebody876
  endwhile876:
RETSUB_F_FORWARD_DEG_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FORWARD_DEG_2:
SUB_F_MOVE_MOTOR_7:
    MOVEF_F VLV_DEG_13 VLV_NORMAL_DEG_13
    MOVEF_F 0.0 VLV_ACCELERATION_DEG_13
    MOVEF_F 0.0 VLV_ZAME_DEG_13
    CALL EQ_STRING VLV_ACCELERATION_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else884_1
    DATAF tmpf886
    DATA8 flag886
    DIVF VLV_DEG_13 2.0 tmpf886
    CP_EQF 0.0 2.0 flag886
    SELECTF flag886 0.0 tmpf886 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag888
	CP_LTF F.0 120.0 flag888
	SELECTF flag888 F.0 120.0 VLV_ACCELERATION_DEG_13
    SUBF VLV_NORMAL_DEG_13 VLV_ACCELERATION_DEG_13 VLV_NORMAL_DEG_13
  else884_1:
  endif884:
    CALL EQ_STRING VLV_ZAME_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else890_1
    DATAF tmpf892
    DATA8 flag892
    DIVF VLV_DEG_13 2.0 tmpf892
    CP_EQF 0.0 2.0 flag892
    SELECTF flag892 0.0 tmpf892 F.1

    MATH FLOOR F.1 F.0
    DATA8 flag894
	CP_LTF F.0 120.0 flag894
	SELECTF flag894 F.0 120.0 VLV_ZAME_DEG_13
    SUBF VLV_NORMAL_DEG_13 VLV_ZAME_DEG_13 VLV_NORMAL_DEG_13
  else890_1:
  endif890:
    CALL EQ_STRING VLV_ACCELERATION_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else896_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_13
    MOVEF_F 0.0 VLV_M_13
    MOVEF_F 10.0 VLV_MIN_POWER_13
    TIMER_READ timeMC1
  while900:
    JR_GTEQF VLV_M_13 VLV_ACCELERATION_DEG_13 endwhile900
  whilebody900:
    TIMER_READ timeMC1tmp
	SUB32 timeMC1tmp timeMC1 timeMC1tmp
	MOVE32_F timeMC1tmp F.0
    JR_LTEQF F.0 700.0 else901_1
    JR_GTEQF VLV_M_13 20.0 else901_1
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB903 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB903:
    ADDF VLV_MIN_POWER_13 5.0 VLV_MIN_POWER_13
    MOVEF_F VLV_ACCELERATION_DEG_13 VLV_ACCELERATION_DEG_13
    TIMER_READ timeMC1
  else901_1:
  endif901:
    DATAF tmpf906
    DATA8 flag906
    DIVF VLV_M_13 VLV_ACCELERATION_DEG_13 tmpf906
    CP_EQF 0.0 VLV_ACCELERATION_DEG_13 flag906
    SELECTF flag906 0.0 tmpf906 VLV_P_13

    SUBF VLV_MAX_POWER_13 VLV_MIN_POWER_13 F.1
    MULF F.1 VLV_P_13 F.0
    ADDF F.0 VLV_MIN_POWER_13 VLV_POWER_13
    MULF VLV_POWER_13 VLV_FORWARD_13 F.0
    CALL MOTOR.START VLV_MOTOR_13 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_13 F.0
    MULF F.0 VLV_FORWARD_13 VLV_M_13
    DATA32 milliseconds914
	MOVEF_32 10.0 milliseconds914
	DATA32 timer914
	TIMER_WAIT milliseconds914 timer914
	TIMER_READY timer914
    JR_LTF VLV_M_13 VLV_ACCELERATION_DEG_13 whilebody900
  endwhile900:
  else896_1:
  endif896:
    JR_LTEQF VLV_NORMAL_DEG_13 0.0 else915_1
    MULF VLV_MAX_POWER_13 VLV_FORWARD_13 F.0
    CALL MOTOR.SCHEDULE VLV_MOTOR_13 F.0 0.0 VLV_NORMAL_DEG_13 0.0 'False' 

	DATA8 layer917
	DATA8 nos917
	DATA8 busy917
	CALL MOTORDECODEPORTSDESCRIPTOR VLV_MOTOR_13 layer917 nos917
	JR_EQ8 0 nos917 motornotbusy917
  motorwaiting917:
	OUTPUT_TEST layer917 nos917 busy917
	JR_EQ8 busy917 0 motornotbusy917
	SLEEP
	JR motorwaiting917
  motornotbusy917:
  else915_1:
  endif915:
    CALL EQ_STRING VLV_ZAME_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else918_1
    CALL MOTOR.RESETCOUNT VLV_MOTOR_13
    MOVEF_F 0.0 VLV_M_13
  while921:
    JR_GTEQF VLV_M_13 VLV_ZAME_DEG_13 endwhile921
  whilebody921:
    DATAF tmpf922
    DATA8 flag922
    DIVF VLV_M_13 VLV_ZAME_DEG_13 tmpf922
    CP_EQF 0.0 VLV_ZAME_DEG_13 flag922
    SELECTF flag922 0.0 tmpf922 F.0

    SUBF 1.0 F.0 VLV_P_13
    SUBF VLV_MAX_POWER_13 10.0 F.1
    MULF F.1 VLV_P_13 F.0
    ADDF F.0 10.0 VLV_POWER_13
    MULF VLV_POWER_13 VLV_FORWARD_13 F.0
    CALL MOTOR.START VLV_MOTOR_13 F.0
    CALL MOTOR.GETCOUNT VLV_MOTOR_13 F.0
    MULF F.0 VLV_FORWARD_13 VLV_M_13
    DATA32 milliseconds931
	MOVEF_32 10.0 milliseconds931
	DATA32 timer931
	TIMER_WAIT milliseconds931 timer931
	TIMER_READY timer931
    JR_LTF VLV_M_13 VLV_ZAME_DEG_13 whilebody921
  endwhile921:
  else918_1:
  endif918:
    CALL EQ_STRING VLV_TO_STOP_13 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else932_1
    CALL MOTOR.STOP VLV_MOTOR_13 'True'
  else932_1:
  endif932:
RETSUB_F_MOVE_MOTOR_7:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_MOTOR_7:
SUB_F_ZAME_4:
    MOVEF_F VLV_BASE_POWER_14 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB935 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB935:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB936 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB936:
    MOVEF_F 0.0 VLV_L_14
  while937:
    JR_GTEQF VLV_L_14 VLV_DEG_14 endwhile937
  whilebody937:
    DATAF tmpf938
    DATA8 flag938
    DIVF VLV_L_14 VLV_DEG_14 tmpf938
    CP_EQF 0.0 VLV_DEG_14 flag938
    SELECTF flag938 0.0 tmpf938 VLV_P_14

    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    MULF F.0 VLV_COEF_14 VLV_L_14
    OUTPUT_GET_COUNT 0 1 getTachoB
	MOVE32_F getTachoB F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    MULF F.0 VLV_COEF_14 VLV_R_14
    SUBF VLV_L_14 VLV_R_14 F.0
    SUBF 1.0 VLV_P_14 F.1
    MULF F.0 F.1 VLV_DELTA_14
    SUBF VLV_BASE_POWER_14 VLV_MIN_POWER_14 F.1
    SUBF 1.0 VLV_P_14 F.2
    MULF F.1 F.2 F.0
    ADDF F.0 VLV_MIN_POWER_14 VLV_POWER_14
    SUBF VLV_POWER_14 VLV_DELTA_14 VLV_LEFT_POWER_14
    ADDF VLV_POWER_14 VLV_DELTA_14 VLV_RIGHT_POWER_14
    MULF VLV_LEFT_POWER_14 VGV_LEFT_FORWARD F.1
    MULF F.1 VLV_COEF_14 F.0
    MOVEF_8 F.0 setPowerA
	OUTPUT_POWER 0 1 setPowerA
    MULF VLV_RIGHT_POWER_14 VGV_RIGHT_FORWARD F.1
    MULF F.1 VLV_COEF_14 F.0
    MOVEF_8 F.0 setPowerB
	OUTPUT_POWER 0 2 setPowerB
    DATA32 milliseconds960
	MOVEF_32 10.0 milliseconds960
	DATA32 timer960
	TIMER_WAIT milliseconds960 timer960
	TIMER_READY timer960
    JR_LTF VLV_L_14 VLV_DEG_14 whilebody937
  endwhile937:
RETSUB_F_ZAME_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ZAME_4:
SUB_F_TAKE_CHEM_ON_LEFT_1:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 80.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB961 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB961:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 80.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB962 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB962:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB963:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 170.0 0.0 'True' 

	DATA8 layer964
	DATA8 nos964
	DATA8 busy964
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer964 nos964
	JR_EQ8 0 nos964 motornotbusy964
  motorwaiting964:
	OUTPUT_TEST layer964 nos964 busy964
	JR_EQ8 busy964 0 motornotbusy964
	SLEEP
	JR motorwaiting964
  motornotbusy964:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_13
    MOVEF_F 130.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB965 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB965:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 110.0 0.0 'True' 

	DATA8 layer966
	DATA8 nos966
	DATA8 busy966
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer966 nos966
	JR_EQ8 0 nos966 motornotbusy966
  motorwaiting966:
	OUTPUT_TEST layer966 nos966 busy966
	JR_EQ8 busy966 0 motornotbusy966
	SLEEP
	JR motorwaiting966
  motornotbusy966:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR_13
    MULF VGV_RIGHT_FORWARD -1.0 VLV_FORWARD_13
    MOVEF_F 125.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB968 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB968:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB969 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB969:
    CALL EQ_STRING VLV_FINISH_FORWARD_15 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else970_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 160.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB972 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB972:
    JR endif970
  else970_1:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 30.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB973 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB973:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 30.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB974 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB974:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB975 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB975:
  else970_2:
  endif970:
RETSUB_F_TAKE_CHEM_ON_LEFT_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_1:
SUB_F_OPEN_CUBES_1:
    MULF 50.0 VLV_COEF_16 F.0
    CALL MOTOR.START VGV_WATER_MOTOR F.0
    DATA32 milliseconds978
	MOVEF_32 500.0 milliseconds978
	DATA32 timer978
	TIMER_WAIT milliseconds978 timer978
	TIMER_READY timer978
    CALL MOTOR.STOP VGV_WATER_MOTOR 'True'
RETSUB_F_OPEN_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_1:
SUB_F_CLOSE_CUBES_1:
    MULF -30.0 VLV_COEF_17 F.0
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR F.0 0.0 90.0 0.0 'True' 

	DATA8 layer981
	DATA8 nos981
	DATA8 busy981
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer981 nos981
	JR_EQ8 0 nos981 motornotbusy981
  motorwaiting981:
	OUTPUT_TEST layer981 nos981 busy981
	JR_EQ8 busy981 0 motornotbusy981
	SLEEP
	JR motorwaiting981
  motornotbusy981:
RETSUB_F_CLOSE_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_1:
SUB_F_DELIVER_LONG_1:
    CALL EQ_STRING VLV_IS_INVERTED_18 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else982_1
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOT_18
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD_18
    MOVEF_F 1.0 VLV_COEF_18
    JR endif982
  else982_1:
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOT_18
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD_18
    MOVEF_F -1.0 VLV_COEF_18
  else982_2:
  endif982:
    JR_NEQF VGV_CUBES_COUNT 2.0 else984_1
    MOVEF_F VLV_COEF_18 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB985 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB985:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD_18 VLV_FORWARD_13
    MOVEF_F 270.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB986 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB986:
    MOVEF_F 200.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB987 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB987:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MULF VLV_FORWARD_18 -1.0 VLV_FORWARD_13
    MOVEF_F 120.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB989 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB989:
    MOVEF_F VLV_COEF_18 VLV_COEF_17
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB990 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB990:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MULF VLV_FORWARD_18 -1.0 VLV_FORWARD_13
    MOVEF_F 145.0 VLV_DEG_13
    MOVEF_F 20.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB992 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB992:
    MOVEF_F 1.0 VGV_CUBES_COUNT
    JR endif984
  else984_1:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 30.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB993 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB993:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB994 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB994:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD_18 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB995 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB995:
    MOVEF_F 30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB996 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB996:
    MOVEF_F 300.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB997 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB997:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB998 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB998:
    MOVEF_F VLV_COEF_18 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB999 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB999:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 45.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1000 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1000:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 45.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB1001 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB1001:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1002 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1002:
    STRINGS DUPLICATE VLV_MOT_18 VLV_MOTOR_13
    MULF VLV_FORWARD_18 -1.0 VLV_FORWARD_13
    MOVEF_F 360.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1004 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1004:
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 30.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1005 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1005:
    MOVEF_F 0.0 VGV_CUBES_COUNT
  else984_2:
  endif984:
RETSUB_F_DELIVER_LONG_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_LONG_1:
SUB_F_DELIVER_NEAR_2:
    CALL EQ_STRING VLV_IS_INVERTED_19 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1006_1
    MOVEF_F 1.0 VLV_COEF_19
    JR endif1006
  else1006_1:
    MOVEF_F -1.0 VLV_COEF_19
  else1006_2:
  endif1006:
    MOVEF_F 0.0 VLV_MINUS_DEG_19
    MOVEF_F VLV_COEF_19 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB1008 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB1008:
    JR_NEQF VGV_CUBES_COUNT 2.0 else1009_1
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 30.0 VLV_MIN_POWER_10
    MOVEF_F 45.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1010 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1010:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1011 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1011:
    MOVEF_F VLV_COEF_19 VLV_COEF_17
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB1012 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB1012:
    MOVEF_F 1.0 VGV_CUBES_COUNT
    MOVEF_F 45.0 VLV_MINUS_DEG_19
  else1009_1:
  endif1009:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1013 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1013:
    SUBF VGV_CUBES_COUNT 1.0 VGV_CUBES_COUNT
RETSUB_F_DELIVER_NEAR_2:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_NEAR_2:
SUB_F_MOVE_TO_NEXT_ZONE_1:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1015 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1015:
    SUBF 205.0 VLV_MINUS_DEG_20 VLV_DEG_20
    MOVEF_F 20.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F VLV_DEG_20 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1017 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1017:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1018 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1018:
RETSUB_F_MOVE_TO_NEXT_ZONE_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_TO_NEXT_ZONE_1:
SUB_F_DELIVER_GROUP_4:
    MOVEF_F 0.0 VLV_MINUS_DEG_21
    CALL EQ_STRING VLV_LONG_21 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1019_1
    STRINGS DUPLICATE VLV_IS_INVERTED_21 VLV_IS_INVERTED_18
    WRITE32 ENDSUB_F_DELIVER_LONG_1:CALLSUB1021 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_LONG_1
CALLSUB1021:
  else1019_1:
  endif1019:
    CALL EQ_STRING VLV_NEAR_21 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1022_1
    STRINGS DUPLICATE VLV_IS_INVERTED_21 VLV_IS_INVERTED_19
    WRITE32 ENDSUB_F_DELIVER_NEAR_2:CALLSUB1024 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELIVER_NEAR_2
CALLSUB1024:
    MOVEF_F VLV_MINUS_DEG_19 VLV_MINUS_DEG_21
  else1022_1:
  endif1022:
    CALL EQ_STRING VLV_SHOULD_MOVE_BACKWARD_21 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1025_1
    MOVEF_F VLV_MINUS_DEG_21 VLV_MINUS_DEG_20
    WRITE32 ENDSUB_F_MOVE_TO_NEXT_ZONE_1:CALLSUB1027 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_TO_NEXT_ZONE_1
CALLSUB1027:
  else1025_1:
  endif1025:
RETSUB_F_DELIVER_GROUP_4:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELIVER_GROUP_4:
SUB_F_GET_MOTORS_6:
    CALL EQ_STRING VLV_IS_INVERTED_22 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1028_1
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR1_22
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR2_22
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD1_22
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD2_22
    MOVEF_F 1.0 VLV_COEF_22
    JR endif1028
  else1028_1:
    STRINGS DUPLICATE VGV_RIGHT_MOTOR VLV_MOTOR1_22
    STRINGS DUPLICATE VGV_LEFT_MOTOR VLV_MOTOR2_22
    MOVEF_F VGV_RIGHT_FORWARD VLV_FORWARD1_22
    MOVEF_F VGV_LEFT_FORWARD VLV_FORWARD2_22
    MOVEF_F -1.0 VLV_COEF_22
  else1028_2:
  endif1028:
RETSUB_F_GET_MOTORS_6:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GET_MOTORS_6:
SUB_F_FROM_PROTECTED_TO_FINISH_1:
    STRINGS DUPLICATE VLV_IS_INVERTED_23 VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB1030 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB1030:
    STRINGS DUPLICATE VLV_MOTOR1_22 VLV_MOTOR1_23
    STRINGS DUPLICATE VLV_MOTOR2_22 VLV_MOTOR2_23
    MOVEF_F VLV_FORWARD1_22 VLV_FORWARD1_23
    MOVEF_F VLV_FORWARD2_22 VLV_FORWARD2_23
    MOVEF_F VLV_COEF_22 VLV_COEF_23
    MOVEF_F 50.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 300.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1031 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1031:
    CALL MOTOR.STOP VLV_MOTOR1_23 'True'
    STRINGS DUPLICATE VLV_MOTOR2_23 VLV_MOTOR_13
    MULF VLV_FORWARD2_23 -1.0 VLV_FORWARD_13
    MOVEF_F 330.0 VLV_DEG_13
    MOVEF_F 50.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'False' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1034 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1034:
    MOVEF_F -50.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1035 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1035:
    MOVEF_F 1700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1036 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1036:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1037 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1037:
    DATA32 tmp1038
    CALL GETANDINC32 RUNCOUNTER_F_PREPARE_GRABBER_0 1  RUNCOUNTER_F_PREPARE_GRABBER_0 tmp1038
    JR_NEQ32 0 tmp1038 alreadylaunched1038
    OBJECT_START TF_PREPARE_GRABBER_0
  alreadylaunched1038:
    MULF VLV_FORWARD2_23 30.0 F.0
    CALL MOTOR.START VLV_MOTOR2_23 F.0
    MOVEF_F 1500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1041 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1041:
    CALL MOTOR.STOP VLV_MOTOR2_23 'True'
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1043 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1043:
    MULF 40.0 VLV_FORWARD1_23 F.0
    CALL MOTOR.START VLV_MOTOR1_23 F.0
    MULF 50.0 VLV_FORWARD2_23 F.0
    CALL MOTOR.START VLV_MOTOR2_23 F.0
  while1048:
    CALL MOTOR.GETCOUNT VLV_MOTOR1_23 F.1
    MULF F.1 VLV_FORWARD1_23 F.0
    JR_GTEQF F.0 1000.0 endwhile1048
  whilebody1048:
    CALL MOTOR.GETCOUNT VLV_MOTOR1_23 F.1
    MULF F.1 VLV_FORWARD1_23 F.0
    JR_LTF F.0 1000.0 whilebody1048
  endwhile1048:
    MULF 40.0 VLV_FORWARD1_23 F.0
    CALL MOTOR.START VLV_MOTOR1_23 F.0
    MULF 60.0 VLV_FORWARD2_23 F.0
    CALL MOTOR.START VLV_MOTOR2_23 F.0
    DATA32 milliseconds1057
	MOVEF_32 1200.0 milliseconds1057
	DATA32 timer1057
	TIMER_WAIT milliseconds1057 timer1057
	TIMER_READY timer1057
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1058 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1058:
RETSUB_F_FROM_PROTECTED_TO_FINISH_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FROM_PROTECTED_TO_FINISH_1:
SUB_F_TAKE_CUBES_1:
    DATA8 layer1059
	DATA8 no1059
	DATA8 mode81059
	
	MOVEF_8 VGV_LINE no1059
	SUB8 no1059 1 no1059
	DIV8 no1059 4 layer1059
	MATH MOD8 no1059 4 no1059

	MOVEF_8 0.0 mode81059
	
	INPUT_DEVICE READY_RAW layer1059 no1059 0 mode81059 0
    STRINGS DUPLICATE VLV_IS_INVERTED_24 VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB1060 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB1060:
    STRINGS DUPLICATE VLV_MOTOR1_22 VLV_MOTOR1_24
    STRINGS DUPLICATE VLV_MOTOR2_22 VLV_MOTOR2_24
    MOVEF_F VLV_FORWARD1_22 VLV_FORWARD1_24
    MOVEF_F VLV_FORWARD2_22 VLV_FORWARD2_24
    MOVEF_F VLV_COEF_22 VLV_COEF_24
    MOVEF_F VLV_COEF_24 VLV_COEF_16
    WRITE32 ENDSUB_F_OPEN_CUBES_1:CALLSUB1061 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_1
CALLSUB1061:
    MOVEF_F 30.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 75.0 VLV_DEG_10
    MOVEF_F -1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1062 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1062:
    MOVEF_F 30.0 VLV_BASE_POWER_14
    MOVEF_F 20.0 VLV_MIN_POWER_14
    MOVEF_F 75.0 VLV_DEG_14
    MOVEF_F -1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB1063 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB1063:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1064 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1064:
    STRINGS DUPLICATE VLV_MOTOR2_24 VLV_MOTOR_13
    MULF VLV_FORWARD2_24 -1.0 VLV_FORWARD_13
    MOVEF_F 180.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1066 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1066:
    STRINGS DUPLICATE VLV_MOTOR1_24 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD1_24 VLV_FORWARD_13
    MOVEF_F 40.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'False' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'False' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1067 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1067:
    MULF VLV_FORWARD2_24 -30.0 F.0
    CALL MOTOR.START VLV_MOTOR2_24 F.0
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1070 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1070:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1071 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1071:
    MULF VLV_FORWARD1_24 -40.0 F.0
    CALL MOTOR.START VLV_MOTOR1_24 F.0
    MOVEF_F 700.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1074 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1074:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1075 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1075:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1076 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1076:
    MOVEF_F 40.0 VLV_BASE_POWER_10
    MOVEF_F 20.0 VLV_MIN_POWER_10
    MOVEF_F 100.0 VLV_DEG_10
    MOVEF_F 1.0 VLV_COEF_10
    WRITE32 ENDSUB_F_SPEEDUP_4:CALLSUB1077 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_SPEEDUP_4
CALLSUB1077:
    MOVEF_F 800.0 VLV_DEG_12
    MOVEF_F 40.0 VLV_POWER_12
    WRITE32 ENDSUB_F_FORWARD_DEG_2:CALLSUB1078 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_FORWARD_DEG_2
CALLSUB1078:
    MOVEF_F 40.0 VLV_BASE_POWER_14
    MOVEF_F 30.0 VLV_MIN_POWER_14
    MOVEF_F 100.0 VLV_DEG_14
    MOVEF_F 1.0 VLV_COEF_14
    WRITE32 ENDSUB_F_ZAME_4:CALLSUB1079 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ZAME_4
CALLSUB1079:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1080 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1080:
    MOVEF_F VLV_COEF_24 VLV_COEF_17
    WRITE32 ENDSUB_F_CLOSE_CUBES_1:CALLSUB1081 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_1
CALLSUB1081:
    STRINGS DUPLICATE VLV_MOTOR2_24 VLV_MOTOR_13
    MULF VLV_FORWARD2_24 -1.0 VLV_FORWARD_13
    MOVEF_F 250.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1083 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1083:
    STRINGS DUPLICATE VLV_MOTOR1_24 VLV_MOTOR_13
    MULF VLV_FORWARD1_24 -1.0 VLV_FORWARD_13
    MOVEF_F 250.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1085 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1085:
    WRITE32 ENDSUB_F_RESET_0:CALLSUB1086 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_0
CALLSUB1086:
    MOVEF_F -30.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1087 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1087:
    CALL EQ_STRING VLV_IS_INVERTED_24 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1088_1
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB1090 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB1090:
    MOVEF_F VLV_PERCENT_5 VLV_P_24
  while1091:
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MATH ABS F.1 F.0
    JR_LTF F.0 20.0 or1092
    JR_LTEQF VLV_P_24 20.0 endwhile1091
  or1092:
  whilebody1091:
    WRITE32 ENDSUB_F_READ_PERCENT_1:CALLSUB1095 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_READ_PERCENT_1
CALLSUB1095:
    MOVEF_F VLV_PERCENT_5 VLV_P_24
    OUTPUT_GET_COUNT 0 0 getTachoA
	MOVE32_F getTachoA F.1
    MATH ABS F.1 F.0
    JR_LTF F.0 20.0 whilebody1091
    JR_GTF VLV_P_24 20.0 whilebody1091
  endwhile1091:
    JR endif1088
  else1088_1:
    DATA8 layer1098
	DATA8 no1098
	DATA8 mode81098
	
	MOVEF_8 VGV_LINE no1098
	SUB8 no1098 1 no1098
	DIV8 no1098 4 layer1098
	MATH MOD8 no1098 4 no1098

	MOVEF_8 4.0 mode81098
	
	INPUT_DEVICE READY_RAW layer1098 no1098 0 mode81098 0
    DATA8 layer1099
	DATA8 no1099	
	MOVEF_8 VGV_LINE no1099
	SUB8 no1099 1 no1099
	DIV8 no1099 4 layer1099
	MATH MOD8 no1099 4 no1099 
	INPUT_READY layer1099 no1099
    CALL SENSOR.READRAW VGV_LINE 3.0 VLV_RGB_24
  while1101:
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_RGB_24
    JR_LTEQF F.0 50.0 endwhile1101
  whilebody1101:
    CALL SENSOR.READRAW VGV_LINE 3.0 VLV_RGB_24
    CALL ARRAYGET_FLOAT 1.0 F.0 VLV_RGB_24
    JR_GTF F.0 50.0 whilebody1101
  endwhile1101:
    DATA8 layer1105
	DATA8 no1105
	DATA8 mode81105
	
	MOVEF_8 VGV_LINE no1105
	SUB8 no1105 1 no1105
	DIV8 no1105 4 layer1105
	MATH MOD8 no1105 4 no1105

	MOVEF_8 0.0 mode81105
	
	INPUT_DEVICE READY_RAW layer1105 no1105 0 mode81105 0
  else1088_2:
  endif1088:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1106:
RETSUB_F_TAKE_CUBES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_1:
SUB_F_FINISH_AFTER_DELIVERIES_1:
    STRINGS DUPLICATE VLV_IS_INVERTED_25 VLV_IS_INVERTED_22
    WRITE32 ENDSUB_F_GET_MOTORS_6:CALLSUB1107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GET_MOTORS_6
CALLSUB1107:
    STRINGS DUPLICATE VLV_MOTOR1_22 VLV_MOTOR1_25
    STRINGS DUPLICATE VLV_MOTOR2_22 VLV_MOTOR2_25
    MOVEF_F VLV_FORWARD1_22 VLV_FORWARD1_25
    MOVEF_F VLV_FORWARD2_22 VLV_FORWARD2_25
    MOVEF_F VLV_COEF_22 VLV_COEF_25
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1108 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1108:
    MOVEF_F 1500.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1109 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1109:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1110:
    STRINGS DUPLICATE VLV_MOTOR1_25 VLV_MOTOR_13
    MOVEF_F VLV_FORWARD1_25 VLV_FORWARD_13
    MOVEF_F 210.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1111:
    STRINGS DUPLICATE VLV_MOTOR2_25 VLV_MOTOR_13
    MULF VLV_FORWARD2_25 -1.0 VLV_FORWARD_13
    MOVEF_F 150.0 VLV_DEG_13
    MOVEF_F 30.0 VLV_MAX_POWER_13
    STRINGS DUPLICATE 'True' VLV_ACCELERATION_13
    STRINGS DUPLICATE 'True' VLV_ZAME_13
    STRINGS DUPLICATE 'True' VLV_TO_STOP_13
    WRITE32 ENDSUB_F_MOVE_MOTOR_7:CALLSUB1113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_MOTOR_7
CALLSUB1113:
    MOVEF_F -40.0 VLV_POWER_1
    WRITE32 ENDSUB_F_MOVEMENT_INIT_1:CALLSUB1114 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVEMENT_INIT_1
CALLSUB1114:
    MOVEF_F 2000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1115 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1115:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1116:
RETSUB_F_FINISH_AFTER_DELIVERIES_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_FINISH_AFTER_DELIVERIES_1:
SUB_F_SHOW_TIME_1:
    TIMER_READ timeMC9tmp
	SUB32 timeMC9tmp timeMC9 timeMC9tmp
	MOVE32_F timeMC9tmp VLV_MILLISECOND_26
    DATAF tmpf1118
    DATA8 flag1118
    DIVF VLV_MILLISECOND_26 1000.0 tmpf1118
    CP_EQF 0.0 1000.0 flag1118
    SELECTF flag1118 0.0 tmpf1118 F.0

    MATH FLOOR F.0 VLV_SECONDS_26
    DATAF tmpf1120
    DATA8 flag1120
    DIVF VLV_SECONDS_26 60.0 tmpf1120
    CP_EQF 0.0 60.0 flag1120
    SELECTF flag1120 0.0 tmpf1120 F.0

    MATH FLOOR F.0 VLV_MINUTES_26
    MATH MOD VLV_SECONDS_26 60.0 VLV_SECONDS_26
    STRINGS VALUE_FORMATTED VLV_MINUTES_26 '%g' 99 S.1
    CALL TEXT.APPEND S.1 ':' S.0
    STRINGS VALUE_FORMATTED VLV_SECONDS_26 '%g' 99 S.1
    CALL TEXT.APPEND S.0 S.1 VLV_TEXT_26
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 2.0 VLV_TEXT_26
    CALL EQ_STRING VLV_TO_DELAY_26 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1129_1
    MOVEF_F 100000.0 VLV_TIME_2
    WRITE32 ENDSUB_F_DELAY_1:CALLSUB1131 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_1
CALLSUB1131:
  else1129_1:
  endif1129:
RETSUB_F_SHOW_TIME_1:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_SHOW_TIME_1:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall NE_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 flag 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0 flag isnotequal
isequal:
	STRINGS DUPLICATE 'False' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'True' result
	RETURN
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall SENSOR.READRAW            // FFA
{
	IN_F port
	IN_F values
	IN_16 resultarray
	
	DATA8 layer
	DATA8 no
	DATA32 values32
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_32 values values32

	JR_LTEQ32 values32 0 arrayempty
	ARRAY RESIZE resultarray values32

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 i
	DATA32 rawtmp
	MOVE32_32 0 i
loop:
	DATA8 tmp8
	DATAF tmpf

	MOVEF_F 0.0 tmpf
	JR_GTEQ32 i 8 nomoredata

	MOVE32_8 i tmp8
	READ32 rawvalue0 tmp8 rawtmp
	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp tmpf

nomoredata:	
	ARRAY_WRITE resultarray i tmpf

	ADD32 i 1 i
	JR_LT32 i values32 loop
	RETURN

arrayempty:
	ARRAY RESIZE resultarray 0
}
subcall ARRAYGET_FLOAT     // FFF
{
	IN_F index
	OUT_F value
	IN_16 handle
	
	DATA32 index32
	DATA32 len
	MOVEF_32 index index32
	
	ARRAY SIZE handle len
	JR_LT32 index32 0 outofbounds
	JR_GTEQ32 index32 len outofbounds
	
	ARRAY_READ handle index32 value
	RETURN
outofbounds:
	MOVE8_F 0 value	
}
subcall ARRAYCREATE_FLOAT   // F
{
	OUT_16 handle
	
	ARRAY CREATEF 8 handle			// create with 8 elements
	ARRAY FILL handle 0.0
}
subcall GETANDINC32     // V
{
	IN_32 counterin
	IN_32 inc
	OUT_32 counterout
	OUT_32 prev

	MOVE32_32 counterin prev
	ADD32 counterin inc counterout
}
