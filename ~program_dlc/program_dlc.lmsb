DATA16 FD_NATIVECODECOMMAND
DATA16 FD_NATIVECODERESPONSE
DATA32 STOPLCDUPDATE
DATA32 NUMMAILBOXES
ARRAY8 MOTORISINVERTED 4     
ARRAY8 FIRSTOF2  16
ARRAY16 LOCKS 2           
DATA32 s1out1
DATA32 s1out2
DATA32 s1out3
DATA32 s2out1
DATA32 s2out2
DATA32 s2out3
DATA32 s3out1
DATA32 s3out2
DATA32 s3out3
DATA32 s4out1
DATA32 s4out2
DATA32 s4out3
DATA32 getTachoA
DATA32 tmpTachoA
DATA8 getSpeedA
DATA8 setSpeedA
DATA8 setPowerA
DATA32 getTachoB
DATA32 tmpTachoB
DATA8 getSpeedB
DATA8 setSpeedB
DATA8 setPowerB
DATA32 getTachoC
DATA32 tmpTachoC
DATA8 getSpeedC
DATA8 setSpeedC
DATA8 setPowerC
DATA32 getTachoD
DATA32 tmpTachoD
DATA8 getSpeedD
DATA8 setSpeedD
DATA8 setPowerD
DATA16 newArray1d
DATA32 newSize1d
DATA32 newIndex1d
DATA32 timeMC1
DATA32 timeMC2
DATA32 timeMC3
DATA32 timeMC4
DATA32 timeMC5
DATA32 timeMC6
DATA32 timeMC7
DATA32 timeMC8
DATA32 timeMC9
DATA32 timeMC1tmp
DATA32 timeMC2tmp
DATA32 timeMC3tmp
DATA32 timeMC4tmp
DATA32 timeMC5tmp
DATA32 timeMC6tmp
DATA32 timeMC7tmp
DATA32 timeMC8tmp
DATA32 timeMC9tmp
DATAS VGV_LEFT_MOTOR 252
DATAS VGV_RIGHT_MOTOR 252
DATAS VGV_NOT_INVERSED_MOTOR 252
DATAS VGV_GRABBER_MOTOR 252
DATAS VGV_MOTORS 252
DATAS VGV_WATER_MOTOR 252
DATAF VGV_LEFT_SENSOR
DATAF VGV_RIGHT_SENSOR
DATAF VGV_LINE_SENSOR
DATAF VGV_ULTRASONIC
DATAF VGV_RIGHT_FORWARD
DATAF VGV_LEFT_FORWARD
DATAF VGV_A
DATAF VGV_P
DATAF VGV_D
DATAF VGV_LASTERROR
DATAF VGV_NOWERROR
DATAF VGV_DIF
DATAF VGV_INTEGRAL
DATAF VGV_DERIVATIVE
DATAF VGV_UP
DATAF VGV_P_U
DATAF VGV_D_U
DATAF VGV_DEG
DATAS VGV_IS_CHEM_ON_RIGHT 252
DATAS VGV_IS_CHEM_ON_LEFT 252
DATAS VGV_BROWN 252
DATAS VGV_RED 252
DATAS VGV_YELLOW 252
DATAS VGV_GREEN 252
DATAS VGV_BLUE 252
DATAS VGV_WHITE 252
DATAS VGV_CHEM 252
DATAS VGV_BROWN_MAN 252
DATAS VGV_RED_MAN 252
DATAS VGV_YELLOW_MAN 252
DATAS VGV_GREEN_MAN 252
DATAS VGV_BLUE_MAN 252
DATAS VGV_WHITE_MAN 252
DATAF VGV_CUBES_COUNT
DATAS VGV_OBJECT 252
DATAF VGV_B
DATAF VGV_W
DATAF VGV_WATER_STATE
DATAS VGV_START_FROM_RIGHT 252
DATAF VGV_C
DATAF VGV_G
DATAF VGV_R_C
DATAF VGV_L_C
DATAF VGV_DIFF
DATAF VGV_R_P
DATAF VGV_L_P
DATAF VGV_I
DATAS VGV_TAKE_RED_RIGHT 252
DATAS VGV_TAKE_RED_LEFT 252
DATAF VGV_CHEM_BACK
DATAF VGV_NO_BACK
DATAF VGV_ULTRA

vmthread MAIN
{
    MOVE32_32 0 STOPLCDUPDATE
    MOVE32_32 0 NUMMAILBOXES
    OUTPUT_RESET 0 15

	WRITE8 0 0 MOTORISINVERTED
	WRITE8 0 1 MOTORISINVERTED
	WRITE8 0 2 MOTORISINVERTED
	WRITE8 0 3 MOTORISINVERTED
	WRITE8 0 0 FIRSTOF2
	WRITE8 0 1 FIRSTOF2
	WRITE8 0 2 FIRSTOF2
	WRITE8 1 3 FIRSTOF2
	WRITE8 0 4 FIRSTOF2
	WRITE8 1 5 FIRSTOF2
	WRITE8 2 6 FIRSTOF2
	WRITE8 0 7 FIRSTOF2
	WRITE8 0 8 FIRSTOF2
	WRITE8 1 9 FIRSTOF2
	WRITE8 2 10 FIRSTOF2
	WRITE8 0 11 FIRSTOF2
	WRITE8 4 12 FIRSTOF2
	WRITE8 0 13 FIRSTOF2
	WRITE8 0 14 FIRSTOF2
	WRITE8 0 15 FIRSTOF2
    INPUT_DEVICE CLR_ALL -1
    ARRAY CREATE8 0 LOCKS
    MOVE32_32 0 s1out1
	MOVE32_32 0 s1out2
	MOVE32_32 0 s1out3
    MOVE32_32 0 s2out1
	MOVE32_32 0 s2out2
	MOVE32_32 0 s2out3
    MOVE32_32 0 s3out1
	MOVE32_32 0 s3out2
	MOVE32_32 0 s3out3
    MOVE32_32 0 s4out1
	MOVE32_32 0 s4out2
	MOVE32_32 0 s4out3
    MOVE32_32 0 timeMC1
	MOVE32_32 0 timeMC2
	MOVE32_32 0 timeMC3
	MOVE32_32 0 timeMC4
	MOVE32_32 0 timeMC5
	MOVE32_32 0 timeMC6
	MOVE32_32 0 timeMC7
	MOVE32_32 0 timeMC8
	MOVE32_32 0 timeMC9
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VGV_I
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    ARRAY CREATE8 1 LOCKS
    CALL PROGRAM_MAIN -1
    PROGRAM_STOP -1
}
subcall PROGRAM_MAIN
{
    IN_32 SUBPROGRAM
    DATA32 INDEX
    ARRAY8 STACKPOINTER 4
    DATAF F.0
    DATAF F.1
    DATAF F.2
    DATAF F.3
    ARRAY32 RETURNSTACK2 128
    ARRAY32 RETURNSTACK 128
    DATAS S.0 252
    DATAS S.1 252
    MOVE8_8 0 STACKPOINTER
    STRINGS DUPLICATE '' VGV_LEFT_MOTOR
    STRINGS DUPLICATE '' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE '' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE '' VGV_GRABBER_MOTOR
    STRINGS DUPLICATE '' VGV_MOTORS
    STRINGS DUPLICATE '' VGV_WATER_MOTOR
    MOVEF_F 0.0 VGV_LEFT_SENSOR
    MOVEF_F 0.0 VGV_RIGHT_SENSOR
    MOVEF_F 0.0 VGV_LINE_SENSOR
    MOVEF_F 0.0 VGV_ULTRASONIC
    MOVEF_F 0.0 VGV_RIGHT_FORWARD
    MOVEF_F 0.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 0.0 VGV_P
    MOVEF_F 0.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 0.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE '' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE '' VGV_BROWN
    STRINGS DUPLICATE '' VGV_RED
    STRINGS DUPLICATE '' VGV_YELLOW
    STRINGS DUPLICATE '' VGV_GREEN
    STRINGS DUPLICATE '' VGV_BLUE
    STRINGS DUPLICATE '' VGV_WHITE
    STRINGS DUPLICATE '' VGV_CHEM
    STRINGS DUPLICATE '' VGV_BROWN_MAN
    STRINGS DUPLICATE '' VGV_RED_MAN
    STRINGS DUPLICATE '' VGV_YELLOW_MAN
    STRINGS DUPLICATE '' VGV_GREEN_MAN
    STRINGS DUPLICATE '' VGV_BLUE_MAN
    STRINGS DUPLICATE '' VGV_WHITE_MAN
    MOVEF_F 0.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    MOVEF_F 0.0 VGV_WATER_STATE
    STRINGS DUPLICATE '' VGV_START_FROM_RIGHT
    MOVEF_F 0.0 VGV_C
    MOVEF_F 0.0 VGV_G
    MOVEF_F 0.0 VGV_R_C
    MOVEF_F 0.0 VGV_L_C
    MOVEF_F 0.0 VGV_DIFF
    MOVEF_F 0.0 VGV_R_P
    MOVEF_F 0.0 VGV_L_P
    MOVEF_F 0.0 VGV_I
    STRINGS DUPLICATE '' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE '' VGV_TAKE_RED_LEFT
    MOVEF_F 0.0 VGV_CHEM_BACK
    MOVEF_F 0.0 VGV_NO_BACK
    MOVEF_F 0.0 VGV_ULTRA
    STRINGS DUPLICATE 'A' VGV_LEFT_MOTOR
    STRINGS DUPLICATE 'B' VGV_RIGHT_MOTOR
    STRINGS DUPLICATE 'B' VGV_NOT_INVERSED_MOTOR
    STRINGS DUPLICATE 'C' VGV_GRABBER_MOTOR
    CALL TEXT.APPEND VGV_LEFT_MOTOR VGV_RIGHT_MOTOR VGV_MOTORS
    STRINGS DUPLICATE 'D' VGV_WATER_MOTOR
    MOVEF_F 2.0 VGV_LEFT_SENSOR
    MOVEF_F 3.0 VGV_RIGHT_SENSOR
    MOVEF_F 1.0 VGV_LINE_SENSOR
    MOVEF_F 4.0 VGV_ULTRASONIC
    MOVEF_F 1.0 VGV_RIGHT_FORWARD
    MOVEF_F -1.0 VGV_LEFT_FORWARD
    MOVEF_F 0.0 VGV_A
    MOVEF_F 1.0 VGV_P
    MOVEF_F 6.0 VGV_D
    MOVEF_F 0.0 VGV_LASTERROR
    MOVEF_F 0.0 VGV_NOWERROR
    MOVEF_F 0.0 VGV_DIF
    MOVEF_F 0.0 VGV_INTEGRAL
    MOVEF_F 0.0 VGV_DERIVATIVE
    MOVEF_F 0.0 VGV_UP
    MOVEF_F 1.0 VGV_P_U
    MOVEF_F 0.0 VGV_D_U
    MOVEF_F 0.0 VGV_DEG
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_RIGHT
    STRINGS DUPLICATE 'False' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'False' VGV_BROWN
    STRINGS DUPLICATE 'False' VGV_RED
    STRINGS DUPLICATE 'False' VGV_YELLOW
    STRINGS DUPLICATE 'False' VGV_GREEN
    STRINGS DUPLICATE 'False' VGV_BLUE
    STRINGS DUPLICATE 'False' VGV_WHITE
    STRINGS DUPLICATE 'False' VGV_CHEM
    STRINGS DUPLICATE 'False' VGV_BROWN_MAN
    STRINGS DUPLICATE 'False' VGV_RED_MAN
    STRINGS DUPLICATE 'False' VGV_YELLOW_MAN
    STRINGS DUPLICATE 'False' VGV_GREEN_MAN
    STRINGS DUPLICATE 'False' VGV_BLUE_MAN
    STRINGS DUPLICATE 'False' VGV_WHITE_MAN
    MOVEF_F 2.0 VGV_CUBES_COUNT
    STRINGS DUPLICATE '' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
    CALL EV3.BATTERYVOLTAGE F.0
    JR_GTEQF F.0 8.0 else1_1
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 0.0 0.0 1.0 'Bitch, we fucked up'
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB5 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB5:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB6 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB6:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB7 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB7:
  else1_1:
  endif1:
    DATA8 layer8
	DATA8 no8
	DATA8 mode88
	
	MOVEF_8 VGV_LINE_SENSOR no8
	SUB8 no8 1 no8
	DIV8 no8 4 layer8
	MATH MOD8 no8 4 no8

	MOVEF_8 0.0 mode88
	
	INPUT_DEVICE READY_RAW layer8 no8 0 mode88 0
    DATA8 layer9
	DATA8 no9
	DATA8 mode89
	
	MOVEF_8 VGV_RIGHT_SENSOR no9
	SUB8 no9 1 no9
	DIV8 no9 4 layer9
	MATH MOD8 no9 4 no9

	MOVEF_8 1.0 mode89
	
	INPUT_DEVICE READY_RAW layer9 no9 0 mode89 0
    DATA8 layer10
	DATA8 no10
	DATA8 mode810
	
	MOVEF_8 VGV_LEFT_SENSOR no10
	SUB8 no10 1 no10
	DIV8 no10 4 layer10
	MATH MOD8 no10 4 no10

	MOVEF_8 1.0 mode810
	
	INPUT_DEVICE READY_RAW layer10 no10 0 mode810 0
    DATA8 layer11
	DATA8 no11
	DATA8 mode811
	
	MOVEF_8 VGV_ULTRASONIC no11
	SUB8 no11 1 no11
	DIV8 no11 4 layer11
	MATH MOD8 no11 4 no11

	MOVEF_8 0.0 mode811
	
	INPUT_DEVICE READY_RAW layer11 no11 0 mode811 0
    MOVEF_F 0.0 VGV_WATER_STATE
    WRITE32 ENDSUB_F_MAIN_0:CALLSUB12 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MAIN_0
CALLSUB12:
ENDTHREAD:
    RETURN
SUB_F_LINE_0:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF 20.0 F.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf17
    DATA8 flag17
    DIVF F.0 10.0 tmpf17
    CP_EQF 0.0 10.0 flag17
    SELECTF flag17 0.0 tmpf17 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_LINE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_LINE_0:
SUB_F_STOP_0:
    CALL MOTOR.STOP VGV_MOTORS 'True'
RETSUB_F_STOP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_0:
SUB_F_STOP_RIGHT_0:
    CALL MOTOR.STOP VGV_RIGHT_MOTOR 'True'
RETSUB_F_STOP_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_STOP_RIGHT_0:
SUB_F_DELAY_0:
    DATA32 milliseconds28
	MOVEF_32 500.0 milliseconds28
	DATA32 timer28
	TIMER_WAIT milliseconds28 timer28
	TIMER_READY timer28
RETSUB_F_DELAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_DELAY_0:
SUB_F_ULTRASONIC_SLOW_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf33
    DATA8 flag33
    DIVF F.0 10.0 tmpf33
    CP_EQF 0.0 10.0 flag33
    SELECTF flag33 0.0 tmpf33 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 20.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 20.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_SLOW_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_SLOW_0:
SUB_F_ULTRASONIC_FAST_0:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    SUBF F.0 VGV_A VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf48
    DATA8 flag48
    DIVF F.0 10.0 tmpf48
    CP_EQF 0.0 10.0 flag48
    SELECTF flag48 0.0 tmpf48 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P_U F.0
    MULF VGV_INTEGRAL VGV_D_U F.1
    ADDF F.0 F.1 VGV_UP
    ADDF 35.0 VGV_UP F.1
    MULF F.1 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR F.0
    SUBF 35.0 VGV_UP F.1
    MULF F.1 VGV_LEFT_FORWARD F.0
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
RETSUB_F_ULTRASONIC_FAST_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_ULTRASONIC_FAST_0:
SUB_F_TAKE_CHEM_ON_LEFT_0:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 280.0 'True'

	DATA8 layer61
	DATA8 nos61
	DATA8 busy61
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer61 nos61
	JR_EQ8 0 nos61 motornotbusy61
  motorwaiting61:
	OUTPUT_TEST layer61 nos61 busy61
	JR_EQ8 busy61 0 motornotbusy61
	SLEEP
	JR motorwaiting61
  motornotbusy61:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB62 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB62:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for64:
    JR_GTF VGV_I 20.0 endfor64
  forbody64:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds68
	MOVEF_32 10.0 milliseconds68
	DATA32 timer68
	TIMER_WAIT milliseconds68 timer68
	TIMER_READY timer68
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody64
  endfor64:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 360.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer74
	DATA8 nos74
	DATA8 busy74
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer74 nos74
	JR_EQ8 0 nos74 motornotbusy74
  motorwaiting74:
	OUTPUT_TEST layer74 nos74 busy74
	JR_EQ8 busy74 0 motornotbusy74
	SLEEP
	JR motorwaiting74
  motornotbusy74:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 165.0 0.0 'True' 

	DATA8 layer75
	DATA8 nos75
	DATA8 busy75
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer75 nos75
	JR_EQ8 0 nos75 motornotbusy75
  motorwaiting75:
	OUTPUT_TEST layer75 nos75 busy75
	JR_EQ8 busy75 0 motornotbusy75
	SLEEP
	JR motorwaiting75
  motornotbusy75:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 70.0 'True'

	DATA8 layer78
	DATA8 nos78
	DATA8 busy78
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer78 nos78
	JR_EQ8 0 nos78 motornotbusy78
  motorwaiting78:
	OUTPUT_TEST layer78 nos78 busy78
	JR_EQ8 busy78 0 motornotbusy78
	SLEEP
	JR motorwaiting78
  motornotbusy78:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer79
	DATA8 nos79
	DATA8 busy79
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer79 nos79
	JR_EQ8 0 nos79 motornotbusy79
  motorwaiting79:
	OUTPUT_TEST layer79 nos79 busy79
	JR_EQ8 busy79 0 motornotbusy79
	SLEEP
	JR motorwaiting79
  motornotbusy79:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB80 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB80:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for82:
    JR_GTF VGV_I 20.0 endfor82
  forbody82:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds88
	MOVEF_32 15.0 milliseconds88
	DATA32 timer88
	TIMER_WAIT milliseconds88 timer88
	TIMER_READY timer88
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody82
  endfor82:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 100.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer94
	DATA8 nos94
	DATA8 busy94
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer94 nos94
	JR_EQ8 0 nos94 motornotbusy94
  motorwaiting94:
	OUTPUT_TEST layer94 nos94 busy94
	JR_EQ8 busy94 0 motornotbusy94
	SLEEP
	JR motorwaiting94
  motornotbusy94:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for96:
    JR_GTF VGV_I 20.0 endfor96
  forbody96:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds99
	MOVEF_32 10.0 milliseconds99
	DATA32 timer99
	TIMER_WAIT milliseconds99 timer99
	TIMER_READY timer99
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody96
  endfor96:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 360.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer105
	DATA8 nos105
	DATA8 busy105
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer105 nos105
	JR_EQ8 0 nos105 motornotbusy105
  motorwaiting105:
	OUTPUT_TEST layer105 nos105 busy105
	JR_EQ8 busy105 0 motornotbusy105
	SLEEP
	JR motorwaiting105
  motornotbusy105:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB106:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB107 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB107:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 280.0 'True'

	DATA8 layer110
	DATA8 nos110
	DATA8 busy110
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer110 nos110
	JR_EQ8 0 nos110 motornotbusy110
  motorwaiting110:
	OUTPUT_TEST layer110 nos110 busy110
	JR_EQ8 busy110 0 motornotbusy110
	SLEEP
	JR motorwaiting110
  motornotbusy110:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB111 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB111:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB112 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB112:
RETSUB_F_TAKE_CHEM_ON_LEFT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_0:
SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for114:
    JR_GTF VGV_I 20.0 endfor114
  forbody114:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds120
	MOVEF_32 30.0 milliseconds120
	DATA32 timer120
	TIMER_WAIT milliseconds120 timer120
	TIMER_READY timer120
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody114
  endfor114:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 170.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer126
	DATA8 nos126
	DATA8 busy126
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer126 nos126
	JR_EQ8 0 nos126 motornotbusy126
  motorwaiting126:
	OUTPUT_TEST layer126 nos126 busy126
	JR_EQ8 busy126 0 motornotbusy126
	SLEEP
	JR motorwaiting126
  motornotbusy126:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB127:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer128
	DATA8 nos128
	DATA8 busy128
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer128 nos128
	JR_EQ8 0 nos128 motornotbusy128
  motorwaiting128:
	OUTPUT_TEST layer128 nos128 busy128
	JR_EQ8 busy128 0 motornotbusy128
	SLEEP
	JR motorwaiting128
  motornotbusy128:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for130:
    JR_GTF VGV_I 20.0 endfor130
  forbody130:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds133
	MOVEF_32 10.0 milliseconds133
	DATA32 timer133
	TIMER_WAIT milliseconds133 timer133
	TIMER_READY timer133
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody130
  endfor130:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer139
	DATA8 nos139
	DATA8 busy139
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer139 nos139
	JR_EQ8 0 nos139 motornotbusy139
  motorwaiting139:
	OUTPUT_TEST layer139 nos139 busy139
	JR_EQ8 busy139 0 motornotbusy139
	SLEEP
	JR motorwaiting139
  motornotbusy139:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB140 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB140:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer141
	DATA8 nos141
	DATA8 busy141
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer141 nos141
	JR_EQ8 0 nos141 motornotbusy141
  motorwaiting141:
	OUTPUT_TEST layer141 nos141 busy141
	JR_EQ8 busy141 0 motornotbusy141
	SLEEP
	JR motorwaiting141
  motornotbusy141:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB142 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB142:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB143 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB143:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for145:
    JR_GTF VGV_I 20.0 endfor145
  forbody145:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds149
	MOVEF_32 10.0 milliseconds149
	DATA32 timer149
	TIMER_WAIT milliseconds149 timer149
	TIMER_READY timer149
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody145
  endfor145:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer155
	DATA8 nos155
	DATA8 busy155
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer155 nos155
	JR_EQ8 0 nos155 motornotbusy155
  motorwaiting155:
	OUTPUT_TEST layer155 nos155 busy155
	JR_EQ8 busy155 0 motornotbusy155
	SLEEP
	JR motorwaiting155
  motornotbusy155:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB156 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB156:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB157 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB157:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for159:
    JR_GTF VGV_I 20.0 endfor159
  forbody159:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds163
	MOVEF_32 30.0 milliseconds163
	DATA32 timer163
	TIMER_WAIT milliseconds163 timer163
	TIMER_READY timer163
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody159
  endfor159:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 170.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer169
	DATA8 nos169
	DATA8 busy169
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer169 nos169
	JR_EQ8 0 nos169 motornotbusy169
  motorwaiting169:
	OUTPUT_TEST layer169 nos169 busy169
	JR_EQ8 busy169 0 motornotbusy169
	SLEEP
	JR motorwaiting169
  motornotbusy169:
RETSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:
SUB_F_TAKE_CHEM_ON_RIGHT_0:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for171:
    JR_GTF VGV_I 20.0 endfor171
  forbody171:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds177
	MOVEF_32 30.0 milliseconds177
	DATA32 timer177
	TIMER_WAIT milliseconds177 timer177
	TIMER_READY timer177
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody171
  endfor171:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer183
	DATA8 nos183
	DATA8 busy183
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer183 nos183
	JR_EQ8 0 nos183 motornotbusy183
  motorwaiting183:
	OUTPUT_TEST layer183 nos183 busy183
	JR_EQ8 busy183 0 motornotbusy183
	SLEEP
	JR motorwaiting183
  motornotbusy183:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB184 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB184:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer185
	DATA8 nos185
	DATA8 busy185
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer185 nos185
	JR_EQ8 0 nos185 motornotbusy185
  motorwaiting185:
	OUTPUT_TEST layer185 nos185 busy185
	JR_EQ8 busy185 0 motornotbusy185
	SLEEP
	JR motorwaiting185
  motornotbusy185:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for187:
    JR_GTF VGV_I 20.0 endfor187
  forbody187:
    MULF VGV_I VGV_LEFT_FORWARD F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds190
	MOVEF_32 10.0 milliseconds190
	DATA32 timer190
	TIMER_WAIT milliseconds190 timer190
	TIMER_READY timer190
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody187
  endfor187:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer196
	DATA8 nos196
	DATA8 busy196
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer196 nos196
	JR_EQ8 0 nos196 motornotbusy196
  motorwaiting196:
	OUTPUT_TEST layer196 nos196 busy196
	JR_EQ8 busy196 0 motornotbusy196
	SLEEP
	JR motorwaiting196
  motornotbusy196:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB197 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB197:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer198
	DATA8 nos198
	DATA8 busy198
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer198 nos198
	JR_EQ8 0 nos198 motornotbusy198
  motorwaiting198:
	OUTPUT_TEST layer198 nos198 busy198
	JR_EQ8 busy198 0 motornotbusy198
	SLEEP
	JR motorwaiting198
  motornotbusy198:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB199 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB199:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB200 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB200:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for202:
    JR_GTF VGV_I 20.0 endfor202
  forbody202:
    MULF VGV_LEFT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds206
	MOVEF_32 10.0 milliseconds206
	DATA32 timer206
	TIMER_WAIT milliseconds206 timer206
	TIMER_READY timer206
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody202
  endfor202:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer212
	DATA8 nos212
	DATA8 busy212
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer212 nos212
	JR_EQ8 0 nos212 motornotbusy212
  motorwaiting212:
	OUTPUT_TEST layer212 nos212 busy212
	JR_EQ8 busy212 0 motornotbusy212
	SLEEP
	JR motorwaiting212
  motornotbusy212:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB213 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB213:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB214 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB214:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for216:
    JR_GTF VGV_I 20.0 endfor216
  forbody216:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds220
	MOVEF_32 30.0 milliseconds220
	DATA32 timer220
	TIMER_WAIT milliseconds220 timer220
	TIMER_READY timer220
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody216
  endfor216:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 160.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer226
	DATA8 nos226
	DATA8 busy226
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer226 nos226
	JR_EQ8 0 nos226 motornotbusy226
  motorwaiting226:
	OUTPUT_TEST layer226 nos226 busy226
	JR_EQ8 busy226 0 motornotbusy226
	SLEEP
	JR motorwaiting226
  motornotbusy226:
RETSUB_F_TAKE_CHEM_ON_RIGHT_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:
SUB_F_KICK_WATER_0:
    JR_NEQF VGV_WATER_STATE 0.0 else227_1
    CALL MOTOR.START VGV_WATER_MOTOR -30.0
    DATA32 milliseconds229
	MOVEF_32 1500.0 milliseconds229
	DATA32 timer229
	TIMER_WAIT milliseconds229 timer229
	TIMER_READY timer229
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
    MOVEF_F 1.0 VGV_WATER_STATE
    JR endif227
  else227_1:
    CALL MOTOR.START VGV_WATER_MOTOR 30.0
    DATA32 milliseconds232
	MOVEF_32 1500.0 milliseconds232
	DATA32 timer232
	TIMER_WAIT milliseconds232 timer232
	TIMER_READY timer232
    CALL MOTOR.STOP VGV_WATER_MOTOR 'False'
  else227_2:
  endif227:
RETSUB_F_KICK_WATER_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_KICK_WATER_0:
SUB_F_BEEP_0:
    CALL SPEAKER.TONE 100.0 500.0 200.0
RETSUB_F_BEEP_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_BEEP_0:
SUB_F_UPDATE_DISPLAY_0:
    MOVE32_32 1 STOPLCDUPDATE
    CALL LCD.CLEAR
    CALL LCD.TEXT 1.0 10.0 10.0 2.0 VGV_OBJECT
    STRINGS VALUE_FORMATTED VGV_B '%g' 99 S.1
    CALL TEXT.APPEND 'Red: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 50.0 2.0 S.0
    STRINGS VALUE_FORMATTED VGV_W '%g' 99 S.1
    CALL TEXT.APPEND 'White: ' S.1 S.0
    CALL LCD.TEXT 1.0 10.0 75.0 2.0 S.0
    MOVE32_32 0 STOPLCDUPDATE
	UI_DRAW UPDATE
RETSUB_F_UPDATE_DISPLAY_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_UPDATE_DISPLAY_0:
SUB_F_RESET_VALUES_0:
    STRINGS DUPLICATE 'None' VGV_OBJECT
    MOVEF_F 0.0 VGV_B
    MOVEF_F 0.0 VGV_W
RETSUB_F_RESET_VALUES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_RESET_VALUES_0:
SUB_F_CLOSE_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -10.0 0.0 70.0 0.0 'True' 

	DATA8 layer245
	DATA8 nos245
	DATA8 busy245
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer245 nos245
	JR_EQ8 0 nos245 motornotbusy245
  motorwaiting245:
	OUTPUT_TEST layer245 nos245 busy245
	JR_EQ8 busy245 0 motornotbusy245
	SLEEP
	JR motorwaiting245
  motornotbusy245:
RETSUB_F_CLOSE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_CLOSE_CUBES_0:
SUB_F_OPEN_CUBES_0:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR 10.0 0.0 70.0 0.0 'True' 

	DATA8 layer246
	DATA8 nos246
	DATA8 busy246
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer246 nos246
	JR_EQ8 0 nos246 motornotbusy246
  motorwaiting246:
	OUTPUT_TEST layer246 nos246 busy246
	JR_EQ8 busy246 0 motornotbusy246
	SLEEP
	JR motorwaiting246
  motornotbusy246:
RETSUB_F_OPEN_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_OPEN_CUBES_0:
SUB_F_TAKE_CUBES_0:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB247 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB247:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB248 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB248:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer251
	DATA8 nos251
	DATA8 busy251
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer251 nos251
	JR_EQ8 0 nos251 motornotbusy251
  motorwaiting251:
	OUTPUT_TEST layer251 nos251 busy251
	JR_EQ8 busy251 0 motornotbusy251
	SLEEP
	JR motorwaiting251
  motornotbusy251:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB252 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB252:
    MULF VGV_RIGHT_FORWARD -30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds255
	MOVEF_32 1500.0 milliseconds255
	DATA32 timer255
	TIMER_WAIT milliseconds255 timer255
	TIMER_READY timer255
    WRITE32 ENDSUB_F_STOP_0:CALLSUB256 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB256:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB257 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB257:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 227.0 VGV_A
  while259:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 930.0 endwhile259
  whilebody259:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB261 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB261:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 930.0 whilebody259
  endwhile259:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB263 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB263:
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB264 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB264:
RETSUB_F_TAKE_CUBES_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_CUBES_0:
SUB_F_TAKE_LONG_0:
    MULF VGV_RIGHT_FORWARD 15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer266
	DATA8 nos266
	DATA8 busy266
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer266 nos266
	JR_EQ8 0 nos266 motornotbusy266
  motorwaiting266:
	OUTPUT_TEST layer266 nos266 busy266
	JR_EQ8 busy266 0 motornotbusy266
	SLEEP
	JR motorwaiting266
  motornotbusy266:
    MULF VGV_LEFT_FORWARD 15.0 F.0
    MULF VGV_RIGHT_FORWARD 15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 90.0 'True'

	DATA8 layer269
	DATA8 nos269
	DATA8 busy269
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer269 nos269
	JR_EQ8 0 nos269 motornotbusy269
  motorwaiting269:
	OUTPUT_TEST layer269 nos269 busy269
	JR_EQ8 busy269 0 motornotbusy269
	SLEEP
	JR motorwaiting269
  motornotbusy269:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB270 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB270:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer273
	DATA8 nos273
	DATA8 busy273
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer273 nos273
	JR_EQ8 0 nos273 motornotbusy273
  motorwaiting273:
	OUTPUT_TEST layer273 nos273 busy273
	JR_EQ8 busy273 0 motornotbusy273
	SLEEP
	JR motorwaiting273
  motornotbusy273:
    JR_NEQF VGV_CUBES_COUNT 2.0 else274_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB275 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB275:
  else274_1:
  endif274:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 38.0 'True'

	DATA8 layer278
	DATA8 nos278
	DATA8 busy278
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer278 nos278
	JR_EQ8 0 nos278 motornotbusy278
  motorwaiting278:
	OUTPUT_TEST layer278 nos278 busy278
	JR_EQ8 busy278 0 motornotbusy278
	SLEEP
	JR motorwaiting278
  motornotbusy278:
    MULF VGV_RIGHT_FORWARD -15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer280
	DATA8 nos280
	DATA8 busy280
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer280 nos280
	JR_EQ8 0 nos280 motornotbusy280
  motorwaiting280:
	OUTPUT_TEST layer280 nos280 busy280
	JR_EQ8 busy280 0 motornotbusy280
	SLEEP
	JR motorwaiting280
  motornotbusy280:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_LONG_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_LONG_0:
SUB_F_TAKE_NEAR_0:
    MULF -15.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer282
	DATA8 nos282
	DATA8 busy282
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer282 nos282
	JR_EQ8 0 nos282 motornotbusy282
  motorwaiting282:
	OUTPUT_TEST layer282 nos282 busy282
	JR_EQ8 busy282 0 motornotbusy282
	SLEEP
	JR motorwaiting282
  motornotbusy282:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer284
	DATA8 nos284
	DATA8 busy284
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer284 nos284
	JR_EQ8 0 nos284 motornotbusy284
  motorwaiting284:
	OUTPUT_TEST layer284 nos284 busy284
	JR_EQ8 busy284 0 motornotbusy284
	SLEEP
	JR motorwaiting284
  motornotbusy284:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB285 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB285:
    MULF 15.0 VGV_LEFT_FORWARD F.0
    MULF 15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 230.0 'True'

	DATA8 layer288
	DATA8 nos288
	DATA8 busy288
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer288 nos288
	JR_EQ8 0 nos288 motornotbusy288
  motorwaiting288:
	OUTPUT_TEST layer288 nos288 busy288
	JR_EQ8 busy288 0 motornotbusy288
	SLEEP
	JR motorwaiting288
  motornotbusy288:
    WRITE32 ENDSUB_F_OPEN_CUBES_0:CALLSUB289 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_OPEN_CUBES_0
CALLSUB289:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 52.0 'True'

	DATA8 layer292
	DATA8 nos292
	DATA8 busy292
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer292 nos292
	JR_EQ8 0 nos292 motornotbusy292
  motorwaiting292:
	OUTPUT_TEST layer292 nos292 busy292
	JR_EQ8 busy292 0 motornotbusy292
	SLEEP
	JR motorwaiting292
  motornotbusy292:
    JR_NEQF VGV_CUBES_COUNT 2.0 else293_1
    WRITE32 ENDSUB_F_CLOSE_CUBES_0:CALLSUB294 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_CLOSE_CUBES_0
CALLSUB294:
  else293_1:
  endif293:
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 178.0 'True'

	DATA8 layer297
	DATA8 nos297
	DATA8 busy297
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer297 nos297
	JR_EQ8 0 nos297 motornotbusy297
  motorwaiting297:
	OUTPUT_TEST layer297 nos297 busy297
	JR_EQ8 busy297 0 motornotbusy297
	SLEEP
	JR motorwaiting297
  motornotbusy297:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer299
	DATA8 nos299
	DATA8 busy299
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer299 nos299
	JR_EQ8 0 nos299 motornotbusy299
  motorwaiting299:
	OUTPUT_TEST layer299 nos299 busy299
	JR_EQ8 busy299 0 motornotbusy299
	SLEEP
	JR motorwaiting299
  motornotbusy299:
    MULF VGV_RIGHT_FORWARD -15.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 250.0 0.0 'True' 

	DATA8 layer301
	DATA8 nos301
	DATA8 busy301
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer301 nos301
	JR_EQ8 0 nos301 motornotbusy301
  motorwaiting301:
	OUTPUT_TEST layer301 nos301 busy301
	JR_EQ8 busy301 0 motornotbusy301
	SLEEP
	JR motorwaiting301
  motornotbusy301:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB302 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB302:
    MULF VGV_LEFT_FORWARD 15.0 F.0
    MULF VGV_RIGHT_FORWARD 15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'True'

	DATA8 layer305
	DATA8 nos305
	DATA8 busy305
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer305 nos305
	JR_EQ8 0 nos305 motornotbusy305
  motorwaiting305:
	OUTPUT_TEST layer305 nos305 busy305
	JR_EQ8 busy305 0 motornotbusy305
	SLEEP
	JR motorwaiting305
  motornotbusy305:
    MOVEF_F 1.0 VGV_CUBES_COUNT
RETSUB_F_TAKE_NEAR_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_TAKE_NEAR_0:
SUB_F_GO_FORWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF 20.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_FORWARD_0:
SUB_F_GO_BACKWARD_0:
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_C
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_C
    SUBF VGV_R_C VGV_L_C F.0
    MULF F.0 1.0 VGV_DIFF
    SUBF -20.0 VGV_DIFF F.0
    MULF F.0 VGV_RIGHT_FORWARD VGV_R_P
    ADDF -20.0 VGV_DIFF F.0
    MULF F.0 VGV_LEFT_FORWARD VGV_L_P
    CALL MOTOR.STARTPOWER VGV_RIGHT_MOTOR VGV_R_P
    CALL MOTOR.STARTPOWER VGV_LEFT_MOTOR VGV_L_P
RETSUB_F_GO_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_GO_BACKWARD_0:
SUB_F_MOVE_FORWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while332:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile332
  whilebody332:
    WRITE32 ENDSUB_F_GO_FORWARD_0:CALLSUB334 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_FORWARD_0
CALLSUB334:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody332
  endwhile332:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB336 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB336:
RETSUB_F_MOVE_FORWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_FORWARD_0:
SUB_F_MOVE_BACKWARD_0:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
  while339:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_LTEQF F.0 F.1 endwhile339
  whilebody339:
    WRITE32 ENDSUB_F_GO_BACKWARD_0:CALLSUB342 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_GO_BACKWARD_0
CALLSUB342:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    MULF -1.0 VGV_DEG F.1
    JR_GTF F.0 F.1 whilebody339
  endwhile339:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB345 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB345:
RETSUB_F_MOVE_BACKWARD_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MOVE_BACKWARD_0:
SUB_F_MAIN_0:
    STRINGS DUPLICATE 'False' VGV_START_FROM_RIGHT
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else346_1
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 53.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds351
	MOVEF_32 2000.0 milliseconds351
	DATA32 timer351
	TIMER_WAIT milliseconds351 timer351
	TIMER_READY timer351
    WRITE32 ENDSUB_F_STOP_0:CALLSUB352 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB352:
    MULF VGV_RIGHT_FORWARD -30.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds355
	MOVEF_32 1000.0 milliseconds355
	DATA32 timer355
	TIMER_WAIT milliseconds355 timer355
	TIMER_READY timer355
    WRITE32 ENDSUB_F_STOP_0:CALLSUB356 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB356:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB357 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB357:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 200.0 0.0 'True' 

	DATA8 layer359
	DATA8 nos359
	DATA8 busy359
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer359 nos359
	JR_EQ8 0 nos359 motornotbusy359
  motorwaiting359:
	OUTPUT_TEST layer359 nos359 busy359
	JR_EQ8 busy359 0 motornotbusy359
	SLEEP
	JR motorwaiting359
  motornotbusy359:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB360 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB360:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 150.0 0.0 'True' 

	DATA8 layer362
	DATA8 nos362
	DATA8 busy362
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer362 nos362
	JR_EQ8 0 nos362 motornotbusy362
  motorwaiting362:
	OUTPUT_TEST layer362 nos362 busy362
	JR_EQ8 busy362 0 motornotbusy362
	SLEEP
	JR motorwaiting362
  motornotbusy362:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB363 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB363:
  else346_1:
  endif346:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB364 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB364:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 80.0 F.0
    MULF VGV_RIGHT_FORWARD 90.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    MOVEF_F 1200.0 VGV_DEG
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else369_1
    MOVEF_F 1100.0 VGV_DEG
  else369_1:
  endif369:
  while371:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_DEG endwhile371
  whilebody371:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_DEG whilebody371
  endwhile371:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 55.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while377:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 23.0 endwhile377
  whilebody377:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 23.0 whilebody377
  endwhile377:
  while380:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile380
  whilebody380:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody380
  endwhile380:
    WRITE32 ENDSUB_F_STOP_RIGHT_0:CALLSUB383 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_RIGHT_0
CALLSUB383:
    MOVEF_F 99.0 VGV_A
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB384 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB384:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 290.0 0.0 'True' 

	DATA8 layer386
	DATA8 nos386
	DATA8 busy386
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer386 nos386
	JR_EQ8 0 nos386 motornotbusy386
  motorwaiting386:
	OUTPUT_TEST layer386 nos386 busy386
	JR_EQ8 busy386 0 motornotbusy386
	SLEEP
	JR motorwaiting386
  motornotbusy386:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB387 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB387:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 240.0 0.0 'True' 

	DATA8 layer389
	DATA8 nos389
	DATA8 busy389
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer389 nos389
	JR_EQ8 0 nos389 motornotbusy389
  motorwaiting389:
	OUTPUT_TEST layer389 nos389 busy389
	JR_EQ8 busy389 0 motornotbusy389
	SLEEP
	JR motorwaiting389
  motornotbusy389:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while391:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile391
  whilebody391:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB393 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB393:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody391
  endwhile391:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB395 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB395:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB396 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB396:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    MOVEF_F 500.0 VGV_C
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB398 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB398:
    JR_LTEQF VGV_B 80.0 else399_1
    DATA8 layer400
	DATA8 no400
	DATA8 mode8400
	
	MOVEF_8 VGV_RIGHT_SENSOR no400
	SUB8 no400 1 no400
	DIV8 no400 4 layer400
	MATH MOD8 no400 4 no400

	MOVEF_8 2.0 mode8400
	
	INPUT_DEVICE READY_RAW layer400 no400 0 mode8400 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer402
	DATA8 no402
	DATA8 mode8402
	
	MOVEF_8 VGV_RIGHT_SENSOR no402
	SUB8 no402 1 no402
	DIV8 no402 4 layer402
	MATH MOD8 no402 4 no402

	MOVEF_8 1.0 mode8402
	
	INPUT_DEVICE READY_RAW layer402 no402 0 mode8402 0
    JR_LTEQF VGV_G 100.0 else403_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB404 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB404:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif403
  else403_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB405 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB405:
    STRINGS DUPLICATE 'True' VGV_BROWN
    MOVEF_F 95.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB406 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB406:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB407 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB407:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB408 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB408:
  else403_2:
  endif403:
    JR endif399
  else399_1:
    JR_LTEQF VGV_B 5.0 else399_2
    DATA8 layer409
	DATA8 no409
	DATA8 mode8409
	
	MOVEF_8 VGV_RIGHT_SENSOR no409
	SUB8 no409 1 no409
	DIV8 no409 4 layer409
	MATH MOD8 no409 4 no409

	MOVEF_8 4.0 mode8409
	
	INPUT_DEVICE READY_RAW layer409 no409 0 mode8409 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    DATA8 layer411
	DATA8 no411
	DATA8 mode8411
	
	MOVEF_8 VGV_RIGHT_SENSOR no411
	SUB8 no411 1 no411
	DIV8 no411 4 layer411
	MATH MOD8 no411 4 no411

	MOVEF_8 1.0 mode8411
	
	INPUT_DEVICE READY_RAW layer411 no411 0 mode8411 0
    STRINGS DUPLICATE 'None' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB412 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB412:
    JR_LTEQF VGV_W 30.0 else413_1
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB414 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB414:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB415 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB415:
  else413_1:
  endif413:
  else399_2:
  endif399:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB416 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB416:
    DATA8 layer417
	DATA8 no417
	DATA8 mode8417
	
	MOVEF_8 VGV_LINE_SENSOR no417
	SUB8 no417 1 no417
	DIV8 no417 4 layer417
	MATH MOD8 no417 4 no417

	MOVEF_8 2.0 mode8417
	
	INPUT_DEVICE READY_RAW layer417 no417 0 mode8417 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    WRITE32 ENDSUB_F_STOP_0:CALLSUB419 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB419:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB420 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB420:
  while421:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C or422
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 5.0 endwhile421
  or422:
  whilebody421:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB425 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB425:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody421
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 5.0 whilebody421
  endwhile421:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB428 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB428:
    WRITE32 ENDSUB_F_BEEP_0:CALLSUB429 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_BEEP_0
CALLSUB429:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB430 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB430:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB431 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB431:
    MOVEF_F 350.0 VGV_C
    CALL EQ_STRING VGV_BROWN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else432_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB434 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB434:
    MOVEF_F 90.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB435 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB435:
    ADDF VGV_C 110.0 VGV_C
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB437 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB437:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB439 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB439:
    JR_LTEQF VGV_B 80.0 else440_1
    DATA8 layer441
	DATA8 no441
	DATA8 mode8441
	
	MOVEF_8 VGV_RIGHT_SENSOR no441
	SUB8 no441 1 no441
	DIV8 no441 4 layer441
	MATH MOD8 no441 4 no441

	MOVEF_8 2.0 mode8441
	
	INPUT_DEVICE READY_RAW layer441 no441 0 mode8441 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer443
	DATA8 no443
	DATA8 mode8443
	
	MOVEF_8 VGV_RIGHT_SENSOR no443
	SUB8 no443 1 no443
	DIV8 no443 4 layer443
	MATH MOD8 no443 4 no443

	MOVEF_8 1.0 mode8443
	
	INPUT_DEVICE READY_RAW layer443 no443 0 mode8443 0
    JR_LTEQF VGV_G 100.0 else444_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB445 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB445:
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_BROWN_MAN
    JR endif444
  else444_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB446 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB446:
    STRINGS DUPLICATE 'True' VGV_BROWN
    MOVEF_F 40.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB447 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB447:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB448 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB448:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB449 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB449:
  else444_2:
  endif444:
    JR endif440
  else440_1:
    JR_LTEQF VGV_B 12.0 else440_2
    DATA8 layer450
	DATA8 no450
	DATA8 mode8450
	
	MOVEF_8 VGV_RIGHT_SENSOR no450
	SUB8 no450 1 no450
	DIV8 no450 4 layer450
	MATH MOD8 no450 4 no450

	MOVEF_8 4.0 mode8450
	
	INPUT_DEVICE READY_RAW layer450 no450 0 mode8450 0
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_W
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB452 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB452:
    DATA8 layer453
	DATA8 no453
	DATA8 mode8453
	
	MOVEF_8 VGV_RIGHT_SENSOR no453
	SUB8 no453 1 no453
	DIV8 no453 4 layer453
	MATH MOD8 no453 4 no453

	MOVEF_8 1.0 mode8453
	
	INPUT_DEVICE READY_RAW layer453 no453 0 mode8453 0
    JR_LTEQF VGV_W 40.0 else454_1
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB455 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB455:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BROWN
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_RIGHT_0:CALLSUB456 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_RIGHT_0
CALLSUB456:
  else454_1:
  endif454:
  else440_2:
  endif440:
  else432_1:
  endif432:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB457 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB457:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while459:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 VGV_C endwhile459
  whilebody459:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB461 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB461:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 VGV_C whilebody459
  endwhile459:
    MOVEF_F 1.0 VGV_P_U
    CALL EQ_STRING VGV_CHEM 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else463_1
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    JR endif463
  else463_1:
    MULF VGV_LEFT_FORWARD 30.0 F.0
    MULF VGV_RIGHT_FORWARD 30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  else463_2:
  endif463:
    DATA32 milliseconds471
	MOVEF_32 1000.0 milliseconds471
	DATA32 timer471
	TIMER_WAIT milliseconds471 timer471
	TIMER_READY timer471
    WRITE32 ENDSUB_F_STOP_0:CALLSUB472 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB472:
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_RIGHT
    STRINGS DUPLICATE 'False' VGV_TAKE_RED_LEFT
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB473 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB473:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB475 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB475:
    JR_LTEQF VGV_B 85.0 else476_1
    DATA8 layer477
	DATA8 no477
	DATA8 mode8477
	
	MOVEF_8 VGV_RIGHT_SENSOR no477
	SUB8 no477 1 no477
	DIV8 no477 4 layer477
	MATH MOD8 no477 4 no477

	MOVEF_8 2.0 mode8477
	
	INPUT_DEVICE READY_RAW layer477 no477 0 mode8477 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB478 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB478:
    CALL SENSOR.READRAWVALUE VGV_RIGHT_SENSOR 0.0 VGV_G
    DATA8 layer480
	DATA8 no480
	DATA8 mode8480
	
	MOVEF_8 VGV_RIGHT_SENSOR no480
	SUB8 no480 1 no480
	DIV8 no480 4 layer480
	MATH MOD8 no480 4 no480

	MOVEF_8 1.0 mode8480
	
	INPUT_DEVICE READY_RAW layer480 no480 0 mode8480 0
    JR_LTEQF VGV_G 100.0 else481_1
    STRINGS DUPLICATE 'R: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB482 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB482:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif481
  else481_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB483 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB483:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB484 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB484:
  else481_2:
  endif481:
    JR endif476
  else476_1:
    JR_LTEQF VGV_B 10.0 else476_2
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'R: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB485 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB485:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_RIGHT
  else476_2:
  endif476:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB486 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB486:
    CALL EQ_STRING VGV_RED 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else487_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB489 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB489:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB491 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB491:
    JR_LTEQF VGV_B 120.0 else492_1
    DATA8 layer493
	DATA8 no493
	DATA8 mode8493
	
	MOVEF_8 VGV_LEFT_SENSOR no493
	SUB8 no493 1 no493
	DIV8 no493 4 layer493
	MATH MOD8 no493 4 no493

	MOVEF_8 2.0 mode8493
	
	INPUT_DEVICE READY_RAW layer493 no493 0 mode8493 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB494 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB494:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer496
	DATA8 no496
	DATA8 mode8496
	
	MOVEF_8 VGV_LEFT_SENSOR no496
	SUB8 no496 1 no496
	DIV8 no496 4 layer496
	MATH MOD8 no496 4 no496

	MOVEF_8 1.0 mode8496
	
	INPUT_DEVICE READY_RAW layer496 no496 0 mode8496 0
    JR_LTEQF VGV_G 100.0 else497_1
    STRINGS DUPLICATE 'L: Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB498 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB498:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'True' VGV_RED_MAN
    JR endif497
  else497_1:
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB499 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB499:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB500 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB500:
  else497_2:
  endif497:
    JR endif492
  else492_1:
    DATA8 layer501
	DATA8 no501
	DATA8 mode8501
	
	MOVEF_8 VGV_LEFT_SENSOR no501
	SUB8 no501 1 no501
	DIV8 no501 4 layer501
	MATH MOD8 no501 4 no501

	MOVEF_8 2.0 mode8501
	
	INPUT_DEVICE READY_RAW layer501 no501 0 mode8501 0
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer503
	DATA8 no503
	DATA8 mode8503
	
	MOVEF_8 VGV_LEFT_SENSOR no503
	SUB8 no503 1 no503
	DIV8 no503 4 layer503
	MATH MOD8 no503 4 no503

	MOVEF_8 1.0 mode8503
	
	INPUT_DEVICE READY_RAW layer503 no503 0 mode8503 0
    JR_GTF VGV_G 25.0 or505
    JR_GTEQF VGV_G 18.0 else504_1
  or505:
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_RED
    STRINGS DUPLICATE 'L: Chem' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB506 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB506:
    STRINGS DUPLICATE 'True' VGV_TAKE_RED_LEFT
  else504_1:
  endif504:
  else492_2:
  endif492:
  else487_1:
  endif487:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB507 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB507:
    MOVEF_F 140.0 VGV_CHEM_BACK
    MOVEF_F 140.0 VGV_NO_BACK
    CALL EQ_STRING VGV_TAKE_RED_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else508_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for511:
    JR_GTF VGV_I 20.0 endfor511
  forbody511:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds517
	MOVEF_32 30.0 milliseconds517
	DATA32 timer517
	TIMER_WAIT milliseconds517 timer517
	TIMER_READY timer517
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody511
  endfor511:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer523
	DATA8 nos523
	DATA8 busy523
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer523 nos523
	JR_EQ8 0 nos523 motornotbusy523
  motorwaiting523:
	OUTPUT_TEST layer523 nos523 busy523
	JR_EQ8 busy523 0 motornotbusy523
	SLEEP
	JR motorwaiting523
  motornotbusy523:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB524 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB524:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer526
	DATA8 nos526
	DATA8 busy526
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer526 nos526
	JR_EQ8 0 nos526 motornotbusy526
  motorwaiting526:
	OUTPUT_TEST layer526 nos526 busy526
	JR_EQ8 busy526 0 motornotbusy526
	SLEEP
	JR motorwaiting526
  motornotbusy526:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB527 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB527:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer528
	DATA8 nos528
	DATA8 busy528
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer528 nos528
	JR_EQ8 0 nos528 motornotbusy528
  motorwaiting528:
	OUTPUT_TEST layer528 nos528 busy528
	JR_EQ8 busy528 0 motornotbusy528
	SLEEP
	JR motorwaiting528
  motornotbusy528:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for530:
    JR_GTF VGV_I 20.0 endfor530
  forbody530:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds534
	MOVEF_32 20.0 milliseconds534
	DATA32 timer534
	TIMER_WAIT milliseconds534 timer534
	TIMER_READY timer534
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody530
  endfor530:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer540
	DATA8 nos540
	DATA8 busy540
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer540 nos540
	JR_EQ8 0 nos540 motornotbusy540
  motorwaiting540:
	OUTPUT_TEST layer540 nos540 busy540
	JR_EQ8 busy540 0 motornotbusy540
	SLEEP
	JR motorwaiting540
  motornotbusy540:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB541 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB541:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer542
	DATA8 nos542
	DATA8 busy542
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer542 nos542
	JR_EQ8 0 nos542 motornotbusy542
  motorwaiting542:
	OUTPUT_TEST layer542 nos542 busy542
	JR_EQ8 busy542 0 motornotbusy542
	SLEEP
	JR motorwaiting542
  motornotbusy542:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB543 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB543:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for545:
    JR_GTF VGV_I 20.0 endfor545
  forbody545:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds551
	MOVEF_32 20.0 milliseconds551
	DATA32 timer551
	TIMER_WAIT milliseconds551 timer551
	TIMER_READY timer551
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody545
  endfor545:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer557
	DATA8 nos557
	DATA8 busy557
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer557 nos557
	JR_EQ8 0 nos557 motornotbusy557
  motorwaiting557:
	OUTPUT_TEST layer557 nos557 busy557
	JR_EQ8 busy557 0 motornotbusy557
	SLEEP
	JR motorwaiting557
  motornotbusy557:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB558 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB558:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB559 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB559:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer561
	DATA8 nos561
	DATA8 busy561
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer561 nos561
	JR_EQ8 0 nos561 motornotbusy561
  motorwaiting561:
	OUTPUT_TEST layer561 nos561 busy561
	JR_EQ8 busy561 0 motornotbusy561
	SLEEP
	JR motorwaiting561
  motornotbusy561:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB562 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB562:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds566
	MOVEF_32 1500.0 milliseconds566
	DATA32 timer566
	TIMER_WAIT milliseconds566 timer566
	TIMER_READY timer566
    WRITE32 ENDSUB_F_STOP_0:CALLSUB567 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB567:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB568 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB568:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for570:
    JR_GTF VGV_I 20.0 endfor570
  forbody570:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds576
	MOVEF_32 20.0 milliseconds576
	DATA32 timer576
	TIMER_WAIT milliseconds576 timer576
	TIMER_READY timer576
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody570
  endfor570:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer582
	DATA8 nos582
	DATA8 busy582
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer582 nos582
	JR_EQ8 0 nos582 motornotbusy582
  motorwaiting582:
	OUTPUT_TEST layer582 nos582 busy582
	JR_EQ8 busy582 0 motornotbusy582
	SLEEP
	JR motorwaiting582
  motornotbusy582:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB583 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB583:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB584 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB584:
    JR endif508
  else508_1:
    CALL EQ_STRING VGV_TAKE_RED_LEFT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else508_2
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for587:
    JR_GTF VGV_I 20.0 endfor587
  forbody587:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds593
	MOVEF_32 30.0 milliseconds593
	DATA32 timer593
	TIMER_WAIT milliseconds593 timer593
	TIMER_READY timer593
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody587
  endfor587:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 280.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer599
	DATA8 nos599
	DATA8 busy599
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer599 nos599
	JR_EQ8 0 nos599 motornotbusy599
  motorwaiting599:
	OUTPUT_TEST layer599 nos599 busy599
	JR_EQ8 busy599 0 motornotbusy599
	SLEEP
	JR motorwaiting599
  motornotbusy599:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB600 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB600:
    MULF VGV_RIGHT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer602
	DATA8 nos602
	DATA8 busy602
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer602 nos602
	JR_EQ8 0 nos602 motornotbusy602
  motorwaiting602:
	OUTPUT_TEST layer602 nos602 busy602
	JR_EQ8 busy602 0 motornotbusy602
	SLEEP
	JR motorwaiting602
  motornotbusy602:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB603 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB603:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 175.0 0.0 'True' 

	DATA8 layer604
	DATA8 nos604
	DATA8 busy604
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer604 nos604
	JR_EQ8 0 nos604 motornotbusy604
  motorwaiting604:
	OUTPUT_TEST layer604 nos604 busy604
	JR_EQ8 busy604 0 motornotbusy604
	SLEEP
	JR motorwaiting604
  motornotbusy604:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for606:
    JR_GTF VGV_I 20.0 endfor606
  forbody606:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds610
	MOVEF_32 20.0 milliseconds610
	DATA32 timer610
	TIMER_WAIT milliseconds610 timer610
	TIMER_READY timer610
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody606
  endfor606:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    SUBF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer616
	DATA8 nos616
	DATA8 busy616
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer616 nos616
	JR_EQ8 0 nos616 motornotbusy616
  motorwaiting616:
	OUTPUT_TEST layer616 nos616 busy616
	JR_EQ8 busy616 0 motornotbusy616
	SLEEP
	JR motorwaiting616
  motornotbusy616:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB617 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB617:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 100.0 0.0 100.0 0.0 'True' 

	DATA8 layer618
	DATA8 nos618
	DATA8 busy618
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer618 nos618
	JR_EQ8 0 nos618 motornotbusy618
  motorwaiting618:
	OUTPUT_TEST layer618 nos618 busy618
	JR_EQ8 busy618 0 motornotbusy618
	SLEEP
	JR motorwaiting618
  motornotbusy618:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB619 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB619:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for621:
    JR_GTF VGV_I 20.0 endfor621
  forbody621:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds627
	MOVEF_32 20.0 milliseconds627
	DATA32 timer627
	TIMER_WAIT milliseconds627 timer627
	TIMER_READY timer627
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody621
  endfor621:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF 150.0 F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer633
	DATA8 nos633
	DATA8 busy633
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer633 nos633
	JR_EQ8 0 nos633 motornotbusy633
  motorwaiting633:
	OUTPUT_TEST layer633 nos633 busy633
	JR_EQ8 busy633 0 motornotbusy633
	SLEEP
	JR motorwaiting633
  motornotbusy633:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB634 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB634:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB635 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB635:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 70.0 0.0 'True' 

	DATA8 layer637
	DATA8 nos637
	DATA8 busy637
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer637 nos637
	JR_EQ8 0 nos637 motornotbusy637
  motorwaiting637:
	OUTPUT_TEST layer637 nos637 busy637
	JR_EQ8 busy637 0 motornotbusy637
	SLEEP
	JR motorwaiting637
  motornotbusy637:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB638 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB638:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    MULF VGV_RIGHT_FORWARD 40.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds642
	MOVEF_32 1000.0 milliseconds642
	DATA32 timer642
	TIMER_WAIT milliseconds642 timer642
	TIMER_READY timer642
    WRITE32 ENDSUB_F_STOP_0:CALLSUB643 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB643:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB644 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB644:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for646:
    JR_GTF VGV_I 20.0 endfor646
  forbody646:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds652
	MOVEF_32 20.0 milliseconds652
	DATA32 timer652
	TIMER_WAIT milliseconds652 timer652
	TIMER_READY timer652
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody646
  endfor646:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_CHEM_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer658
	DATA8 nos658
	DATA8 busy658
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer658 nos658
	JR_EQ8 0 nos658 motornotbusy658
  motorwaiting658:
	OUTPUT_TEST layer658 nos658 busy658
	JR_EQ8 busy658 0 motornotbusy658
	SLEEP
	JR motorwaiting658
  motornotbusy658:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB659 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB659:
    JR endif508
  else508_2:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 1.0 VGV_I
  for661:
    JR_GTF VGV_I 20.0 endfor661
  forbody661:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    MULF VGV_RIGHT_FORWARD -1.0 F.2
    MULF F.2 VGV_I F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds667
	MOVEF_32 20.0 milliseconds667
	DATA32 timer667
	TIMER_WAIT milliseconds667 timer667
	TIMER_READY timer667
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody661
  endfor661:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.3
    ADDF VGV_NO_BACK F.3 F.2
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 F.2 'True'

	DATA8 layer673
	DATA8 nos673
	DATA8 busy673
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer673 nos673
	JR_EQ8 0 nos673 motornotbusy673
  motorwaiting673:
	OUTPUT_TEST layer673 nos673 busy673
	JR_EQ8 busy673 0 motornotbusy673
	SLEEP
	JR motorwaiting673
  motornotbusy673:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB674 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB674:
  else508_3:
  endif508:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer677
	DATA8 nos677
	DATA8 busy677
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer677 nos677
	JR_EQ8 0 nos677 motornotbusy677
  motorwaiting677:
	OUTPUT_TEST layer677 nos677 busy677
	JR_EQ8 busy677 0 motornotbusy677
	SLEEP
	JR motorwaiting677
  motornotbusy677:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB678 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB678:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB679 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB679:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds683
	MOVEF_32 700.0 milliseconds683
	DATA32 timer683
	TIMER_WAIT milliseconds683 timer683
	TIMER_READY timer683
    WRITE32 ENDSUB_F_STOP_0:CALLSUB684 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB684:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 F.0
    ADDF F.0 5.0 VGV_A
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 430.0 'True'

	DATA8 layer689
	DATA8 nos689
	DATA8 busy689
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer689 nos689
	JR_EQ8 0 nos689 motornotbusy689
  motorwaiting689:
	OUTPUT_TEST layer689 nos689 busy689
	JR_EQ8 busy689 0 motornotbusy689
	SLEEP
	JR motorwaiting689
  motornotbusy689:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while691:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile691
  whilebody691:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB693 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB693:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody691
  endwhile691:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA8 layer699
	DATA8 no699
	DATA8 mode8699
	
	MOVEF_8 VGV_LINE_SENSOR no699
	SUB8 no699 1 no699
	DIV8 no699 4 layer699
	MATH MOD8 no699 4 no699

	MOVEF_8 0.0 mode8699
	
	INPUT_DEVICE READY_RAW layer699 no699 0 mode8699 0
  while700:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 or701
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 220.0 endwhile700
  or701:
  whilebody700:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 20.0 whilebody700
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 220.0 whilebody700
  endwhile700:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB706 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB706:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB707 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB707:
    MOVEF_F 95.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB708 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB708:
    DATA8 layer709
	DATA8 no709
	DATA8 mode8709
	
	MOVEF_8 VGV_LINE_SENSOR no709
	SUB8 no709 1 no709
	DIV8 no709 4 layer709
	MATH MOD8 no709 4 no709

	MOVEF_8 0.0 mode8709
	
	INPUT_DEVICE READY_RAW layer709 no709 0 mode8709 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB710 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB710:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB712 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB712:
    JR_LTEQF VGV_B 55.0 else713_1
    DATA8 layer714
	DATA8 no714
	DATA8 mode8714
	
	MOVEF_8 VGV_LEFT_SENSOR no714
	SUB8 no714 1 no714
	DIV8 no714 4 layer714
	MATH MOD8 no714 4 no714

	MOVEF_8 2.0 mode8714
	
	INPUT_DEVICE READY_RAW layer714 no714 0 mode8714 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB715 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB715:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer717
	DATA8 no717
	DATA8 mode8717
	
	MOVEF_8 VGV_LEFT_SENSOR no717
	SUB8 no717 1 no717
	DIV8 no717 4 layer717
	MATH MOD8 no717 4 no717

	MOVEF_8 1.0 mode8717
	
	INPUT_DEVICE READY_RAW layer717 no717 0 mode8717 0
    JR_LTEQF VGV_G 100.0 else718_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB719 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB719:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif718
  else718_1:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB720 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB720:
    MOVEF_F 100.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB721 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB721:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB722 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB722:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB723 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB723:
  else718_2:
  endif718:
    JR endif713
  else713_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else725_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB726 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB726:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB727 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB727:
  else725_1:
  endif725:
  else713_2:
  endif713:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB728 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB728:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB729 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB729:
    SUBF VGV_A 5.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while732:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 250.0 endwhile732
  whilebody732:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB734 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB734:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 250.0 whilebody732
  endwhile732:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds739
	MOVEF_32 2000.0 milliseconds739
	DATA32 timer739
	TIMER_WAIT milliseconds739 timer739
	TIMER_READY timer739
    WRITE32 ENDSUB_F_STOP_0:CALLSUB740 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB740:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB741 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB741:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB743 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB743:
    JR_LTEQF VGV_B 55.0 else744_1
    DATA8 layer745
	DATA8 no745
	DATA8 mode8745
	
	MOVEF_8 VGV_LEFT_SENSOR no745
	SUB8 no745 1 no745
	DIV8 no745 4 layer745
	MATH MOD8 no745 4 no745

	MOVEF_8 2.0 mode8745
	
	INPUT_DEVICE READY_RAW layer745 no745 0 mode8745 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB746 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB746:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer748
	DATA8 no748
	DATA8 mode8748
	
	MOVEF_8 VGV_LEFT_SENSOR no748
	SUB8 no748 1 no748
	DIV8 no748 4 layer748
	MATH MOD8 no748 4 no748

	MOVEF_8 1.0 mode8748
	
	INPUT_DEVICE READY_RAW layer748 no748 0 mode8748 0
    JR_LTEQF VGV_G 70.0 else749_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB750 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB750:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif749
  else749_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB751 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB751:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB752 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB752:
  else749_2:
  endif749:
    JR endif744
  else744_1:
    JR_LTEQF VGV_B 15.0 else744_2
    DATA8 layer753
	DATA8 no753
	DATA8 mode8753
	
	MOVEF_8 VGV_LEFT_SENSOR no753
	SUB8 no753 1 no753
	DIV8 no753 4 layer753
	MATH MOD8 no753 4 no753

	MOVEF_8 4.0 mode8753
	
	INPUT_DEVICE READY_RAW layer753 no753 0 mode8753 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB754 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB754:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_W
    DATA8 layer756
	DATA8 no756
	DATA8 mode8756
	
	MOVEF_8 VGV_LEFT_SENSOR no756
	SUB8 no756 1 no756
	DIV8 no756 4 layer756
	MATH MOD8 no756 4 no756

	MOVEF_8 1.0 mode8756
	
	INPUT_DEVICE READY_RAW layer756 no756 0 mode8756 0
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB757 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB757:
    JR_LTEQF VGV_W 60.0 else758_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_RIGHT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB759 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB759:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB760 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB760:
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for762:
    JR_GTF VGV_I 20.0 endfor762
  forbody762:
    MULF VGV_LEFT_FORWARD -1.0 F.1
    MULF F.1 VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds766
	MOVEF_32 30.0 milliseconds766
	DATA32 timer766
	TIMER_WAIT milliseconds766 timer766
	TIMER_READY timer766
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody762
  endfor762:
    MULF -20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    ADDF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer772
	DATA8 nos772
	DATA8 busy772
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer772 nos772
	JR_EQ8 0 nos772 motornotbusy772
  motorwaiting772:
	OUTPUT_TEST layer772 nos772 busy772
	JR_EQ8 busy772 0 motornotbusy772
	SLEEP
	JR motorwaiting772
  motornotbusy772:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB773 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB773:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer774
	DATA8 nos774
	DATA8 busy774
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer774 nos774
	JR_EQ8 0 nos774 motornotbusy774
  motorwaiting774:
	OUTPUT_TEST layer774 nos774 busy774
	JR_EQ8 busy774 0 motornotbusy774
	SLEEP
	JR motorwaiting774
  motornotbusy774:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer777
	DATA8 nos777
	DATA8 busy777
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer777 nos777
	JR_EQ8 0 nos777 motornotbusy777
  motorwaiting777:
	OUTPUT_TEST layer777 nos777 busy777
	JR_EQ8 busy777 0 motornotbusy777
	SLEEP
	JR motorwaiting777
  motornotbusy777:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB778 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB778:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer779
	DATA8 nos779
	DATA8 busy779
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer779 nos779
	JR_EQ8 0 nos779 motornotbusy779
  motorwaiting779:
	OUTPUT_TEST layer779 nos779 busy779
	JR_EQ8 busy779 0 motornotbusy779
	SLEEP
	JR motorwaiting779
  motornotbusy779:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB780 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB780:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer783
	DATA8 nos783
	DATA8 busy783
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer783 nos783
	JR_EQ8 0 nos783 motornotbusy783
  motorwaiting783:
	OUTPUT_TEST layer783 nos783 busy783
	JR_EQ8 busy783 0 motornotbusy783
	SLEEP
	JR motorwaiting783
  motornotbusy783:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB784 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB784:
    DATA32 milliseconds785
	MOVEF_32 1000.0 milliseconds785
	DATA32 timer785
	TIMER_WAIT milliseconds785 timer785
	TIMER_READY timer785
    CALL MOTOR.RESETCOUNT VGV_LEFT_MOTOR
    MOVEF_F 1.0 VGV_I
  for787:
    JR_GTF VGV_I 20.0 endfor787
  forbody787:
    MULF VGV_LEFT_FORWARD VGV_I F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
    DATA32 milliseconds790
	MOVEF_32 30.0 milliseconds790
	DATA32 timer790
	TIMER_WAIT milliseconds790 timer790
	TIMER_READY timer790
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody787
  endfor787:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_LEFT_MOTOR F.3
    MULF F.3 VGV_LEFT_FORWARD F.2
    SUBF 260.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer796
	DATA8 nos796
	DATA8 busy796
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer796 nos796
	JR_EQ8 0 nos796 motornotbusy796
  motorwaiting796:
	OUTPUT_TEST layer796 nos796 busy796
	JR_EQ8 busy796 0 motornotbusy796
	SLEEP
	JR motorwaiting796
  motornotbusy796:
    MULF 30.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds799
	MOVEF_32 1000.0 milliseconds799
	DATA32 timer799
	TIMER_WAIT milliseconds799 timer799
	TIMER_READY timer799
    WRITE32 ENDSUB_F_STOP_0:CALLSUB800 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB800:
  else758_1:
  endif758:
  else744_2:
  endif744:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB801 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB801:
    MULF -20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 270.0 0.0 'True' 

	DATA8 layer803
	DATA8 nos803
	DATA8 busy803
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer803 nos803
	JR_EQ8 0 nos803 motornotbusy803
  motorwaiting803:
	OUTPUT_TEST layer803 nos803 busy803
	JR_EQ8 busy803 0 motornotbusy803
	SLEEP
	JR motorwaiting803
  motornotbusy803:
    MULF 20.0 VGV_LEFT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 104.0 0.0 'True' 

	DATA8 layer805
	DATA8 nos805
	DATA8 busy805
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer805 nos805
	JR_EQ8 0 nos805 motornotbusy805
  motorwaiting805:
	OUTPUT_TEST layer805 nos805 busy805
	JR_EQ8 busy805 0 motornotbusy805
	SLEEP
	JR motorwaiting805
  motornotbusy805:
    DATA8 layer806
	DATA8 no806
	DATA8 mode8806
	
	MOVEF_8 VGV_LINE_SENSOR no806
	SUB8 no806 1 no806
	DIV8 no806 4 layer806
	MATH MOD8 no806 4 no806

	MOVEF_8 2.0 mode8806
	
	INPUT_DEVICE READY_RAW layer806 no806 0 mode8806 0
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MOVEF_F 105.0 VGV_A
  while808:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 100.0 endwhile808
  whilebody808:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB810 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB810:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 100.0 whilebody808
  endwhile808:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while815:
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_EQF F.0 2.0 endwhile815
  whilebody815:
    CALL SENSOR.READRAWVALUE VGV_LINE_SENSOR 0.0 F.0
    JR_NEQF F.0 2.0 whilebody815
  endwhile815:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB818 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB818:
    DATA8 layer819
	DATA8 no819
	DATA8 mode8819
	
	MOVEF_8 VGV_LINE_SENSOR no819
	SUB8 no819 1 no819
	DIV8 no819 4 layer819
	MATH MOD8 no819 4 no819

	MOVEF_8 0.0 mode8819
	
	INPUT_DEVICE READY_RAW layer819 no819 0 mode8819 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB820 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB820:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB821 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB821:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB822 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB822:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB823 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB823:
    CALL EQ_STRING VGV_GREEN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else824_1
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else827_1
    DATA8 layer828
	DATA8 no828
	DATA8 mode8828
	
	MOVEF_8 VGV_LEFT_SENSOR no828
	SUB8 no828 1 no828
	DIV8 no828 4 layer828
	MATH MOD8 no828 4 no828

	MOVEF_8 2.0 mode8828
	
	INPUT_DEVICE READY_RAW layer828 no828 0 mode8828 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB829 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB829:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer831
	DATA8 no831
	DATA8 mode8831
	
	MOVEF_8 VGV_LEFT_SENSOR no831
	SUB8 no831 1 no831
	DIV8 no831 4 layer831
	MATH MOD8 no831 4 no831

	MOVEF_8 1.0 mode8831
	
	INPUT_DEVICE READY_RAW layer831 no831 0 mode8831 0
    JR_LTEQF VGV_G 100.0 else832_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB833 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB833:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'True' VGV_GREEN_MAN
    JR endif832
  else832_1:
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB834 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB834:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB835 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB835:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB836 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB836:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB837 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB837:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB838 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB838:
  else832_2:
  endif832:
    JR endif827
  else827_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else840_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_GREEN
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB841 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB841:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB842 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB842:
  else840_1:
  endif840:
  else827_2:
  endif827:
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB843 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB843:
  else824_1:
  endif824:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB844 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB844:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB845 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB845:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB846 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB846:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    JR_LTEQF VGV_B 70.0 else848_1
    DATA8 layer849
	DATA8 no849
	DATA8 mode8849
	
	MOVEF_8 VGV_LEFT_SENSOR no849
	SUB8 no849 1 no849
	DIV8 no849 4 layer849
	MATH MOD8 no849 4 no849

	MOVEF_8 2.0 mode8849
	
	INPUT_DEVICE READY_RAW layer849 no849 0 mode8849 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB850 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB850:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer852
	DATA8 no852
	DATA8 mode8852
	
	MOVEF_8 VGV_LEFT_SENSOR no852
	SUB8 no852 1 no852
	DIV8 no852 4 layer852
	MATH MOD8 no852 4 no852

	MOVEF_8 1.0 mode8852
	
	INPUT_DEVICE READY_RAW layer852 no852 0 mode8852 0
    JR_LTEQF VGV_G 70.0 else853_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB854 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB854:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif853
  else853_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB855 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB855:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB856 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB856:
  else853_2:
  endif853:
    JR endif848
  else848_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else858_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB859 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB859:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB860 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB860:
  else858_1:
  endif858:
  else848_2:
  endif848:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB861 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB861:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 100.0 'True'

	DATA8 layer864
	DATA8 nos864
	DATA8 busy864
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer864 nos864
	JR_EQ8 0 nos864 motornotbusy864
  motorwaiting864:
	OUTPUT_TEST layer864 nos864 busy864
	JR_EQ8 busy864 0 motornotbusy864
	SLEEP
	JR motorwaiting864
  motornotbusy864:
    ADDF VGV_A 5.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while867:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 310.0 endwhile867
  whilebody867:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB869 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB869:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 310.0 whilebody867
  endwhile867:
    MOVEF_F 110.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB871 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB871:
    CALL EQ_STRING VGV_BLUE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else872_1
    DATA8 layer874
	DATA8 no874
	DATA8 mode8874
	
	MOVEF_8 VGV_LEFT_SENSOR no874
	SUB8 no874 1 no874
	DIV8 no874 4 layer874
	MATH MOD8 no874 4 no874

	MOVEF_8 1.0 mode8874
	
	INPUT_DEVICE READY_RAW layer874 no874 0 mode8874 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB875 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB875:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB877 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB877:
    JR_LTEQF VGV_B 55.0 else878_1
    DATA8 layer879
	DATA8 no879
	DATA8 mode8879
	
	MOVEF_8 VGV_LEFT_SENSOR no879
	SUB8 no879 1 no879
	DIV8 no879 4 layer879
	MATH MOD8 no879 4 no879

	MOVEF_8 2.0 mode8879
	
	INPUT_DEVICE READY_RAW layer879 no879 0 mode8879 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB880 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB880:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer882
	DATA8 no882
	DATA8 mode8882
	
	MOVEF_8 VGV_LEFT_SENSOR no882
	SUB8 no882 1 no882
	DIV8 no882 4 layer882
	MATH MOD8 no882 4 no882

	MOVEF_8 1.0 mode8882
	
	INPUT_DEVICE READY_RAW layer882 no882 0 mode8882 0
    JR_LTEQF VGV_G 70.0 else883_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB884 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB884:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'True' VGV_BLUE_MAN
    JR endif883
  else883_1:
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB885 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB885:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB886 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB886:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB887 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB887:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB888 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB888:
  else883_2:
  endif883:
    JR endif878
  else878_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else890_1
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'True' VGV_BLUE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB891 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB891:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB892 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB892:
  else890_1:
  endif890:
  else878_2:
  endif878:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB893 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB893:
  else872_1:
  endif872:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB894 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB894:
    DATA8 layer895
	DATA8 no895
	DATA8 mode8895
	
	MOVEF_8 VGV_LINE_SENSOR no895
	SUB8 no895 1 no895
	DIV8 no895 4 layer895
	MATH MOD8 no895 4 no895

	MOVEF_8 0.0 mode8895
	
	INPUT_DEVICE READY_RAW layer895 no895 0 mode8895 0
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 200.0 'False'

	DATA8 layer898
	DATA8 nos898
	DATA8 busy898
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer898 nos898
	JR_EQ8 0 nos898 motornotbusy898
  motorwaiting898:
	OUTPUT_TEST layer898 nos898 busy898
	JR_EQ8 busy898 0 motornotbusy898
	SLEEP
	JR motorwaiting898
  motornotbusy898:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while902:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile902
  whilebody902:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody902
  endwhile902:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB905 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB905:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 200.0 0.0 'False' 

	DATA8 layer907
	DATA8 nos907
	DATA8 busy907
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer907 nos907
	JR_EQ8 0 nos907 motornotbusy907
  motorwaiting907:
	OUTPUT_TEST layer907 nos907 busy907
	JR_EQ8 busy907 0 motornotbusy907
	SLEEP
	JR motorwaiting907
  motornotbusy907:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.START VGV_LEFT_MOTOR F.0
  while910:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 8.0 endwhile910
  whilebody910:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 8.0 whilebody910
  endwhile910:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 50.0 0.0 'True' 

	DATA8 layer914
	DATA8 nos914
	DATA8 busy914
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer914 nos914
	JR_EQ8 0 nos914 motornotbusy914
  motorwaiting914:
	OUTPUT_TEST layer914 nos914 busy914
	JR_EQ8 busy914 0 motornotbusy914
	SLEEP
	JR motorwaiting914
  motornotbusy914:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB915 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB915:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while917:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile917
  whilebody917:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB919 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB919:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody917
  endwhile917:
  while921:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 5.0 endwhile921
  whilebody921:
    WRITE32 ENDSUB_F_LINE_0:CALLSUB923 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_LINE_0
CALLSUB923:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 5.0 whilebody921
  endwhile921:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB925 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB925:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 80.0 'True'

	DATA8 layer928
	DATA8 nos928
	DATA8 busy928
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer928 nos928
	JR_EQ8 0 nos928 motornotbusy928
  motorwaiting928:
	OUTPUT_TEST layer928 nos928 busy928
	JR_EQ8 busy928 0 motornotbusy928
	SLEEP
	JR motorwaiting928
  motornotbusy928:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB929 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB929:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB930 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB930:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer933
	DATA8 nos933
	DATA8 busy933
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer933 nos933
	JR_EQ8 0 nos933 motornotbusy933
  motorwaiting933:
	OUTPUT_TEST layer933 nos933 busy933
	JR_EQ8 busy933 0 motornotbusy933
	SLEEP
	JR motorwaiting933
  motornotbusy933:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB934 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB934:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB935 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB935:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 25.0 'False'

	DATA8 layer938
	DATA8 nos938
	DATA8 busy938
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer938 nos938
	JR_EQ8 0 nos938 motornotbusy938
  motorwaiting938:
	OUTPUT_TEST layer938 nos938 busy938
	JR_EQ8 busy938 0 motornotbusy938
	SLEEP
	JR motorwaiting938
  motornotbusy938:
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while940:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 290.0 endwhile940
  whilebody940:
    CALL SENSOR.READPERCENT 1.0 F.0
    SUBF F.0 17.0 VGV_NOWERROR
    SUBF VGV_LASTERROR VGV_NOWERROR VGV_DIF
    ADDF VGV_INTEGRAL VGV_NOWERROR F.0
    DATAF tmpf946
    DATA8 flag946
    DIVF F.0 10.0 tmpf946
    CP_EQF 0.0 10.0 flag946
    SELECTF flag946 0.0 tmpf946 VGV_INTEGRAL

    SUBF VGV_NOWERROR VGV_LASTERROR VGV_DERIVATIVE
    MULF VGV_NOWERROR VGV_P F.0
    MULF VGV_INTEGRAL VGV_D F.1
    ADDF F.0 F.1 VGV_UP
    SUBF 40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'B' F.0
    SUBF -40.0 VGV_UP F.0
    CALL MOTOR.STARTPOWER 'A' F.0
    MOVEF_F VGV_NOWERROR VGV_LASTERROR
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 290.0 whilebody940
  endwhile940:
    MOVEF_F 135.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB956 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB956:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB957 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB957:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB958 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB958:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB960 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB960:
    JR_LTEQF VGV_B 140.0 else961_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB962 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB962:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif961
  else961_1:
    JR_LTEQF VGV_B 80.0 else961_2
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'FIre' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB963 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB963:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB964 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB964:
    JR endif961
  else961_2:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else966_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    STRINGS DUPLICATE 'True' VGV_CHEM
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB967 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB967:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0:CALLSUB968 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_ACCURATE_0
CALLSUB968:
  else966_1:
  endif966:
  else961_3:
  endif961:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB969 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB969:
    MOVEF_F 150.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB970 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB970:
    MOVEF_F 490.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while972:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 200.0 endwhile972
  whilebody972:
    WRITE32 ENDSUB_F_ULTRASONIC_SLOW_0:CALLSUB974 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_SLOW_0
CALLSUB974:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 200.0 whilebody972
  endwhile972:
    MOVEF_F 170.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB976 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB976:
    CALL EQ_STRING VGV_WHITE 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else977_1
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB979 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB979:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB981 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB981:
    JR_LTEQF VGV_B 40.0 else982_1
    DATA8 layer983
	DATA8 no983
	DATA8 mode8983
	
	MOVEF_8 VGV_LEFT_SENSOR no983
	SUB8 no983 1 no983
	DIV8 no983 4 layer983
	MATH MOD8 no983 4 no983

	MOVEF_8 2.0 mode8983
	
	INPUT_DEVICE READY_RAW layer983 no983 0 mode8983 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB984 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB984:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer986
	DATA8 no986
	DATA8 mode8986
	
	MOVEF_8 VGV_LEFT_SENSOR no986
	SUB8 no986 1 no986
	DIV8 no986 4 layer986
	MATH MOD8 no986 4 no986

	MOVEF_8 1.0 mode8986
	
	INPUT_DEVICE READY_RAW layer986 no986 0 mode8986 0
    JR_LTEQF VGV_G 100.0 else987_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB988 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB988:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_WHITE_MAN
    JR endif987
  else987_1:
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB989 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB989:
    MOVEF_F 115.0 VGV_DEG
    WRITE32 ENDSUB_F_MOVE_BACKWARD_0:CALLSUB990 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_BACKWARD_0
CALLSUB990:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB991 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB991:
    WRITE32 ENDSUB_F_MOVE_FORWARD_0:CALLSUB992 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_MOVE_FORWARD_0
CALLSUB992:
  else987_2:
  endif987:
    JR endif982
  else982_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else994_1
    STRINGS DUPLICATE 'True' VGV_WHITE
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB995 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB995:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer998
	DATA8 nos998
	DATA8 busy998
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer998 nos998
	JR_EQ8 0 nos998 motornotbusy998
  motorwaiting998:
	OUTPUT_TEST layer998 nos998 busy998
	JR_EQ8 busy998 0 motornotbusy998
	SLEEP
	JR motorwaiting998
  motornotbusy998:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB999 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB999:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 165.0 0.0 'True' 

	DATA8 layer1000
	DATA8 nos1000
	DATA8 busy1000
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1000 nos1000
	JR_EQ8 0 nos1000 motornotbusy1000
  motorwaiting1000:
	OUTPUT_TEST layer1000 nos1000 busy1000
	JR_EQ8 busy1000 0 motornotbusy1000
	SLEEP
	JR motorwaiting1000
  motornotbusy1000:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1002:
    JR_GTF VGV_I 20.0 endfor1002
  forbody1002:
    MULF VGV_I VGV_RIGHT_FORWARD F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1005
	MOVEF_32 10.0 milliseconds1005
	DATA32 timer1005
	TIMER_WAIT milliseconds1005 timer1005
	TIMER_READY timer1005
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1002
  endfor1002:
    MULF 20.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    SUBF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1011
	DATA8 nos1011
	DATA8 busy1011
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1011 nos1011
	JR_EQ8 0 nos1011 motornotbusy1011
  motorwaiting1011:
	OUTPUT_TEST layer1011 nos1011 busy1011
	JR_EQ8 busy1011 0 motornotbusy1011
	SLEEP
	JR motorwaiting1011
  motornotbusy1011:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1012 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1012:
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR 50.0 0.0 100.0 0.0 'True' 

	DATA8 layer1013
	DATA8 nos1013
	DATA8 busy1013
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1013 nos1013
	JR_EQ8 0 nos1013 motornotbusy1013
  motorwaiting1013:
	OUTPUT_TEST layer1013 nos1013 busy1013
	JR_EQ8 busy1013 0 motornotbusy1013
	SLEEP
	JR motorwaiting1013
  motornotbusy1013:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1014 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1014:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1015 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1015:
    CALL MOTOR.RESETCOUNT VGV_RIGHT_MOTOR
    MOVEF_F 1.0 VGV_I
  for1017:
    JR_GTF VGV_I 20.0 endfor1017
  forbody1017:
    MULF VGV_RIGHT_FORWARD VGV_I F.1
    MULF F.1 -1.0 F.0
    CALL MOTOR.START VGV_RIGHT_MOTOR F.0
    DATA32 milliseconds1021
	MOVEF_32 10.0 milliseconds1021
	DATA32 timer1021
	TIMER_WAIT milliseconds1021 timer1021
	TIMER_READY timer1021
    ADDF VGV_I 1.0 VGV_I
    JR_LTEQF VGV_I 20.0 forbody1017
  endfor1017:
    MULF VGV_RIGHT_FORWARD -20.0 F.0
    CALL MOTOR.GETCOUNT VGV_RIGHT_MOTOR F.3
    MULF F.3 VGV_RIGHT_FORWARD F.2
    ADDF 160.0 F.2 F.1
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 F.1 0.0 'True' 

	DATA8 layer1027
	DATA8 nos1027
	DATA8 busy1027
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1027 nos1027
	JR_EQ8 0 nos1027 motornotbusy1027
  motorwaiting1027:
	OUTPUT_TEST layer1027 nos1027 busy1027
	JR_EQ8 busy1027 0 motornotbusy1027
	SLEEP
	JR motorwaiting1027
  motornotbusy1027:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1028 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1028:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1029 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1029:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer1032
	DATA8 nos1032
	DATA8 busy1032
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1032 nos1032
	JR_EQ8 0 nos1032 motornotbusy1032
  motorwaiting1032:
	OUTPUT_TEST layer1032 nos1032 busy1032
	JR_EQ8 busy1032 0 motornotbusy1032
	SLEEP
	JR motorwaiting1032
  motornotbusy1032:
  else994_1:
  endif994:
  else982_2:
  endif982:
  else977_1:
  endif977:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1033 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1033:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1034 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1034:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 160.0 'True'

	DATA8 layer1037
	DATA8 nos1037
	DATA8 busy1037
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1037 nos1037
	JR_EQ8 0 nos1037 motornotbusy1037
  motorwaiting1037:
	OUTPUT_TEST layer1037 nos1037 busy1037
	JR_EQ8 busy1037 0 motornotbusy1037
	SLEEP
	JR motorwaiting1037
  motornotbusy1037:
    DATA8 layer1038
	DATA8 no1038
	DATA8 mode81038
	
	MOVEF_8 VGV_LEFT_SENSOR no1038
	SUB8 no1038 1 no1038
	DIV8 no1038 4 layer1038
	MATH MOD8 no1038 4 no1038

	MOVEF_8 1.0 mode81038
	
	INPUT_DEVICE READY_RAW layer1038 no1038 0 mode81038 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1039 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1039:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_B
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1041 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1041:
    JR_LTEQF VGV_B 40.0 else1042_1
    DATA8 layer1043
	DATA8 no1043
	DATA8 mode81043
	
	MOVEF_8 VGV_LEFT_SENSOR no1043
	SUB8 no1043 1 no1043
	DIV8 no1043 4 layer1043
	MATH MOD8 no1043 4 no1043

	MOVEF_8 2.0 mode81043
	
	INPUT_DEVICE READY_RAW layer1043 no1043 0 mode81043 0
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1044 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1044:
    CALL SENSOR.READRAWVALUE VGV_LEFT_SENSOR 0.0 VGV_G
    DATA8 layer1046
	DATA8 no1046
	DATA8 mode81046
	
	MOVEF_8 VGV_LEFT_SENSOR no1046
	SUB8 no1046 1 no1046
	DIV8 no1046 4 layer1046
	MATH MOD8 no1046 4 no1046

	MOVEF_8 1.0 mode81046
	
	INPUT_DEVICE READY_RAW layer1046 no1046 0 mode81046 0
    JR_LTEQF VGV_G 50.0 else1047_1
    STRINGS DUPLICATE 'Human' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1048 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1048:
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_YELLOW_MAN
    JR endif1047
  else1047_1:
    STRINGS DUPLICATE 'Fire' VGV_OBJECT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1049 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1049:
    WRITE32 ENDSUB_F_KICK_WATER_0:CALLSUB1050 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_KICK_WATER_0
CALLSUB1050:
  else1047_2:
  endif1047:
    JR endif1042
  else1042_1:
    CALL SENSOR.READRAWVALUE VGV_ULTRASONIC 0.0 VGV_ULTRA
    JR_GTEQF VGV_ULTRA 85.0 else1052_1
    STRINGS DUPLICATE 'True' VGV_YELLOW
    STRINGS DUPLICATE 'True' VGV_CHEM
    STRINGS DUPLICATE 'Chemical' VGV_OBJECT
    STRINGS DUPLICATE 'True' VGV_IS_CHEM_ON_LEFT
    WRITE32 ENDSUB_F_UPDATE_DISPLAY_0:CALLSUB1053 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_UPDATE_DISPLAY_0
CALLSUB1053:
    WRITE32 ENDSUB_F_TAKE_CHEM_ON_LEFT_0:CALLSUB1054 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CHEM_ON_LEFT_0
CALLSUB1054:
  else1052_1:
  endif1052:
  else1042_2:
  endif1042:
    WRITE32 ENDSUB_F_RESET_VALUES_0:CALLSUB1055 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_RESET_VALUES_0
CALLSUB1055:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 325.0 'True'

	DATA8 layer1058
	DATA8 nos1058
	DATA8 busy1058
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1058 nos1058
	JR_EQ8 0 nos1058 motornotbusy1058
  motorwaiting1058:
	OUTPUT_TEST layer1058 nos1058 busy1058
	JR_EQ8 busy1058 0 motornotbusy1058
	SLEEP
	JR motorwaiting1058
  motornotbusy1058:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1059 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1059:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1060 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1060:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 380.0 'True'

	DATA8 layer1063
	DATA8 nos1063
	DATA8 busy1063
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1063 nos1063
	JR_EQ8 0 nos1063 motornotbusy1063
  motorwaiting1063:
	OUTPUT_TEST layer1063 nos1063 busy1063
	JR_EQ8 busy1063 0 motornotbusy1063
	SLEEP
	JR motorwaiting1063
  motornotbusy1063:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1064 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1064:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1065 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1065:
    MULF VGV_LEFT_FORWARD 20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1068
	DATA8 nos1068
	DATA8 busy1068
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1068 nos1068
	JR_EQ8 0 nos1068 motornotbusy1068
  motorwaiting1068:
	OUTPUT_TEST layer1068 nos1068 busy1068
	JR_EQ8 busy1068 0 motornotbusy1068
	SLEEP
	JR motorwaiting1068
  motornotbusy1068:
    MOVEF_F 474.0 VGV_A
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
  while1070:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 710.0 endwhile1070
  whilebody1070:
    WRITE32 ENDSUB_F_ULTRASONIC_FAST_0:CALLSUB1072 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_ULTRASONIC_FAST_0
CALLSUB1072:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 710.0 whilebody1070
  endwhile1070:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1074 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1074:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1075 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1075:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1076_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 115.0 0.0 'True' 

	DATA8 layer1078
	DATA8 nos1078
	DATA8 busy1078
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1078 nos1078
	JR_EQ8 0 nos1078 motornotbusy1078
  motorwaiting1078:
	OUTPUT_TEST layer1078 nos1078 busy1078
	JR_EQ8 busy1078 0 motornotbusy1078
	SLEEP
	JR motorwaiting1078
  motornotbusy1078:
  else1076_1:
  endif1076:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1079 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1079:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 300.0 'True'

	DATA8 layer1082
	DATA8 nos1082
	DATA8 busy1082
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1082 nos1082
	JR_EQ8 0 nos1082 motornotbusy1082
  motorwaiting1082:
	OUTPUT_TEST layer1082 nos1082 busy1082
	JR_EQ8 busy1082 0 motornotbusy1082
	SLEEP
	JR motorwaiting1082
  motornotbusy1082:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1083 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1083:
    CALL EQ_STRING VGV_CHEM 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1084_1
    CALL MOTOR.SCHEDULE VGV_GRABBER_MOTOR -50.0 0.0 120.0 0.0 'True' 

	DATA8 layer1086
	DATA8 nos1086
	DATA8 busy1086
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_GRABBER_MOTOR layer1086 nos1086
	JR_EQ8 0 nos1086 motornotbusy1086
  motorwaiting1086:
	OUTPUT_TEST layer1086 nos1086 busy1086
	JR_EQ8 busy1086 0 motornotbusy1086
	SLEEP
	JR motorwaiting1086
  motornotbusy1086:
  else1084_1:
  endif1084:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD 20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 180.0 'True'

	DATA8 layer1089
	DATA8 nos1089
	DATA8 busy1089
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1089 nos1089
	JR_EQ8 0 nos1089 motornotbusy1089
  motorwaiting1089:
	OUTPUT_TEST layer1089 nos1089 busy1089
	JR_EQ8 busy1089 0 motornotbusy1089
	SLEEP
	JR motorwaiting1089
  motornotbusy1089:
    MULF VGV_LEFT_FORWARD 60.0 F.0
    MULF VGV_RIGHT_FORWARD 60.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1093
	MOVEF_32 1200.0 milliseconds1093
	DATA32 timer1093
	TIMER_WAIT milliseconds1093 timer1093
	TIMER_READY timer1093
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1094 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1094:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 150.0 'True'

	DATA8 layer1097
	DATA8 nos1097
	DATA8 busy1097
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1097 nos1097
	JR_EQ8 0 nos1097 motornotbusy1097
  motorwaiting1097:
	OUTPUT_TEST layer1097 nos1097 busy1097
	JR_EQ8 busy1097 0 motornotbusy1097
	SLEEP
	JR motorwaiting1097
  motornotbusy1097:
    MULF VGV_LEFT_FORWARD 40.0 F.0
    CALL MOTOR.SCHEDULE VGV_LEFT_MOTOR F.0 0.0 280.0 0.0 'True' 

	DATA8 layer1099
	DATA8 nos1099
	DATA8 busy1099
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_LEFT_MOTOR layer1099 nos1099
	JR_EQ8 0 nos1099 motornotbusy1099
  motorwaiting1099:
	OUTPUT_TEST layer1099 nos1099 busy1099
	JR_EQ8 busy1099 0 motornotbusy1099
	SLEEP
	JR motorwaiting1099
  motornotbusy1099:
    MULF VGV_LEFT_FORWARD 90.0 F.0
    MULF VGV_RIGHT_FORWARD 95.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1103
	MOVEF_32 3500.0 milliseconds1103
	DATA32 timer1103
	TIMER_WAIT milliseconds1103 timer1103
	TIMER_READY timer1103
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1104 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1104:
    CALL MOTOR.SCHEDULE VGV_WATER_MOTOR -50.0 0.0 20.0 0.0 'True' 

	DATA8 layer1105
	DATA8 nos1105
	DATA8 busy1105
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_WATER_MOTOR layer1105 nos1105
	JR_EQ8 0 nos1105 motornotbusy1105
  motorwaiting1105:
	OUTPUT_TEST layer1105 nos1105 busy1105
	JR_EQ8 busy1105 0 motornotbusy1105
	SLEEP
	JR motorwaiting1105
  motornotbusy1105:
    WRITE32 ENDSUB_F_TAKE_CUBES_0:CALLSUB1106 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_CUBES_0
CALLSUB1106:
    MULF VGV_LEFT_FORWARD -15.0 F.0
    MULF VGV_RIGHT_FORWARD -15.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1109
	DATA8 nos1109
	DATA8 busy1109
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1109 nos1109
	JR_EQ8 0 nos1109 motornotbusy1109
  motorwaiting1109:
	OUTPUT_TEST layer1109 nos1109 busy1109
	JR_EQ8 busy1109 0 motornotbusy1109
	SLEEP
	JR motorwaiting1109
  motornotbusy1109:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1110 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1110:
    CALL EQ_STRING VGV_BROWN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1111_1
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1113 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1113:
  else1111_1:
  endif1111:
    CALL EQ_STRING VGV_RED_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1114_1
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1116 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1116:
  else1114_1:
  endif1114:
    CALL EQ_STRING VGV_RED_MAN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1117_1
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1121
	DATA8 nos1121
	DATA8 busy1121
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1121 nos1121
	JR_EQ8 0 nos1121 motornotbusy1121
  motorwaiting1121:
	OUTPUT_TEST layer1121 nos1121 busy1121
	JR_EQ8 busy1121 0 motornotbusy1121
	SLEEP
	JR motorwaiting1121
  motornotbusy1121:
  else1117_1:
  endif1117:
    CALL EQ_STRING VGV_WHITE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1122_1
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1124 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1124:
  else1122_1:
  endif1122:
    CALL EQ_STRING VGV_YELLOW_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1125_1
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1127 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1127:
  else1125_1:
  endif1125:
    CALL EQ_STRING VGV_YELLOW_MAN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1128_1
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 210.0 'True'

	DATA8 layer1132
	DATA8 nos1132
	DATA8 busy1132
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1132 nos1132
	JR_EQ8 0 nos1132 motornotbusy1132
  motorwaiting1132:
	OUTPUT_TEST layer1132 nos1132 busy1132
	JR_EQ8 busy1132 0 motornotbusy1132
	SLEEP
	JR motorwaiting1132
  motornotbusy1132:
  else1128_1:
  endif1128:
    CALL EQ_STRING VGV_BLUE_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1133_1
    WRITE32 ENDSUB_F_TAKE_LONG_0:CALLSUB1135 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_LONG_0
CALLSUB1135:
  else1133_1:
  endif1133:
    CALL EQ_STRING VGV_GREEN_MAN 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1136_1
    WRITE32 ENDSUB_F_TAKE_NEAR_0:CALLSUB1138 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_TAKE_NEAR_0
CALLSUB1138:
  else1136_1:
  endif1136:
    CALL EQ_STRING VGV_GREEN_MAN 'False' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1139_1
    MULF -15.0 VGV_LEFT_FORWARD F.0
    MULF -15.0 VGV_RIGHT_FORWARD F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 220.0 'True'

	DATA8 layer1143
	DATA8 nos1143
	DATA8 busy1143
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1143 nos1143
	JR_EQ8 0 nos1143 motornotbusy1143
  motorwaiting1143:
	OUTPUT_TEST layer1143 nos1143 busy1143
	JR_EQ8 busy1143 0 motornotbusy1143
	SLEEP
	JR motorwaiting1143
  motornotbusy1143:
  else1139_1:
  endif1139:
    MULF -15.0 VGV_RIGHT_FORWARD F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 360.0 0.0 'True' 

	DATA8 layer1145
	DATA8 nos1145
	DATA8 busy1145
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1145 nos1145
	JR_EQ8 0 nos1145 motornotbusy1145
  motorwaiting1145:
	OUTPUT_TEST layer1145 nos1145 busy1145
	JR_EQ8 busy1145 0 motornotbusy1145
	SLEEP
	JR motorwaiting1145
  motornotbusy1145:
    MULF VGV_LEFT_FORWARD -25.0 F.0
    MULF VGV_RIGHT_FORWARD -25.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1149
	MOVEF_32 1500.0 milliseconds1149
	DATA32 timer1149
	TIMER_WAIT milliseconds1149 timer1149
	TIMER_READY timer1149
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1150 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1150:
    CALL EQ_STRING VGV_START_FROM_RIGHT 'True' S.0
    AND8888_32 S.0 -538976289 S.0
    STRINGS COMPARE S.0 'TRUE' S.0
    JR_EQ8 S.0 0 else1151_1
    CALL MOTOR.RESETCOUNT VGV_NOT_INVERSED_MOTOR
    MULF VGV_LEFT_FORWARD 55.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
  while1157:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_GTEQF F.0 1200.0 endwhile1157
  whilebody1157:
    CALL MOTOR.GETCOUNT VGV_NOT_INVERSED_MOTOR F.0
    JR_LTF F.0 1200.0 whilebody1157
  endwhile1157:
  while1160:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTEQF F.0 25.0 endwhile1160
  whilebody1160:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTF F.0 25.0 whilebody1160
  endwhile1160:
  while1163:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_LTEQF F.0 10.0 endwhile1163
  whilebody1163:
    CALL SENSOR.READPERCENT VGV_LINE_SENSOR F.0
    JR_GTF F.0 10.0 whilebody1163
  endwhile1163:
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1166 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1166:
    WRITE32 ENDSUB_F_DELAY_0:CALLSUB1167 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_DELAY_0
CALLSUB1167:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 365.0 0.0 'True' 

	DATA8 layer1169
	DATA8 nos1169
	DATA8 busy1169
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1169 nos1169
	JR_EQ8 0 nos1169 motornotbusy1169
  motorwaiting1169:
	OUTPUT_TEST layer1169 nos1169 busy1169
	JR_EQ8 busy1169 0 motornotbusy1169
	SLEEP
	JR motorwaiting1169
  motornotbusy1169:
    MULF VGV_LEFT_FORWARD 50.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1173 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1173:
    MULF VGV_LEFT_FORWARD -30.0 F.0
    MULF VGV_RIGHT_FORWARD -30.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 140.0 'True'

	DATA8 layer1176
	DATA8 nos1176
	DATA8 busy1176
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1176 nos1176
	JR_EQ8 0 nos1176 motornotbusy1176
  motorwaiting1176:
	OUTPUT_TEST layer1176 nos1176 busy1176
	JR_EQ8 busy1176 0 motornotbusy1176
	SLEEP
	JR motorwaiting1176
  motornotbusy1176:
    MULF VGV_RIGHT_FORWARD 30.0 F.0
    CALL MOTOR.SCHEDULE VGV_RIGHT_MOTOR F.0 0.0 300.0 0.0 'True' 

	DATA8 layer1178
	DATA8 nos1178
	DATA8 busy1178
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_RIGHT_MOTOR layer1178 nos1178
	JR_EQ8 0 nos1178 motornotbusy1178
  motorwaiting1178:
	OUTPUT_TEST layer1178 nos1178 busy1178
	JR_EQ8 busy1178 0 motornotbusy1178
	SLEEP
	JR motorwaiting1178
  motornotbusy1178:
    MULF VGV_LEFT_FORWARD 55.0 F.0
    MULF VGV_RIGHT_FORWARD 50.0 F.1
    CALL MOTOR.STARTSYNC VGV_MOTORS F.0 F.1
    DATA32 milliseconds1182
	MOVEF_32 4000.0 milliseconds1182
	DATA32 timer1182
	TIMER_WAIT milliseconds1182 timer1182
	TIMER_READY timer1182
    WRITE32 ENDSUB_F_STOP_0:CALLSUB1183 STACKPOINTER RETURNSTACK
    ADD8 STACKPOINTER 1 STACKPOINTER
    JR SUB_F_STOP_0
CALLSUB1183:
    MULF VGV_LEFT_FORWARD -20.0 F.0
    MULF VGV_RIGHT_FORWARD -20.0 F.1
    CALL MOTOR.SCHEDULESYNC VGV_MOTORS F.0 F.1 20.0 'True'

	DATA8 layer1186
	DATA8 nos1186
	DATA8 busy1186
	CALL MOTORDECODEPORTSDESCRIPTOR VGV_MOTORS layer1186 nos1186
	JR_EQ8 0 nos1186 motornotbusy1186
  motorwaiting1186:
	OUTPUT_TEST layer1186 nos1186 busy1186
	JR_EQ8 busy1186 0 motornotbusy1186
	SLEEP
	JR motorwaiting1186
  motornotbusy1186:
  else1151_1:
  endif1151:
RETSUB_F_MAIN_0:
    SUB8 STACKPOINTER 1 STACKPOINTER
    READ32 RETURNSTACK STACKPOINTER INDEX
    JR_DYNAMIC INDEX
ENDSUB_F_MAIN_0:
}
subcall TEXT.APPEND     // SSS
{
	IN_S a 252
	IN_S b 252
    OUT_S result 252
	
	DATA16 len0
	DATA16 len1
	DATA16 sum

	STRINGS GET_SIZE a len0
	STRINGS GET_SIZE b len1
	ADD16 len0,len1,sum
	JR_GT16 sum,251,stringsizeexceeded

	STRINGS ADD a b result
	RETURN
	
stringsizeexceeded:	
    STRINGS DUPLICATE a result
}
subcall EV3.BATTERYVOLTAGE  // F
{
	OUT_F voltage
	UI_READ GET_VBATT voltage
}
subcall LCD.CLEAR   // V
{
	UI_DRAW(TOPLINE,0)
	UI_DRAW(CLEAN)
	
	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall LCD.TEXT     // FFFFSV
{
	IN_F col
	IN_F x
	IN_F y
	IN_F font
	IN_S text 252
	
	DATA8 col_8
	DATA16 x_16
	DATA16 y_16
	DATA8 font_8	
	MOVEF_8 col col_8
	MOVEF_16 x x_16
	MOVEF_16 y y_16
	MOVEF_8 font font_8
	
	UI_DRAW SELECT_FONT font_8
	UI_DRAW TEXT col_8 x_16 y_16 text

	JR_NEQ32 0 STOPLCDUPDATE skipupdate
	UI_DRAW UPDATE
skipupdate:
}
subcall SENSOR.READPERCENT       // FF
{
	IN_F port
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 percentage

	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	INPUT_READ layer no 0 -1 percentage
	JR_LT8 percentage 0 novalue
	
	MOVE8_F percentage result
	RETURN
novalue:	
	MOVE8_F 0 result
}
subcall MOTOR.STARTPOWER      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F power

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport
	
	JR_GTEQF power -100.0 nottoosmall
	MOVEF_F -100.0 power
nottoosmall:
	JR_LTEQF power 100.0 nottoobig
	MOVEF_F 100.0 power
nottoobig:

	DATA8 pwr
	MOVEF_8 power pwr

    OUTPUT_TIME_POWER layer nos pwr 0 2147483647 0 0
noport:
}
subcall MOTORDECODEPORTSDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 nos

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 0 nos	
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	RL8  1 c c
	OR8  nos c nos
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	RL8  1 c c
	OR8  nos c nos	
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.STOP       // SSV      MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_S brake 8

	DATA8 layer
	DATA8 nos	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	
	
	OUTPUT_STOP layer nos brk
noport:
}
subcall SENSOR.READRAWVALUE            // FFF
{
	IN_F port
	IN_F index
	OUT_F result

	DATA8 layer
	DATA8 no
	DATA8 index8
		
	MOVEF_8 port no
	SUB8 no 1 no
	DIV8 no 4 layer
	MATH MOD8 no 4 no

	MOVEF_8 index index8
	JR_LT8 index8 0 outofbounds
	JR_GT8 index8 7 outofbounds

	DATA32 rawvalue0
	DATA32 rawvalue1
	DATA32 rawvalue2
	DATA32 rawvalue3
	DATA32 rawvalue4
	DATA32 rawvalue5
	DATA32 rawvalue6
	DATA32 rawvalue7
	INPUT_READEXT layer no 0 -1 18 8 rawvalue0 rawvalue1 rawvalue2 rawvalue3 rawvalue4 rawvalue5 rawvalue6 rawvalue7
	
	DATA32 rawtmp
	READ32 rawvalue0 index8 rawtmp

	JR_LT32 rawtmp -1000000000 nomoredata
	MOVE32_F rawtmp result
	RETURN

nomoredata:
outofbounds:
	MOVEF_F 0.0 result
}
subcall MOTOR.SCHEDULESYNC   // SFFFSV    MOTORSCHEDULESTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2
	IN_F count
	IN_S brake 8
	
	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed2 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:
	
	CALL MOTORSCHEDULESTEERIMPL ports speed turn count brake
}
subcall MOTORSCHEDULESTEERIMPL   // SFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn
	IN_F count
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA32 cnt
	DATA8 brk
	MATH ABS count count
	MOVEF_32 count cnt
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	JR_LTEQ32 cnt 0 dontmove	

	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn cnt brk	
dontmove:	
not_two_ports:
}
subcall MOTOR.RESETCOUNT    // SV        MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	
	DATA8 layer
	DATA8 nos
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	OUTPUT_CLR_COUNT layer nos
noport:
}
subcall MOTOR.START      // SFV     MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed

	DATA8 layer
	DATA8 nos	

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	JR_GTEQF speed -100.0 nottoosmall
	MOVEF_F -100.0 speed
nottoosmall:
	JR_LTEQF speed 100.0 nottoobig
	MOVEF_F 100.0 speed
nottoobig:

	DATA8 spd
	MOVEF_8 speed spd

    OUTPUT_TIME_SPEED layer nos spd 0 2147483647 0 0
noport:
}
subcall MOTOR.GETCOUNT    // SF     MOTORDECODEPORTDESCRIPTOR
{
	IN_S port 8
	OUT_F result
	
	DATA8 layer
	DATA8 no
	DATA32 tacho
	
	CALL MOTORDECODEPORTDESCRIPTOR port layer no
	JR_LT8 no 0 noport
	
	OUTPUT_GET_COUNT layer no tacho
	MOVE32_F tacho result

	DATA8 nos
	RL8 1 no nos
	DATA8 inv
	READ8 MOTORISINVERTED layer inv 
	AND8 inv nos inv
	JR_EQ8 inv 0 noinvert
	SUBF 0.0 result result
noinvert:
	RETURN

noport:	
	MOVE8_F 0 result	
}
subcall MOTORDECODEPORTDESCRIPTOR  //  V
{
	IN_S descriptor 8
	OUT_8 layer
	OUT_8 no

	DATA8 i 
	DATA8 c

	MOVE8_8 0 layer
	MOVE8_8 -1 no
	MOVE8_8 0 i
loop:
	READ8 descriptor i c
	JR_EQ8 c 0 decoding_end
	
	JR_LT8 c 65 no_uppercase_port
	JR_GT8 c 68 no_uppercase_port
	SUB8 c 65 c
	MOVE8_8 c no
	JR loop_end
no_uppercase_port:
	JR_LT8 c 97 no_lowercase_port
	JR_GT8 c 100 no_lowercase_port
	SUB8 c 97 c
	MOVE8_8 c no
	JR loop_end
no_lowercase_port:
	JR_LT8 c 49 loop_end
	JR_GT8 c 52 loop_end
	SUB8 c 49 layer
loop_end:
	ADD8 1 i i
	JR loop	
	
decoding_end:
	RETURN
}
subcall MOTOR.SCHEDULE   // SFFFFSV    MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F step1
	IN_F step2
	IN_F step3
	IN_S brake 8
	
	DATA8 layer
	DATA8 nos
	DATA8 spd
	DATA32 stp1
	DATA32 stp2
	DATA32 stp3	
	DATA8 brk
	
	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	JR_EQ8 nos 0 noport

	MOVEF_8 speed spd
	MATH ABS step1 step1
	MOVEF_32 step1 stp1
	MATH ABS step2 step2
	MOVEF_32 step2 stp2
	MATH ABS step3 step3
	MOVEF_32 step3 stp3	
	AND8888_32 brake -538976289 brake        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE brake 'TRUE' brk	

	OUTPUT_STEP_SPEED layer nos spd stp1 stp2 stp3 brk
noport:
}
subcall MOTOR.STARTSYNC      // SFFV       MOTORSTARTSTEERIMPL
{
	IN_S ports 8
	IN_F speed1
	IN_F speed2

	JR_GTEQF speed1 -100.0 nottoosmall1
	MOVEF_F -100.0 speed1
nottoosmall1:
	JR_LTEQF speed1 100.0 nottoobig1
	MOVEF_F 100.0 speed1
nottoobig1:
	JR_GTEQF speed2 -100.0 nottoosmall2
	MOVEF_F -100.0 speed2
nottoosmall2:
	JR_LTEQF speed1 100.0 nottoobig2
	MOVEF_F 100.0 speed2
nottoobig2:

	DATAF speed  
	DATAF turn
	MOVE8_F 0 speed
	MOVE8_F 0 turn

	DATAF speed1abs
	DATAF speed2abs
	MATH ABS speed1 speed1abs
	MATH ABS speed2 speed2abs
	JR_LTF speed1abs speed2abs secondisfaster
	JR_EQF speed1abs 0.0 donecomputation
	 MOVEF_F speed1 speed
	 MULF 100.0 speed2 turn
	 DIVF turn speed1 turn
	 SUBF 100.0 turn turn
	JR donecomputation
secondisfaster:
	 MOVEF_F speed2 speed
	 MULF 100.0 speed1 turn
	 DIVF turn speed2 turn
	 SUBF turn 100.0 turn
donecomputation:

	CALL MOTORSTARTSTEERIMPL ports speed turn
}
subcall MOTORSTARTSTEERIMPL      // SFFV       MOTORDECODEPORTSDESCRIPTOR
{
	IN_S ports 8
	IN_F speed
	IN_F turn

	DATA8 layer
	DATA8 nos	
	DATA8 first
	DATA8 second
	DATA8 invfirst
	DATA8 invsecond

	CALL MOTORDECODEPORTSDESCRIPTOR ports layer nos
	READ8 FIRSTOF2 nos first
	JR_EQ8 0 first not_two_ports
	XOR8 first nos second
	READ8 MOTORISINVERTED layer invfirst
	AND8 first invfirst invfirst
	READ8 MOTORISINVERTED layer invsecond
	AND8 second invsecond invsecond

	JR_LTF turn 0.0 second_is_master
first_is_master:
	JR_EQ8 invfirst 0 non_invert_first
	SUBF 0.0 speed speed
	JR_NEQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion
non_invert_first:
	JR_EQ8 invsecond 0 done_inversion
	SUBF 200.0 turn turn
	JR done_inversion

second_is_master:
	JR_EQ8 invsecond 0 non_invert_second
	SUBF 0.0 speed speed
	JR_NEQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion
non_invert_second:
	JR_EQ8 invfirst 0 done_inversion
	SUBF -200.0 turn turn
	JR done_inversion

done_inversion:
	DATA8 spd  
	DATA16 trn
	MOVEF_16 turn trn
	MOVEF_8 speed spd
	OUTPUT_STEP_SYNC layer nos spd trn 0 0
not_two_ports:
}
subcall SPEAKER.TONE      // FFFV
{
	IN_F volume
	IN_F tone
	IN_F duration
	
	DATA8 vol
	DATA16 tne
	DATA16 dur
	MOVEF_8 volume vol
	MOVEF_16 tone tne
	MOVEF_16 duration dur
	
	SOUND TONE vol tne dur
}
subcall EQ_STRING       // SSS
{
	IN_S  a 252
	IN_S  b 252
	OUT_S result 8
	
	DATA8 flag
	
	// check if completely equal
	STRINGS COMPARE a b flag
	JR_NEQ8 FLAG 0 isequal
	// second chance: when both values are "True" in any casing, this also counts as equal
	AND8888_32 a -538976289 a        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE a 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
	AND8888_32 b -538976289 b        // AND 0xdfdfdfdf performs an upcase for 4 letters
    STRINGS COMPARE b 'TRUE' flag	
	JR_EQ8 0,flag,isnotequal
isequal:
	STRINGS DUPLICATE 'True' result
	RETURN
isnotequal:
	STRINGS DUPLICATE 'False' result
	RETURN
}
